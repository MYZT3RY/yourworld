#include <a_samp>
#include <utils>
#include <MapIconStreamer>
#include <streamer>
#include <mxINI05>
#include <mxdate>
#define RADIO 2655
#undef MAX_PLAYERS
#define MAX_PLAYERS 150

new lcnkamera, russiankamera, triadkamera, yakuzakamera, ballaskamera, grovekamera, koronoskamera, rifakamera, vagoskamera, streetkamera, opros[MAX_PLAYERS];
new redver, hrandver, keys, bankotkat, keyss[MAX_PLAYERS], bombb, togdep[MAX_PLAYERS], banksistem, bankpasword[MAX_PLAYERS], virtik[MAX_PLAYERS], MurderStartGonka1;
new vzlomvopros[MAX_PLAYERS], door, door1, door2, nabor[MAX_PLAYERS], kusachki[MAX_PLAYERS], statt[MAX_PLAYERS], Float: xf, Float: yf, Float: zf, RegistrationStep[MAX_PLAYERS];

#define DIA_SET 1669
#define VEHICLES 1700
#define DIALOGUNBAN 162
#define Player PlayerInfo
#define CHECKPOINT_JOBS 20
#define COLOR_YEL 0xEEAB00AA
#define COLOR_RED 0xFFD9D991
#define COLOR_AOCHAT 0xB41E20AA
#define TEAM_RADIO_COLOR 0xF2D068FF
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_GREEN1 0x33AA33AA
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_CGREEN3d 0xBFF600FF
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_YELLOW23d 0xF5DEB3FF
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_ORANGERED 0xFF600AA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_BLACK 0x000000AA
#define TEAM_GREEN 3
#define TEAM_ADMIN 11
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define Grov 0x00E500AA
#define BANK_SYSTEM 5209
#define BANK_VZNOS 3490
#define BANK_VZ    3491
#define BANK_TR    3492
#define BANK_TR2   3493

#define timerspeed  500                 //Speed of the timer in milliseconds (1000 = 1 second)
#define blinkerduration 10				//Length of the duration that the blinker will stay on in seconds.
#define rightkey	KEY_LOOK_RIGHT      //The key you press to turn the right blinker on
#define leftkey		KEY_LOOK_LEFT		//The key you press to turn the left blinker on
#define PRESSED(%0,%1,%2) ((((%0) & (%2)) == (%2)) && (((%1) & (%2)) != (%2)))

#define KEY_AIM 128
#define MAX_STRING 255
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12
#define red 0xAA3333AA
#define MAX_NICK_ALLOWED_CHARS 65
static gTeam[MAX_PLAYERS];

#define RC_BANDIT	441
#define RC_BARON    464
#define RC_GOBLIN   501
#define RC_RAIDER   465
#define D_TRAM      449
#define D_POEZDSF   537
#define RC_TANK     564
#define RC_CAM      594
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2
new Rekl[MAX_PLAYERS];
new Text:SM_HA[MAX_PLAYERS];
new SpecHATimer[MAX_PLAYERS], UnfreezePlayer[MAX_PLAYERS];
//==================================[Дерби]=====================================
new DerbiStartGonkatwo, DerbiStartGonka1, derbistart, startgonka, EndingderbiRound = 1, DerbiPlayers = 0, Playerderbi[MAX_PLAYERS], derbi[] = { 494, 502, 503, 504 };
new Float:DerbiSpawns[20][4] = {
	{-1355.2977, 934.0847, 1036.1278, 7.2270 },
	{-1337.1343, 938.5261, 1036.1738, 20.2087 },
	{-1317.5848, 946.4304, 1036.2747, 31.0840 },
	{-1302.5338, 955.1391, 1036.3922, 41.4171 },
	{-1293.2971, 964.3026, 1036.5234, 48.0448 },
	{-1283.1465, 976.3253, 1036.7102, 58.6772 },
	{-1278.4069, 991.7879, 1036.9587, 86.2603 },
	{-1281.2871, 1008.8069, 1037.2496, 91.4685 },
	{-1289.2437, 1024.4241, 1037.5256, 101.2547 },
	{-1307.4032, 1039.3407, 1037.8066, 127.2879 },
	{-1336.4865, 1052.3142, 1038.0741, 148.9551 },
	{-1357.8706, 1057.1317, 1038.1882, 159.1849 },
	{-1377.9399, 1058.0959, 1038.2426, 172.7466 },
	{-1398.3962, 1057.6173, 1038.2660, 171.3333 },
	{-1428.6929, 1058.1292, 1038.3252, 178.7059 },
	{-1457.7089, 1053.6016, 1038.3070, 192.3742 },
	{-1486.4302, 1041.4038, 1038.1542, 208.0230 },
	{-1508.5839, 1020.3392, 1037.8357, 234.8889 },
	{-1516.5342, 989.7833, 1037.3513, 270.3085 },
	{-1506.7659, 965.2000, 1036.9224, 293.0279 }
};

#define DIALOG_SN 1701
new pickmoney, pickboom;
new bool:exitp, bool:vputi, bool:lift, floorlift[3], upgate, downgate, picjob, bool:PlayerStartJob[MAX_PLAYERS], bool:PlayerOnJob[MAX_PLAYERS];
new GetPlayerMetall[MAX_PLAYERS], GetPlayerMetallEx[MAX_PLAYERS], AllPlayerMetall[MAX_PLAYERS], AllPlayerMetallEx[MAX_PLAYERS], ExtraMetall[MAX_PLAYERS], PlayerSavedSkin[MAX_PLAYERS];
#define DIALOG_STARTJOB     1011
#define DIALOG_ENDJOB       1012
new LawyerOffer[MAX_PLAYER_NAME], LawyerPrice[MAX_PLAYER_NAME], ranlotto, ugonshik, zakaz[MAX_PLAYERS], prinyal[MAX_PLAYERS], otmuchka[MAX_PLAYERS];
//===============================[Медикаменты]==================================
new medwarehouse = 500, gmedicines, PicCP[MAX_PLAYERS], ZonaKill[MAX_PLAYERS], Nazone[MAX_PLAYERS], Ograblen[MAX_PLAYERS];
new Float:VehPos[MAX_VEHICLES][4], bool: BanCar[MAX_VEHICLES], TimeUpdate[MAX_PLAYERS], TimerGiveMiner[MAX_PLAYERS], TimerGiveMinerEx[MAX_PLAYERS];
//===========================[Общаки]===========================================
new NormMoney[MAX_PLAYERS], Text:Times, Text:Date;
//=========================[Гока для стритов]==================================
new murder[MAX_PLAYERS], Murderchet[MAX_PLAYERS], MurderPlayers = 0, MedicCP[MAX_PLAYERS], AnimationOn[MAX_PLAYERS], MuteHelpTime[MAX_PLAYERS], KartingCar[MAX_PLAYERS], DmZona[MAX_PLAYERS];
new Spawned[MAX_PLAYERS], WrongPassword[MAX_PLAYERS], MuteFamily[MAX_PLAYERS], RaceCP[MAX_PLAYERS], prodid[MAX_PLAYERS], prodidf[MAX_PLAYERS], AntiMoney[MAX_PLAYERS], AntiMoney2[MAX_PLAYERS];
new prodhouse[MAX_PLAYERS], prodhousef[MAX_PLAYERS], prodmoney[MAX_PLAYERS], prodmoneyf[MAX_PLAYERS], FirstMurderWinner = 999, PlayerMurder[MAX_PLAYERS], SecondMurderWinner = 999, ThirdMurderWinner = 999;
new Float:murderace[61][3] = {
	{ 1078.36, -867.87, 42.99 },
	{ 997.22, -908.53, 41.95 },
	{ 983.82, -956.16, 40.31 },
	{ 876.83, -994.91, 34.98 },
	{ 793.37, -1065.21, 24.40 },
	{ 782.17, -1137.27, 23.60 },
	{ 719.07, -1170.51, 15.83 },
	{ 695.90, -1184.51, 15.29 },
	{ 628.43, -1249.95, 17.29 },
	{ 614.54, -1348.05, 13.42 },
	{ 517.20, -1383.38, 15.64 },
	{ 497.74, -1456.05, 16.72 },
	{ 498.46, -1558.01, 16.77 },
	{ 532.34, -1605.51, 15.84 },
	{ 560.35, -1671.65, 17.98 },
	{ 624.70, -1703.55, 14.53 },
	{ 652.22, -1765.73, 13.31 },
	{ 650.39, -1838.68, 5.83 },
	{ 720.84, -1847.05, 11.60 },
	{ 771.48, -1847.24, 5.82 },
	{ 824.08, -1855.67, 8.06 },
	{ 968.22, -1855.37, 11.52 },
	{ 1036.80, -1792.77, 13.45 },
	{ 1051.56, -1665.99, 13.40 },
	{ 1151.44, -1647.90, 13.55 },
	{ 1131.59, -1555.08, 13.75 },
	{ 1145.66, -1486.47, 15.56 },
	{ 1145.63, -1355.22, 13.42 },
	{ 1149.96, -1265.43, 13.61 },
	{ 1169.80, -1207.93, 19.38 },
	{ 1218.11, -1171.34, 22.43 },
	{ 1254.38, -1161.46, 23.59 },
	{ 1257.23, -1230.90, 16.20 },
	{ 1291.08, -1282.36, 13.14 },
	{ 1356.58, -1272.09, 13.14 },
	{ 1376.67, -1241.71, 13.15 },
	{ 1419.50, -1254.73, 13.35 },
	{ 1431.21, -1328.88, 13.34 },
	{ 1451.61, -1352.28, 13.15 },
	{ 1463.25, -1496.98, 13.31 },
	{ 1576.81, -1515.59, 13.32 },
	{ 1640.42, -1539.66, 13.35 },
	{ 1716.60, -1564.79, 13.31 },
	{ 1704.21, -1590.40, 13.13 },
	{ 1538.02, -1590.37, 13.15 },
	{ 1371.56, -1602.80, 13.33 },
	{ 1373.63, -1675.71, 12.60 },
	{ 1487.14, -1734.99, 6.46 },
	{ 1633.26, -1770.48, 3.72 },
	{ 1811.30, -1812.45, 3.75 },
	{ 1995.18, -1851.02, 3.75 },
	{ 2335.86, -1853.94, 0.86 },
	{ 2580.53, -1813.41, 1.76 },
	{ 2597.59, -1649.55, 2.10 },
	{ 2611.73, -1536.74, 12.78 },
	{ 2631.55, -1485.02, 16.10 },
	{ 2753.83, -1422.54, 16.02 },
	{ 2823.92, -1429.17, 16.02 },
	{ 2823.26, -1480.62, 13.92 },
	{ 2812.25, -1474.90, 16.46 },
	{ 2816.7688, -1487.1580, 15.2163 }
};
forward LV2GateClose();
new KillersGate, LSPDGate, LSGate, LS2Gate, FBI1Gate, VoyakGate, Voyak2Gate, dvr[8], che[MAX_PLAYERS], skin[MAX_PLAYERS], tazer[MAX_PLAYERS];
new zona, maxplayerss, players, zgun, Butilka[MAX_PLAYERS], Butilka1[MAX_PLAYERS], Butilka2[MAX_PLAYERS], Butilka3[MAX_PLAYERS], Butilka4[MAX_PLAYERS], ChekPoint[MAX_PLAYERS];
new Float:LSPDSpawns[5][3] = {
	{ 264.0235, 82.2904, 1001.0391 },
	{ 219.8942, 69.4894, 1005.0391 },
	{ 264.6288, 77.5742, 1001.0391 },
	{ 218.9532, 78.6478, 1005.0391 },
	{ 264.5204, 86.6428, 1001.0391 }
};

new CarEngine[MAX_VEHICLES], lgh[MAX_VEHICLES], bnt[MAX_VEHICLES], bt[MAX_VEHICLES];
new engine, lights, alarm, doors, bonnet, boot, objective, menu, menulcn, hCar[186];
new buygunsf, buygunlv, buygunlv2, buyguncentr, buygungroove, buygunDB1, buygunmeri, buygunkolhoz, buygunRM, buygunkarer, buygunkarer2;
new buyclother1, buyclother2, buyclother3, buyclother4, buyclother5, buyclother6, buyclother7, buyclother8, buyclother9;
new OOCChat[MAX_PLAYERS], arrow[MAX_PLAYERS], blinks[MAX_PLAYERS], duration[MAX_PLAYERS], blinker[MAX_PLAYERS], strR[255][255], pInvite[MAX_PLAYERS];
new DrivingTest[MAX_PLAYERS], Question1[MAX_PLAYERS], Question2[MAX_PLAYERS], Question3[MAX_PLAYERS], Question4[MAX_PLAYERS], Question5[MAX_PLAYERS], Question6[MAX_PLAYERS], Question7[MAX_PLAYERS], Question8[MAX_PLAYERS], Question9[MAX_PLAYERS], Question10[MAX_PLAYERS], Owibka[MAX_PLAYERS], Practice[MAX_PLAYERS];

new Float:AntiAFK[MAX_PLAYERS][6], PlayerAFKtime[MAX_PLAYERS], OnWeapon[MAX_PLAYERS];
enum wInfo {
	wSlot0,
	wSlot1,
	wSlot2,
	wSlot3,
	wSlot4,
	wSlot5,
	wSlot6,
	wSlot7,
	wSlot8,
	wSlot9,
	wSlot10,
	wSlot11,
	wSlot12,
}
new Weapon[MAX_PLAYERS][wInfo];
new GunCheckTime[MAX_PLAYERS];
new reclamatimer;
new PlayerInJob[MAX_PLAYERS], Meshki[MAX_PLAYERS], Meshok[MAX_PLAYERS], PlayerLomkaTime[MAX_PLAYERS], Oldskin2[MAX_PLAYERS], ChangeOffer[MAX_PLAYERS];
new gryz1, gryz2, LottoStart, LottoStart2;
new PlayerMayNarco[MAX_PLAYERS], PlayerMayAlco[MAX_PLAYERS], uTarget[MAX_PLAYERS], tietime[MAX_PLAYERS], ChangeCost[MAX_PLAYERS], ChangeNumber[MAX_PLAYERS];
new checkk[MAX_PLAYERS], dalnoboishikauto[2], AdminPm[MAX_PLAYERS], Gotos[MAX_PLAYERS], GM[MAX_PLAYERS], CreatedCars[100], PlayerFoodSlot[MAX_PLAYERS];
new CreatedCar = 0, Tax = 0, TaxValue = 0, Jackpot = 0, JobDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new Medics = 0, MedicCall = 999, MedicCallTime[MAX_PLAYERS];
new Mechanics = 0, MechanicCall = 999, MechanicCallTime[MAX_PLAYERS], TaxiDrivers = 0, TaxiCall = 999, TaxiCallTime[MAX_PLAYERS], TaxiAccepted[MAX_PLAYERS], TramDrivers = 0;
new TransportDuty[MAX_PLAYERS], TransportValue[MAX_PLAYERS], TransportMoney[MAX_PLAYERS], TransportTime[MAX_PLAYERS], TransportCost[MAX_PLAYERS], gateYak, bool:yak;
new TransportDriver[MAX_PLAYERS], MapIconsShown[MAX_PLAYERS], OnCK[MAX_PLAYERS], An[MAX_PLAYERS], GettingCK[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS], TakingLesson[MAX_PLAYERS], UsedFind[MAX_PLAYERS], MissionCheckpoint[MAX_PLAYERS], NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS], DivorceOffer[MAX_PLAYERS], MarriageCeremoney[MAX_PLAYERS], ProposeOffer[MAX_PLAYERS], ProposedTo[MAX_PLAYERS], GotProposedBy[MAX_PLAYERS], MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS], TicketOffer[MAX_PLAYERS], TicketMoney[MAX_PLAYERS], PlayerStoned[MAX_PLAYERS], ConsumingMoney[MAX_PLAYERS], BringingPaper[MAX_PLAYERS];
new GotPaper[MAX_PLAYERS], WritingPaper[MAX_PLAYERS], WritingPaperNumber[MAX_PLAYERS], WritingLine[MAX_PLAYERS], FishCount[MAX_PLAYERS], SpawnChange[MAX_PLAYERS], TutTime[MAX_PLAYERS];
new firstname[MAX_PLAYERS], secondname[MAX_PLAYERS], PlayerDrunk[MAX_PLAYERS], PlayerDrunkTime[MAX_PLAYERS], PlayerTazeTime[MAX_PLAYERS], FindTimePoints[MAX_PLAYERS], FindTime[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS], CarOffer[MAX_PLAYERS], CarPrice[MAX_PLAYERS], PlayerSpectateID[MAX_PLAYERS], PlayerSpec[MAX_PLAYERS], CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS], GotHit[MAX_PLAYERS], GoChase[MAX_PLAYERS], GetChased[MAX_PLAYERS], OrderReady[MAX_PLAYERS], ConnectedToPC[MAX_PLAYERS], MedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS], PlayerTied[MAX_PLAYERS], PlayerCuffed[MAX_PLAYERS], PlayerCuffedTime[MAX_PLAYERS], LiveOffer[MAX_PLAYERS], TalkingLive[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS], GettingJob[MAX_PLAYERS], ApprovedLawyer[MAX_PLAYERS], CallLawyer[MAX_PLAYERS], WantLawyer[MAX_PLAYERS], CurrentMoney[MAX_PLAYERS], KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS], RobbedTime[MAX_PLAYERS], CP[MAX_PLAYERS], MoneyMessage[MAX_PLAYERS], Condom[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS], RepairOffer[MAX_PLAYERS], RepairPrice[MAX_PLAYERS], RefillOffer[MAX_PLAYERS], RefillPrice[MAX_PLAYERS], RepairCar[MAX_PLAYERS];
new UsingDrugs[MAX_PLAYERS], DrugOffer[MAX_PLAYERS], DrugPrice[MAX_PLAYERS], DrugGram[MAX_PLAYERS], JailPrice[MAX_PLAYERS], OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS], gPlayerLogTries[MAX_PLAYERS], gPlayerSpawned[MAX_PLAYERS], gActivePlayers[MAX_PLAYERS], gLastCar[685], gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS], gFam[MAX_PLAYERS], BigEar[MAX_PLAYERS], Spectate[MAX_PLAYERS], HireCar[MAX_PLAYERS], SafeTime[MAX_PLAYERS], HidePM[MAX_PLAYERS];
new gGas[MAX_PLAYERS], gSpeedo[MAX_PLAYERS], gSpentCash[MAX_PLAYERS], FirstSpawn[MAX_PLAYERS], SwitchKey[MAX_PLAYERS], RingTone[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS], GunOffer[MAX_PLAYERS], GunDPrice[MAX_PLAYERS], GunType[MAX_PLAYERS], GunAmmo[MAX_PLAYERS], gLastDriver[800];
new gCarLock[800], noooc = 0, adds = 1, addtimer = 60000, carselect[15], objstore[128], cbjstore[128], ghour = 0, gminute = 0, gsecond = 0;
new numplayers = 0, realtime = 1, wtime = 15, realchat = 1, timeshift = -1, Security = 0;
new levelcost = 15000;

new shifthour, othtimer, synctimer, unjailtimer, spectatetimer, productiontimer, checkgastimer, stoppedvehtimer, cartimer;
new CIV[] = { 176 };
new SELLCAR1[] = { 2000, 2124, 2245, 2349, 2475, 2574, 2636, 2762, 2895, 2946, 3000 };
new SELLCAR2[] = { 3099, 3135, 3255, 3378, 3457, 3563, 3614, 3721, 3878, 3988, 4000 };
new SELLCAR3[] = { 4058, 4175, 4212, 4377, 4454, 4555, 4678, 4751, 4865, 4964, 5000 };
new SELLCAR4[] = { 5077, 5123, 5275, 5378, 5422, 5565, 5613, 5752, 5897, 5911, 6000 };
new DALNOBOY1[] = { 2000, 2134, 2256, 2378, 2413, 2561, 2639, 2793, 2876, 2919, 3056, 3145, 3278, 3467, 3587, 3611, 3788, 3823, 3982, 4000 };
new DALNOBOY2[] = { 4000, 4123, 4256, 4398, 4417, 4523, 4677, 4722, 4813, 4901, 5000, 5123, 5243, 5378, 5400, 5511, 5643, 5712, 5892, 5940, 6000 };
new DALNOBOY3[] = { 6000, 6134, 6211, 6320, 6438, 6542, 6789, 6981, 6823, 7051, 7158, 7230, 7352, 7432, 7567, 7600, 7710, 7789, 7901, 8000 };
new DALNOBOY4[] = { 8000, 8156, 8267, 8312, 8483, 8566, 8612, 8751, 8890, 8930, 9000, 9151, 9278, 9312, 9498, 9534, 9622, 9789, 9844, 9910, 10000 };
new DALNOBOY5[] = { 10000, 10120, 10290, 10400, 10650, 10780, 10820, 10900, 11000, 11150, 11240, 11367, 11490, 11510, 11580, 11630, 11780, 11834, 11910, 12000 };
new Float:TelePos[MAX_PLAYERS][6], Text:lbt, Text:lbb, Float:TeleportDest[MAX_PLAYERS][3];
new LSBar, LizBar, fura[MAX_PLAYERS], bool:killers, Rope[MAX_PLAYERS];
new Text:Junked, Text:Lightoff, Masked[MAX_PLAYERS], JobCis[MAX_PLAYERS], Limiter[MAX_PLAYERS];
new Text:levelexpp[MAX_PLAYERS];
new levelexp = 4;
new playerColors[102] = {
	0xFF8C13FF,
	0xC715FFFF,
	0x20B2AAFF,
	0xDC143CFF,
	0x6495EDFF,
	0xf0e68cFF,
	0x778899FF,
	0xFF1493FF,
	0xF4A460FF,
	0xEE82EEFF,
	0xFFD720FF,
	0x8b4513FF,
	0x4949A0FF,
	0x148b8bFF,
	0x14ff7fFF,
	0x556b2fFF,
	0x0FD9FAFF,
	0x10DC29FF,
	0x534081FF,
	0x0495CDFF,
	0xEF6CE8FF,
	0xBD34DAFF,
	0x247C1BFF,
	0x0C8E5DFF,
	0x635B03FF,
	0xCB7ED3FF,
	0x65ADEBFF,
	0x5C1ACCFF,
	0xF2F853FF,
	0x11F891FF,
	0x7B39AAFF,
	0x53EB10FF,
	0x54137DFF,
	0x275222FF,
	0xF09F5BFF,
	0x3D0A4FFF,
	0x22F767FF,
	0xD63034FF,
	0x9A6980FF,
	0xDFB935FF,
	0x3793FAFF,
	0x90239DFF,
	0xE9AB2FFF,
	0xAF2FF3FF,
	0x057F94FF,
	0xB98519FF,
	0x388EEAFF,
	0x028151FF,
	0xA55043FF,
	0x0DE018FF,
	0x93AB1CFF,
	0x95BAF0FF,
	0x369976FF,
	0x18F71FFF,
	0x4B8987FF,
	0x491B9EFF,
	0x829DC7FF,
	0xBCE635FF,
	0xCEA6DFFF,
	0x20D4ADFF,
	0x2D74FDFF,
	0x3C1C0DFF,
	0x12D6D4FF,
	0x48C000FF,
	0x2A51E2FF,
	0xE3AC12FF,
	0xFC42A8FF,
	0x2FC827FF,
	0x1A30BFFF,
	0xB740C2FF,
	0x42ACF5FF,
	0x2FD9DEFF,
	0xFAFB71FF,
	0x05D1CDFF,
	0xC471BDFF,
	0x94436EFF,
	0xC1F7ECFF,
	0xCE79EEFF,
	0xBD1EF2FF,
	0x93B7E4FF,
	0x3214AAFF,
	0x184D3BFF,
	0xAE4B99FF,
	0x7E49D7FF,
	0x4C436EFF,
	0xFA24CCFF,
	0xCE76BEFF,
	0xA04E0AFF,
	0x9F945CFF,
	0xDCDE3DFF,
	0x10C9C5FF,
	0x70524DFF,
	0x0BE472FF,
	0x8A2CD7FF,
	0x6152C2FF,
	0xCF72A9FF,
	0xE59338FF,
	0xEEDC2DFF,
	0xD8C762FF,
	0x3FE65CFF,
	0xFFFFFF00,
	0x000000AA
};
new idtr[MAX_PLAYERS], summatr[MAX_PLAYERS], bankvz[MAX_PLAYERS], bankvz1[MAX_PLAYERS], Treasury, CopSal = 0, FbiSal = 0;
new NGSal = 0, MedSal = 0, SwatSal = 0, ReportSal = 0, PolSal = 0, LicSal = 0, NonJobSal = 0, gunhit;

#define GasMax 100
#define RunOutTime 15000// время расхода топлива
#define CAR_AMOUNT 900//Измени на кол-во транспорта на твоем сервере
new Gas[MAX_VEHICLES], recept[3];

enum SavePlayerPosEnum {
	Float:LastX,
	Float:LastY,
	Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];
new SpeedMode = 1;
new UpdateSeconds = 1;

Float:GetDistanceBetweenPlayers(p1, p2) {
	new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2;
	if (!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) {
		return -1.00;
	}
	GetPlayerPos(p1, x1, y1, z1);
	GetPlayerPos(p2, x2, y2, z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) + floatpower(floatabs(floatsub(y2, y1)), 2) + floatpower(floatabs(floatsub(z2, z1)), 2));
}

new Music[MAX_PLAYERS], PlayerFishTimer[MAX_PLAYERS], FishNamesNumber = 22;
new FishNames[22][20] = {
	{ "Куртка" },
	{ "Килька" },
	{ "Селёдка" },
	{ "Лосось" },
	{ "Трусы" },
	{ "Форель" },
	{ "Щука" },
	{ "Банка" },
	{ "Анчоус" },
	{ "Окунь" },
	{ "Ботинки" },
	{ "Пика" },
	{ "Скат" },
	{ "Мусор" },
	{ "Тунец" },
	{ "Угорь" },
	{ "Дельфин" },
	{ "Акула" },
	{ "Черепаха" },
	{ "Скумбрия" },
	{ "Кошелёк" },
	{ "Краб" }
};
new dropcars[][] = {
	{ 475 },
	{ 479 },
	{ 489 },
	{ 401 },
	{ 439 },
	{ 560 },
	{ 404 },
	{ 445 },
	{ 458 },
	{ 402 },
	{ 562 },
	{ 400 },
	{ 558 },
	{ 585 },
	{ 405 },
	{ 410 },
	{ 421 },
	{ 436 },
	{ 516 },
	{ 542 },
	{ 559 },
	{ 603 },
	{ 589 },
	{ 561 },
	{ 565 },
	{ 554 },
	{ 549 },
	{ 505 },
	{ 480 },
	{ 529 },
	{ 506 },
	{ 429 },
	{ 546 },
	{ 477 },
	{ 507 },
	{ 551 },
	{ 535 }
};

new Float:RandomMusor[10][3] = {
	{ 1781.8092, -1696.7396, 13.4775 },
	{ 1516.9279, -1847.3209, 13.5469 },
	{ 1633.7135, -1547.7916, 13.6198 },
	{ 1786.0435, -1144.5471, 23.9941 },
	{ 862.0137, -1385.6587, 13.7005 },
	{ 477.9874, -1766.7769, 5.5373 },
	{ 2138.5154, -1210.3632, 23.8849 },
	{ 2933.7617, -1524.1095, 11.0469 },
	{ 2398.1584, -2013.4146, 13.5537 },
	{ 986.1353, -920.3261, 42.1797 }
};
#define MAX_MAFIA_ZONE 23
new MafiaOtkat[MAX_MAFIA_ZONE], MafiaWar[MAX_MAFIA_ZONE];
new MafiaZoneTime[MAX_MAFIA_ZONE];
new MafiaZoneTimeAll[MAX_MAFIA_ZONE];
new MafiaZoneFraction_[MAX_MAFIA_ZONE];
new MafiaZoneFraction[MAX_MAFIA_ZONE];
new MafiaZoneRandom[MAX_MAFIA_ZONE];
new MafiaZoneDeath_[MAX_MAFIA_ZONE];
new MafiaZoneDeath[MAX_MAFIA_ZONE];
new MafiaZoneStatus[MAX_MAFIA_ZONE];
new bool:MafiaZoneWar[MAX_MAFIA_ZONE];
new MafiaZoneID[MAX_MAFIA_ZONE];
new Float:MafiaZone[][] = {
	{ 2216.62, -125.80, 2422.09, 131.91 },
	{ 272.46, 2480.13, 439.10, 2567.39 },
	{ 791.02, 738.46, 903.60, 937.28 },
	{ 1006.7960, -370.2159, 1125.6052, -280.8378 }
};
new NaCS[MAX_PLAYERS], CSPlayers = 0, TeamCS1[MAX_PLAYERS], TeamCS2[MAX_PLAYERS], CSzona;
//===============================[№ 1]==========================================
new Float:CS1Team1[10][3] = {
	{-970.3032, 1095.8336, 1345.0022 },
	{-971.4384, 1081.5122, 1345.0050 },
	{-975.8692, 1089.3335, 1344.9694 },
	{-976.7369, 1072.7632, 1344.9775 },
	{-970.0268, 1056.7747, 1345.0425 },
	{-969.3422, 1040.1964, 1345.0620 },
	{-970.9399, 1025.7819, 1345.0652 },
	{-978.8335, 1022.7300, 1345.0143 },
	{-979.1329, 1035.1659, 1345.00000 },
	{-974.2614, 1060.6432, 1345.6719 }
};
new Float:CS1Team2[10][3] = {
	{-1129.0693, 1023.8367, 1345.7041 },
	{-1135.5026, 1020.9341, 1345.7450 },
	{-1136.2567, 1031.8451, 1345.7617 },
	{-1131.6708, 1030.0901, 1345.7285 },
	{-1133.7800, 1038.1332, 1345.7483 },
	{-1129.9752, 1050.0251, 1345.7355 },
	{-1136.7994, 1065.8320, 1345.7959 },
	{-1127.2659, 1072.5509, 1345.7450 },
	{-1132.3058, 1094.6681, 1345.7937 },
	{-1136.2092, 1092.0111, 1345.8169 }
};
//===============================[№ 2]==========================================
new Float:CS2Team1[10][3] = {
	{-1485.0815, 1653.3352, 1052.5313 },
	{-1485.7261, 1645.4559, 1052.5313 },
	{-1489.8325, 1644.3275, 1052.5313 },
	{-1494.3628, 1644.2515, 1052.5313 },
	{-1491.0286, 1637.8080, 1052.5313 },
	{-1486.2687, 1636.2865, 1052.5313 },
	{-1490.9469, 1630.2793, 1052.5313 },
	{-1494.9514, 1626.6058, 1052.5313 },
	{-1487.9908, 1625.7437, 1052.5313 },
	{-1490.1313, 1641.1868, 1052.5313 }
};
new Float:CS2Team2[10][3] = {
	{-1378.2979, 1559.4620, 1052.5313 },
	{-1378.0521, 1563.1298, 1052.5313 },
	{-1371.6506, 1562.1359, 1052.5313 },
	{-1359.6833, 1562.9556, 1052.5313 },
	{-1350.6256, 1559.8472, 1052.5313 },
	{-1350.9578, 1576.5975, 1052.5313 },
	{-1349.1873, 1580.8224, 1052.5313 },
	{-1351.6528, 1585.2085, 1052.5313 },
	{-1352.0452, 1589.2904, 1052.5313 },
	{-1349.7161, 1594.8944, 1052.5313 }
};
//==================================[№ 3]=======================================
new Float:CS3Team1[7][3] = {
	{ 364.4492, 182.1162, 1008.3828 },
	{ 360.5676, 178.4698, 1008.3828 },
	{ 366.0938, 174.7397, 1008.3828 },
	{ 376.0587, 173.4244, 1008.3893 },
	{ 368.2728, 168.9468, 1008.3893 },
	{ 361.1664, 164.2460, 1008.3828 },
	{ 365.7029, 160.7353, 1008.3828 }
};
new Float:CS3Team2[7][3] = {
	{ 334.9910, 172.0221, 1019.9844 },
	{ 335.4874, 174.9296, 1019.9844 },
	{ 340.0774, 175.0684, 1019.9844 },
	{ 340.6067, 172.2280, 1019.9912 },
	{ 349.3777, 176.1345, 1019.9912 },
	{ 351.5656, 170.6232, 1019.9912 },
	{ 361.6159, 174.7594, 1019.9844 }
};
//=====================================[№4]=====================================
new Float:CS4Team1[7][3] = {
	{-1464.9020, 1494.8700, 8.2578 },
	{-1464.3073, 1491.2024, 8.2578 },
	{-1464.3409, 1485.3549, 8.2578 },
	{-1470.9844, 1486.1602, 8.2501 },
	{-1470.3427, 1490.5116, 8.2578 },
	{-1469.7252, 1494.4224, 8.2578 },
	{-1476.5754, 1489.2423, 8.2501 }
};
new Float:CS4Team2[7][3] = {
	{-1433.7860, 1487.7200, 1.8672 },
	{-1433.8275, 1483.8778, 1.8672 },
	{-1434.2003, 1498.6381, 1.8672 },
	{-1424.3912, 1497.4928, 1.8672 },
	{-1408.3484, 1483.0831, 1.8672 },
	{-1402.1273, 1483.1080, 1.8672 },
	{-1435.6976, 1480.9672, 1.8672 }
};
//=================================[№ 5]========================================
new Float:CS5Team1[7][3] = {
	{ 202.0178, -2972.3577, 7.9809 },
	{ 202.1395, -2968.2744, 7.9809 },
	{ 202.8270, -2955.8005, 7.9809 },
	{ 203.9982, -2949.8562, 7.9809 },
	{ 204.3144, -2944.1189, 7.9809 },
	{ 204.7126, -2936.8936, 7.9809 },
	{ 202.4514, -2962.6143, 7.9809 }
};
new Float:CS5Team2[7][3] = {
	{ 130.3996, -2937.6003, 5.6809 },
	{ 130.1301, -2940.4436, 5.6809 },
	{ 129.7708, -2944.2363, 5.6809 },
	{ 129.3181, -2949.0164, 5.6809 },
	{ 128.8532, -2953.9236, 5.6809 },
	{ 128.4275, -2958.4167, 5.6809 },
	{ 127.4990, -2968.2175, 5.6809 }
};
//=================================[№ 6]========================================
new Float:CS6Team1[6][3] = {
	{-961.7413, 1945.9430, 9.0000 },
	{-953.1895, 1948.1530, 9.0000 },
	{-948.3927, 1947.5302, 9.0000 },
	{-955.9799, 1952.1526, 5.0000 },
	{-950.0356, 1951.9658, 5.0000 },
	{-944.0725, 1949.0509, 5.0000 }
};
new Float:CS6Team2[6][3] = {
	{-961.7006, 1854.5441, 9.0000 },
	{-952.1008, 1852.4164, 9.0000 },
	{-947.4285, 1856.0319, 9.0061 },
	{-950.0245, 1849.2977, 5.0051 },
	{-946.4835, 1850.8608, 5.0000 },
	{-944.8174, 1859.4199, 5.0000 }
};

new Float:RandomBattlefield[9][3] = {
	{-1112.7095, 1093.3809, 1341.8438 },
	{-1116.8646, 1026.9445, 1343.6481 },
	{-1034.3107, 1089.2009, 1343.0570 },
	{-1033.9021, 1053.5155, 1343.1312 },
	{-975.4235, 1072.3657, 1344.9863 },
	{-973.9602, 1024.4735, 1345.0459 },
	{-991.5483, 1025.8932, 1341.8513 },
	{-1129.9974, 1049.3158, 1345.7357 },
	{-1059.1370, 1061.2576, 1343.8446 }
};
new Float:RandomWareHouse[9][3] = {
	{ 1263.8201, 5.6875, 1008.2578 },
	{ 1283.8561, -17.3983, 1001.0156 },
	{ 1285.7678, -34.5636, 1001.0156 },
	{ 1308.1071, -17.9266, 1001.0343 },
	{ 1299.6112, 3.4622, 1001.0239 },
	{ 1270.5448, -0.2222, 1001.0263 },
	{ 1251.8921, -20.2419, 1001.0341 },
	{ 1262.0826, -63.9167, 1002.4967 },
	{ 1300.7700, -65.2395, 1002.4970 }
};
new Float:RandomKickStar[9][3] = {
	{-1440.1399, 1593.3397, 1052.5313 },
	{-1460.4642, 1602.7333, 1052.8038 },
	{-1476.1176, 1587.6560, 1052.7977 },
	{-1470.4292, 1573.9031, 1052.8037 },
	{-1413.1256, 1601.2015, 1052.5313 },
	{-1418.1289, 1579.2053, 1052.5313 },
	{-1410.2369, 1562.3298, 1052.5313 },
	{-1461.7323, 1566.7256, 1052.7500 },
	{-1481.9174, 1612.4907, 1052.5313 }
};
new Float:RandomBloodbowl[9][3] = {
	{-1394.8586, 987.2243, 1023.9542 },
	{-1398.9379, 982.8310, 1024.4652 },
	{-1393.4681, 974.8260, 1024.1478 },
	{-1385.9553, 967.8503, 1024.7402 },
	{-1375.9271, 967.4012, 1024.9354 },
	{-1424.3793, 992.7368, 1024.1045 },
	{-1426.0388, 1057.5159, 1038.5326 },
	{-1344.2687, 1052.3163, 1038.3080 },
	{-1283.0211, 996.8951, 1037.2704 }
};
new Float:Randombum[9][3] = {
	{ 1982.3544, 3529.2556, 11.7217 },
	{ 1984.4175, 3566.2329, 11.7217 },
	{ 2003.9622, 3550.4475, 11.7217 },
	{ 2006.6188, 3528.2432, 11.7217 },
	{ 2013.7317, 3564.7917, 11.7217 },
	{ 2012.8959, 3583.4792, 11.7262 },
	{ 2011.6221, 3515.4231, 11.7262 },
	{ 2030.7657, 3526.8682, 11.7262 },
	{ 2038.4147, 3556.4531, 11.7217 }
};
new Float:RandomRoof[9][3] = {
	{ 1550.5078, -1220.5696, 277.8827 },
	{ 1552.0614, -1258.3877, 277.8765 },
	{ 1593.2335, -1267.5641, 277.8831 },
	{ 1596.4202, -1221.7668, 277.8719 },
	{ 1573.2622, -1245.4915, 277.8777 },
	{ 1568.5327, -1266.8160, 277.8828 },
	{ 1595.2679, -1249.7334, 277.8788 },
	{ 1573.6304, -1220.3114, 277.8770 },
	{ 1549.6315, -1240.7765, 277.8829 }
};
new Float:gMedPlayerSpawns[2][3] = {
	{ 1178.1, -1321.0, 14.1 },
	{ 1177.7, -1325.0, 14.0 }
};
enum cCKInfo {
	cSendername[20],
		cGiveplayer[20],
		cUsed,
};
new CKInfo[10][cCKInfo];
enum pPaperInfo {
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving,
};
new PaperInfo[10][pPaperInfo];
enum pPaper {
	pMaker[20],
		pTitle[64],
		pLine1[128],
		pLine2[128],
		pLine3[128],
		pLine4[128],
		pLine5[128],
		pLine6[128],
		pLine7[128],
};
new Paper[MAX_PLAYERS][pPaper];
enum zInfo {
	zOwner[64],
		zColor[20],
		Float:zMinX,
		Float:zMinY,
		Float:zMaxX,
		Float:zMaxY,
};
enum pFishing {
	pFish1[20],
		pFish2[20],
		pFish3[20],
		pFish4[20],
		pFish5[20],
		pWeight1,
		pWeight2,
		pWeight3,
		pWeight4,
		pWeight5,
		pFid1,
		pFid2,
		pFid3,
		pFid4,
		pFid5,
		pLastFish,
		pFishID,
		pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];
enum pCooking {
	pCook1[20],
		pCook2[20],
		pCook3[20],
		pCook4[20],
		pCook5[20],
		pCWeight1,
		pCWeight2,
		pCWeight3,
		pCWeight4,
		pCWeight5,
		pCookID1,
		pCookID2,
		pCookID3,
		pCookID4,
		pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];
enum pGroceries {
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};


new MnePizda[MAX_PLAYERS];
AnimationKill(playerid, const animlib[], const animname[], Float:fS, opt1, opt2, opt3, opt4, opt5) {
	MnePizda[playerid] = 1;
	ApplyAnimation(playerid, animlib, animname, Float:fS, opt1, opt2, opt3, opt4, opt5);
}

OnePlayAnim(playerid, const animlib[], const animname[], Float:Speed, looping, lockx, locky, lockz, lp) {
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec {
	Float:Coords[3],
		Float:sPx,
		Float:sPy,
		Float:sPz,
		sPint,
		sLocal,
		sCam,
};

new Unspec[MAX_PLAYERS][pSpec];
enum eCars {
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};
enum hNews {
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];
new Float:RandomDalnoboiMarkers[8][3] = {
	{-1704.8157, 14.4030, 3.5547 },
	{-1885.5338, -1704.0433, 21.7500 },
	{-2040.7057, -2381.5930, 30.6250 },
	{ 2619.4961, -2209.6338, 13.5469 },
	{ 2346.2451, 2743.2007, 10.8203 },
	{ 261.2644, 1406.3064, 10.5028 },
	{-2059.6885, 70.3288, 28.3906 },
	{-2262.2620, 2308.4526, 4.8202 }
};
enum fInfo {
	fOwned,
	fOwner[MAX_PLAYER_NAME],
	Float:fEntrancex,
	Float:fEntrancey,
	Float:fEntrancez,
	Float:fExitx,
	Float:fExity,
	Float:fExitz,
	fInt,
	fVirtWorld,
	fValue,
	fLock,
	fRent,
	fRentabil,
	fTakings,
	fDate,
	fLevel,
	fID
};
new FlatsInfo[27][fInfo];
new FlatPickup[sizeof(FlatsInfo)];
new Text3D: Flat3D[sizeof(FlatsInfo)];
new HelperDuty[MAX_PLAYERS];
enum pInfo {
	pKey[32],
		pNoFree,
		pZapret,
		pVorSkill,
		pBancka,
		pFBancka,
		pFlatKey,
		pDalnoboiSkill,
		pBlockeds,
		pLevel,
		pWarns,
		pWanted,
		pNarcoZavisimost,
		pNarcoLomka,
		pForce,
		pAdmin,
		pDonateRank,
		gPupgrade,
		pConnectTime,
		pReg,
		pSex,
		pAge,
		pOrigin,
		pCK,
		pMuted,
		pExp,
		pCash,
		pAccount,
		pCrimes,
		pKills,
		pDeaths,
		pWantedDeaths,
		pLottoNr,
		pFishes,
		pBiggestFish,
		pJob,
		pPayCheck,
		pHeadValue,
		pJailed,
		pJailTime,
		pMats,
		pDrugs,
		pLeader,
		pMember,
		pFMember,
		pRank,
		pChar,
		pCar,
		pContractTime,
		pDetSkill,
		pDrochSkill,
		pLawSkill,
		pMechSkill,
		pJackSkill,
		pGromilaSkill,
		pCarSkill,
		pNewsSkill,
		pDrugsSkill,
		pCookSkill,
		pFishSkill,
		Float:pHealth,
		Float:pSHealth,
		pInt,
		pLocal,
		pTeam,
		pPhousekey,
		pPbiskey,
		Float:pPos_x,
		Float:pPos_y,
		Float:pPos_z,
		pVirWorld,
		pCarLic,
		pMotoLic,
		pFlyLic,
		pBoatLic,
		pFishLic,
		pGunLic,
		pGun0,
		pGun1,
		pGun2,
		pGun3,
		pGun4,
		pGun5,
		pGun6,
		pGun7,
		pGun8,
		pGun9,
		pGun10,
		pGun11,
		pAmmo0,
		pAmmo1,
		pAmmo2,
		pAmmo3,
		pAmmo4,
		pAmmo5,
		pAmmo6,
		pAmmo7,
		pAmmo8,
		pAmmo9,
		pAmmo10,
		pAmmo11,
		pCarTime,
		pMusorTime,
		pCleanTime,
		pTruckTime,
		pPayDay,
		pPayDayHad,
		pLoses,
		pAlcoholPerk,
		pDrugPerk,
		pMiserPerk,
		pPainPerk,
		pTraderPerk,
		pTut,
		pFWarns,
		pAdjustable,
		pFuel,
		pMarried,
		pMarriedTo[128],
		pVirtualWorld,
		pMask,
		pClock,
		pDice,
		pRope,
		pGunSkill,
		pCard,
		pMutedTime,
		pRadio,
		pNeSdal,
		pLivingAt[128],
		pFirstName[128],
		pLastName[128],
		pBornAt[128],
		Text3D:pAdmText,
		pRobTime,
		pDuty,
		pLocked,
		ptMoney,
		ptDrugs,
		ptMats,
		pHelper,
		pHmed,
		pVipTime,
		pRefText, //СИСТЕМА СВОБОДНА
		pReferal[MAX_PLAYER_NAME],
		pRefMoney,
		pTkMats,
		pTkDrugs,
		pRobKey,
		pMail[32],
		pOtherPass[32],
		pIP[16],
		pFs
};

GetTimeStamp() {
	new hour, minute, second, year, month, day;
	gettime(hour, minute, second);
	getdate(year, month, day);
	new timestamp;
	timestamp = second;
	timestamp += minute * 60;
	timestamp += hour * 3600;
	new days_of_month[12];
	if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
		days_of_month = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	}
	else {
		days_of_month = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
	}
	new days_this_year = 0;
	days_this_year = day;
	if (month > 1) {
		for (new i = 0; i < month - 1; i++) days_this_year += days_of_month[i];
	}
	timestamp += days_this_year * 86400;

	for (new j = 1970; j < year; j++) {
		timestamp += 31536000;
		if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0){
			timestamp += 86400; // Schaltjahr + 1 Tag
		}
	}
	return timestamp;
}

new PlayerInfo[MAX_PLAYERS][pInfo];

timeconvert(Time, & Minutes, & Seconds, & MSeconds) {
	new Float:fTime = floatdiv(Time, 60000);
	Minutes = floatround(fTime, floatround_tozero);
	Seconds = floatround(floatmul(fTime - Minutes, 60), floatround_tozero);
	MSeconds = floatround(floatmul(floatmul(fTime - Minutes, 60) - Seconds, 1000), floatround_tozero);
}
enum hInfo {
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmourx,
	hArmoury,
	hArmourz,
	hOwner[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hId,
	hLevel,
	Text3D:hLabel,
	hPickup,
	hMIcon,
	hKoleso,
	hSpoiler,
	hBamper,
	hBamper2,
	hPaintjob,
	hNitro,
	hGidravlika
};
new HouseInfo[186][hInfo];
enum oinfo {
	oGangMoney,
	oGangDrugs,
	oGangMats
};
new ObwyakInfo[21][oinfo];
enum bInfo {
	bOwned,
	bOwner[MAX_PLAYER_NAME],
	bMessage[128],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	bWorld,
	bMafia,
	Text3D:bLabel
};
new BizzInfo[23][bInfo];

enum sbInfo {
	sbOwned,
	sbOwner[MAX_PLAYER_NAME],
	sbMessage[128],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbMafia,
	sbPriceProd,
	Text3D:sbLabel,
};
new SBizzInfo[19][sbInfo];

enum pHaul {
	pCapasity,
	pLoad,
};
new PlayerHaul[MAX_VEHICLES][pHaul];

enum pCrime {
	pBplayer[32],
		pAccusing[32],
		pAccusedof[32],
		pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];
new RandCars[20][1] = {
	{ 496 },
	{ 542 },
	{ 507 },
	{ 585 },
	{ 466 },
	{ 492 },
	{ 579 },
	{ 559 },
	{ 400 },
	{ 551 },
	{ 516 },
	{ 475 },
	{ 561 },
	{ 550 },
	{ 566 },
	{ 558 },
	{ 562 },
	{ 562 },
	{ 603 },
	{ 560 }
};
new RandLCars[1][1] = {
	{ 431 }
};

new Peds[163][1] = {
	{ 264 },
	{ 256 },
	{ 263 },
	{ 262 },
	{ 260 },
	{ 259 },
	{ 258 },
	{ 257 },
	{ 256 },
	{ 252 },
	{ 251 },
	{ 249 },
	{ 245 },
	{ 244 },
	{ 243 },
	{ 239 },
	{ 238 },
	{ 237 },
	{ 236 },
	{ 235 },
	{ 234 },
	{ 233 },
	{ 232 },
	{ 231 },
	{ 230 },
	{ 229 },
	{ 226 },
	{ 225 },
	{ 224 },
	{ 222 },
	{ 221 },
	{ 219 },
	{ 218 },
	{ 217 },
	{ 215 },
	{ 214 },
	{ 213 },
	{ 212 },
	{ 211 },
	{ 210 },
	{ 209 },
	{ 207 },
	{ 206 },
	{ 205 },
	{ 204 },
	{ 203 },
	{ 202 },
	{ 201 },
	{ 200 },
	{ 199 },
	{ 198 },
	{ 197 },
	{ 196 },
	{ 184 },
	{ 183 },
	{ 179 },
	{ 178 },
	{ 172 },
	{ 170 },
	{ 168 },
	{ 167 },
	{ 162 },
	{ 161 },
	{ 160 },
	{ 159 },
	{ 158 },
	{ 157 },
	{ 155 },
	{ 154 },
	{ 153 },
	{ 152 },
	{ 151 },
	{ 146 },
	{ 145 },
	{ 144 },
	{ 143 },
	{ 141 },
	{ 140 },
	{ 139 },
	{ 138 },
	{ 137 },
	{ 136 },
	{ 135 },
	{ 134 },
	{ 133 },
	{ 132 },
	{ 131 },
	{ 130 },
	{ 129 },
	{ 99 },
	{ 97 },
	{ 96 },
	{ 95 },
	{ 94 },
	{ 92 },
	{ 90 },
	{ 89 },
	{ 88 },
	{ 87 },
	{ 85 },
	{ 84 },
	{ 83 },
	{ 82 },
	{ 81 },
	{ 80 },
	{ 79 },
	{ 78 },
	{ 77 },
	{ 75 },
	{ 72 },
	{ 68 },
	{ 67 },
	{ 66 },
	{ 64 },
	{ 63 },
	{ 62 },
	{ 58 },
	{ 55 },
	{ 54 },
	{ 53 },
	{ 52 },
	{ 51 },
	{ 49 },
	{ 45 },
	{ 44 },
	{ 43 },
	{ 39 },
	{ 38 },
	{ 37 },
	{ 36 },
	{ 35 },
	{ 34 },
	{ 33 },
	{ 32 },
	{ 31 },
	{ 30 },
	{ 29 },
	{ 27 },
	{ 26 },
	{ 25 },
	{ 24 },
	{ 23 },
	{ 22 },
	{ 21 },
	{ 20 },
	{ 19 },
	{ 18 },
	{ 17 },
	{ 16 },
	{ 15 },
	{ 14 },
	{ 11 },
	{ 10 },
	{ 1 },
	{ 2 },
	{ 290 },
	{ 291 },
	{ 292 },
	{ 293 },
	{ 187 },
	{ 297 },
	{ 298 },
	{ 299 }
};

new Float:HouseCarSpawns[186][4] = {
	{ 2443.3259, -1638.2467, 13.2255, 180.8365 }, //0
	{ 811.0511, -1448.6487, 12.7947, 87.5579 },
	{ 2454.3147, -1010.5692, 59.8664, 177.3353 },
	{ 2432.1116, -1052.6689, 54.3710, 1.5298 },
	{ 2570.4871, -1029.2515, 69.6936, 177.9352 },
	{ 2530.7195, -1066.5153, 69.6792, 2.5315 },
	{ 2361.8499, -1034.2798, 54.3305, 188.4978 },
	{ 2452.3850, -1108.0726, 43.4385, 359.5750 },
	{ 645.5685, -1615.7039, 15.0343, 2.9618 },
	{ 760.3300, -1692.1041, 4.3175, 0.7161 },
	{ 859.7155, -1419.0441, 12.6834, 0.8002 },
	{ 1793.2397, -2131.8003, 13.3453, 1.7226 },
	{ 1672.8163, -2115.3762, 13.6181, 270.8661 },
	{ 1747.6246, -2097.2727, 13.6627, 180.6158 },
	{ 2684.9673, -2023.6736, 13.6276, 359.0809 },
	{ 2067.9634, -1738.8317, 13.3438, 268.8511 },
	{ 2065.9788, -1694.6547, 13.6564, 269.9298 },
	{ 2018.3961, -1648.9132, 13.6621, 89.3495 },
	{ 2156.2336, -1408.4910, 25.3362, 90.1531 },
	{ 2157.2659, -1423.5824, 25.3368, 92.3747 },
	{ 2136.6731, -1484.7003, 24.0710, 0.0695 },
	{ 2078.8704, -1129.5288, 23.6979, 359.8675 },
	{ 2089.1597, -1170.9166, 25.6128, 89.6290 },
	{ 252.6833, -1227.3406, 74.3700, 261.8835 },
	{ 1088.2529, -640.6816, 112.9552, 272.8495 },
	{ 1110.8040, -732.4156, 100.3675, 92.0825 },
	{ 979.3186, -830.8003, 95.4584, 29.1679 },
	{ 223.3385, -1394.1200, 51.3743, 72.3531 },
	{ 833.1177, -888.8204, 68.5681, 323.9668 },
	{ 2852.7915, -1330.1194, 10.8621, 279.4978 },
	{ 2761.1978, -1177.1949, 69.2010, 89.7876 },
	{ 2513.4326, -1657.7476, 13.5271, 207.9038 },
	{ 2393.0649, -1680.3617, 14.3727, 359.8250 },
	{ 2165.7209, -1809.2920, 13.1719, 269.7851 },
	{ 2188.8142, -1807.0288, 13.1692, 0.1116 },
	{ 824.0548, -866.9741, 69.6864, 291.5508 },
	{ 246.8032, -1262.5441, 69.1843, 312.1613 },
	{ 250.5942, -1359.6228, 52.9054, 303.9838 },
	{ 307.3885, -1321.9642, 53.5503, 126.0829 },
	{ 1516.9546, -694.3127, 94.5441, 88.3074 },
	{ 1437.5024, -889.8628, 50.4576, 359.6005 },
	{ 1464.0112, -902.2317, 54.6319, 0.9185 },
	{ 1095.6226, -782.9927, 106.9525, 81.8233 },
	{ 1039.2573, -640.3104, 119.9139, 8.9798 },
	{ 1329.1901, -1058.9097, 28.5623, 269.8208 },
	{ 1179.7776, -1067.3984, 28.8666, 91.0276 },
	{ 785.9752, -1667.3848, 13.2525, 268.0834 },
	{ 2029.1053, -1129.1689, 24.4767, 89.4390 },
	{ 1910.5608, -1116.4100, 25.4621, 179.3047 },
	{ 1927.2725, -1129.2261, 24.9597, 90.8790 },
	{ 169.5473, -1775.8564, 3.9077, 90.0680 },
	{-2722.9028, 915.9285, 67.3900, 91.5005 },
	{-2714.9844, 869.6284, 70.4970, 89.8010 },
	{-2664.6719, 988.8038, 64.7167, 1.0278 },
	{-2636.1165, 932.3859, 71.6133, 183.1583 },
	{-2721.2390, 976.7758, 54.2572, 359.7351 },
	{-2718.6003, -102.2618, 4.1297, 269.9865 },
	{-2718.8086, -89.8323, 4.1312, 270.1106 },
	{-2693.9641, -190.8459, 4.1359, 89.5671 },
	{-2616.4136, -96.6138, 4.1302, 270.8441 },
	{-2244.0886, 781.3737, 49.2185, 89.6745 },
	{-2276.6917, 792.9734, 49.2395, 179.1208 },
	{-2511.5625, -175.6494, 25.2492, 269.7626 },
	{-2511.5999, -194.1494, 25.2492, 270.5078 },
	{-2507.9077, -113.9637, 25.4129, 359.9953 },
	{-2616.1057, 65.4646, 4.1316, 269.4197 },
	{-2616.3328, 105.5518, 4.1309, 269.9851 },
	{-2616.7478, 118.2941, 4.1272, 271.5615 },
	{-2796.5845, 224.0499, 6.9847, 89.3904 },
	{-2796.2139, -55.4105, 6.9871, 89.5544 },
	{-2796.3379, -101.9295, 6.9861, 92.1463 },
	{-2129.6741, 983.0450, 79.7971, 90.2169 },
	{-2129.9734, 1000.6937, 79.7977, 90.4655 },
	{-2129.7844, 1037.2631, 79.7995, 91.1616 },
	{-2129.5669, 1055.6414, 79.8012, 89.3453 },
	{-2130.3474, 1074.1665, 79.7970, 90.2600 },
	{-2129.7271, 1092.4369, 79.7979, 91.0297 },
	{-2173.5386, 1104.6077, 79.7952, 180.6868 },
	{-2193.4119, 1104.4784, 79.7998, 180.8185 },
	{-2233.2983, 1105.0830, 79.8013, 180.3156 },
	{-2636.9070, 164.5854, 4.1388, 179.1166 },
	{-2624.2803, 164.6041, 4.1360, 179.5012 },
	{-2616.4663, 134.4254, 4.1310, 270.5805 },
	{-2616.5125, -194.4411, 4.1333, 269.0601 },
	{-2593.2947, -190.7491, 4.1059, 90.0086 },
	{-2693.6763, 112.7342, 4.1343, 90.0005 },
	{-2428.4766, -11.9299, 35.1319, 270.1189 },
	{-2561.2178, 2257.3108, 4.8578, 335.0291 },
	{-2529.2532, 2249.2117, 4.7744, 336.8505 },
	{-2357.8459, 2420.1936, 7.2050, 55.0819 },
	{-2426.2085, 2347.0361, 4.7705, 190.2682 },
	{-2405.0876, 2451.6528, 12.5781, 136.8177 },
	{-2415.3198, 2490.7280, 12.5455, 17.6827 },
	{-2486.2192, 2508.8311, 17.8580, 198.9566 },
	{-2443.6968, 2516.6672, 15.0881, 202.9013 },
	{-2484.0405, 2480.3560, 17.8482, 221.9810 },
	{-2621.1714, 2297.6638, 8.0754, 357.8396 },
	{-2620.9729, 2363.5586, 8.7226, 359.4267 },
	{-1799.9817, 2043.9222, 8.9013, 4.0569 },
	{-1814.8324, 2039.1794, 8.6298, 289.8141 },
	{-946.3638, 1416.4553, 29.8773, 237.2418 },
	{ 2061.9995, -1636.6228, 13.2739, 270.9893 },
	{ 892.7532, -1658.6880, 13.2740, 180.4547 },
	{ 767.2570, -1556.2012, 13.2739, 173.2952 },
	{ 780.4686, -1501.2980, 13.2818, 164.4436 },
	{ 322.6466, -1765.5597, 4.3283, 179.9928 },
	{ 2529.7288, -2008.3564, 13.2758, 91.8679 },
	{ 2432.4497, -1101.2443, 42.2154, 346.8733 },
	{ 2328.6545, -1677.4198, 14.1569, 269.6541 },
	{ 2296.1870, -1718.6735, 13.2815, 179.0729 },
	{ 2390.4729, -1716.5134, 13.3355, 181.0927 },
	{ 2855.6948, -1355.9810, 10.7958, 270.6931 },
	{ 2541.7886, -1034.9142, 69.3081, 179.4887 },
	{ 2535.3960, -1032.1627, 69.3071, 178.6509 },
	{ 2503.4526, -1026.0688, 69.8131, 175.4604 },
	{ 2476.2112, -1057.1793, 66.4210, 341.6617 },
	{ 2485.1069, -1016.8546, 64.9926, 151.2389 },
	{ 2338.7063, -1037.3762, 52.5639, 184.5882 },
	{-73.3814, -1601.5822, 2.4449, 301.6673 },
	{-97.9106, -1585.4933, 2.3443, 302.8791 },
	{-59.4577, -1573.4028, 2.3382, 157.0160 },
	{-72.3137, -1550.7135, 2.3396, 232.5535 },
	{-55.7932, -1549.5184, 2.3378, 137.4360 },
	{ 284.2634, -1161.7323, 80.6392, 223.4075 },
	{ 215.8431, -1281.1158, 62.1064, 165.9074 },
	{ 1529.4260, -812.6563, 71.6404, 89.6566 },
	{ 1514.5765, -766.9607, 80.0123, 139.1882 },
	{ 1354.5438, -630.2029, 108.8624, 16.7224 },
	{ 912.4978, -665.3580, 116.7271, 232.5559 },
	{ 405.2935, -1154.2231, 77.1067, 147.1416 },
	{ 813.4984, -767.7045, 76.4684, 282.5980 },
	{ 882.5469, -784.2460, 101.0521, 298.3578 },
	{ 2307.6331, -1054.1018, 49.8583, 158.3429 },
	{ 2281.0876, -1049.9330, 49.1333, 236.3246 },
	{ 2428.6243, -1016.4585, 54.0233, 192.8614 },
	{ 2525.3608, -1056.2595, 69.2863, 269.9300 },
	{ 2498.4673, -1053.9751, 68.6217, 264.4387 },
	{-83.0099, -1556.3940, 2.3290, 211.9530 },
	{-916.8968, -498.8137, 25.6766, 146.5253 },
	{-950.6843, -487.9716, 25.6763, 193.2014 },
	{-960.4879, -499.3160, 25.6692, 234.0413 },
	{-949.1900, -538.6643, 25.6844, 329.6690 },
	{-933.8240, -534.2077, 25.6807, 8.3559 },
	{-928.5973, -534.5779, 25.6807, 350.5067 },
	{-916.5188, -536.4039, 25.6806, 28.2703 },
	{-924.1100, -514.8000, 25.6880, 12.2969 },
	{-944.2123, -520.1841, 25.6818, 228.1017 },
	{ 234.8275, -303.6440, 1.3052, 185.7136 },
	{ 229.0201, -312.8429, 1.3398, 21.7414 },
	{ 246.1861, -295.3312, 1.3052, 307.4329 },
	{ 253.5034, -310.2379, 1.3058, 344.5028 },
	{ 250.9650, -293.1247, 1.2783, 15.5901 },
	{ 266.8144, -295.8426, 1.3052, 89.0186 },
	{ 264.4150, -278.1494, 1.3052, 71.1106 },
	{ 267.2178, -273.4558, 1.3050, 140.4912 },
	{ 246.5952, -271.6972, 1.3066, 333.0851 },
	{-156.3261, 2687.9980, 62.0080, 321.8459 },
	{-170.9858, 2698.3413, 62.2674, 69.3324 },
	{-163.3575, 2723.6584, 62.0078, 116.1873 },
	{-151.1481, 2753.5535, 62.3150, 79.7876 },
	{-164.0983, 2775.0149, 62.4075, 75.0255 },
	{-167.4353, 2757.5735, 62.3633, 111.0818 },
	{-200.0658, 2777.2095, 61.6185, 106.9149 },
	{-223.3628, 2770.1743, 62.3935, 177.7426 },
	{-229.3628, 2800.5801, 61.6745, 74.1535 },
	{-248.7987, 2784.4146, 62.2839, 146.5105 },
	{-269.4799, 2760.2708, 61.8346, 103.1971 },
	{-286.8535, 2766.8374, 61.7993, 226.4253 },
	{-311.0351, 2731.8887, 62.3863, 250.9293 },
	{-275.6305, 2719.4834, 62.3505, 358.7783 },
	{-284.5617, 2737.2441, 61.9136, 201.0099 },
	{-2035.9785, -2526.9358, 30.3382, 117.4713 },
	{-2035.2153, -2546.0796, 30.3414, 69.0797 },
	{-2046.7769, -2565.0662, 30.3412, 29.1962 },
	{-2058.2234, -2552.5986, 30.1571, 38.5450 },
	{-2074.2285, -2569.3442, 30.3410, 11.1158 },
	{-2064.4702, -2528.5696, 30.3447, 109.8640 },
	{-2077.4507, -2549.4910, 30.3104, 318.5419 },
	{-2076.5637, -2533.0740, 30.3435, 260.8268 },
	{-2061.3689, -2499.4714, 30.3816, 138.1400 },
	{-2075.0232, -2491.6396, 30.3427, 169.1180 },
	{-2091.6072, -2507.5627, 30.3473, 144.7695 },
	{-2106.4861, -2529.5420, 30.3344, 309.7851 },
	{-2490.9783, 2407.4558, 15.8803, 30.3702 },
	{ 623.9624, -1628.7588, 15.9708, 181.3180 },
	{-608.5095, -1078.2638, 23.1768, 233.3473 }
};
new Medicines[MAX_PLAYERS], PlayerInVeh[MAX_PLAYERS], Refueling[MAX_PLAYERS], mutetime[MAX_PLAYERS], swear[MAX_PLAYERS], WireTransferId[MAX_PLAYERS];
new Text:TextDraw0; //Переменная создающая текстдрав со словом Health для всех игроков
new Text:TextDraw1[MAX_PLAYERS]; //Переменная показывает кол-во бензина в автомобиле(отдельна для каждого игрока)
new Text:TextDraw2; //Пенеменная создающая текстдрав со словом SPeed для всех игроков
new Text:TextDraw3[MAX_PLAYERS]; //Переменная показывает скорость автомобиля(отдельна для каждого игрока)
new Text:TextDraw4; //Переменная создающая текстдрав со словом Fuel для всех игроков
new vava[64], vava1[64];
new Float:VehicleHealth; //Переменная обьявляющая число с плавающей запятой для записи в неё кол-ва жизней автомобиля

SpeedVehicle(playerid) //Функция с помощью которой мы получаем скорость автомобиля
{
	new Float:ST[4];
	if (IsPlayerInAnyVehicle(playerid))
		GetVehicleVelocity(GetPlayerVehicleID(playerid), ST[0], ST[1], ST[2]);
	else GetPlayerVelocity(playerid, ST[0], ST[1], ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}

new Text:lvledit, Text:reklweb, Text3D: fare3dtext, Text:txtTimeDisp, timestr[32], Text:Textdraw0, Text:Textdraw1, Text:Textdraw2, HouseEntered[MAX_PLAYERS];
new Truck[12], Report[2], Report2, Rent[2], RentSF[2], RentMoto[2], RentLodki[2], Groov[2], M4C[2], Instruc[2], LKN[2], Yakudza[2];
new armycar[2], fbicar[2], RusMafLimo[2], Rifa[2], Triad[2], Balla[2], Vagos[2], Aztek[2], Street[12], IsCarTun[12], copcar[2], GRUZauto[2], Bgate, MedicGate, bool:med, Medic2Gate, FBIGate, FBI1GateTimer, LS2GateTimer;
new FBI2Gate, Taxi[2], Hit[2], RusMaf[2], FBI2GateTimer, VoyakGateTimer, Voyak2GateTimer, LSGateTimer, StritGate, bool:strit, Strit2Gate, NewsGate, bool:news, News2Gate, TAXIGate;
new bool:taxi, RifaGate, bool:rifa, RussMgate, bool:rm, TR2Gate, bool:triad2;
new enter4, enter5, entersf, exitsf, enter14, enter15, enter17, enter18, enter19, enter20, enter21, enter23, enter24, enter25, enter26, enter27, enter83, enter28;
new enter29, enter30, enter31, enter32, enter33, enter34, enter35, enter36, enter37, enter41, enter46, enter47, enter48, enter49, enter76, enter77, enter78, enter79, enter80, enter81, enter82, enter84;
new enter85, enter86, enter87, enter88, enter89, enter90, enter91, enter98, enter99;
new entermer, exitmer, kvartiraLS[2], kvartiraLS2[2], kvartiraSF[2];

main() {
	print(" --------------------------------------------------------------------------- ");
	print(" MODE: YW: LS/SF/LV [RPG] ");
	print(" MAP: RUS/UA/BY");
	print(" ----------------------------------------------------------------------------");
}

TryFish(playerid) {
	TogglePlayerControllable(playerid, 1);
	new Caught;
	new string[145];
	new rand;
	new fstring[MAX_PLAYER_NAME];
	new Level = PlayerInfo[playerid][pFishSkill];
	if (Level >= 0 && Level <= 50) {
		Caught = random(10) - 5;
	}
	else if (Level >= 51 && Level <= 100) {
		Caught = random(20) - 11;
	}
	else if (Level >= 101 && Level <= 200) {
		Caught = random(40) - 21;
	}
	else if (Level >= 201 && Level <= 400) {
		Caught = random(60) - 41;
	}
	else if (Level >= 401) {
		Caught = random(80) - 61;
	}
	rand = random(FishNamesNumber);
	if (Caught <= 0) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Рыба сорвалась.");
		return true;
	}
	else if (rand == 0) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы поймали рваную куртку и выкинули.");
		return true;
	}
	else if (rand == 4) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы поймали старые трусы и выкинули их.");
		return true;
	}
	else if (rand == 7) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы поймали банку из под Sprunk`а");
		return true;
	}
	else if (rand == 10) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы выловили драный сапог.");
		return true;
	}
	else if (rand == 13) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы поймали пакет с мусором и выкинули его.");
		return true;
	}
	else if (rand == 20) {
		new mrand = random(500);
		format(string, sizeof(string), "Вы вытащили на крючке сумку с деньгами. В ней оказалось %d$.", mrand);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		GivePlayerBablo(playerid, mrand);
		return true;
	}
	if (PlayerInfo[playerid][pFishLic] < 1) {
		PlayerInfo[playerid][pWanted] += 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
		SetPlayerCriminal(playerid, 255, "Рыбная ловля без лицензии");
	}
	if (Fishes[playerid][pWeight1] == 0) {
		PlayerInfo[playerid][pFishes] += 1;
		PlayerInfo[playerid][pFishSkill] += 1;
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight1] = Caught;
		format(string, sizeof(string), "Вы поймали %s, весом в %d кг.", Fishes[playerid][pFish1], Caught);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 1;
		Fishes[playerid][pFid1] = rand;
		Fishes[playerid][pFishID] = rand;
		if (Caught > PlayerInfo[playerid][pBiggestFish]) {
			format(string, sizeof(string), "Вы побили свой старый рекорд (%d кг)! Новый рекорд равен %d кг.", PlayerInfo[playerid][pBiggestFish], Caught);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pBiggestFish] = Caught;
		}
	}
	else if (Fishes[playerid][pWeight2] == 0) {
		PlayerInfo[playerid][pFishes] += 1;
		PlayerInfo[playerid][pFWarns] = 0;
		PlayerInfo[playerid][pFishSkill] += 1;
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight2] = Caught;
		format(string, sizeof(string), "Вы поймали %s, весом в %d кг.", Fishes[playerid][pFish1], Caught);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 2;
		Fishes[playerid][pFid2] = rand;
		Fishes[playerid][pFishID] = rand;
		if (Caught > PlayerInfo[playerid][pBiggestFish]) {
			format(string, sizeof(string), "Вы побили свой старый рекорд (%d кг)! Новый рекорд равен %d кг.", PlayerInfo[playerid][pBiggestFish], Caught);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pBiggestFish] = Caught;
		}
	}
	else if (Fishes[playerid][pWeight3] == 0) {
		PlayerInfo[playerid][pFishes] += 1;
		PlayerInfo[playerid][pFishSkill] += 1;
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight3] = Caught;
		format(string, sizeof(string), "Вы поймали %s, весом в %d кг.", Fishes[playerid][pFish1], Caught);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 3;
		Fishes[playerid][pFid3] = rand;
		Fishes[playerid][pFishID] = rand;
		if (Caught > PlayerInfo[playerid][pBiggestFish]) {
			format(string, sizeof(string), "Вы побили свой старый рекорд (%d кг)! Новый рекорд равен %d кг.", PlayerInfo[playerid][pBiggestFish], Caught);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pBiggestFish] = Caught;
		}
	}
	else if (Fishes[playerid][pWeight4] == 0) {
		PlayerInfo[playerid][pFishes] += 1;
		PlayerInfo[playerid][pFishSkill] += 1;
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight4] = Caught;
		format(string, sizeof(string), "Вы поймали %s, весом в %d кг.", Fishes[playerid][pFish1], Caught);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 4;
		Fishes[playerid][pFid4] = rand;
		Fishes[playerid][pFishID] = rand;
		if (Caught > PlayerInfo[playerid][pBiggestFish]) {
			format(string, sizeof(string), "Вы побили свой старый рекорд (%d кг)! Новый рекорд равен %d кг.", PlayerInfo[playerid][pBiggestFish], Caught);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pBiggestFish] = Caught;
		}
	}
	else if (Fishes[playerid][pWeight5] == 0) {
		PlayerInfo[playerid][pFishes] += 1;
		PlayerInfo[playerid][pFishSkill] += 1;
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight5] = Caught;
		format(string, sizeof(string), "Вы поймали %s, весом в %d кг.", Fishes[playerid][pFish1], Caught);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 5;
		Fishes[playerid][pFid5] = rand;
		Fishes[playerid][pFishID] = rand;
		if (Caught > PlayerInfo[playerid][pBiggestFish]) {
			format(string, sizeof(string), " Вы побили свой старый рекорд (%d кг)! Новый рекорд равен %d кг.", PlayerInfo[playerid][pBiggestFish], Caught);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[playerid][pBiggestFish] = Caught;
		}
	}
	else {
		SendClientMessage(playerid, COLOR_GREY, " У вас уже нет места для рыбы.");
		return true;
	}
	if (PlayerInfo[playerid][pFishSkill] == 50) {
		SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык рыболовства = 2, Теперь вы можете ловить рыбку покрупнее.");
	}
	else if (PlayerInfo[playerid][pFishSkill] == 250) {
		SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык рыболовства = 3, Теперь вы можете ловить рыбку покрупнее.");
	}
	else if (PlayerInfo[playerid][pFishSkill] == 500) {
		SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык рыболовства = 4, Теперь вы можете ловить рыбку покрупнее.");
	}
	else if (PlayerInfo[playerid][pFishSkill] == 1000) {
		SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык рыболовства = 5, Теперь вы можете ловить рыбку покрупнее.");
	}
	return true;
}

forward UpdateTime();
public UpdateTime() {
	new hour, minute;
	gettime(hour, minute);
	format(timestr, 32, "%02d:%02d", hour, minute);
	TextDrawSetString(txtTimeDisp, timestr);
	SetWorldTime(hour);
	new x = 0;
	while (x != MAX_PLAYERS) {
		if (IsPlayerConnected(x) && GetPlayerState(x) != PLAYER_STATE_NONE) {
			SetPlayerTime(x, hour, minute);
		}
		x++;
	}
}

PlayerToKvadrat(playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y) {
	new Float:xxp, Float:yyp, Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if ((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)){
		return true;
	}
	return false;
}

public OnVehicleSpawn(vehicleid) {
	for (new i = 0; i < sizeof(HouseInfo); i++) {
		AddVehicleComponent(hCar[i], HouseInfo[i][hKoleso]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hBamper]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hBamper2]);
		ChangeVehiclePaintjob(hCar[i], HouseInfo[i][hPaintjob]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hNitro]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hGidravlika]);
	}
	SetVehicleHealth(vehicleid, 1000);
	//---------sultan tuning------------------
	ChangeVehiclePaintjob(Street[0], 2);
	AddVehicleComponent(Street[0], 1026);
	AddVehicleComponent(Street[0], 1028);
	AddVehicleComponent(Street[0], 1032);
	AddVehicleComponent(Street[0], 1010); //Закись азота
	AddVehicleComponent(Street[0], 1080);
	AddVehicleComponent(Street[0], 1140);
	AddVehicleComponent(Street[0], 1169);
	AddVehicleComponent(Street[0], 1138);
	ChangeVehiclePaintjob(Street[1], 1);
	AddVehicleComponent(Street[1], 1027);
	AddVehicleComponent(Street[1], 1029);
	AddVehicleComponent(Street[1], 1033);
	AddVehicleComponent(Street[1], 1010); //Закись азота
	AddVehicleComponent(Street[1], 1085);
	AddVehicleComponent(Street[1], 1170);
	AddVehicleComponent(Street[1], 1141);
	AddVehicleComponent(Street[1], 1139);

	ChangeVehiclePaintjob(Street[11], 0);
	AddVehicleComponent(Street[11], 1026);
	AddVehicleComponent(Street[11], 1028);
	AddVehicleComponent(Street[11], 1032);
	AddVehicleComponent(Street[11], 1010); //Закись азота
	AddVehicleComponent(Street[11], 1080);
	AddVehicleComponent(Street[11], 1140);
	AddVehicleComponent(Street[11], 1169);
	AddVehicleComponent(Street[11], 1138);

	//--------------chester tuning---------------------------
	ChangeVehiclePaintjob(Street[4], 1);
	AddVehicleComponent(Street[4], 1065);
	AddVehicleComponent(Street[4], 1067);
	AddVehicleComponent(Street[4], 1069);
	AddVehicleComponent(Street[4], 1158);
	AddVehicleComponent(Street[4], 1010); //Закись азота
	AddVehicleComponent(Street[4], 1159);
	AddVehicleComponent(Street[4], 1082);
	AddVehicleComponent(Street[4], 1160);
	ChangeVehiclePaintjob(Street[5], 2);
	AddVehicleComponent(Street[5], 1066);
	AddVehicleComponent(Street[5], 1068);
	AddVehicleComponent(Street[5], 1070);
	AddVehicleComponent(Street[5], 1010); //Закись азота
	AddVehicleComponent(Street[5], 1161);
	AddVehicleComponent(Street[5], 1173);
	AddVehicleComponent(Street[5], 1162);
	AddVehicleComponent(Street[5], 1080);

	ChangeVehiclePaintjob(Street[10], 0);
	AddVehicleComponent(Street[10], 1065);
	AddVehicleComponent(Street[10], 1067);
	AddVehicleComponent(Street[10], 1069);
	AddVehicleComponent(Street[10], 1158);
	AddVehicleComponent(Street[10], 1010); //Закись азота
	AddVehicleComponent(Street[10], 1159);
	AddVehicleComponent(Street[10], 1082);
	AddVehicleComponent(Street[10], 1160);

	//----------Elegy-----------------------
	ChangeVehiclePaintjob(Street[2], 2);
	AddVehicleComponent(Street[2], 1034);
	AddVehicleComponent(Street[2], 1038);
	AddVehicleComponent(Street[2], 1036);
	AddVehicleComponent(Street[2], 1010); //Закись азота
	AddVehicleComponent(Street[2], 1146);
	AddVehicleComponent(Street[2], 1082);
	AddVehicleComponent(Street[2], 1149);
	AddVehicleComponent(Street[2], 1171);
	AddVehicleComponent(Street[2], 1067);
	AddVehicleComponent(Street[2], 1159);
	AddVehicleComponent(Street[2], 1160);
	AddVehicleComponent(Street[2], 1158);

	ChangeVehiclePaintjob(Street[3], 1);
	AddVehicleComponent(Street[3], 1037);
	AddVehicleComponent(Street[3], 1035);
	AddVehicleComponent(Street[3], 1039);
	AddVehicleComponent(Street[3], 1010); //Закись азота
	AddVehicleComponent(Street[3], 1147);
	AddVehicleComponent(Street[3], 1148);
	AddVehicleComponent(Street[3], 1084);
	AddVehicleComponent(Street[3], 1172);
	AddVehicleComponent(Street[3], 1068);
	AddVehicleComponent(Street[3], 1061);
	AddVehicleComponent(Street[3], 1173);
	AddVehicleComponent(Street[3], 1162);

	ChangeVehiclePaintjob(Street[9], 0);
	AddVehicleComponent(Street[9], 1034);
	AddVehicleComponent(Street[9], 1038);
	AddVehicleComponent(Street[9], 1036);
	AddVehicleComponent(Street[9], 1010); //Закись азота
	AddVehicleComponent(Street[9], 1146);
	AddVehicleComponent(Street[9], 1082);
	AddVehicleComponent(Street[9], 1149);
	AddVehicleComponent(Street[9], 1171);
	AddVehicleComponent(Street[9], 1067);
	AddVehicleComponent(Street[9], 1159);
	AddVehicleComponent(Street[9], 1160);
	AddVehicleComponent(Street[9], 1158);

	//---------------Yranus------------------
	ChangeVehiclePaintjob(Street[6], 2);
	AddVehicleComponent(Street[6], 1088);
	AddVehicleComponent(Street[6], 1089);
	AddVehicleComponent(Street[6], 1090);
	AddVehicleComponent(Street[6], 1010); //Закись азота
	AddVehicleComponent(Street[6], 1163);
	AddVehicleComponent(Street[6], 1165);
	AddVehicleComponent(Street[6], 1084);
	AddVehicleComponent(Street[6], 1167);

	ChangeVehiclePaintjob(Street[7], 1);
	AddVehicleComponent(Street[7], 1089);
	AddVehicleComponent(Street[7], 1090);
	AddVehicleComponent(Street[7], 1091);
	AddVehicleComponent(Street[7], 1081);
	AddVehicleComponent(Street[7], 1010); //Закись азота
	AddVehicleComponent(Street[7], 1164);
	AddVehicleComponent(Street[7], 1166);
	AddVehicleComponent(Street[7], 1168);

	ChangeVehiclePaintjob(Street[8], 0);
	AddVehicleComponent(Street[8], 1088);
	AddVehicleComponent(Street[8], 1089);
	AddVehicleComponent(Street[8], 1090);
	AddVehicleComponent(Street[8], 1010); //Закись азота
	AddVehicleComponent(Street[8], 1163);
	AddVehicleComponent(Street[8], 1165);
	AddVehicleComponent(Street[8], 1084);
	AddVehicleComponent(Street[8], 1167);

}

SendPmMessage(color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (AdminPm[i] == 1) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

HABroadCast(color, const string[], level) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pAdmin] >= level) {
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
}

DollahScoreUpdate() {
	new LevScore;
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return true;
}

forward Spectator();
public Spectator() {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (KickPlayer[i] == 1) {
				Kick(i);
			}
			else if (KickPlayer[i] == 2) {
				Ban(i);
			}
			if (Spectate[i] < 253 && Spectate[i] != 255) {
				SetPlayerColor(i, 0xBFC0C200);
				TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
				if (IsPlayerConnected(targetid)) {
					TogglePlayerSpectating(i, 1);
					if (PlayerInfo[i][pAdmin] >= 1) {
						new SM_HAstring[256];
						new Float:armour, Float:health;
						new ping = GetPlayerPing(targetid);
						new gun, patr;
						new level = PlayerInfo[targetid][pLevel];
						new guns = GetPlayerWeapon(targetid);
						new weapons[13][2];
						GetPlayerWeaponData(targetid, 0, gun, patr);
						new giveplayer[MAX_PLAYER_NAME];
						GetPlayerHealth(targetid, health);
						GetPlayerArmour(targetid, armour);
						GetPlayerName(targetid, giveplayer, sizeof(giveplayer));
						format(SM_HAstring, sizeof(SM_HAstring), "~b~Name: %s ~r~ID: %d ~g~Level: %d ~y~Ping: %d~n~~b~Health: %.0f ~r~Armour: %.0f ~g~Gun: %d ~y~Ammo: %d", giveplayer, targetid, level, ping, health, armour, guns, weapons);
						TextDrawSetString(SM_HA[i], SM_HAstring);
					}
					if (IsPlayerInAnyVehicle(targetid)) {
						new carid = GetPlayerVehicleID(targetid);
						PlayerSpectateVehicle(i, carid);
					}
					else {
						PlayerSpectatePlayer(i, targetid);
					}
					if (GetPlayerInterior(targetid) == 0) {
						SetPlayerInterior(i, 0);
					}
					else if (GetPlayerInterior(targetid) > 0) {
						SetPlayerInterior(i, GetPlayerInterior(targetid));
					}
				}
			}
			if (Spectate[i] == 253) {
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i, Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pChar], Unspec[i][sPx], Unspec[i][sPy], Unspec[i][sPz] - 1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if (PlayerInfo[i][pDonateRank] > 0) {
					SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pChar], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
				}
				Spectate[i] = 255;
			}
			if (Spectate[i] == 254) {
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i, Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx], Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if (Spectate[i] == 256) {
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if (Spectate[i] == 257) {
				Spectate[i] = 254;
			}
		}
	}
}

public OnRconLoginAttempt(ip[], password[], success) {
	if (!success) {
		new pip[16];
		new name[MAX_PLAYER_NAME];
		new string[76];
		for (new i = 0; i < GetMaxPlayers(); i++) {
			GetPlayerIp(i, pip, sizeof(pip));
			GetPlayerName(i, name, MAX_PLAYER_NAME);
			if (!strcmp(ip, pip, true)) {
				SendClientMessage(i, 0xFFFFFFFF, "{ff3300}Rcon пароль введён неправильно.");
				format(string, 64, "Анти-Чит система: %s[%d] пытается взломать RCON.", name, ip);
				ABroadCast(COLOR_YELLOW, string, 1);
				Kick(i);
			}
		}
	}
	return true;
}

GunAntiCheat() {
	for (new p; p != GetMaxPlayers(); p++) {
		if (IsPlayerConnected(p) && !IsPlayerNPC(p)){
			CheckWeapon(p);
		}
	}
	return true;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	if (IsPlayerNPC(playerid)){
		return true; // Подключение Ботов
	}
	new model = GetVehicleModel(vehicleid);
	RaceCP[playerid] = 0;
	GunCheckTime[playerid] = 5;
	PlayerInfo[playerid][pCar] = 1;
	if (MnePizda[playerid] == 1) {
		new Float:cx, Float:cy, Float:cz;
		GetPlayerPos(playerid, cx, cy, cz);
		SetPlayerPos(playerid, cx, cy, cz);
		AnimationKill(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	}
	if (IsAPlane(vehicleid)){
		ServerGivePlayerWeapons(playerid, 46, 1);
	}
	if (zakaz[playerid] == model) {
		ChekPoint[playerid] = 132;
		SetPlayerCheckpoint(playerid, -1945.45, -1079.83, 30.77, 5.0);
	}
	if (vehicleid == Street[0]) {
		if (IsCarTun[0] == 0) {
			ChangeVehiclePaintjob(Street[0], 2);
			AddVehicleComponent(Street[0], 1026);
			AddVehicleComponent(Street[0], 1028);
			AddVehicleComponent(Street[0], 1032);
			AddVehicleComponent(Street[0], 1010); //Закись азота
			AddVehicleComponent(Street[0], 1080);
			AddVehicleComponent(Street[0], 1140);
			AddVehicleComponent(Street[0], 1169);
			AddVehicleComponent(Street[0], 1138);
			IsCarTun[0] = 1;
		}

	}
	else if (vehicleid == Street[1]) {
		if (IsCarTun[1] == 0) {
			ChangeVehiclePaintjob(Street[1], 1);
			AddVehicleComponent(Street[1], 1027);
			AddVehicleComponent(Street[1], 1029);
			AddVehicleComponent(Street[1], 1033);
			AddVehicleComponent(Street[1], 1010); //Закись азота
			AddVehicleComponent(Street[1], 1085);
			AddVehicleComponent(Street[1], 1170);
			AddVehicleComponent(Street[1], 1141);
			AddVehicleComponent(Street[1], 1139);
			IsCarTun[1] = 1;
		}
	}
	else if (vehicleid == Street[4]) {
		if (IsCarTun[2] == 0) {
			ChangeVehiclePaintjob(Street[4], 1);
			AddVehicleComponent(Street[4], 1065);
			AddVehicleComponent(Street[4], 1067);
			AddVehicleComponent(Street[4], 1069);
			AddVehicleComponent(Street[4], 1158);
			AddVehicleComponent(Street[4], 1010); //Закись азота
			AddVehicleComponent(Street[4], 1159);
			AddVehicleComponent(Street[4], 1082);
			AddVehicleComponent(Street[4], 1160);
			IsCarTun[2] = 1;
		}
	}
	else if (vehicleid == Street[5]) {
		if (IsCarTun[3] == 0) {
			ChangeVehiclePaintjob(Street[5], 2);
			AddVehicleComponent(Street[5], 1066);
			AddVehicleComponent(Street[5], 1068);
			AddVehicleComponent(Street[5], 1070);
			AddVehicleComponent(Street[5], 1010); //Закись азота
			AddVehicleComponent(Street[5], 1161);
			AddVehicleComponent(Street[5], 1173);
			AddVehicleComponent(Street[5], 1162);
			AddVehicleComponent(Street[5], 1080);
			IsCarTun[3] = 1;
		}
	}
	else if (vehicleid == Street[2]) {
		if (IsCarTun[4] == 0) {
			ChangeVehiclePaintjob(Street[2], 2);
			AddVehicleComponent(Street[2], 1034);
			AddVehicleComponent(Street[2], 1038);
			AddVehicleComponent(Street[2], 1036);
			AddVehicleComponent(Street[2], 1010); //Закись азота
			AddVehicleComponent(Street[2], 1146);
			AddVehicleComponent(Street[2], 1082);
			AddVehicleComponent(Street[2], 1149);
			AddVehicleComponent(Street[2], 1171);
			AddVehicleComponent(Street[2], 1067);
			AddVehicleComponent(Street[2], 1159);
			AddVehicleComponent(Street[2], 1160);
			AddVehicleComponent(Street[2], 1158);
			IsCarTun[4] = 1;
		}
	}
	else if (vehicleid == Street[3]) {
		if (IsCarTun[5] == 0) {
			ChangeVehiclePaintjob(Street[3], 1);
			AddVehicleComponent(Street[3], 1037);
			AddVehicleComponent(Street[3], 1035);
			AddVehicleComponent(Street[3], 1039);
			AddVehicleComponent(Street[3], 1010); //Закись азота
			AddVehicleComponent(Street[3], 1147);
			AddVehicleComponent(Street[3], 1148);
			AddVehicleComponent(Street[3], 1084);
			AddVehicleComponent(Street[3], 1172);
			AddVehicleComponent(Street[3], 1068);
			AddVehicleComponent(Street[3], 1061);
			AddVehicleComponent(Street[3], 1173);
			AddVehicleComponent(Street[3], 1162);
			IsCarTun[4] = 1;
		}
	}
	else if (vehicleid == Street[6]) {
		if (IsCarTun[6] == 0) {
			ChangeVehiclePaintjob(Street[6], 2);
			AddVehicleComponent(Street[6], 1088);
			AddVehicleComponent(Street[6], 1089);
			AddVehicleComponent(Street[6], 1090);
			AddVehicleComponent(Street[6], 1010); //Закись азота
			AddVehicleComponent(Street[6], 1163);
			AddVehicleComponent(Street[6], 1165);
			AddVehicleComponent(Street[6], 1084);
			AddVehicleComponent(Street[6], 1167);
			IsCarTun[6] = 1;
		}
	}
	else if (vehicleid == Street[7]) {
		if (IsCarTun[7] == 0) {
			ChangeVehiclePaintjob(Street[7], 1);
			AddVehicleComponent(Street[7], 1089);
			AddVehicleComponent(Street[7], 1090);
			AddVehicleComponent(Street[7], 1091);
			AddVehicleComponent(Street[7], 1081);
			AddVehicleComponent(Street[7], 1010); //Закись азота
			AddVehicleComponent(Street[7], 1164);
			AddVehicleComponent(Street[7], 1166);
			AddVehicleComponent(Street[7], 1168);
			IsCarTun[7] = 1;
		}
	}
	else if (vehicleid == Street[11]) {
		if (IsCarTun[11] == 0) {
			ChangeVehiclePaintjob(Street[11], 0);
			AddVehicleComponent(Street[11], 1026);
			AddVehicleComponent(Street[11], 1028);
			AddVehicleComponent(Street[11], 1032);
			AddVehicleComponent(Street[11], 1010); //Закись азота
			AddVehicleComponent(Street[11], 1080);
			AddVehicleComponent(Street[11], 1140);
			AddVehicleComponent(Street[11], 1169);
			AddVehicleComponent(Street[11], 1138);
			IsCarTun[11] = 1;
		}
	}
	else if (vehicleid == Street[11]) {
		if (IsCarTun[10] == 0) {
			ChangeVehiclePaintjob(Street[10], 0);
			AddVehicleComponent(Street[10], 1065);
			AddVehicleComponent(Street[10], 1067);
			AddVehicleComponent(Street[10], 1069);
			AddVehicleComponent(Street[10], 1158);
			AddVehicleComponent(Street[10], 1010); //Закись азота
			AddVehicleComponent(Street[10], 1159);
			AddVehicleComponent(Street[10], 1082);
			AddVehicleComponent(Street[10], 1160);
			IsCarTun[10] = 1;
		}
	}
	else if (vehicleid == Street[9]) {
		if (IsCarTun[9] == 0) {
			ChangeVehiclePaintjob(Street[9], 0);
			AddVehicleComponent(Street[9], 1026);
			AddVehicleComponent(Street[9], 1028);
			AddVehicleComponent(Street[9], 1032);
			AddVehicleComponent(Street[9], 1010); //Закись азота
			AddVehicleComponent(Street[9], 1080);
			AddVehicleComponent(Street[9], 1140);
			AddVehicleComponent(Street[9], 1169);
			AddVehicleComponent(Street[9], 1138);
			IsCarTun[9] = 1;
		}
	}
	else if (vehicleid == Street[8]) {
		if (IsCarTun[8] == 0) {
			ChangeVehiclePaintjob(Street[8], 0);
			AddVehicleComponent(Street[8], 1026);
			AddVehicleComponent(Street[8], 1028);
			AddVehicleComponent(Street[8], 1032);
			AddVehicleComponent(Street[8], 1010); //Закись азота
			AddVehicleComponent(Street[8], 1080);
			AddVehicleComponent(Street[8], 1140);
			AddVehicleComponent(Street[8], 1169);
			AddVehicleComponent(Street[8], 1138);
			IsCarTun[8] = 1;
		}
	}
	return true;
}

IsALicCar(carid) {
	if (carid >= Instruc[0] && carid <= Instruc[1]) {
		return true;
	}
	return false;
}

IsARentMoto(carid) {
	if (carid >= RentMoto[0] && carid <= RentMoto[1]) {
		return true;
	}
	return false;
}

IsARentLodki(carid) {
	if (carid >= RentLodki[0] && carid <= RentLodki[1]) {
		return true;
	}
	return false;
}

IsARentCar2(carid) {
	if (carid >= RentSF[0] && carid <= RentSF[1]) {
		return true;
	}
	return false;
}

ServerGivePlayerWeapons(playerid, weaponid, ammo) {
	GunCheckTime[playerid] = 5;
	if (weaponid == 1) {
		Weapon[playerid][wSlot0] += ammo;
	}
	else if (weaponid == 2 || weaponid == 3 || weaponid == 4 || weaponid == 5 || weaponid == 6 || weaponid == 7 || weaponid == 8 || weaponid == 9) {
		Weapon[playerid][wSlot1] += ammo;
	}
	else if (weaponid == 22 || weaponid == 23 || weaponid == 24) {
		Weapon[playerid][wSlot2] += ammo;
	}
	else if (weaponid == 25 || weaponid == 26 || weaponid == 27) {
		Weapon[playerid][wSlot3] += ammo;
	}
	else if (weaponid == 28 || weaponid == 29 || weaponid == 32) {
		Weapon[playerid][wSlot4] += ammo;
	}
	else if (weaponid == 30 || weaponid == 31) {
		Weapon[playerid][wSlot5] += ammo;
	}
	else if (weaponid == 33 || weaponid == 34) {
		Weapon[playerid][wSlot6] += ammo;
	}
	else if (weaponid == 35 || weaponid == 36 || weaponid == 37 || weaponid == 38) {
		Weapon[playerid][wSlot7] += ammo;
	}
	else if (weaponid == 16 || weaponid == 17 || weaponid == 18 || weaponid == 39) {
		Weapon[playerid][wSlot8] += ammo;
	}
	else if (weaponid == 41 || weaponid == 42 || weaponid == 43) {
		Weapon[playerid][wSlot9] += ammo;
	}
	else if (weaponid == 10 || weaponid == 11 || weaponid == 12 || weaponid == 13 || weaponid == 14 || weaponid == 15) {
		Weapon[playerid][wSlot10] += ammo;
	}
	else if (weaponid == 44 || weaponid == 45) {
		Weapon[playerid][wSlot11] += ammo;
	}
	else if (weaponid == 40) {
		Weapon[playerid][wSlot12] = ammo;
	}
	GivePlayerWeapon(playerid, weaponid, ammo);
}

CheckWeapon(playerid) {
	if (GunCheckTime[playerid] == 0) {
		new weaponid, ammo;
		for (new i = 0; i < 13; i++) {
			GetPlayerWeaponData(playerid, i, weaponid, ammo);
			if (weaponid == 1) {
				if (Weapon[playerid][wSlot0] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot0] = ammo;
				}
			}
			else if (weaponid == 2 || weaponid == 3 || weaponid == 4 || weaponid == 5 || weaponid == 6 || weaponid == 7 || weaponid == 8 || weaponid == 9) {
				if (Weapon[playerid][wSlot1] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot1] = ammo;
				}
			}
			else if (weaponid == 22 || weaponid == 23 || weaponid == 24) {
				if (Weapon[playerid][wSlot2] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot2] = ammo;
				}
			}
			else if (weaponid == 25 || weaponid == 26 || weaponid == 27) {
				if (Weapon[playerid][wSlot3] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot3] = ammo;
				}
			}
			else if (weaponid == 28 || weaponid == 29 || weaponid == 32) {
				if (Weapon[playerid][wSlot4] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot4] = ammo;
				}
			}
			else if (weaponid == 30 || weaponid == 31) {
				if (Weapon[playerid][wSlot5] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot5] = ammo;
				}
			}
			else if (weaponid == 33 || weaponid == 34) {
				if (Weapon[playerid][wSlot6] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot6] = ammo;
				}
			}
			else if (weaponid == 35 || weaponid == 36 || weaponid == 37 || weaponid == 38) {
				if (Weapon[playerid][wSlot7] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot7] = ammo;
				}
			}
			else if (weaponid == 16 || weaponid == 17 || weaponid == 18 || weaponid == 39) {
				if (Weapon[playerid][wSlot8] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot8] = ammo;
				}
			}
			else if (weaponid == 41 || weaponid == 42 || weaponid == 43) {
				if (Weapon[playerid][wSlot9] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot9] = ammo;
				}
			}
			else if (weaponid == 10 || weaponid == 11 || weaponid == 12 || weaponid == 13 || weaponid == 14 || weaponid == 15) {
				if (Weapon[playerid][wSlot10] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot10] = ammo;
				}
			}
			else if (weaponid == 44 || weaponid == 45) {
				if (Weapon[playerid][wSlot11] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot11] = ammo;
				}
			}
			else if (weaponid == 40) {
				if (Weapon[playerid][wSlot12] < ammo) {
					GunCheat(playerid);
				}
				else {
					Weapon[playerid][wSlot12] = ammo;
				}
			}
		}
	}
	else {
		GunCheckTime[playerid]--;
	}
}

GunCheat(playerid) {
	SendClientMessage(playerid, COLOR_LIGHTRED, "Ты был(а) кикнут(а) сервером. Причина: Подозрение на читы.");
	ServerResetPlayerWeapons(playerid);
	Kick(playerid);
	TogglePlayerControllable(playerid, 0);
}

ServerResetPlayerWeapons(playerid) {
	GunCheckTime[playerid] = 5;
	SafeResetPlayerWeapons(playerid);
	GunCheckTime[playerid] = 5;
	Weapon[playerid][wSlot0] = 0;
	Weapon[playerid][wSlot1] = 0;
	Weapon[playerid][wSlot2] = 0;
	Weapon[playerid][wSlot3] = 0;
	Weapon[playerid][wSlot4] = 0;
	Weapon[playerid][wSlot5] = 0;
	Weapon[playerid][wSlot6] = 0;
	Weapon[playerid][wSlot7] = 0;
	Weapon[playerid][wSlot8] = 0;
	Weapon[playerid][wSlot9] = 0;
	Weapon[playerid][wSlot10] = 0;
	Weapon[playerid][wSlot11] = 0;
	Weapon[playerid][wSlot12] = 0;
}

IsAnInstructor(playerid) {
	if (IsPlayerConnected(playerid)) {
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if (member == 11) {
			return true;
		}
		if (leader == 11) {
			return true;
		}
	}
	return false;
}

IsAnTaxi(playerid) {
	if (IsPlayerConnected(playerid)) {
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if (member == 10) {
			return true;
		}
		if (leader == 10) {
			return true;
		}
	}
	return false;
}

IsAMember(playerid) {
	if (IsPlayerConnected(playerid)) {
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if (member == 5 || member == 6 || member == 12 || member == 13 || member == 14 || member == 15 || member == 16 || member == 18 || member == 19 || member == 20) {
			return true;
		}
		if (leader == 5 || leader == 6 || leader == 12 || leader == 13 || leader == 14 || leader == 15 || leader == 16 || leader == 18 || leader == 19 || leader == 20) {
			return true;
		}
	}
	return false;
}

IsACop(playerid) {
	if (IsPlayerConnected(playerid)) {
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3) {
			return true;
		}
		else if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3) {
			return true;
		}
	}
	return false;
}

InitDraws() {
	lbt = TextDrawCreate(-2.000000, 1.000000, "---");
	lbb = TextDrawCreate(0.000000, 337.000000, "---");
	TextDrawUseBox(lbt, 1);
	TextDrawBoxColor(lbt, 0x000000ff);
	TextDrawTextSize(lbt, 640.000000, -69.000000);
	TextDrawUseBox(lbb, 1);
	TextDrawBoxColor(lbb, 0x000000ff);
	TextDrawTextSize(lbb, 638.000000, -60.000000);
	TextDrawAlignment(lbt, 0);
	TextDrawAlignment(lbb, 0);
	TextDrawBackgroundColor(lbt, 0x000000ff);
	TextDrawBackgroundColor(lbb, 0x000000ff);
	TextDrawFont(lbt, 3);
	TextDrawLetterSize(lbt, 1.000000, 12.199999);
	TextDrawFont(lbb, 3);
	TextDrawLetterSize(lbb, 0.899999, 15.000000);
	TextDrawColor(lbt, 0x000000ff);
	TextDrawColor(lbb, 0x000000ff);
	TextDrawSetOutline(lbt, 1);
	TextDrawSetOutline(lbb, 1);
	TextDrawSetProportional(lbt, 1);
	TextDrawSetProportional(lbb, 1);
	TextDrawSetShadow(lbt, 1);
	TextDrawSetShadow(lbb, 1);
	Junked = TextDrawCreate(0.0000, 0.0000, "_");
	TextDrawAlignment(Junked, 0);
	TextDrawUseBox(Junked, 1);
	TextDrawSetProportional(Junked, true);
	TextDrawLetterSize(Junked, 600.0, 600.0);
	TextDrawColor(Junked, 0xC2A2DAAA);
	Lightoff = TextDrawCreate(0.0000, 0.0000, "_");
	TextDrawUseBox(Lightoff, 1);
	TextDrawBoxColor(Lightoff, 0x5a585822);
	TextDrawTextSize(Lightoff, 1500.000000, 1500.000000);
	TextDrawAlignment(Lightoff, 0);
	TextDrawBackgroundColor(Lightoff, 0x5a585822);
	TextDrawFont(Lightoff, 1);
	TextDrawLetterSize(Lightoff, 1500.0, 1500.0);
	TextDrawColor(Lightoff, 0x5a585822);
	TextDrawSetOutline(Lightoff, 1);
	TextDrawSetProportional(Lightoff, 1);
	return true;
}

IsAtGasStation(playerid) {
	if (IsPlayerInRangeOfPoint(playerid, 6.0, 1004.0070, -939.3102, 42.1797) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 1944.3260, -1772.9254, 13.3906) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -90.5515, -1169.4578, 2.4079) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1609.7958, -2718.2048, 48.5391) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -2029.4968, 156.4366, 28.9498) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -2408.7590, 976.0934, 45.4175) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -2243.9629, -2560.6477, 31.8841) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1676.6323, 414.0262, 6.9484) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 2202.2349, 2474.3494, 10.5258) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 614.9333, 1689.7418, 6.6968) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1328.8250, 2677.2173, 49.7665) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 70.3882, 1218.6783, 18.5165) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 652.4594, -563.8021, 16.0755) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1471.7528, 1864.5348, 32.3766) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 2113.7390, 920.1079, 10.5255) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1327.7218, 2678.8723, 50.0625) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 2146.7600, 2747.9089, 10.8203) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, -1327.7218, 2678.8723, 50.0625) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 2639.6416, 1106.3503, 10.6137) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 1383.1005, 462.3177, 19.9316) ||
		IsPlayerInRangeOfPoint(playerid, 6.0, 1594.6074, 2198.5703, 10.5912)) {
		return true;
	}
	else {
		return false;
	}
}

IsAtFishPlace(playerid) {
	if (IsPlayerConnected(playerid)) {
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 403.8266, -2088.7598, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 398.7553, -2088.7490, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 396.2197, -2088.6692, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 391.1094, -2088.7976, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 383.4157, -2088.7849, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 374.9598, -2088.7979, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 369.8107, -2088.7927, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 367.3637, -2088.7925, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 362.2244, -2088.7981, 7.8359) ||
			IsPlayerInRangeOfPoint(playerid, 1.0, 354.5382, -2088.7979, 7.8359)) {
			return true;
		}
		else {
			return false;
		}
	}
	return false;
}

IsAtCookPlace(playerid) {
	if (IsPlayerConnected(playerid)) {
		if (IsPlayerInRangeOfPoint(playerid, 20, 369.9786, -4.0798, 1001.8589) ||
			IsPlayerInRangeOfPoint(playerid, 20, 376.4466, -60.9574, 1001.5078) ||
			IsPlayerInRangeOfPoint(playerid, 20, 378.1215, -57.4928, 1001.5078) ||
			IsPlayerInRangeOfPoint(playerid, 20, 374.1185, -113.6361, 1001.4922) ||
			IsPlayerInRangeOfPoint(playerid, 20, 377.7971, -113.7668, 1001.4922)) {
			return true;
		}
		else {
			return false;
		}
	}
	return false;
}

IsASprank(playerid) {
	if (IsPlayerInRangeOfPoint(playerid, 2, 1170.2469, -1318.2981, -0.8598) || IsPlayerInRangeOfPoint(playerid, 2, 1170.3910, -1319.6741, -0.8598)) {
		return true;
	}
	else {
		return false;
	}
}

IsAGunCop(playerid) {
	if (IsPlayerInRangeOfPoint(playerid, 15.0, 1580.3419, -1634.6920, 13.5615) || IsPlayerInRangeOfPoint(playerid, 15.0, -1616.4886, 685.6258, 7.1875) || IsPlayerInRangeOfPoint(playerid, 15.0, -1515.2664, 479.2319, 7.1903)) {
		return true;
	}
	else {
		return false;
	}
}

IsAtBankomat(playerid) {
	if (IsPlayerInRangeOfPoint(playerid, 1.0, 1466.997, -1749.861, 15.347) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 395.909, -1806.810, 7.740) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -544.6487, -506.0907, 25.5234) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 585.873, -1250.889, 17.942) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 233.486, -1161.421, 25.793) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 1955.487, -2179.657, 13.449) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -78.944, -1172.451, 2.031) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -2028.6999511719, -98.300003051758, 35.75) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -2445.530, 511.268, 29.748) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -1737.280, 963.406, 24.793) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -1496.236, 925.622, 7.090) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -2633.314, 1400.334, 7.002) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -2483.072, 2408.321, 17.012) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -1389.344, 2631.440, 55.887) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -865.685, 1536.474, 22.489) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -312.756, 1306.884, 53.491) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 1672.546, 1444.965, 10.690) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2023.113, 1017.646, 10.722) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2197.015, 1670.104, 12.269) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2299.687, 2432.503, 10.722) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2232.6746, -1161.5112, 25.8906) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2105.7214, 2495.4597, -1.9938) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 1089.3752, -790.9171, 107.3558) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 1921.2998046875, 1026.5, 568.5) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 2323.9106, -1015.7557, 1054.7111) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 809.8827, -1355.9821, 13.5425) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, -1981.2678, 110.6273, 27.6799) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 1568.4078, -1326.3173, 16.4844)) {
		return true;
	}
	else {
		return false;
	}
}

IsABoat(carid) {
	new model = GetVehicleModel(carid);
	if (model == 430 || model == 446 || model == 452 || model == 453 || model == 454 || model == 472 || model == 473 || model == 484 || model == 493 || model == 539) {
		return true;
	}
	return false;
}

IsAMotoVeh(carid) {
	new model = GetVehicleModel(carid);
	if (model == 461 || model == 463 || model == 468 || model == 471 || model == 521 || model == 522 || model == 523 || model == 581 || model == 586) {
		return true;
	}
	return false;
}

IsAPlane(carid) { // Самолёты,вертолёты
	new mode = GetVehicleModel(carid);
	if (mode == 417 || mode == 425 || mode == 447 || mode == 460 || mode == 469 || mode == 476 || mode == 487 || mode == 488 || mode == 497 || mode == 511 || mode == 512 || mode == 513 || mode == 519 || mode == 520 || mode == 548 || mode == 553 || mode == 563 || mode == 577 || mode == 592 || mode == 593) {
		return true;
	}
	return false;
}

IsACopCar(carid) {//Транспорт Копов
	if (carid >= copcar[0] && carid <= copcar[1] || carid >= fbicar[0] && carid <= fbicar[1] || carid >= armycar[0] && carid <= armycar[1]) {
		return true;
	}
	return false;
}

IsABMX(carid) {
	new model = GetVehicleModel(carid);
	if (model == 481 || model == 510 || model == 509) {
		return true;
	}
	return false;
}

IsAMoped(carid) {
	new model = GetVehicleModel(carid);
	if (model == 586 || model == 462) {
		return true;
	}
	return false;
}

IsAnAmbulance(carid) {
	if (carid >= M4C[0] && carid <= M4C[1]) {
		return true;
	}
	return false;
}

IsATruck(carid) {
	if ((carid >= Truck[0] && carid <= Truck[3]) || (carid >= Truck[4] && carid <= Truck[6]) || (carid >= Truck[7] && carid <= Truck[9]) || (carid >= Truck[10] && carid <= Truck[11])) {
		return true;
	}
	return false;
}

public OnPlayerConnect(playerid) {
	if (IsPlayerNPC(playerid)) {
		return true;
	}
	PlayerOnJob[playerid] = false;
	PlayerStartJob[playerid] = false;
	GetPlayerMetall[playerid] = 0;
	AllPlayerMetall[playerid] = 0;
	GetPlayerMetallEx[playerid] = 0;
	AllPlayerMetallEx[playerid] = 0;
	ExtraMetall[playerid] = 0;
	PlayAudioStreamForPlayer(playerid, "http://cs6295.userapi.com/u123463111/docs/6eb5c31dea7d/by_nikitqa.mp3?dl=1");
	DmZona[playerid] = 0;
	MedicCP[playerid] = 0;
	gPlayerAccount[playerid] = 0;
	WrongPassword[playerid] = 0;
	Spawned[playerid] = 0;
	GunCheckTime[playerid] = 0;
	new PlName[MAX_PLAYER_NAME], count;
	GetPlayerName(playerid, PlName, sizeof(PlName));
	for (new i; i < strlen(PlName); i++) {
		if (PlName[i] >= '0' && PlName[i] <= '9') {
			count++;
			if (count >= 5) {
				SendClientMessage(playerid, COLOR_WHITE, "Регистрация подобных никнеймов {F42D2D}запрещена!");
				Kick(playerid);
				break;
			}
		}
	}
	ServerResetPlayerWeapons(playerid);
	GetBan(playerid);
	// Колесо обозрения
	RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.5);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 50);
	RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.5);
	RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.5);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 50);
	// репортёры
	RemoveBuildingForPlayer(playerid, 1415, 732.8516, -1332.8984, 12.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 732.7266, -1341.7734, 12.6328, 0.25);
	// армия
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	// грув
	RemoveBuildingForPlayer(playerid, 3594, 2514.3906, -1658.6016, 13.1406, 0.25);
	// лв склад
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2558.0703, 2820.3594, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2558.0703, 2820.3594, 10.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2564.9141, 2823.6484, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2564.9141, 2823.6484, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2563.2734, 2837.0156, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2563.2734, 2837.0234, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2561.0703, 2840.3281, 10.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2561.0703, 2840.3281, 10.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2594.5859, 2821.3750, 11.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2594.5938, 2821.3750, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2590.6328, 2815.5938, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2590.6328, 2815.5938, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2596.5469, 2820.4297, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2596.5469, 2820.4297, 11.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 961, 2608.7969, 2806.9063, 11.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 960, 2608.7969, 2806.9063, 11.1641, 0.25);
	// Аммо СФ -2
	RemoveBuildingForPlayer(playerid, 713, -1920.1875, 882.1953, 34.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 10285, -1899.1563, 1476.7891, 5.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, -1928.0469, 875.3984, 37.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1926.3750, 878.5234, 34.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 673, -1927.5313, 888.5625, 34.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, -1928.0469, 892.7266, 37.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 9958, -1899.1563, 1476.7891, 5.7422, 0.25);
	// Респ яков
	RemoveBuildingForPlayer(playerid, 10252, -2175.7578, 661.9219, 50.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 3036, -2176.36, 662.50, 49.76, 20);
	// Респ РМ
	RemoveBuildingForPlayer(playerid, 1227, -2524.0625, 2353.1250, 4.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -2503.3125, 2341.3672, 4.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -2503.0703, 2364.2188, 4.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -2503.0469, 2368.0469, 4.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -2506.6953, 2369.6641, 4.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -2455.3750, -143.8750, 26.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -2455.3516, -138.0156, 26.0156, 0.25);
	// респ рифа
	RemoveBuildingForPlayer(playerid, 1227, -2455.3750, -143.8750, 26.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -2455.3516, -138.0156, 26.0156, 0.25);
	// респ вагос
	RemoveBuildingForPlayer(playerid, 1530, 2820.3438, -1190.9766, 25.6719, 0.25);
	// респ ЛКН
	RemoveBuildingForPlayer(playerid, 1530, 1118.9063, -2008.2422, 75.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 951, 1104.1641, -2060.7656, 68.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 951, 1082.7969, -2034.7656, 68.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 951, 1209.9141, -2065.5781, 68.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 951, 1103.8828, -2011.9688, 68.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 951, 1209.6328, -2008.5469, 68.6484, 0.25);
	// кафе ЛС
	RemoveBuildingForPlayer(playerid, 1340, 388.8594, -2071.6641, 7.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2061.9531, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1529, 399.0078, -2066.8828, 11.2344, 0.25);
	// улица
	RemoveBuildingForPlayer(playerid, 1349, -2490.0781, 757.1875, 34.7500, 0.25); //уборщики улиц
	RemoveBuildingForPlayer(playerid, 1440, 1141.9844, -1346.1094, 13.2656, 0.25); //коробки для гонки
	// Яки стандартные объекты
	RemoveBuildingForPlayer(playerid, 1349, -2209.3516, 626.4141, 49.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1349, -2209.3516, 632.1563, 49.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1349, -2209.0391, 634.2031, 49.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2193.7734, 605.1875, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2194.0234, 613.4063, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2197.5859, 613.4063, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2181.4766, 613.7031, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1342, -2187.1484, 614.5469, 35.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1570, -2198.9766, 636.7109, 49.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1570, -2195.4063, 636.7109, 49.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1349, -2191.9766, 637.7891, 49.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1570, -2189.5547, 636.7109, 49.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1570, -2183.7813, 636.7109, 49.6953, 0.25);
	AdminPm[playerid] = 0;
	pInvite[playerid] = 999;
	PlayerSpectateID[playerid] = -1;
	PlayerSpec[playerid] = -1;
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	if (Security != 0){
		gActivePlayers[playerid]++;
		numplayers++;
		PlayerAFKtime[playerid] = 0;
		HidePM[playerid] = 0;
		OnWeapon[playerid] = 0;
		Rekl[playerid] = 1;
		ChosenSkin[playerid] = 0;
		GettingJob[playerid] = 0;
		ApprovedLawyer[playerid] = 0;
		CallLawyer[playerid] = 0;
		WantLawyer[playerid] = 0;
		KickPlayer[playerid] = 0;
		CurrentMoney[playerid] = 0;
		UsedFind[playerid] = 0;
		CP[playerid] = 0;
		Robbed[playerid] = 0;
		SpawnChange[playerid] = 1;
		CarOffer[playerid] = 999;
		CarPrice[playerid] = 0;
		CarID[playerid] = 0;
		CarCalls[playerid] = 0;
		RobbedTime[playerid] = 0;
		MoneyMessage[playerid] = 0;
		Condom[playerid] = 0;
		Rope[playerid] = 0;
		STDPlayer[playerid] = 0;
		An[playerid] = 0;
		statt[playerid] = 0;
		gPlayerLogged[playerid] = 0;
		opros[playerid] = 0;
		RepairOffer[playerid] = 999;
		RepairPrice[playerid] = 0;
		RepairCar[playerid] = 0;
		TalkingLive[playerid] = 255;
		LiveOffer[playerid] = 999;
		TakingLesson[playerid] = 0;
		RefillOffer[playerid] = 999;
		RefillPrice[playerid] = 0;
		MapIconsShown[playerid] = 0;
		DrugOffer[playerid] = 999;
		PlayerCuffed[playerid] = 0;
		PlayerCuffedTime[playerid] = 0;
		DrugPrice[playerid] = 0;
		OnCK[playerid] = 999;
		GettingCK[playerid] = 999;
		Playerderbi[playerid] = 0;
		DrugGram[playerid] = 0;
		ConnectedToPC[playerid] = 0;
		OrderReady[playerid] = 0;
		JailPrice[playerid] = 0;
		MedicTime[playerid] = 0;
		MedicBill[playerid] = 0;
		GotHit[playerid] = 0;
		GoChase[playerid] = 999;
		GetChased[playerid] = 999;
		keyss[playerid] = 0;
		OnDuty[playerid] = 0;
		SchoolSpawn[playerid] = 0;
		kusachki[playerid] = 0;
		nabor[playerid] = 0;
		SafeTime[playerid] = 60;
		TransportDuty[playerid] = 0;
		PlayerTied[playerid] = 0;
		TaxiCallTime[playerid] = 0;
		MedicCallTime[playerid] = 0;
		MechanicCallTime[playerid] = 0;
		FindTimePoints[playerid] = 0;
		FindTime[playerid] = 0;
		JobDuty[playerid] = 0;
		Music[playerid] = 0;
		zakaz[playerid] = 0;
		prinyal[playerid] = 0;
		otmuchka[playerid] = 0;
		Spectate[playerid] = 255;
		PlayerDrunk[playerid] = 0;
		PlayerDrunkTime[playerid] = 0;
		Unspec[playerid][sLocal] = 255;
		FishCount[playerid] = 0;
		WireTransferId[playerid] = 0;
		WritingPaper[playerid] = 0;
		WritingPaperNumber[playerid] = 999;
		WritingLine[playerid] = 0;
		BringingPaper[playerid] = 0;
		GotPaper[playerid] = 0;
		PaperOffer[playerid] = 999;
		ConsumingMoney[playerid] = 0;
		gLastCar[playerid] = 0;
		FirstSpawn[playerid] = 0;
		gOoc[playerid] = 0;
		gNews[playerid] = 0;
		BigEar[playerid] = 0;
		gFam[playerid] = 0;
		gSpeedo[playerid] = 0;
		gGas[playerid] = 1;
		gPlayerLogTries[playerid] = 0;
		gPlayerSpawned[playerid] = 0;
		PlayerTazeTime[playerid] = 0;
		PlayerStoned[playerid] = 0;
		virtik[playerid] = 0;
		TicketOffer[playerid] = 999;
		TicketMoney[playerid] = 0;
		MatsHolding[playerid] = 0;
		TutTime[playerid] = 0;
		TaxiAccepted[playerid] = 999;
		PlayerInfo[playerid][pCash] = 0;
		NoFuel[playerid] = 0;
		HireCar[playerid] = 299;
		TransportValue[playerid] = 0;
		TransportMoney[playerid] = 0;
		TransportTime[playerid] = 0;
		TransportCost[playerid] = 0;
		TransportDriver[playerid] = 999;
		MissionCheckpoint[playerid] = 0;
		togdep[playerid] = 0;
		RegistrationStep[playerid] = 0;
		Fishes[playerid][pLastFish] = 0;
		Fishes[playerid][pFishID] = 0;
		ProposeOffer[playerid] = 999;
		MarryWitness[playerid] = 999;
		MarryWitnessOffer[playerid] = 999;
		MarriageCeremoney[playerid] = 0;
		ProposedTo[playerid] = 999;
		GotProposedBy[playerid] = 999;
		DivorceOffer[playerid] = 999;
		UsingDrugs[playerid] = 0;
		ChangeOffer[playerid] = 999;
		ChangeCost[playerid] = 0;
		ChangeNumber[playerid] = 0;
		GunOffer[playerid] = 999;
		GunDPrice[playerid] = 0;
		GunType[playerid] = 0;
		GunAmmo[playerid] = 0;
		tazer[playerid] = 0;
		PlayerFishTimer[playerid] = 0;
		PlayerInfo[playerid][pNarcoLomka] = 0;
		PlayerInfo[playerid][pNarcoZavisimost] = 0;
		PlayerLomkaTime[playerid] = 0;
		PlayerMayNarco[playerid] = 0;
		ZonaKill[playerid] = 0;
		PlayerInfo[playerid][pBlockeds] = 0;
		PlayerInfo[playerid][pLevel] = 0;
		PlayerInfo[playerid][pWarns] = 0;
		PlayerInfo[playerid][pWanted] = 0;
		PlayerInfo[playerid][pAdmin] = 0;
		PlayerInfo[playerid][pDonateRank] = 0;
		PlayerInfo[playerid][pFlatKey] = 0;
		PlayerInfo[playerid][gPupgrade] = 0;
		PlayerInfo[playerid][pConnectTime] = 0;
		PlayerInfo[playerid][pReg] = 0;
		PlayerInfo[playerid][pSex] = 0;
		PlayerInfo[playerid][pAge] = 0;
		PlayerInfo[playerid][pNoFree] = 0;
		PlayerInfo[playerid][pOrigin] = 0;
		PlayerInfo[playerid][pExp] = 0;
		PlayerInfo[playerid][pAccount] = 0;
		PlayerInfo[playerid][pClock] = 0;
		PlayerInfo[playerid][pCrimes] = 0;
		PlayerInfo[playerid][pDeaths] = 0;
		PlayerInfo[playerid][pWantedDeaths] = 0;
		PlayerInfo[playerid][pLottoNr] = 0;
		PlayerInfo[playerid][pFishes] = 0;
		PlayerInfo[playerid][pBiggestFish] = 0;
		PlayerInfo[playerid][pJob] = 0;
		PlayerInfo[playerid][pDice] = 0;
		PlayerInfo[playerid][pPayCheck] = 0;
		PlayerInfo[playerid][pHeadValue] = 0;
		PlayerInfo[playerid][pJailed] = 0;
		PlayerInfo[playerid][pZapret] = 0;
		PlayerInfo[playerid][pJailTime] = 0;
		PlayerInfo[playerid][pMats] = 0;
		PlayerInfo[playerid][pDrugs] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pFMember] = 255;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pChar] = 0;
		PlayerInfo[playerid][pContractTime] = 0;
		PlayerInfo[playerid][pDetSkill] = 0;
		PlayerInfo[playerid][pDrochSkill] = 0;
		PlayerInfo[playerid][pGunSkill] = 0;
		PlayerInfo[playerid][pDalnoboiSkill] = 0;
		PlayerInfo[playerid][pLawSkill] = 0;
		PlayerInfo[playerid][pMechSkill] = 0;
		PlayerInfo[playerid][pJackSkill] = 0;
		PlayerInfo[playerid][pFs] = 0;
		PlayerInfo[playerid][pGromilaSkill] = 0;
		PlayerInfo[playerid][pCarSkill] = 0;
		PlayerInfo[playerid][pNewsSkill] = 0;
		PlayerInfo[playerid][pDrugsSkill] = 0;
		PlayerInfo[playerid][pCookSkill] = 0;
		PlayerInfo[playerid][pFishSkill] = 0;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pForce] = 0;
		HouseEntered[playerid] = 255;
		PlayerInfo[playerid][pPos_x] = 2246.6;
		PlayerInfo[playerid][pPos_y] = -1161.9;
		PlayerInfo[playerid][pPos_z] = 1029.7;
		PlayerInfo[playerid][pVirWorld] = 0;
		PlayerInfo[playerid][pInt] = 15;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pHelper] = 0;
		PlayerInfo[playerid][pVipTime] = 0;
		PlayerInfo[playerid][pRobKey] = 0;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pPhousekey] = 0;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pCarLic] = 0;
		PlayerInfo[playerid][pMotoLic] = 0;
		PlayerInfo[playerid][pFlyLic] = 0;
		PlayerInfo[playerid][pBoatLic] = 0;
		PlayerInfo[playerid][pFishLic] = 0;
		PlayerInfo[playerid][pGunLic] = 0;
		PlayerInfo[playerid][pCarTime] = 0;
		PlayerInfo[playerid][pMusorTime] = 0;
		PlayerInfo[playerid][pRobTime] = 0;
		PlayerInfo[playerid][pCleanTime] = 0;
		PlayerInfo[playerid][pTruckTime] = 0;
		PlayerInfo[playerid][pPayDay] = 0;
		PlayerInfo[playerid][pPayDayHad] = 0;
		PlayerInfo[playerid][pLoses] = 0;
		PlayerInfo[playerid][pAlcoholPerk] = 0;
		PlayerInfo[playerid][pDrugPerk] = 0;
		PlayerInfo[playerid][pMiserPerk] = 0;
		PlayerInfo[playerid][pPainPerk] = 0;
		PlayerInfo[playerid][pTraderPerk] = 0;
		PlayerInfo[playerid][pTut] = 0;
		PlayerInfo[playerid][pFuel] = 0;
		PlayerInfo[playerid][pAdjustable] = 0;
		PlayerInfo[playerid][pVirtualWorld] = 0;
		PlayerMayAlco[playerid] = 0;
		uTarget[playerid] = 999;
		tietime[playerid] = 0;
		PlayerInfo[playerid][pMutedTime] = 0;
		PlayerInfo[playerid][pCard] = 0;
		PlayerInfo[playerid][pRadio] = 0;
		PlayerInfo[playerid][pRope] = 0;
		PlayerInfo[playerid][pNeSdal] = 0;
		PlayerInfo[playerid][ptMoney] = 0;
		PlayerInfo[playerid][ptDrugs] = 0;
		PlayerInfo[playerid][pTkDrugs] = 0;
		PlayerInfo[playerid][ptMats] = 0;
		PlayerInfo[playerid][pTkMats] = 0;
		PlayerInfo[playerid][pMask] = 0;
		PlayerInfo[playerid][pHmed] = 0;
		Medicines[playerid] = 0;
		JobCis[playerid] = 0;
		PlayerFoodSlot[playerid] = 0;
		OOCChat[playerid] = 0;
		ClearCrime(playerid);
		ClearFishes(playerid);
		ClearCooking(playerid);
		ClearGroceries(playerid);
		ClearMarriage(playerid);
		SetPlayerColor(playerid, COLOR_GRAD2);
		SM_HA[playerid] = TextDrawCreate(130.000000, 372.000000, "_");
		TextDrawAlignment(SM_HA[playerid], 0);
		TextDrawBackgroundColor(SM_HA[playerid], 0x000000ff);
		TextDrawFont(SM_HA[playerid], 1);
		TextDrawLetterSize(SM_HA[playerid], 0.500000, 1.5);
		TextDrawColor(SM_HA[playerid], 0xffffffff);
		TextDrawSetOutline(SM_HA[playerid], 1);
		TextDrawSetProportional(SM_HA[playerid], 1);
		TextDrawSetShadow(SM_HA[playerid], 1);
		levelexpp[playerid] = TextDrawCreate(495.000000, 3.500000, "_");
		TextDrawAlignment(levelexpp[playerid], 0);
		TextDrawBackgroundColor(levelexpp[playerid], 0x000000ff);
		TextDrawFont(levelexpp[playerid], 1);
		TextDrawLetterSize(levelexpp[playerid], 0.38, 2.000000);
		TextDrawColor(levelexpp[playerid], 0xffffffff);
		TextDrawSetOutline(levelexpp[playerid], 0);
		TextDrawSetProportional(levelexpp[playerid], 2);
		TextDrawSetShadow(levelexpp[playerid], 2);
		TextDrawShowForPlayer(playerid, levelexpp[playerid]);
		new sendername[MAX_PLAYER_NAME];
		new string7[144];
		new ipplayer[256];
		GetPlayerIp(playerid, ipplayer, sizeof(ipplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string7, sizeof(string7), "{33FF00}» {FFFFFF}Подключился игрок: {33FF00}%s[%d]{FFFFFF}. IP:{33FF00} %s{FFFFFF}.", sendername, playerid, ipplayer);
		ABroadCast(COLOR_WHITE, string7, 1);
		TextDrawShowForPlayer(playerid, Textdraw0);
		TextDrawShowForPlayer(playerid, Textdraw1);
		TextDrawShowForPlayer(playerid, Textdraw2);
		new PlayerIP[16];
		GetPlayerIp(playerid, PlayerIP, sizeof(PlayerIP));
		new UnBanTime = CheckTimeBanList(PlayerIP);
		if (UnBanTime - GetTimeStamp() > 0) {
			new ubDay, ubHour, ubMin, ubSec, ubMSec;
			timeconvert((UnBanTime - GetTimeStamp()) * 1000, ubMin, ubSec, ubMSec);
			ubHour = ubMin / 60;
			ubMin = ubMin % 60;
			ubDay = ubHour / 24;
			ubHour = ubHour % 24;
			new UnBanTimeStr[256];
			format(UnBanTimeStr, sizeof(UnBanTimeStr), "{00C0FF}YourWorld{FFFFFF} : Вы забанены, осталось %d дней %d часов %d минут и %d секунд.", ubDay, ubHour, ubMin, ubSec);
			SendClientMessage(playerid, COLOR_LIGHTRED, UnBanTimeStr);
			Kick(playerid);
			TogglePlayerControllable(playerid, 0);
			return true;
		}
		new plname[MAX_PLAYER_NAME];
		new string[256];
		GetPlayerName(playerid, plname, sizeof(plname));
		format(string, sizeof(string), "players/%s.ini", plname);
		if (fexist(string)) {
			gPlayerAccount[playerid] = 1; //авториз.
		}
		else {
			gPlayerAccount[playerid] = 0;
		}
	}
	return true;
}

forward bax(playerid);
public bax(playerid) {
	CreateExplosion(xf + 3, yf - 5, zf, 10, 10.0);
	CreateExplosion(xf + 7, yf - 7, zf, 10, 10.0);
	CreateExplosion(xf + 10, yf - 10, zf, 10, 10.0);
	CreateExplosion(xf + 5, yf + 7, zf, 10, 10.0);
	CreateExplosion(xf - 8, yf + 3, zf, 10, 10.0);
	SetPVarInt(playerid, "Use", 0);
	statt[playerid] = 0;
	return 0;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	new vasya = dialogid;
	new string[255];
	if (strfind(inputtext, "|0", true) != -1) {
		Kick(playerid);
		return true;
	}
	for (new i; i < strlen(inputtext); i++) {
		if (inputtext[i] == 34 || inputtext[i] == 92) {
			Kick(playerid);
			return true;
		}
	}
	while (strfind(inputtext, "%", true) != -1) {
		inputtext[strfind(inputtext, "%", true)] = '#';
	}
	if (IsPlayerNPC(playerid)) {
		return true;
	}
	if (dialogid == 2419) {
		if (response) {
			zakaz[playerid] = prinyal[playerid];
			SendClientMessage(playerid, -1, " Найдите заказанное авто и привезите его нам. Для того, чтобы узнать ID авто введите: /dl.");
		}
	}
	if (dialogid == 2412) {
		if (response) {
			ShowPlayerDialog(playerid, 2415, DIALOG_STYLE_LIST, "Центр занятости", "[1] Детектив\n[2] Адвокат\n[3] Дальнобойщик\n[4] Продавец наркотиков\n[5] Угонщик автомобилей\n[6] Карманник\n[7] Автомеханик\n[8] Продавец оружия\n[9] Продавец автомобилей\n[10] Разносчик газет\n[11] Вышибала", "Выбрать", "Отмена");
		}
		else {
			ShowPlayerDialog(playerid, 2416, DIALOG_STYLE_MSGBOX, "Центр занятости", "Вы уверены,что хотите уволиться с работы?", "Да", "Нет");
		}
	}
	if (dialogid == 2415) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 3 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 3 || PlayerInfo[playerid][pMember] >= 5 && PlayerInfo[playerid][pMember] <= 8 || PlayerInfo[playerid][pLeader] >= 5 && PlayerInfo[playerid][pLeader] <= 8 || PlayerInfo[playerid][pMember] >= 11 && PlayerInfo[playerid][pMember] <= 20 || PlayerInfo[playerid][pLeader] >= 11 && PlayerInfo[playerid][pLeader] <= 20) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу детектива.");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 2) {
					error(playerid, "Устроиться на эту работу можно с 2lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 3 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 3 || PlayerInfo[playerid][pMember] >= 5 && PlayerInfo[playerid][pMember] <= 8 || PlayerInfo[playerid][pLeader] >= 5 && PlayerInfo[playerid][pLeader] <= 8 || PlayerInfo[playerid][pMember] >= 11 && PlayerInfo[playerid][pMember] <= 20 || PlayerInfo[playerid][pLeader] >= 11 && PlayerInfo[playerid][pLeader] <= 20) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 2;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу адвоката.");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 2) {
					error(playerid, "Устроиться на эту работу можно с 2lvl.");
					return true;
				}
				PlayerInfo[playerid][pJob] = 3;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу дальнобойщика.");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 4 || PlayerInfo[playerid][pMember] >= 8 && PlayerInfo[playerid][pMember] <= 10 || PlayerInfo[playerid][pLeader] >= 8 && PlayerInfo[playerid][pLeader] <= 10 || PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] < 1) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 4;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу наркодиллера.");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 2) {
					error(playerid, "Устроиться на эту работу можно с 2lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 4 || PlayerInfo[playerid][pMember] >= 9 && PlayerInfo[playerid][pMember] <= 10 || PlayerInfo[playerid][pLeader] >= 9 && PlayerInfo[playerid][pLeader] <= 10) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 5;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу угонщика автомобилей.");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 20 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 20) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 6;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу карманника.");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				PlayerInfo[playerid][pJob] = 7;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу автомеханика.");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 4 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 4 || PlayerInfo[playerid][pMember] >= 8 && PlayerInfo[playerid][pMember] <= 10 || PlayerInfo[playerid][pLeader] >= 8 && PlayerInfo[playerid][pLeader] <= 10 || PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] < 1) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 9;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу продавца оружия.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, "Устроиться на эту работу можно с 1lvl.");
					return true;
				}
				PlayerInfo[playerid][pJob] = 10;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу продавца автомобилей.");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа,для начала увольтесь с нее.");
					return true;
				}
				if (PlayerInfo[playerid][pLevel] < 2) {
					error(playerid, "Устроиться на эту работу можно с 2lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] <= 3 || PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] <= 3 || PlayerInfo[playerid][pMember] >= 5 && PlayerInfo[playerid][pMember] <= 8 || PlayerInfo[playerid][pLeader] >= 5 && PlayerInfo[playerid][pLeader] <= 8 || PlayerInfo[playerid][pMember] >= 11 && PlayerInfo[playerid][pMember] <= 20 || PlayerInfo[playerid][pLeader] >= 11 && PlayerInfo[playerid][pLeader] <= 20) {
					error(playerid, " Вы не можете устроиться на эту работу");
					return true;
				}
				PlayerInfo[playerid][pJob] = 15;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу разнощика газет.");
			}
			if (listitem == 10) {
				if (PlayerInfo[playerid][pJob] > 0) {
					error(playerid, " У вас уже есть работа, для начала увольтесь с нее.");
					return true;
				}
				PlayerInfo[playerid][pJob] = 12;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Поздравляем! Вы устроились на работу вышибалы.");
			}
		}
	}
	if (dialogid == 2416) {
		if (response) {
			PlayerInfo[playerid][pJob] = 0;
			SendClientMessage(playerid, -1, "Вы уволились с работы.");
		}
	}
	if (dialogid == DIALOG_STARTJOB && response) {
		PlayerStartJob[playerid] = false;
		PlayerOnJob[playerid] = true;
		PlayerSavedSkin[playerid] = GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 16);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		SendClientMessage(playerid, -1, "Вы устроились на работу шахтёра. {00C0FF}Места добычи находятся на камнях.");
	}
	new team[MAX_PLAYER_NAME];
	GetPlayerName(playerid, team, sizeof(team));
	if (dialogid == 5661) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5662, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5663, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 2) {
				ShowPlayerDialog(playerid, 5664, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
		}
	}
	if (dialogid == 5662) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5665, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5666, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$.", ObwyakInfo[12][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5665) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
				return true;
			}
			NormMoney[playerid] = 2;
			AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
			GivePlayerBablo(playerid, -cashdeposit);
			format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
			SendRadioMessage(12, COLOR_LIGHTBLUE, string);
			ObwyakInfo[12][oGangMoney] += cashdeposit;
		}
	}
	if (dialogid == 5666) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 12) {
				if (cashdeposit > ObwyakInfo[12][oGangMoney] || ObwyakInfo[12][oGangMoney] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
					return true;
				}
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
				GivePlayerBablo(playerid, cashdeposit);
				format(string, sizeof(string), "Вы взяли %d$ с общака банды StreetRacers.", cashdeposit);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[12][oGangMoney] -= cashdeposit;
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 5663) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5667, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5668, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[12][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5667) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
				return true;
			}
			PlayerInfo[playerid][pDrugs] -= dr;
			format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
			SendRadioMessage(12, COLOR_LIGHTBLUE, string);
			ObwyakInfo[12][oGangDrugs] += dr;
		}
	}
	if (dialogid == 5668) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 12) {
				if (dr > ObwyakInfo[12][oGangDrugs] || ObwyakInfo[12][oGangDrugs] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотиков.");
					return true;
				}
				PlayerInfo[playerid][pDrugs] += dr;
				format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака StreetRacers.", dr);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[12][oGangDrugs] -= dr;
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
				return true;
			}
		}
	}
	if (dialogid == 5664) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5669, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5670, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке StreetRacers %d материал(ов).", ObwyakInfo[12][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5669) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			}
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак StreetRacers.", team, mt);
				SendRadioMessage(12, COLOR_LIGHTBLUE, string);
				ObwyakInfo[12][oGangMats] += mt;
			}
		}
	}
	if (dialogid == 5670) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 12) {
				if (mt > ObwyakInfo[12][oGangMats] || ObwyakInfo[12][oGangMats] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько материалов.");
				}
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака StreetRacers.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[12][oGangMats] -= mt;
				}
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 6158) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5111, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5112, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 2) {
				ShowPlayerDialog(playerid, 5113, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
		}
	}
	if (dialogid == 5111) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5114, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5115, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей мафии %d$.", ObwyakInfo[18][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5114) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			}
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей мафии.", team, cashdeposit);
				SendRadioMessage(18, COLOR_LIGHTBLUE, string);
				ObwyakInfo[18][oGangMoney] += cashdeposit;
			}
		}
	}
	if (dialogid == 5115) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 18) {
				if (cashdeposit > ObwyakInfo[18][oGangMoney] || ObwyakInfo[18][oGangMoney] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько денег.");
				}
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака The Triads Mafia.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[18][oGangMoney] -= cashdeposit;
				}
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 5112) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5116, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5117, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[18][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5116) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			}
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей мафии.", team, dr);
				SendRadioMessage(18, COLOR_LIGHTBLUE, string);
				ObwyakInfo[18][oGangDrugs] += dr;
			}
		}
	}
	if (dialogid == 5117) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 18) {
				if (dr > ObwyakInfo[18][oGangDrugs] || ObwyakInfo[18][oGangDrugs] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько наркотиков.");
				}
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака The Triads Mafia.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[18][oGangDrugs] -= dr;
				}
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 5113) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 5118, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 5119, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке The Triads Mafia %d материал(ов).", ObwyakInfo[18][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5118) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			}
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а)и %d материал(ов) в общак вашей мафии.", team, mt);
				SendRadioMessage(18, COLOR_LIGHTBLUE, string);
				ObwyakInfo[18][oGangMats] += mt;
			}
		}
	}
	if (dialogid == 5119) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 18) {
				if (mt > ObwyakInfo[18][oGangMats] || ObwyakInfo[18][oGangMats] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько материалов.");
				}
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака The Triads Mafia.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[18][oGangMats] -= mt;
				}
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 440) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 4400, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 4401, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
			if (listitem == 2) {
				ShowPlayerDialog(playerid, 4402, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			}
		}
	}
	if (dialogid == 4400) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 4404, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 4405, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей мафии %d$", ObwyakInfo[20][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 4404) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			}
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей мафии.", team, cashdeposit);
				SendRadioMessage(20, COLOR_LIGHTBLUE, string);
				ObwyakInfo[20][oGangMoney] += cashdeposit;
			}
		}
	}
	if (dialogid == 4405) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 20) {
				if (cashdeposit > ObwyakInfo[20][oGangMoney] || ObwyakInfo[20][oGangMoney] < 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько денег.");
				}
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d $ с общака Rusian Mafia.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[20][oGangMoney] -= cashdeposit;
				}
			}
			else {
				SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
			}
		}
	}
	if (dialogid == 4401) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 4406, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 4407, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			}
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке мафии %d грамм(ов) нарко.", ObwyakInfo[20][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 4406) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			}
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей мафии.", team, dr);
				SendRadioMessage(20, COLOR_LIGHTBLUE, string);
				ObwyakInfo[20][oGangDrugs] += dr;
			}
		}
	}
	if (dialogid == 4407) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 20) {
				if (dr > ObwyakInfo[20][oGangDrugs] || ObwyakInfo[20][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько наркотиков.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака Rusian Mafia.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[20][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 4402) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 4408, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 4409, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке Russian Mafia %d материал(ов).", ObwyakInfo[20][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 4408) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей мафии.", team, mt);
				SendRadioMessage(20, COLOR_LIGHTBLUE, string);
				ObwyakInfo[20][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 4409) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 20) {
				if (mt > ObwyakInfo[20][oGangMats] || ObwyakInfo[20][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака Russian Mafia.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[20][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 330) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 3300, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 3301, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 3302, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 3300) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 3304, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 3305, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей мафии %d$", ObwyakInfo[5][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 3304) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак мафии.", team, cashdeposit);
				SendRadioMessage(5, COLOR_LIGHTBLUE, string);
				ObwyakInfo[5][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 3305) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 5) {
				if (cashdeposit > ObwyakInfo[5][oGangMoney] || ObwyakInfo[5][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака мафии La Cosa Nostra.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[5][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 3301) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 3306, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 3307, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке мафии %d грамм(ов) нарко.", ObwyakInfo[5][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 3306) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей мафии.", team, dr);
				SendRadioMessage(5, COLOR_LIGHTBLUE, string);
				ObwyakInfo[5][oGangDrugs] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 3307) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 5) {
				if (dr > ObwyakInfo[5][oGangDrugs] || ObwyakInfo[5][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько наркотиков.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака La Cosa Nostra.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[5][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 3302) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 3308, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 3309, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке La Cosa Nostra %d материал(ов).", ObwyakInfo[5][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 3308) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей мафии.", team, mt);
				SendRadioMessage(5, COLOR_LIGHTBLUE, string);
				ObwyakInfo[5][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 3309) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 5) {
				if (mt > ObwyakInfo[5][oGangMats] || ObwyakInfo[5][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака La Cosa Nostra.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[5][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 220) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 2200, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 2201, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 2202, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 2200) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 2204, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 2205, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей мафии %d$.", ObwyakInfo[6][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 2204) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей мафии.", team, cashdeposit);
				SendRadioMessage(6, COLOR_LIGHTBLUE, string);
				ObwyakInfo[6][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 2205) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 6) {
				if (cashdeposit > ObwyakInfo[6][oGangMoney] || ObwyakInfo[6][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака мафии Yakuza.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[6][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 2201) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 2206, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 2207, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке мафии %d грамм(ов) нарко.", ObwyakInfo[6][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 2206) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей мафии.", team, dr);
				SendRadioMessage(6, COLOR_LIGHTBLUE, string);
				ObwyakInfo[6][oGangDrugs] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 2207) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 6) {
				if (dr > ObwyakInfo[6][oGangDrugs] || ObwyakInfo[6][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько наркотиков.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d с общака Yakuza.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[6][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 2202) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 2208, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 2209, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке Yakuza %d материал(ов).", ObwyakInfo[6][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 2208) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей мафии.", team, mt);
				SendRadioMessage(6, COLOR_LIGHTBLUE, string);
				ObwyakInfo[6][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 2209) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 6) {
				if (mt > ObwyakInfo[6][oGangMats] || ObwyakInfo[6][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке мафии нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака Yakuza.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[6][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 550) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 5500, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 5501, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 5502, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 5500) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 5504, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 5505, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$", ObwyakInfo[13][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5504) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
				SendRadioMessage(13, COLOR_LIGHTBLUE, string);
				ObwyakInfo[13][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 5505) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 13) {
				if (cashdeposit > ObwyakInfo[13][oGangMoney] || ObwyakInfo[13][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака банды Grove Street.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[13][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 5501) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 5506, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 5507, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[13][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5506) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
				SendRadioMessage(13, COLOR_LIGHTBLUE, string);
				ObwyakInfo[13][oGangDrugs] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 5507) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 13) {
				if (dr > ObwyakInfo[13][oGangDrugs] || ObwyakInfo[13][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотиков.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака Grove Street.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[13][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 5502) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 5508, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 5509, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке Grove Street %d материал(ов).", ObwyakInfo[13][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 5508) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей банды.", team, mt);
				SendRadioMessage(13, COLOR_LIGHTBLUE, string);
				ObwyakInfo[13][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 5509) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 13) {
				if (mt > ObwyakInfo[13][oGangMats] || ObwyakInfo[13][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), " Вы взяли %d материал(ов) с общака Grove Street.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[13][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 660) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 6600, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 6601, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 6602, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}

	}
	if (dialogid == 6600) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 6604, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 6605, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$", ObwyakInfo[16][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 6604) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
				SendRadioMessage(16, COLOR_LIGHTBLUE, string);
				ObwyakInfo[16][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 6605) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 16) {
				if (cashdeposit > ObwyakInfo[16][oGangMoney] || ObwyakInfo[16][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака банды Ballas.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[16][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 6601) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 6606, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 6607, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[16][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 6606) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
				SendRadioMessage(16, COLOR_LIGHTBLUE, string);
				ObwyakInfo[16][oGangDrugs] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 6607) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 16) {
				if (dr > ObwyakInfo[16][oGangDrugs] || ObwyakInfo[16][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотико.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака Ballas.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[16][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 6602) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 6608, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 6609, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке Ballas %d материал(ов).", ObwyakInfo[16][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 6608) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), " %s положил(а) %d материал(ов) в общак вашей банды.", team, mt);
				SendRadioMessage(16, COLOR_LIGHTBLUE, string);
				ObwyakInfo[16][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 6609) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 16) {
				if (mt > ObwyakInfo[16][oGangMats] || ObwyakInfo[16][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака Ballas.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[16][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 770) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 7700, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 7701, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 7702, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 7700) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 7704, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 7705, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$", ObwyakInfo[14][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 7704) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
				SendRadioMessage(14, COLOR_LIGHTBLUE, string);
				ObwyakInfo[14][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 7705) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 14) {
				if (cashdeposit > ObwyakInfo[14][oGangMoney] || ObwyakInfo[14][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака банды El Coronos.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[14][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 7701) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 7706, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 7707, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[14][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 7706) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
				SendRadioMessage(14, COLOR_LIGHTBLUE, string);
				ObwyakInfo[14][oGangDrugs] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 7707) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 14) {
				if (dr > ObwyakInfo[14][oGangDrugs] || ObwyakInfo[14][oGangDrugs] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотиков.");
				else {
					PlayerInfo[playerid][pDrugs] += dr;
					format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака El Coronos.", dr);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[14][oGangDrugs] -= dr;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 7702) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 7708, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 7709, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке El Coronos %d материал(ов).", ObwyakInfo[14][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 7708) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			else {
				PlayerInfo[playerid][pMats] -= mt;
				format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак	вашей банды.", team, mt);
				SendRadioMessage(14, COLOR_LIGHTBLUE, string);
				ObwyakInfo[14][oGangMats] += mt;
				return 1;
			}
		}
	}
	if (dialogid == 7709) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 14) {
				if (mt > ObwyakInfo[14][oGangMats] || ObwyakInfo[14][oGangMats] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке нет столько материалов.");
				else {
					PlayerInfo[playerid][pMats] += mt;
					format(string, sizeof(string), "Вы взяли %d материал(ов) с общака El Coronos.", mt);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[14][oGangMats] -= mt;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 880) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 8800, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 8801, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 8802, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 8800) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 8804, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 8805, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$", ObwyakInfo[19][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 8804) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			else {
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
				GivePlayerBablo(playerid, -cashdeposit);
				format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
				SendRadioMessage(19, COLOR_LIGHTBLUE, string);
				ObwyakInfo[19][oGangMoney] += cashdeposit;
				return 1;
			}
		}
	}
	if (dialogid == 8805) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 19) {
				if (cashdeposit > ObwyakInfo[19][oGangMoney] || ObwyakInfo[19][oGangMoney] < 1) SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
				else {
					NormMoney[playerid] = 2;
					AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
					GivePlayerBablo(playerid, cashdeposit);
					format(string, sizeof(string), "Вы взяли %d$ с общака банды Rifa.", cashdeposit);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					ObwyakInfo[19][oGangMoney] -= cashdeposit;
					return 1;
				}
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 8801) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 8806, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 8807, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[19][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 8806) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			else {
				PlayerInfo[playerid][pDrugs] -= dr;
				format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
				SendRadioMessage(19, COLOR_LIGHTBLUE, string);
				ObwyakInfo[19][oGangMoney] += dr;
				return 1;
			}
		}
	}
	if (dialogid == 8807) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 19) {
				if (dr > ObwyakInfo[19][oGangMoney] || ObwyakInfo[19][oGangMoney] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотиков.");
				PlayerInfo[playerid][pDrugs] += dr;
				format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака The Rifa Gang.", dr);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[19][oGangMoney] -= dr;
				return 1;
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 8802) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 8808, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 8809, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке Rifa %d материал(ов).", ObwyakInfo[19][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 8808) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			PlayerInfo[playerid][pMats] -= mt;
			format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей банды.", team, mt);
			SendRadioMessage(19, COLOR_LIGHTBLUE, string);
			ObwyakInfo[19][oGangMats] += mt;
			return 1;
		}
	}
	if (dialogid == 8809) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 19) {
				if (mt > ObwyakInfo[19][oGangMats] || ObwyakInfo[19][oGangMats] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько материалов.");
				PlayerInfo[playerid][pMats] += mt;
				format(string, sizeof(string), "Вы взяли %d материал(ов) с общака The Rifa Gang", mt);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[19][oGangMats] -= mt;
				return 1;
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 990) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 9900, 2, "Деньги", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, 9901, 2, "Наркотики", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
			if (listitem == 2) ShowPlayerDialog(playerid, 9902, 2, "Материалы", "{ffdb58}Положить\n{ffdb58}Взять\n{ffdb58}Просмотреть", "Дальше", "Отмена");
		}
	}
	if (dialogid == 9900) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 9904, 1, "Пополнение", "Введите сумму для пополнения.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 9905, 1, "Забрать деньги", "Введите сумму которую желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке вашей банды %d$", ObwyakInfo[15][oGangMoney]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 9904) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 100) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данной сумы,либо вы пытаетесь положить меньше 100$.");
			NormMoney[playerid] = 2;
			AntiMoney2[playerid] = AntiMoney2[playerid] - cashdeposit;
			GivePlayerBablo(playerid, -cashdeposit);
			format(string, sizeof(string), "%s положил(а) %d$ в общак вашей банды.", team, cashdeposit);
			SendRadioMessage(15, COLOR_LIGHTBLUE, string);
			ObwyakInfo[15][oGangMoney] += cashdeposit;
			return 1;
		}
	}
	if (dialogid == 9905) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 15) {
				if (cashdeposit > ObwyakInfo[15][oGangMoney] || ObwyakInfo[15][oGangMoney] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько денег.");
				NormMoney[playerid] = 2;
				AntiMoney2[playerid] = AntiMoney2[playerid] + cashdeposit;
				GivePlayerBablo(playerid, cashdeposit);
				format(string, sizeof(string), "Вы взяли %d$ с общака банды Los Santos Vagos.", cashdeposit);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[15][oGangMoney] -= cashdeposit;
				return 1;
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 9901) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 9906, 1, "Пополнение", "Введите количество наркотиков для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 9907, 1, "Забрать наркотики", "Введите количество наркотиков которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке банды %d грамм(ов) нарко.", ObwyakInfo[15][oGangDrugs]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 9906) {
		if (response) {
			new dr = strval(inputtext);
			if (dr > PlayerInfo[playerid][pDrugs] || dr < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет данного количества наркотических веществ.");
			PlayerInfo[playerid][pDrugs] -= dr;
			format(string, sizeof(string), "%s положил(а) %d грамм(ов) в общак вашей банды.", team, dr);
			SendRadioMessage(15, COLOR_LIGHTBLUE, string);
			ObwyakInfo[15][oGangDrugs] += dr;
			return 1;
		}
	}
	if (dialogid == 9907) {
		if (response) {
			new dr = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 15) {
				if (dr > ObwyakInfo[15][oGangDrugs] || ObwyakInfo[15][oGangDrugs] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько наркотиков.");
				PlayerInfo[playerid][pDrugs] += dr;
				format(string, sizeof(string), "Вы взяли %d грамм наркотиков с общака Los Santos Vagos.", dr);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[15][oGangDrugs] -= dr;
				return 1;
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == 9902) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 9908, 1, "Пополнение", "Введите количество материалов для пополнения общака.", "Отдать", "Назад");
			if (listitem == 1) ShowPlayerDialog(playerid, 9909, 1, "Забрать материалы", "Введите количество материалов которое желаете забрать.", "Взять", "Назад");
			if (listitem == 2) {
				format(string, sizeof(string), "В общаке El Coronos %d материал(ов).", ObwyakInfo[15][oGangMats]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
	}
	if (dialogid == 9908) {
		if (response) {
			new mt = strval(inputtext);
			if (mt > PlayerInfo[playerid][pMats] || mt < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У вас нет столько материалов.");
			PlayerInfo[playerid][pMats] -= mt;
			format(string, sizeof(string), "%s положил(а) %d материал(ов) в общак вашей банды.", team, mt);
			SendRadioMessage(15, COLOR_LIGHTBLUE, string);
			ObwyakInfo[15][oGangMats] += mt;
			return 1;
		}
	}
	if (dialogid == 9909) {
		if (response) {
			new mt = strval(inputtext);
			if (PlayerInfo[playerid][pLeader] == 15) {
				if (mt > ObwyakInfo[15][oGangMats] || ObwyakInfo[15][oGangMats] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "В общаке банды нет столько материалов.");
				PlayerInfo[playerid][pMats] += mt;
				format(string, sizeof(string), " Вы взяли %d материал(ов) с общака Vagos.", mt);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				ObwyakInfo[15][oGangMats] -= mt;
				return 1;
			} else return SendClientMessage(playerid, COLOR_RED, "Вы не лидер.");
		}
	}
	if (dialogid == DIALOG_ENDJOB && response) {
		new money = AllPlayerMetall[playerid] * 4 + AllPlayerMetallEx[playerid] * 20;
		PlayerStartJob[playerid] = false;
		PlayerOnJob[playerid] = false;
		GetPlayerMetall[playerid] = 0;
		AllPlayerMetall[playerid] = 0;
		GetPlayerMetallEx[playerid] = 0;
		AllPlayerMetallEx[playerid] = 0;
		ExtraMetall[playerid] = 0;
		SetPlayerSkin(playerid, PlayerSavedSkin[playerid]);
		GivePlayerBablo(playerid, money);
		format(string, sizeof(string), "Вы закончили работу. Ваш заработок: {00FF00}%d$", money);
		SendClientMessage(playerid, -1, string);
		RemovePlayerAttachedObject(playerid, 3);
		RemovePlayerAttachedObject(playerid, 4);
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	if (dialogid == 9594) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			switch (listitem) {
				case 0 :  {
					new listitems[] = "{ffdb58}Тень\n{ffdb58}Мега\n{ffdb58}Rimshine\n{ffdb58}Провода\n{ffdb58}Классические\n{ffdb58}Твист\n{ffdb58}Резак\n{ffdb58}Переключатель\n{ffdb58}Роща\n{ffdb58}Импорт\n{ffdb58}Доллар\n{ffdb58}Транс\n{ffdb58}Атомный\n{ffdb58}Ахаб\n{ffdb58}Виртуальные\n{ffdb58}Доступ";
					ShowPlayerDialog(playerid, 6004, DIALOG_STYLE_LIST, "Колёса", listitems, "Выбрать", "<< Назад");
				}
				case 1 :  //Бампера
				{
					new listitems[] = "{ffdb58}Cултан\n{ffdb58}Элегия\n{ffdb58}Flash\n{ffdb58}Jester\n{ffdb58}Uranus\n{ffdb58}Remington\n{ffdb58}Бродвей\n{ffdb58}Саванна\n{ffdb58}Торнадо";
					ShowPlayerDialog(playerid, 6008, DIALOG_STYLE_LIST, "Бамперы", listitems, "Выбрать", "<< Назад");
				}
				case 2 :  {
					new listitems[] = "{ffdb58}Paintjob \n{ffdb58}Paintjob \n{ffdb58}Paintjob ";
					ShowPlayerDialog(playerid, 6007, DIALOG_STYLE_LIST, "Покрасочные работы | Покраску поддерживают не все машины", listitems, "Выбрать", "<< Назад");
				}
				case 3 :  {
					ShowPlayerDialog(playerid, 6020, DIALOG_STYLE_LIST, "Закись азота", "{ffdb58}2X\n{ffdb58}5X\n{ffdb58}10X", "Выбрать", "<< Назад");
				}
				case 4 :  {
					AddVehicleComponent(vehicleid, 1087);
					new house = PlayerInfo[playerid][pPhousekey];
					HouseInfo[house][hGidravlika] = 1087;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Гидравлика`{ffffff} был поставлен на вашу машину.");
				}
			}
		} else return 1;
	}
	if (dialogid == DIA_SET) {
		if (response) {
			if (!strlen(inputtext)) return ShowPlayerDialog(playerid, DIA_SET, DIALOG_STYLE_INPUT, "Номера", "{ffdb58}Введите номер для автомобиля", "Установить", "Отмена");
			new vid = GetPlayerVehicleID(playerid), Str[10], Float:x, Float:y, Float:z, Float:ang;
			new File = ini_openFile("num.ini");
			format(Str, 10, "{ff0000}%d{ffffff}", vid);
			ini_setString(File, Str, inputtext);
			ini_closeFile(File);
			SetVehicleNumberPlate(vid, inputtext);
			GetVehiclePos(vid, x, y, z);
			GetVehicleZAngle(vid, ang);
			SetVehicleToRespawn(vid);
			SetVehiclePos(vid, x, y, z);
			PutPlayerInVehicle(playerid, vid, 0);
			SetVehicleZAngle(vid, ang);
			SendClientMessage(playerid, 0xFFFFFFFF, "Номера на автомобиль установлены.");
		} else {}
	}
	if (dialogid == 6004) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1073);
					HouseInfo[house][hKoleso] = 1073;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1074);
					HouseInfo[house][hKoleso] = 1074;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1075);
					HouseInfo[house][hKoleso] = 1075;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1076);
					HouseInfo[house][hKoleso] = 1076;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 4 :  {
					AddVehicleComponent(vehicleid, 1077);
					HouseInfo[house][hKoleso] = 1077;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 5 :  {
					AddVehicleComponent(vehicleid, 1078);
					HouseInfo[house][hKoleso] = 1078;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 6 :  {
					AddVehicleComponent(vehicleid, 1079);
					HouseInfo[house][hKoleso] = 1079;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 7 :  {
					AddVehicleComponent(vehicleid, 1080);
					HouseInfo[house][hKoleso] = 1080;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 8 :  {
					AddVehicleComponent(vehicleid, 1081);
					HouseInfo[house][hKoleso] = 1081;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 9 :  {
					AddVehicleComponent(vehicleid, 1082);
					HouseInfo[house][hKoleso] = 1082;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 10 :  {
					AddVehicleComponent(vehicleid, 1083);
					HouseInfo[house][hKoleso] = 1083;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 11 :  {
					AddVehicleComponent(vehicleid, 1084);
					HouseInfo[house][hKoleso] = 1084;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 12 :  {
					AddVehicleComponent(vehicleid, 1085);
					HouseInfo[house][hKoleso] = 1085;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 13 :  {
					AddVehicleComponent(vehicleid, 1096);
					HouseInfo[house][hKoleso] = 1096;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 14 :  {
					AddVehicleComponent(vehicleid, 1097);
					HouseInfo[house][hKoleso] = 1097;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 15 :  {
					AddVehicleComponent(vehicleid, 1098);
					HouseInfo[house][hKoleso] = 1098;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Колёса`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 1666) {
		if (response) {
			if (listitem == 0) {
				new sendername[MAX_PLAYER_NAME];
				new carid = GetPlayerVehicleID(playerid);
				if (lgh[carid] == 0) {
					if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
						if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
							new v = GetPlayerVehicleID(playerid);
							new Float:hp;
							GetVehicleHealth(v, hp);
							if (hp >= 350) {
								GetPlayerName(playerid, sendername, sizeof(sendername));
								GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
								SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
								lgh[carid] = 1;
							} else {
								SendClientMessage(playerid, COLOR_GRAD1, "Фары повреждены.");
							}
						}
					} else return 1;
				} else if (lgh[carid] == 1) {
					if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
						if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
							lgh[carid] = 0;
						}
					}
				}
			} else if (listitem == 1) return OnPlayerCommandText(playerid, "/bonnet");
			else if (listitem == 2) return OnPlayerCommandText(playerid, "/boot");
		} else {}
	}
	if (dialogid == 6008) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new carid = GetVehicleModel(vehicleid);
			switch (listitem) {
				case 0 :  {
					if (carid != 560) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] X- Flow [задний]\n[1] Alien [задний]\n[2] X-Flow [передний]\n[3] Alien [передний]";
					ShowPlayerDialog(playerid, 6009, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 1 :  {
					if (carid != 562) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] X- Flow [передний]\n[1] Alien [передний]\n[2] X-Flow [задний]\n[3] Alien [задний]";
					ShowPlayerDialog(playerid, 6010, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 2 :  {
					if (carid != 565) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] X- Flow [передний]\n[1] Alien [передний]\n[2] X-Flow [задний]\n[3] Alien [задний]";
					ShowPlayerDialog(playerid, 6011, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 3 :  {
					if (carid != 559) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] Chrome [передний]\n[1] Alien [передний]\n[2] X-Flow [задний]\n[3] Alien [задний]";
					ShowPlayerDialog(playerid, 6012, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 4 :  {
					if (carid != 558) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] X- Flow [передний]\n[1] Alien [передний]\n[2] X-Flow [задний]\n[3] Alien [задний]";
					ShowPlayerDialog(playerid, 6013, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 5 :  {
					if (carid != 534) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] Chrome [передний]\n[1] Slamin [передний]\n[2] Slamin [задний]\n[3] Chrome [задний]";
					ShowPlayerDialog(playerid, 6014, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 6 :  {
					if (carid != 575) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] Chrome [передний]\n[1] Chrome 2 [передний]\n[2] Slamin [задний]\n[3] Slamin 2 [задний]";
					ShowPlayerDialog(playerid, 6015, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 7 :  {
					if (carid != 567) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] Chrome [передний]\n[1] Slamin [передний]\n[2] Slamin [задний]\n[3] Chrome [задний]";
					ShowPlayerDialog(playerid, 6016, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
				case 8 :  {
					if (carid != 576) return SendClientMessage(playerid, COLOR_GRAD1, "Этот компонент не подходит для вашей машины");
					new listitems[] = "[0] Chrome [передний]\n[1] Slamin [передний]\n[2] Slamin [задний]\n[3] Chrome [задний]";
					ShowPlayerDialog(playerid, 6017, DIALOG_STYLE_LIST, "Бампера", listitems, "Выбрать", "<< Назад");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6009) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1140);
					HouseInfo[house][hBamper2] = 1140;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1141);
					HouseInfo[house][hBamper2] = 1141;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1170);
					HouseInfo[house][hBamper] = 1170;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1169);
					HouseInfo[house][hBamper] = 1169;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6010) //элегия
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1172);
					HouseInfo[house][hBamper] = 1172;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1171);
					HouseInfo[house][hBamper] = 1171;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1148);
					HouseInfo[house][hBamper2] = 1148;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1149);
					HouseInfo[house][hBamper2] = 1149;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6011) //flash
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1152);
					HouseInfo[house][hBamper] = 1152;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1153);
					HouseInfo[house][hBamper] = 1153;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1151);
					HouseInfo[house][hBamper2] = 1151;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1150);
					HouseInfo[house][hBamper2] = 1150;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6012) //jester
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1174);
					HouseInfo[house][hBamper] = 1174;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1160);
					HouseInfo[house][hBamper] = 1160;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1161);
					HouseInfo[house][hBamper2] = 1161;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1159);
					HouseInfo[house][hBamper2] = 1159;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6013) //Uranus
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1165);
					HouseInfo[house][hBamper] = 1165;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1166);
					HouseInfo[house][hBamper] = 1166;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1167);
					HouseInfo[house][hBamper2] = 1167;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1168);
					HouseInfo[house][hBamper2] = 1168;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6014) //reb
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1179);
					HouseInfo[house][hBamper] = 1179;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1185);
					HouseInfo[house][hBamper] = 1185;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1184);
					HouseInfo[house][hBamper2] = 1185;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1183);
					HouseInfo[house][hBamper2] = 1183;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6015) //brod
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1176);
					HouseInfo[house][hBamper] = 1176;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1174);
					HouseInfo[house][hBamper] = 1174;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1175);
					HouseInfo[house][hBamper2] = 1175;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1177);
					HouseInfo[house][hBamper2] = 1177;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6016) //sava
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1189);
					HouseInfo[house][hBamper] = 1189;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1188);
					HouseInfo[house][hBamper] = 1188;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1187);
					HouseInfo[house][hBamper2] = 1187;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1186);
					HouseInfo[house][hBamper2] = 1186;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6017) //tornado
	{
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1191);
					HouseInfo[house][hBamper] = 1191;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1190);
					HouseInfo[house][hBamper] = 1190;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1192);
					HouseInfo[house][hBamper2] = 1192;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1193);
					HouseInfo[house][hBamper2] = 1193;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Бампер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6007) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					ChangeVehiclePaintjob(vehicleid, 0);
					HouseInfo[house][hPaintjob] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Покраска`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 1 :  {
					ChangeVehiclePaintjob(vehicleid, 1);
					HouseInfo[house][hPaintjob] = 1;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Покраска`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
				case 2 :  {
					ChangeVehiclePaintjob(vehicleid, 2);
					HouseInfo[house][hPaintjob] = 2;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Покраска`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 1000$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6020) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1009);
					HouseInfo[house][hNitro] = 1009;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Нитро`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1008);
					HouseInfo[house][hNitro] = 1008;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Нитро`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -3000);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 3000$.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1010);
					HouseInfo[house][hNitro] = 1010;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Нитро`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -4500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали 4500$.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 6005) {
		if (response) {
			new vehicleid = GetPlayerVehicleID(playerid);
			new house = PlayerInfo[playerid][pPhousekey];
			new carid = GetVehicleModel(vehicleid);
			switch (listitem) {
				case 0 :  {
					AddVehicleComponent(vehicleid, 1000);
					HouseInfo[house][hSpoiler] = 1000;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 1 :  {
					AddVehicleComponent(vehicleid, 1001);
					HouseInfo[house][hSpoiler] = 1001;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 2 :  {
					AddVehicleComponent(vehicleid, 1002);
					HouseInfo[house][hSpoiler] = 1002;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 3 :  {
					AddVehicleComponent(vehicleid, 1003);
					HouseInfo[house][hSpoiler] = 1003;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 4 :  {
					AddVehicleComponent(vehicleid, 1014);
					HouseInfo[house][hSpoiler] = 1014;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 5 :  {
					AddVehicleComponent(vehicleid, 1015);
					HouseInfo[house][hSpoiler] = 1015;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 6 :  {
					AddVehicleComponent(vehicleid, 1016);
					HouseInfo[house][hSpoiler] = 1016;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 7 :  {
					AddVehicleComponent(vehicleid, 1023);
					HouseInfo[house][hSpoiler] = 1023;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 8 :  {
					if (carid != 565) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1049);
					HouseInfo[house][hSpoiler] = 1049;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 9 :  {
					if (carid != 565) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1050);
					HouseInfo[house][hSpoiler] = 1050;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 10 :  {
					if (carid != 561) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1058);
					HouseInfo[house][hSpoiler] = 1058;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 11 :  {
					if (carid != 561) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1060);
					HouseInfo[house][hSpoiler] = 1060;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 12 :  {
					if (carid != 560) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1138);
					HouseInfo[house][hSpoiler] = 1138;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
				case 13 :  {
					if (carid != 560) return SendClientMessage(playerid, COLOR_GREY, "Этот компонент не подходит для вашей машины");
					AddVehicleComponent(vehicleid, 1139);
					HouseInfo[house][hSpoiler] = 1139;
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, "{99FF66}Автомастерская{ffffff} : Заказаный компонент {0000FF}`Спойлер`{ffffff} был поставлен на вашу машину.");
					GivePlayerBablo(playerid, -1500);
					SendClientMessage(playerid, COLOR_WHITE, "Вы отдали {33aa33}1500${ffffff}.");
				}
			}
		} else {
			new listitems[] = "{D1DBD0}[1] Установка колёс\n{FEBC41}[2] Установка спойлера\n{D1DBD0}[3] Установка бампера\n[4] Цветовые работы\n[5] Закись азота\n[6] Гидравлика";
			ShowPlayerDialog(playerid, 9594, DIALOG_STYLE_LIST, "Установка тюнинга", listitems, "Выбрать", "Отмена");
			return 1;
		}
	}
	if (dialogid == 9957) {
		if (response) {
			if (PlayerInfo[playerid][pCash] < 5000) return error(playerid, " Недостаточно денег.");
			if (PlayerInfo[playerid][pCar] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "У вас нет машины.");
			if (PlayerMurder[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже зарегистрированы на гонку.");
			PlayerInfo[playerid][pCash] -= 5000;
			MurderPlayers += 1;
			PlayerMurder[playerid] = 1;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы зарегистрировались на гонку");
			format(string, sizeof(string), "Выигрыш составляет %d$", 5000 * MurderPlayers);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		} else { return true; }
	}
	if (dialogid == BANK_SYSTEM) //банк
	{
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, BANK_VZNOS, DIALOG_STYLE_INPUT, "Взнос", "Введите сумму взноса", "Выбрать", "Отмена");
			if (listitem == 1) ShowPlayerDialog(playerid, BANK_VZ, DIALOG_STYLE_INPUT, "Снять со счета", "Введите сумму", "Выбрать", "Отмена");
			if (listitem == 2) OnPlayerCommandText(playerid, "/balance");
			if (listitem == 3) ShowPlayerDialog(playerid, BANK_TR, DIALOG_STYLE_INPUT, "Перевести на другой счет", "Введите id того, кому вы хотите передать деньги", "Передать", "Отмена");
		}
	}
	if (dialogid == BANK_VZNOS) {
		if (response) {
			if (!strlen(inputtext)) return ShowPlayerDialog(playerid, BANK_VZNOS, DIALOG_STYLE_INPUT, "Взнос", "Введите сумму взноса", "Выбрать", "Отмена");
			bankvz[playerid] = strval(inputtext);
			format(string, sizeof(string), "/banks %d", bankvz[playerid]);
			OnPlayerCommandText(playerid, string);
			return true;
		}
	}
	if (dialogid == BANK_VZ) {
		if (response) {
			if (!strlen(inputtext)) return ShowPlayerDialog(playerid, BANK_VZ, DIALOG_STYLE_INPUT, "Снять со счета", "Введите сумму", "Выбрать", "Отмена");
			bankvz1[playerid] = strval(inputtext);
			format(string, sizeof(string), "/withdraw %d", bankvz1[playerid]);
			OnPlayerCommandText(playerid, string);
			return true;
		}
	}
	if (dialogid == BANK_TR) {
		if (response) {
			if (!strlen(inputtext)) return ShowPlayerDialog(playerid, BANK_TR, DIALOG_STYLE_INPUT, "Перевод", "Введите id игрока которому хотите перевести деньги", "Выбрать", "Отмена");
			ShowPlayerDialog(playerid, BANK_TR2, DIALOG_STYLE_INPUT, "Перевод", "Введите сумму", "Выбрать", "Отмена");
			idtr[playerid] = strval(inputtext);
			return true;
		}
	}
	if (dialogid == BANK_TR2) {
		if (response) {
			if (!strlen(inputtext)) return ShowPlayerDialog(playerid, BANK_TR2, DIALOG_STYLE_INPUT, "Перевод", "Введите сумму", "Выбрать", "Отмена");
			summatr[playerid] = strval(inputtext);
			format(string, sizeof(string), "/transf %d %d", idtr[playerid], summatr[playerid]); //заменяем на вашу команду которая отвечает за перевод денег
			OnPlayerCommandText(playerid, string);
			return true;
		}
	}
	if (dialogid == 334) {
		if (response) {
			if (listitem == 0) {
				SetPlayerSkin(playerid, 15);
				PlayerInfo[playerid][pChar] = 15;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 1) {
				SetPlayerSkin(playerid, 18);
				PlayerInfo[playerid][pChar] = 18;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 2) {
				PlayerInfo[playerid][pChar] = 23;
				SetPlayerSkin(playerid, 23);
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 3) {
				PlayerInfo[playerid][pChar] = 29;
				SetPlayerSkin(playerid, 29);
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 4) {
				PlayerInfo[playerid][pChar] = 45;
				SetPlayerSkin(playerid, 45);
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 5) {
				PlayerInfo[playerid][pChar] = 80;
				SetPlayerSkin(playerid, 80);
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 6) {
				SetPlayerSkin(playerid, 97);
				PlayerInfo[playerid][pChar] = 97;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 7) {
				SetPlayerSkin(playerid, 101);
				PlayerInfo[playerid][pChar] = 101;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 8) {
				SetPlayerSkin(playerid, 154);
				PlayerInfo[playerid][pChar] = 154;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 9) {
				SetPlayerSkin(playerid, 160);
				PlayerInfo[playerid][pChar] = 160;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 10) {
				SetPlayerSkin(playerid, 146);
				PlayerInfo[playerid][pChar] = 146;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 11) {
				SetPlayerSkin(playerid, 162);
				PlayerInfo[playerid][pChar] = 162;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 12) {
				SetPlayerSkin(playerid, 181);
				PlayerInfo[playerid][pChar] = 181;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 13) {
				SetPlayerSkin(playerid, 200);
				PlayerInfo[playerid][pChar] = 200;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 14) {
				SetPlayerSkin(playerid, 212);
				PlayerInfo[playerid][pChar] = 212;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 15) {
				SetPlayerSkin(playerid, 222);
				PlayerInfo[playerid][pChar] = 222;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 16) {
				SetPlayerSkin(playerid, 230);
				PlayerInfo[playerid][pChar] = 230;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 17) {
				SetPlayerSkin(playerid, 250);
				PlayerInfo[playerid][pChar] = 250;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 18) {
				SetPlayerSkin(playerid, 289);
				PlayerInfo[playerid][pChar] = 289;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
			if (listitem == 19) {
				SetPlayerSkin(playerid, 291);
				PlayerInfo[playerid][pChar] = 291;
				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 16\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
				return true;
			}
		} else return ShowPlayerDialog(playerid, 455, DIALOG_STYLE_MSGBOX, "Магазин Binco", "Вы хотите приобрести выбранную вами одежду.Cтоимость - 1000$?", "Да", "Нет");
	}
	if (dialogid == 455) {
		if (response) {
			if (SBizzInfo[16][sbMafia] > 0) {
				SBizzInfo[16][sbTill] += 900;
				SBizzInfo[16][sbProducts]--;
				ObwyakInfo[SBizzInfo[16][sbMafia]][oGangMoney] += 100;
			} else {
				SBizzInfo[16][sbTill] += 1000;
				SBizzInfo[16][sbProducts]--;
			}
			GivePlayerBablo(playerid, -1000);
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		} else {
			SetPlayerSkin(playerid, skin[playerid]);
			PlayerInfo[playerid][pChar] = skin[playerid];
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
	}
	if (dialogid == 50) {
		if (response) {
			if (listitem == 0) {
				for (new i = 0; i < sizeof(FlatsInfo); i++) {
					if ((IsPlayerInRangeOfPoint(playerid, 3.0, FlatsInfo[i][fEntrancex], FlatsInfo[i][fEntrancey], FlatsInfo[i][fEntrancez]) && GetPlayerVirtualWorld(playerid) == FlatsInfo[i][fVirtWorld]) || (IsPlayerInRangeOfPoint(playerid, 3.0, FlatsInfo[i][fExitx], FlatsInfo[i][fExity], FlatsInfo[i][fExitz]) && GetPlayerVirtualWorld(playerid) == i + 9999)) {
						if (PlayerInfo[playerid][pFlatKey] == i) {
							if (FlatsInfo[i][fLock] == 1) {
								FlatsInfo[i][fLock] = 0;
								SendClientMessage(playerid, COLOR_WHITE, "Вы открыли свою комнату.");
								PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
								return true;
							}
							if (FlatsInfo[i][fLock] == 0) {
								FlatsInfo[i][fLock] = 1;
								SendClientMessage(playerid, COLOR_WHITE, "Вы закрыли свою комнату.");
								PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
								return true;
							}
						} else return error(playerid, " Это не ваша комната.");
					}
				}
			} else if (listitem == 1) {
				OnPlayerCommandText(playerid, "/sellflat");
			}
		} else return true;
	}
	if (dialogid == 336) {
		if (response) {
			if (listitem == 0) {
				SetPlayerSkin(playerid, 17);
				PlayerInfo[playerid][pChar] = 17;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 1) {
				SetPlayerSkin(playerid, 57);
				PlayerInfo[playerid][pChar] = 57;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 2) {
				SetPlayerSkin(playerid, 59);
				PlayerInfo[playerid][pChar] = 59;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 3) {
				SetPlayerSkin(playerid, 68);
				PlayerInfo[playerid][pChar] = 68;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 4) {
				SetPlayerSkin(playerid, 119);
				PlayerInfo[playerid][pChar] = 119;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 5) {
				SetPlayerSkin(playerid, 147);
				PlayerInfo[playerid][pChar] = 147;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 6) {
				SetPlayerSkin(playerid, 153);
				PlayerInfo[playerid][pChar] = 153;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 7) {
				SetPlayerSkin(playerid, 170);
				PlayerInfo[playerid][pChar] = 170;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
			if (listitem == 8) {
				SetPlayerSkin(playerid, 227);
				PlayerInfo[playerid][pChar] = 227;
				ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9", "Показать", "Выйти");
				return true;
			}
		} else return ShowPlayerDialog(playerid, 457, DIALOG_STYLE_MSGBOX, "Магазин Zip", "Вы хотите приобрести выбранную вами одежду?Cтоимость - 1000$.", "Да", "Нет");
	}
	if (dialogid == 457) {
		if (response) {
			GivePlayerBablo(playerid, -1000);
			if (SBizzInfo[17][sbMafia] > 0) {
				SBizzInfo[17][sbTill] += 900;
				SBizzInfo[17][sbProducts]--;
				ObwyakInfo[SBizzInfo[17][sbMafia]][oGangMoney] += 100;
			} else {
				SBizzInfo[17][sbTill] += 1000;
				SBizzInfo[17][sbProducts]--;
			}
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		} else {
			SetPlayerSkin(playerid, skin[playerid]);
			PlayerInfo[playerid][pChar] = skin[playerid];
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
	}
	if (dialogid == 335) {
		if (response) {
			if (listitem == 0) {
				SetPlayerSkin(playerid, 9);
				PlayerInfo[playerid][pChar] = 9;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 1) {
				SetPlayerSkin(playerid, 12);
				PlayerInfo[playerid][pChar] = 12;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 2) {
				SetPlayerSkin(playerid, 40);
				PlayerInfo[playerid][pChar] = 40;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 3) {
				SetPlayerSkin(playerid, 55);
				PlayerInfo[playerid][pChar] = 55;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 4) {
				SetPlayerSkin(playerid, 76);
				PlayerInfo[playerid][pChar] = 76;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 5) {
				SetPlayerSkin(playerid, 77);
				PlayerInfo[playerid][pChar] = 77;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 6) {
				SetPlayerSkin(playerid, 85);
				PlayerInfo[playerid][pChar] = 85;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 7) {
				SetPlayerSkin(playerid, 90);
				PlayerInfo[playerid][pChar] = 90;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 8) {
				SetPlayerSkin(playerid, 91);
				PlayerInfo[playerid][pChar] = 91;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 9) {
				SetPlayerSkin(playerid, 192);
				PlayerInfo[playerid][pChar] = 192;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 10) {
				SetPlayerSkin(playerid, 190);
				PlayerInfo[playerid][pChar] = 190;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 11) {
				SetPlayerSkin(playerid, 231);
				PlayerInfo[playerid][pChar] = 231;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 12) {
				SetPlayerSkin(playerid, 244);
				PlayerInfo[playerid][pChar] = 244;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 13) {
				SetPlayerSkin(playerid, 38);
				PlayerInfo[playerid][pChar] = 38;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
			if (listitem == 14) {
				SetPlayerSkin(playerid, 38);
				PlayerInfo[playerid][pChar] = 38;
				ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
				return true;
			}
		} else return ShowPlayerDialog(playerid, 456, DIALOG_STYLE_MSGBOX, "Магазин Victim", "Вы хотите приобрести выбранную вами одежду?Cтоимость - 1000$", "Да", "Нет");
	}
	if (dialogid == 456) {
		if (response) {
			GivePlayerBablo(playerid, -1000);
			if (SBizzInfo[18][sbMafia] > 0) {
				SBizzInfo[18][sbTill] += 900;
				SBizzInfo[18][sbProducts]--;
				ObwyakInfo[SBizzInfo[18][sbMafia]][oGangMoney] += 100;
			} else {
				SBizzInfo[18][sbTill] += 1000;
				SBizzInfo[18][sbProducts]--;
			}
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		} else {
			SetPlayerSkin(playerid, skin[playerid]);
			PlayerInfo[playerid][pChar] = skin[playerid];
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
	}
	if (dialogid == 103) {
		if (response) {
			if (!PlayerInJob[playerid]) {
				error(playerid, " Вы не на работе.");
				error(playerid, " Переоденьтесь для начала работы");
				return true;
			}
			PlayerInJob[playerid] = 0;
			SetPlayerSkin(playerid, Oldskin2[playerid]);
			DisablePlayerCheckpoint(playerid);
			GivePlayerBablo(playerid, Meshki[playerid] * 100);
			format(string, sizeof(string), "{FFFAFA}Вы получили {228B22}%d$ {FFFAFA}за {A52A2A}%d {FFFAFA}мешка(ов)", Meshki[playerid] * 100, Meshki[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			Meshki[playerid] = 0;
		}
		return true;
	}
	if (dialogid == 102) //раздевалка
	{
		if (response) {
			if (PlayerInJob[playerid]) {
				error(playerid, " Вы уже на работе");
				SendClientMessage(playerid, COLOR_RED, "Чтобы окончить работу, идите в кассу.");
				return true;
			}
			PlayerInJob[playerid] = 1;
			Oldskin2[playerid] = GetPlayerSkin(playerid);
			SetPlayerSkin(playerid, 16);
			SetPlayerCheckpoint(playerid, 2230.8132324219, -2285.7043457031, 13.531787872314, 2.0);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "На вашей карте отмечен чекпоинт");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Идите к нему за мешком");
		}
		return true;
	}
	if (dialogid == 978) {
		if (response) {
			if (listitem == 0) {
				new Float:health;
				GivePlayerBablo(playerid, -15);
				if (GetPlayerHealth(playerid, health) < 100) {
					SetPlayerHealth(playerid, health + 10.0);
					PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
					return true;
				}
			}
			if (listitem == 1) {
				new Float:health;
				GivePlayerBablo(playerid, -25);
				if (GetPlayerHealth(playerid, health) < 100) {
					SetPlayerHealth(playerid, health + 15.0);
					PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
					return true;
				}
			}
			if (listitem == 2) {
				new Float:health;
				GivePlayerBablo(playerid, -30);
				if (GetPlayerHealth(playerid, health) < 100) {
					SetPlayerHealth(playerid, health + 25.0);
					PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
					return true;
				}
			}
		}
	}
	if (dialogid == 700) {
		if (!response) return false;
		else {
			switch (listitem) {
				case 0 :  {
					format(string, sizeof(string), "Вы имеете %d$ на вашем счету.", PlayerInfo[playerid][pAccount]);
					ShowPlayerDialog(playerid, 701, 0, "Баланс", string, "Печать чека", "Назад");
				}
				case 1 :  {
					format(string, sizeof(string), "Введите сумму для снятия(максимум %d$):", PlayerInfo[playerid][pAccount]);
					ShowPlayerDialog(playerid, 702, 1, "Снятие с счета", string, "Снять", "Назад");
				}
				case 2 :  {
					if (PlayerInfo[playerid][pCard] >= 1) ShowPlayerDialog(playerid, BANK_TR, DIALOG_STYLE_INPUT, "Перевести на другой счет", "Введите id того, кому вы хотите передать деньги", "Передать", "Отмена");
					else error(playerid, " Вы должны иметь банковскую карточку, для данного рода операций над вашим счетом.");
				}

			}
			return true;
		}
	}
	else if (dialogid == 9991) {
		if (response) {
			if (listitem == 0) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 5.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -15);
				if (SBizzInfo[15][sbMafia] > 0) {
					SBizzInfo[15][sbTill] += (15 / 10 * 9);
					SBizzInfo[15][sbProducts]--;
					ObwyakInfo[SBizzInfo[15][sbMafia]][oGangMoney] += (15 / 10 * 1);
				} else {
					SBizzInfo[15][sbTill] += 15;
					SBizzInfo[15][sbProducts]--;
				}
				ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "Kitchen Fast Cooken(KFC)", "{ffdb58}Содовая(15$)\n{ffdb58}Пицца(25$)\n{ffdb58}Бургер(35$)\n{ffdb58}Гамбургер(45$)", "Купить", "Отмена");
			}
			if (listitem == 1) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "Kitchen Fast Cooken(KFC)", "{ffdb58}Содовая(15$)\n{ffdb58}Пицца(25$)\n{ffdb58}Бургер(35$)\n{ffdb58}Гамбургер(45$)", "Купить", "Отмена");
				SetPlayerHealth(playerid, health + 10.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -25);
				if (SBizzInfo[15][sbMafia] > 0) {
					SBizzInfo[15][sbTill] += (25 / 10 * 9);
					SBizzInfo[15][sbProducts]--;
					ObwyakInfo[SBizzInfo[15][sbMafia]][oGangMoney] += (25 / 10 * 1);
				} else {
					SBizzInfo[15][sbTill] += 25;
					SBizzInfo[15][sbProducts]--;
				}
			}
			if (listitem == 2) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "Kitchen Fast Cooken(KFC)", "{ffdb58}Содовая(15$)\n{ffdb58}Пицца(25$)\n{ffdb58}Бургер(35$)\n{ffdb58}Гамбургер(45$)", "Купить", "Отмена");
				SetPlayerHealth(playerid, health + 15.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -35);
				if (SBizzInfo[15][sbMafia] > 0) {
					SBizzInfo[15][sbTill] += (35 / 10 * 9);
					SBizzInfo[15][sbProducts]--;
					ObwyakInfo[SBizzInfo[15][sbMafia]][oGangMoney] += (35 / 10 * 1);
				} else {
					SBizzInfo[15][sbTill] += 35;
					SBizzInfo[15][sbProducts]--;
				}
			}
			if (listitem == 3) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "Kitchen Fast Cooken(KFC)", "{ffdb58}Содовая(15$)\n{ffdb58}Пицца(25$)\n{ffdb58}Бургер(35$)\n{ffdb58}Гамбургер(45$)", "Купить", "Отмена");
				SetPlayerHealth(playerid, health + 20.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -45);
				if (SBizzInfo[15][sbMafia] > 0) {
					SBizzInfo[15][sbTill] += (45 / 10 * 9);
					SBizzInfo[15][sbProducts]--;
					ObwyakInfo[SBizzInfo[15][sbMafia]][oGangMoney] += (45 / 10 * 1);
				} else {
					SBizzInfo[15][sbTill] += 45;
					SBizzInfo[15][sbProducts]--;
				}
			}
		}
	}
	else if (dialogid == 156) {
		new pla = GetPVarInt(playerid, "PlayerInvite");
		if (response) {
			new ftext[32];
			if (PlayerInfo[pla][pLeader] == 1) {
				PlayerInfo[playerid][pTeam] = 2;
				gTeam[playerid] = 2;
				ftext = "{0000FF}Полицию{FFFFFF}";
				ChosenSkin[playerid] = 280;
				SetPlayerSkin(playerid, 280);
			} else if (PlayerInfo[pla][pLeader] == 2) {
				PlayerInfo[playerid][pTeam] = 2;
				gTeam[playerid] = 2;
				ftext = "{0049FF}ФБР{FFFFFF}";
				ChosenSkin[playerid] = 285;
				SetPlayerSkin(playerid, 285);
			} else if (PlayerInfo[pla][pLeader] == 3) {
				PlayerInfo[playerid][pTeam] = 2;
				gTeam[playerid] = 2;
				ftext = "{BD34DA}Армию{FFFFFF}";
				ChosenSkin[playerid] = 287;
				SetPlayerSkin(playerid, 287);
			} else if (PlayerInfo[pla][pLeader] == 4) {
				PlayerInfo[playerid][pTeam] = 1;
				gTeam[playerid] = 1;
				ftext = "{F81414}МЧС{FFFFFF}";
				ChosenSkin[playerid] = 70;
				SetPlayerSkin(playerid, 70);
			} else if (PlayerInfo[pla][pLeader] == 5) {
				PlayerInfo[playerid][pTeam] = 5;
				gTeam[playerid] = 5;
				ftext = "{AF2FF3}LCN{FFFFFF}";
				ChosenSkin[playerid] = 258;
				SetPlayerSkin(playerid, 258);
			} else if (PlayerInfo[pla][pLeader] == 6) {
				PlayerInfo[playerid][pTeam] = 5;
				gTeam[playerid] = 5;
				ftext = "Yakuza";
				ChosenSkin[playerid] = 121;
				SetPlayerSkin(playerid, 121);
			} else if (PlayerInfo[pla][pLeader] == 7) {
				PlayerInfo[playerid][pTeam] = 7;
				gTeam[playerid] = 7;
				ftext = "Мерию";
				ChosenSkin[playerid] = 17;
				SetPlayerSkin(playerid, 17);
			} else if (PlayerInfo[pla][pLeader] == 8) {
				PlayerInfo[playerid][pTeam] = 10;
				gTeam[playerid] = 12;
				ftext = "Наёмные убийцы";
				ChosenSkin[playerid] = 127;
				SetPlayerSkin(playerid, 127);
			} else if (PlayerInfo[pla][pLeader] == 9) {
				PlayerInfo[playerid][pTeam] = 12;
				gTeam[playerid] = 12;
				ftext = "CNN Studio";
				ChosenSkin[playerid] = 289;
				SetPlayerSkin(playerid, 289);
			} else if (PlayerInfo[pla][pLeader] == 10) {
				PlayerInfo[playerid][pTeam] = 12;
				gTeam[playerid] = 12;
				ftext = "Taxi Cab Company";
				ChosenSkin[playerid] = 261;
				SetPlayerSkin(playerid, 261);
			} else if (PlayerInfo[pla][pLeader] == 11) {
				PlayerInfo[playerid][pTeam] = 12;
				gTeam[playerid] = 12;
				ftext = "Лицензеры";
				ChosenSkin[playerid] = 59;
				SetPlayerSkin(playerid, 59);
			} else if (PlayerInfo[pla][pLeader] == 12) {
				PlayerInfo[playerid][pTeam] = 13;
				gTeam[playerid] = 5;
				ftext = "Street Racers";
				ChosenSkin[playerid] = 21;
				SetPlayerSkin(playerid, 21);
			} else if (PlayerInfo[pla][pLeader] == 13) {
				PlayerInfo[playerid][pTeam] = 13;
				gTeam[playerid] = 5;
				ftext = "Grove Street Family";
				ChosenSkin[playerid] = 105;
				SetPlayerSkin(playerid, 105);
			} else if (PlayerInfo[pla][pLeader] == 14) {
				PlayerInfo[playerid][pTeam] = 14;
				gTeam[playerid] = 5;
				ftext = "El Coronos";
				ChosenSkin[playerid] = 47;
				SetPlayerSkin(playerid, 47);
			} else if (PlayerInfo[pla][pLeader] == 15) {
				PlayerInfo[playerid][pTeam] = 15;
				gTeam[playerid] = 15;
				ftext = "Los Santos Vagos";
				ChosenSkin[playerid] = 108;
				SetPlayerSkin(playerid, 108);
			} else if (PlayerInfo[pla][pLeader] == 19) {
				PlayerInfo[playerid][pTeam] = 19;
				gTeam[playerid] = 19;
				ftext = "San Fierro Rifa";
				ChosenSkin[playerid] = 174;
				SetPlayerSkin(playerid, 174);
			} else if (PlayerInfo[pla][pLeader] == 16) {
				PlayerInfo[playerid][pTeam] = 15;
				gTeam[playerid] = 5;
				ftext = "The Ballas Gang";
				ChosenSkin[playerid] = 28;
				SetPlayerSkin(playerid, 28);
			} else if (PlayerInfo[pla][pLeader] == 18) {
				PlayerInfo[playerid][pTeam] = 16;
				gTeam[playerid] = 5;
				ftext = "Triads";
				ChosenSkin[playerid] = 60;
				SetPlayerSkin(playerid, 60);
			} else if (PlayerInfo[pla][pLeader] == 20) {
				PlayerInfo[playerid][pTeam] = 21;
				gTeam[playerid] = 21;
				ftext = "Русскую Мафию";
				ChosenSkin[playerid] = 112;
				SetPlayerSkin(playerid, 112);
			} else { return true; }
			new giveplayer[MAX_PLAYER_NAME];
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(pla, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
			PlayerInfo[playerid][pMember] = PlayerInfo[pla][pLeader];
			PlayerInfo[playerid][pRank] = 1;
			SetPlayerHealth(playerid, 0);
			format(string, sizeof(string), "Приветствуем новичка %s. Принят(а) лидером: %s", sendername, giveplayer);
			SendRadioMessage(PlayerInfo[pla][pLeader], TEAM_AZTECAS_COLOR, string);
		}
	}
	if (dialogid == 671) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 134, DIALOG_STYLE_LIST, "B класс", "[1] Легковые\t\t[ 50000$ ]\n[2] Мототранспорт\t\t[ 60000$ ]", "Выбрать", "Закрыть");
			if (listitem == 1) ShowPlayerDialog(playerid, 135, DIALOG_STYLE_LIST, "E класс", "[1] Phoenix\n[2] Alpha\n[3] Euros\n[4] Flash\n[5] Elegy\n[6] Sultan\n[7] Jester\n[8]Uranus\n[9]Yosemite\n[10] Merit\n[11] Hustler\n[12] Slamvan\n[13] Majestic\n[14] Rancher\n[15] Mesa\n[16] Admiral\n[17] Sentinel\n[18] Buffalo\n[19] Burrito", "Выбрать", "Закрыть");
			if (listitem == 2) ShowPlayerDialog(playerid, 136, DIALOG_STYLE_LIST, "H класс", "[1] Легковые\t\t[ 80000$ ]\n[2] Мототранспорт\t\t[ 90000$ ]", "Выбрать", "Закрыть");
			if (listitem == 3) ShowPlayerDialog(playerid, 137, DIALOG_STYLE_LIST, "GF класс", "[1] ZR-350\n[2] Comet\n[3] FBI Rancher\n[4] Hotring Racer\n[5] Sandking\n[6] Hotring Racer\n[7] Monster\n[8]Monster A\n[9]Monster B\n[10] Patriot\n[11] Dune", "Выбрать", "Закрыть");
		} else {}
	}
	if (dialogid == 134) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 144, DIALOG_STYLE_LIST, "Легковое авто", "[1] Bravura\n[2] Perenniel\n[3] Manana\n[4] Washington\n[5] Oceanic\n[6] Glendale\n[7] Hermes\n[8] Sabre\n[9] Camper\n[10] Greenwood\n[11] Virgo\n[12] Blista Compact\n[13] Buccaneer\n[14] Willard\n[15] Blade\n[16] Clover\n[17] Tahoma\n[18] Savana\n[19] Brodway\n[20] Tornado", "Выбрать", "Закрыть");
			if (listitem == 1) ShowPlayerDialog(playerid, 139, DIALOG_STYLE_LIST, "Мототранспорт", "[1] Sanchez\n[2] Quad\n[3] Bandito\n[4] Freeway", "Выбрать", "Закрыть");
		} else {}
	}
	if (dialogid == 144) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 401;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 404;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 410;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 421;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 467;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 466;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 474;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 475;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 483;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 492;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 10) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 491;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 11) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 496;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 12) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 518;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 13) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 529;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 14) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 536;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 15) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 542;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 16) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 566;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 17) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 567;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 18) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 575;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 19) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 50000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 576;
				GivePlayerBablo(playerid, -50000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 45000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 5000;
				} else {
					SBizzInfo[5][sbTill] += 50000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 139) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 60000) return error(playerid, " У вас недостаточно денег, чтобы заказать мототранспорт.");
				HouseInfo[house][hVec] = 468;
				GivePlayerBablo(playerid, -6000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 54000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 6000;
				} else {
					SBizzInfo[5][sbTill] += 60000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 60000) return error(playerid, " У вас недостаточно денег, чтобы заказать мототранспорт.");
				HouseInfo[house][hVec] = 471;
				GivePlayerBablo(playerid, -60000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 54000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 6000;
				} else {
					SBizzInfo[5][sbTill] += 60000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 60000) return error(playerid, " У вас недостаточно денег, чтобы заказать мототранспорт.");
				HouseInfo[house][hVec] = 568;
				GivePlayerBablo(playerid, -60000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 54000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 6000;
				} else {
					SBizzInfo[5][sbTill] += 60000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, "Вам нужно иметь как минимум 2lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 60000) return error(playerid, " У вас недостаточно денег, чтобы заказать мототранспорт.");
				HouseInfo[house][hVec] = 463;
				GivePlayerBablo(playerid, -60000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 54000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 6000;
				} else {
					SBizzInfo[5][sbTill] += 60000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 135) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 603;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 602;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 587;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 585;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 562;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 560;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 559;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 558;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 554;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 551;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 10) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 545;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 11) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 535;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 12) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 517;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 13) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 505;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 14) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 500;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 15) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 445;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 16) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 405;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 17) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 402;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 18) {
				if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, "Вам нужно иметь как минимум 4lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 70000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 482;
				GivePlayerBablo(playerid, -70000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 63000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 7000;
				} else {
					SBizzInfo[5][sbTill] += 70000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 136) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 140, DIALOG_STYLE_LIST, "Легковое авто", "[1] Stretch\n[2] Infernus\n[3] Cheetah\n[4] Banshee\n[5] Hotknife\n[6] Turismo\n[7] Super GT\n[8] Bullet\n[9] Windsor\n[10] Feltzer\n[11] Stafford", "Выбрать", "Закрыть");
			if (listitem == 1) ShowPlayerDialog(playerid, 141, DIALOG_STYLE_LIST, "Мототранспорт", "[1] BF-400\n[2] FCR-900\n[3] NRG-500\n[4] PCJ-600\n[5] BF Injection", "Выбрать", "Закрыть");
		} else {}
	}
	if (dialogid == 140) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 409;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 411;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 415;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 429;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 434;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 451;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 506;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 541;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 555;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 533;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 10) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 80000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 580;
				GivePlayerBablo(playerid, -80000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 72000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 8000;
				} else {
					SBizzInfo[5][sbTill] += 80000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 141) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 90000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 581;
				GivePlayerBablo(playerid, -90000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 81000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 9000;
				} else {
					SBizzInfo[5][sbTill] += 90000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 90000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 521;
				GivePlayerBablo(playerid, -40000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 81000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 9000;
				} else {
					SBizzInfo[5][sbTill] += 90000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 90000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 522;
				GivePlayerBablo(playerid, -40000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 81000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 9000;
				} else {
					SBizzInfo[5][sbTill] += 90000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 90000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 461;
				GivePlayerBablo(playerid, -40000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 81000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 9000;
				} else {
					SBizzInfo[5][sbTill] += 90000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pLevel] < 7) return error(playerid, "Вам нужно иметь как минимум 7lvl, для покупки этого транспорта.");
				if (GetPlayerBablo(playerid) < 90000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 424;
				GivePlayerBablo(playerid, -40000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 81000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 9000;
				} else {
					SBizzInfo[5][sbTill] += 90000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 137) {
		if (response) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (listitem == 0) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 477;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 480;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 490;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 494;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 495;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 502;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 444;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 556;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 557;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 470;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pLevel] < 5) return error(playerid, " Вам нужно иметь как минимум 5 уровень, для покупки этого транспорта.");
				if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не можите иметь такой транспорт.");
				if (GetPlayerBablo(playerid) < 110000) return error(playerid, " У вас недостаточно денег, чтобы заказать автомобиль.");
				HouseInfo[house][hVec] = 573;
				GivePlayerBablo(playerid, -110000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 99000;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 11000;
				} else {
					SBizzInfo[5][sbTill] += 1100000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			}
		} else {}
	}
	if (dialogid == 1799) {
		if (response) {
			if (listitem == 0) {
				new level = PlayerInfo[playerid][pDetSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Детектива = 1.");
					format(string, sizeof(string), "Вам нужно найти %d человек, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Детектива = 2.");
					format(string, sizeof(string), "Вам нужно найти %d человек, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Детектива = 3.");
					format(string, sizeof(string), "Вам нужно найти %d человек, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Детектива = 4.");
					format(string, sizeof(string), "Вам нужно найти %d человек, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Детектива = 5."); }
			}
			if (listitem == 1) //Пункт два
			{
				new level = PlayerInfo[playerid][pLawSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Адвоката = 1.");
					format(string, sizeof(string), "Вам нужно освободить %d человек, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Адвоката = 2.");
					format(string, sizeof(string), "Вам нужно освободить %d человек, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Адвоката = 3.");
					format(string, sizeof(string), "Вам нужно освободить %d человек, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Адвоката = 4.");
					format(string, sizeof(string), "Вам нужно освободить %d человек, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Адвоката = 5."); }
			}
			if (listitem == 2) {
				new level = PlayerInfo[playerid][pJackSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Угонщика = 1.");
					format(string, sizeof(string), "Вам нужно украсть %d машин, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Угонщика = 2.");
					format(string, sizeof(string), "Вам нужно украсть %d машин, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Угонщика = 3.");
					format(string, sizeof(string), "Вам нужно украсть %d машин, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Угонщика = 4.");
					format(string, sizeof(string), "Вам нужно украсть %d машин, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Угонщика = 5."); }
			}
			if (listitem == 3) {
				new level = PlayerInfo[playerid][pDrugsSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Наркодиллера = 1.");
					format(string, sizeof(string), "Вам нужно продать наркоту %d людям, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Наркодиллера = 2.");
					format(string, sizeof(string), "Вам нужно продать наркоту %d людям, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Наркодиллера = 3.");
					format(string, sizeof(string), "Вам нужно продать наркоту %d людям, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Наркодиллера = 4.");
					format(string, sizeof(string), "Вам нужно продать наркоту %d людям, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Наркодиллера = 5."); }
			}
			if (listitem == 4) {
				new level = PlayerInfo[playerid][pDalnoboiSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Дальнобойщика = 1.");
					format(string, sizeof(string), "Вам нужно совершить %d рейсов, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Дальнобойщика = 2.");
					format(string, sizeof(string), "Вам нужно совершить %d рейсов, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Дальнобойщика = 3.");
					format(string, sizeof(string), "Вам нужно совершить %d рейсов, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Дальнобойщика = 4.");
					format(string, sizeof(string), "Вам нужно совершить %d рейсов, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Дальнобойщика = 5."); }
			}
			if (listitem == 5) {
				new level = PlayerInfo[playerid][pNewsSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Репортёра = 1.");
					format(string, sizeof(string), "Вам нужно написать в /news %d раз(а), чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Репортёра = 2.");
					format(string, sizeof(string), "Вам нужно написать в /news %d раз(а), чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Репортёра = 3.");
					format(string, sizeof(string), "Вам нужно написать в /news %d раз(а), чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Репортёра = 4.");
					format(string, sizeof(string), "Вам нужно написать в /news %d раз(а), чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Репортёра = 5."); }
			}
			if (listitem == 6) {
				new level = PlayerInfo[playerid][pMechSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Механика = 1.");
					format(string, sizeof(string), "Вам нужно починить/заправить %d машин, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Механика = 2.");
					format(string, sizeof(string), "Вам нужно починить/заправить %d машин, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Механика = 3.");
					format(string, sizeof(string), "Вам нужно починить/заправить %d машин, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Механика = 4.");
					format(string, sizeof(string), "Вам нужно починить/заправить %d машин, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Механика = 5."); }
			}
			if (listitem == 7) {
				new level = PlayerInfo[playerid][pCarSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Автодиллера = 1.");
					format(string, sizeof(string), "Вам нужно продать %d машин, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Автодиллера = 2.");
					format(string, sizeof(string), "Вам нужно продать %d машин, чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Автодиллера = 3.");
					format(string, sizeof(string), "Вам нужно продать %d машин, чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Автодиллера = 4.");
					format(string, sizeof(string), "Вам нужно продать %d машин, чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Автодиллера = 5."); }
			}
			if (listitem == 8) {
				new level = PlayerInfo[playerid][pFishSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Рыбака = 1.");
					format(string, sizeof(string), "Вам нужно поймать %d рыб, чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 250) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Рыбака = 2.");
					format(string, sizeof(string), "Вам нужно поймать %d рыб, чтобы поднять скилл.", 250 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 251 && level <= 500) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Рыбака = 3.");
					format(string, sizeof(string), "Вам нужно поймать %d рыб, чтобы поднять скилл.", 500 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 501 && level <= 999) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Рыбака = 4.");
					format(string, sizeof(string), "Вам нужно поймать %d рыб, чтобы поднять скилл.", 999 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Рыбака = 5."); }
			}
			if (listitem == 9) {
				new level = PlayerInfo[playerid][pGunSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Оружейника = 1.");
					format(string, sizeof(string), "Вам нужно продать оружие %d раз(а), чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Оружейника = 2.");
					format(string, sizeof(string), "Вам нужно продать оружие %d раз(а), чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Оружейника = 3.");
					format(string, sizeof(string), "Вам нужно продать оружие %d раз(а), чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Оружейника = 4.");
					format(string, sizeof(string), "Вам нужно продать оружие %d раз(а), чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл Оружейника = 5."); }
			}
			if (listitem == 10) //Первый пункт
			{
				new level = PlayerInfo[playerid][pDrochSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы = 1.");
					format(string, sizeof(string), "Вам нужно сдать сперму еще %d раз(а),чтобы поднять скилл.", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы = 2.");
					format(string, sizeof(string), "Вам нужно сдать сперму еще %d раз(а),чтобы поднять скилл.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы = 3.");
					format(string, sizeof(string), "Вам нужно сдать сперму еще %d раз(а),чтобы поднять скилл.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы = 4.");
					format(string, sizeof(string), "Вам нужно сдать сперму еще %d раз(а),чтобы поднять скилл.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы = 5."); }
			}
			if (listitem == 11) //Первый пункт
			{
				new level = PlayerInfo[playerid][pVorSkill];
				if (level >= 0 && level <= 50) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл карманника = 1.");
					format(string, sizeof(string), "Вам нужно ограбить игроков %d раз(а),для поднятия навыка воровства", 50 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 51 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл карманника = 2.");
					format(string, sizeof(string), "Вам нужно ограбить игроков %d раз(а),для поднятия навыка воровства", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл карманника = 3.");
					format(string, sizeof(string), "Вам нужно ограбить игроков %d раз(а),для поднятия навыка воровства", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл карманника = 4.");
					format(string, sizeof(string), "Вам нужно ограбить игроков %d раз(а),для поднятия навыка воровства", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл карманника = 5."); }
			}
			if (listitem == 12) //Первый пункт
			{
				new level = PlayerInfo[playerid][pGromilaSkill];
				if (level >= 0 && level <= 100) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл вышибалы = 1.");
					format(string, sizeof(string), "Вам нужно выбить деньги с игрока %d раз(а) для повышения навыка вышибалы.", 100 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 101 && level <= 200) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл вышибалы = 2.");
					format(string, sizeof(string), "Вам нужно выбить деньги с игрока %d раз(а) для повышения навыка вышибалы.", 200 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 201 && level <= 300) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл вышибалы = 3.");
					format(string, sizeof(string), "Вам нужно выбить деньги с игрока %d раз(а) для повышения навыка вышибалы.", 300 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 301 && level <= 400) {
					SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл вышибалы = 4.");
					format(string, sizeof(string), "Вам нужно выбить деньги с игрока %d раз(а) для повышения навыка вышибалы.", 400 - level);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else if (level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл вышибалы = 5."); }
			}
		} else {}
	}
	//--------------------- Рецепшен -----------------------------------------------
	if (dialogid == 5310) {
		if (response) {
			if (listitem == 0) {
				PlayerInfo[playerid][pOrigin] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Теперь вы будете возрождаться в городе {00C0FF}Los-Santos");

			} else if (listitem == 1) {
				PlayerInfo[playerid][pOrigin] = 2;
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Теперь вы будете возрождаться в городе {00C0FF}San-Fierro.");

			} else if (listitem == 2) {
				PlayerInfo[playerid][pOrigin] = 3;
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Теперь вы будете возрождаться в городе {00C0FF}Las-Venturas.");
			}
		}
	}
	//------------------------------------------------------------------------------
	if (dialogid == 434) {
		switch (listitem) {
			case 0 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль борьбы на Normal");
			}
			case 1 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль боя на Boxing");
			}
			case 2 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль борьбы на Kungfu");
			}
			case 3 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль борьбы на Keenhead");
			}
			case 4 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль борьбы на Grabkick");
			}
			case 5 :  {
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
				SendClientMessage(playerid, 0xFFFFFFAA, "Вы изменили свой стиль борьбы на Elbow");
			}
		}
	}
	if (dialogid == 1233) {
		if (response) {
			new string556[255];
			new pname[MAX_PLAYER_NAME];
			new idd = strval(inputtext);
			if (idd == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, " Игрок не найден.");
			if (!ProxDetectorS(8.0, playerid, idd)) return SendClientMessage(playerid, COLOR_GREY, " Игрок не рядом с вами.");
			if (PlayerInfo[idd][pHmed] == 2) return error(playerid, " У этого игрока есть аптечка");
			if (GetPVarInt(idd, "Hmed") > gettime()) return error(playerid, " Дать аптечку игроку можно раз в 30мин");
			if (playerid == idd) return error(playerid, " Нельзя дать аптечку самому себе.");
			GetPlayerName(idd, pname, sizeof(pname));
			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), " Доктор %s выдал Вам аптечку.", sendername);
			SendClientMessage(idd, 0x6495EDFF, string);
			SendClientMessage(idd, COLOR_WHITE, " (( Чтобы использовать аптечку, Введите /mheal ))");
			PlayerInfo[idd][pHmed] = 2;
			SetPVarInt(idd, "Hmed", gettime() + 180);
			medwarehouse -= 1;
			SaveMaterials();
			format(string556, sizeof(string556), " Вы выдали %s аптечку.", pname, idd);
			SendClientMessage(playerid, 0x6495EDFF, string556);
			return 1;
		} else {
			return 1;
		}
	}
	if (dialogid == 436) {
		if (response) {
			switch (listitem) {
				case 0 :  {
					if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вам нужен 2lvl, для приобретения этой лицензии.");
					if (GetPlayerBablo(playerid) < 40000) return error(playerid, " У вас нет столько денег.");
					if (PlayerInfo[playerid][pFlyLic] == 1) return error(playerid, " У вас уже есть данная лицензия");
					GivePlayerBablo(playerid, -40000);
					PlayerInfo[playerid][pFlyLic] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели лицензию на управление воздушным транспортом");
				}
				case 1 :  {
					if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вам нужен 1lvl, для приобретения этой лицензии.");
					if (GetPlayerBablo(playerid) < 10000) return error(playerid, " У вас нет столько денег.");
					if (PlayerInfo[playerid][pFishLic] == 1) return error(playerid, " У вас уже есть данная лицензия");
					GivePlayerBablo(playerid, -10000);
					PlayerInfo[playerid][pFishLic] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели лицензию на ловлю рыбы");
				}
				case 2 :  {
					if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вам нужен 1lvl, для приобретения этой лицензии.");
					if (GetPlayerBablo(playerid) < 30000) return error(playerid, " У вас нет столько денег.");
					if (PlayerInfo[playerid][pBoatLic] == 1) return error(playerid, " У вас уже есть данная лицензия");
					GivePlayerBablo(playerid, -30000);
					PlayerInfo[playerid][pBoatLic] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели лицензию на управление водным транспортом");
				}
				case 3 :  {
					if (PlayerInfo[playerid][pLevel] < 4) return error(playerid, " Вам нужен 4lvl, для приобретения этой лицензии.");
					if (GetPlayerBablo(playerid) < 100000) return error(playerid, " У вас нет столько денег.");
					if (PlayerInfo[playerid][pGunLic] == 1) return error(playerid, " У вас уже есть данная лицензия");
					GivePlayerBablo(playerid, -100000);
					PlayerInfo[playerid][pGunLic] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели лицензию на ношение огнестрельного оружия");
				}
				case 4 :  {
					if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вам нужен 2lvl, для приобретения этой лицензии.");
					if (GetPlayerBablo(playerid) < 40000) return error(playerid, " У вас нет столько денег.");
					if (PlayerInfo[playerid][pMotoLic] == 1) return error(playerid, " У вас уже есть данная лицензия");
					GivePlayerBablo(playerid, -40000);
					PlayerInfo[playerid][pMotoLic] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели лицензию на управление мото транспортом");
				}
			}
		}
	}
	if (dialogid == 701) {
		if (response) {
			format(string, sizeof(string), "Вы имеете %d$ на вашем счету.", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, 0xFFFFFFFF, string);
		}
		ShowPlayerDialog(playerid, 700, 2, "Банкомат", "{ffdb58}Баланс\n{ffdb58}Снять с счета\n{ffdb58}Перевод средств", "Дальше", "Отмена");
	}
	if (dialogid == 702) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1) return error(playerid, " Данная сумма привышает лимит вашего счета.");
			ConsumingMoney[playerid] = 1;
			GivePlayerBablo(playerid, cashdeposit);
			PlayerInfo[playerid][pAccount] = PlayerInfo[playerid][pAccount] - cashdeposit;
			format(string, sizeof(string), "Вы сняли %d$ с вашего счета. Остаток: %d$ ", cashdeposit, PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		format(string, sizeof(string), "{ffdb58}Баланс\n{ffdb58}Снять с счета\n{ffdb58}Перевод средств");
		ShowPlayerDialog(playerid, 700, 2, "Банкомат", string, "Дальше", "Отмена");
	} else if (dialogid == 1129) {
		if (response) {
			new sendername[MAX_PLAYERS];
			if (listitem == 0) {
				if (IsPlayerConnected(playerid)) {
					if (PlayerCuffed[playerid] > 0) return error(playerid, " Вы в наручниках.");
					if (PlayerInfo[playerid][pDrugs] == 0) return error(playerid, " У вас нет наркотиков.");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), " %s выкинул(а) в сторону все наркотики.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					PlayerInfo[playerid][pDrugs] = 0;
				}
			}
			if (listitem == 1) {
				if (IsPlayerConnected(playerid)) {
					if (PlayerCuffed[playerid] > 0) return error(playerid, " Вы в наручниках.");
					new gunID = GetPlayerWeapon(playerid);
					new gunAmmo = GetPlayerAmmo(playerid);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if (gunID != 0 && gunAmmo != 0) {
						SafeResetPlayerWeapons(playerid);
						format(string, sizeof(string), " %s выкинул(а) в сторону свое оружие.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						return true;
					} else {
						error(playerid, " У вас нет оружия.");
						return true;
					}
				}
			}
			if (listitem == 2) {
				if (IsPlayerConnected(playerid)) {
					if (PlayerCuffed[playerid] > 0) return error(playerid, " Вы в наручниках.");
					if (PlayerInfo[playerid][pMats] > 0) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " %s выкинул(а) в сторону все материалы.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						PlayerInfo[playerid][pMats] = 0;
					} else {
						error(playerid, " У вас нет материалов.");
					}
				}
			}
		}
	}
	if (dialogid == 2112) {
		if (response) {
			if (listitem == 0) {
				PlayAudioStreamForPlayer(playerid, "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128)");
				SendClientMessage(playerid, COLOR_WHITE, "Радио YourWorld-FM временно {ff3300}не работает{ffffff}.");
				SendClientMessage(playerid, COLOR_WHITE, "Автоматически была включена следущая станция.");
			}
			if (listitem == 1) {
				PlayAudioStreamForPlayer(playerid, "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128)");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Zaycev-FM [R'n'B] {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 2) {
				PlayAudioStreamForPlayer(playerid, "http://radio.zaycev.fm:9002/electronic/ZaycevFM(128)");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Zaycev-FM [Club] {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 3) {
				PlayAudioStreamForPlayer(playerid, "http://radio.zaycev.fm:9002/ZaycevFM(128)");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Zaycev-FM [Pop] {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 4) {
				PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8101/rr_128");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Record {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 5) {
				PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8102/ps_128");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Пиратская станция {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 6) {
				PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8102/club_128");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Club-FM {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 7) {
				PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8102/dub_128");
				SendClientMessage(playerid, COLOR_WHITE, "Радио DubStep-FM {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 8) {
				PlayAudioStreamForPlayer(playerid, "http://online.radiorecord.ru:8102/gop_128");
				SendClientMessage(playerid, COLOR_WHITE, "Радио Gop-FM [Club] {33aa33}включено{ffffff}. Приятного прослушивания.");
			}
			if (listitem == 9) {
				StopAudioStreamForPlayer(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Радиоприёмник {ff3300}отключен{ffffff}.");
			}
		} else {}
	} else if (dialogid == 348) {
		if (!response) return 1;
		if (listitem == 0) {
			if (strcmp(PlayerInfo[playerid][pOtherPass], "None", true)) return SendClientMessage(playerid, COLOR_GREY, "Дополнительный пароль уже установлен!");
			ShowPlayerDialog(playerid, 350, 1, "Доп. пароль", "{ff3300}Внимание! Дополнительный пароль должен состоять только\n{ff3300}Из английских букв, либо простых цыфр\n{ff3300}Если вы поставите доп. пароль с русскими буквами, то вместо русских букв, будет -{33aa33} ???\n\n{ffdb58}Введите ваш дополнительный пароль:", "Принять", "Отмена");
		}
	} else if (dialogid == 349) {
		if (!response) return 1;
		if (strlen(inputtext) < 1 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 349, 1, "Электронный адрес!", "Введите ваш электронный адрес:", "Принять", "Отмена");
		if (strfind(inputtext, "@", true) == -1 || strfind(inputtext, ".", true) == -1) {
			SendClientMessage(playerid, COLOR_GREY, "Неверный формат электронного адреса!");
			return ShowPlayerDialog(playerid, 349, 1, "Электронный адрес!", "Введите ваш электронный адрес:", "Принять", "Отмена");
		}
		new strs[32 + 32];
		strmid(PlayerInfo[playerid][pMail], inputtext, 0, strlen(inputtext), 32);
		format(strs, sizeof(strs), "Ваш электронный адрес: {ffff00}%s", PlayerInfo[playerid][pMail]);
		SendClientMessage(playerid, COLOR_WHITE, strs);
	} else if (dialogid == 350) {
		if (!response) return 1;
		if (strlen(inputtext) < 1 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 350, 1, "Доп. пароль", "{ff3300}Внимание! Дополнительный пароль должен состоять только\n{ff3300}Из английских букв, либо простых цыфр\n{ff3300}Если вы поставите доп. пароль с русскими буквами, то вместо русских букв, будет -{33aa33} ???\n\n{ffdb58}Введите ваш дополнительный пароль:", "Принять", "Отмена");
		new strd[100];
		strmid(PlayerInfo[playerid][pOtherPass], inputtext, 0, strlen(inputtext), 32);
		format(strd, sizeof(strd), "Ваш дополнительный пароль: {ffff00}%s", inputtext);
		SendClientMessage(playerid, COLOR_WHITE, strd);
	} else if (dialogid == 351) {
		new string2[128], tmp2[128];
		if (!response) return Kick(playerid);
		if (strlen(inputtext) < 1 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 351, 1, "Безопасность", "{ffdb58}Введите ваш дополнительный пароль:", "Принять", "Отмена");
		if (!strcmp(PlayerInfo[playerid][pOtherPass], inputtext, true)) {
			new playername2[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername2, sizeof(playername2));
			PlayerInfo[playerid][pAdjustable] = 0;
			ConsumingMoney[playerid] = 1;
			CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
			PlayerInfo[playerid][pReg] = 1;
			gPlayerLogged[playerid] = 1;
			if (PlayerInfo[playerid][pBlockeds] >= 3) {
				SendClientMessage(playerid, COLOR_WHITE, "Ваш аккаунт {ff0000}заблокирован{ffffff}. Так как уже у вас 3 блокировки.");
				Kick(playerid);
				return 0;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Добро пожаловать на сервер {00C0FF}YourWorld [RPG].{ffffff}Приятной вам игры.");
			printf("%s has logged in.", playername2);
			if (PlayerInfo[playerid][pDonateRank] == 1) SendClientMessage(playerid, COLOR_WHITE, "У тебя {F5DEB3}VIP Аккаунт 1 уровня{FFFFFF}");
			if (PlayerInfo[playerid][pDonateRank] == 2) SendClientMessage(playerid, COLOR_WHITE, "У тебя {F5DEB3}VIP Аккаунт 2 уровня{FFFFFF}");
			if (PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] > 0) {
				if (PlayerInfo[playerid][pHelper] >= 1) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Хелпер %d-го уровня.", PlayerInfo[playerid][pHelper]);
				if (PlayerInfo[playerid][pAdmin] == 1) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 2) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 3) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 4) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор 4-го уровня", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 5) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Гл.Модератор", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 6) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Гл. Администратор", PlayerInfo[playerid][pAdmin]);
				SendClientMessage(playerid, COLOR_WHITE, string2);
			}
			SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pChar], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
			if (gTeam[playerid] == 0) gTeam[playerid] = 3;
			else gTeam[playerid] = PlayerInfo[playerid][pTeam];
			format(tmp2, sizeof(tmp2), "~w~ѓO—PO ЊO„A‡O‹A¦’ ~n~~y~   %s", playername2);
			GameTextForPlayer(playerid, tmp2, 5000, 1);
			for (new i = GetMaxPlayers() - 1; i != -1; i--) {
				if (!IsPlayerConnected(i)) continue;
				if (PlayerInfo[i][pMask] == 1) ShowPlayerNameTagForPlayer(playerid, i, 0);
			}
			Spawned[playerid] = 1;
			SpawnPlayer(playerid);
			SetCameraBehindPlayer(playerid);
		} else Kick(playerid);
	} else if (dialogid == 3000) {
		if (response) {
			if (listitem == 6) {
				OnPlayerCommandText(playerid, "/rules2");
			}
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 3001, DIALOG_STYLE_LIST, "КПК: Кто Онлайн", "{ffdb58}Лидеры онлайн\n{ffdb58}Участники фракции онлайн\n{ffdb58}Адвокаты онлайн", "Выбор", "Назад");
			}
			if (listitem == 2) {
				ShowPlayerDialog(playerid, 3002, DIALOG_STYLE_LIST, "КПК: Навигация", "{ffdb58}Локации\n{ffdb58}Дополнительный заработок\n{ffdb58}Магазины одежды", "Выбор", "Назад");
			}
			if (listitem == 3) {
				ShowPlayerDialog(playerid, 3004, DIALOG_STYLE_LIST, "КПК: Информация", "{ffdb58}Команды Сервера\n{ffdb58}Правила Дорожного Движения", "Выбор", "Назад");
			}
			if (listitem == 4) {
				ShowPlayerDialog(playerid, 34852, DIALOG_STYLE_MSGBOX, "КПК: Сменить пароль", "{ffdb58}Чтобы сменить пароль, используйте команду - {ffffff}/setpass", "Понятно", "");
			}
			if (listitem == 5) {
				ShowPlayerDialog(playerid, 348, DIALOG_STYLE_LIST, "КПК: Дополнительный пароль", "{ffdb58}Дополнительный пароль\n{ffdb58}Вспомнить дополнительный пароль", "Выбор", "Закрыть");
			}
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 3003, DIALOG_STYLE_LIST, "КПК: Управление Аккаунтом", "{ffdb58}Ваша Статистика\n{ffdb58}Навыки по работе\n{ffdb58}Ваши Лицензии", "Выбор", "Назад");
			}
		} else {}
	} else if (dialogid == 3008) {
		if (response) {
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 3009, DIALOG_STYLE_LIST, "Аренда Авто", "Арендовать\nОтмена", "Выбор", "Закрыть");
			}
		}
	} else if (dialogid == 3001) {
		if (response) {
			if (listitem == 0) return OnPlayerCommandText(playerid, "/leaders");
			if (listitem == 1) return OnPlayerCommandText(playerid, "/members");
			if (listitem == 2) {
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i)) {
						new sendername[MAX_PLAYER_NAME];
						if (PlayerInfo[i][pJob] != 2) continue;
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s%s [id: %d]\n", string, sendername, i);
						ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "{00C0FF}Адвокаты онлайн", string, "Ok", "");
					}
				}
				return 1;
			}
		} else return ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
	} else if (dialogid == 3003) {
		if (response) {
			if (listitem == 0) {
				if (IsPlayerConnected(playerid)) {
					ShowStats(playerid, playerid);
				}
			} else if (listitem == 1) OnPlayerCommandText(playerid, "/skill");
			else if (listitem == 2) OnPlayerCommandText(playerid, "/licenses");
		} else ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
	} else if (dialogid == 3009) {
		if (response) { OnPlayerCommandText(playerid, "/rentcar"); } else { OnPlayerCommandText(playerid, "/exit"); }
	} else if (dialogid == 3004) {
		if (response) {
			if (listitem == 0) OnPlayerCommandText(playerid, "/help");
			else if (listitem == 1) OnPlayerCommandText(playerid, "/pdd");
		} else ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
	} else if (dialogid == 3002) {
		if (response) {
			if (CP[playerid] > 0 || che[playerid] > 0 || checkk[playerid] > 0 || ChekPoint[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Не доступно в данный момент");
			if (listitem == 0) {
				ShowPlayerDialog(playerid, 309, DIALOG_STYLE_LIST, "KPK", "{ffdb58}Банк SF\n{ffdb58}Банк LS\n{ffdb58}Банк LV\n{ffdb58}Полицейский участок\n{ffdb58}Склад продуктов LS\n{ffdb58}Cклад продуктов SF\n{ffdb58}Склад продуктов LV\n{ffdb58}Авто Школа\n{ffdb58}Центр занятости\n{ffdb58}Церковь\n{ffdb58}Покупка пакетов\n{ffdb58}Сдача пакетов\n{ffdb58}Склад материалов\n{ffdb58}Место старта нелегальных гонок\n{ffdb58}Покер клуб\n{ffdb58}Стол заказов(для автоугонщиков)\n{ff3300}Отключить маркер", "Ок", "Отмена");
			} else if (listitem == 1) {
				ShowPlayerDialog(playerid, 310, DIALOG_STYLE_LIST, "KPK", "{ffdb58}Мусоровоз\n{ffdb58}Уборщик улиц\n{ffdb58}Грузчик\n{ffdb58}Сдача спермы\n{ffdb58}Шахтёр\n{ff3300}Отключить маркер", "Ок", "Отмена");
			} else if (listitem == 2) {
				ShowPlayerDialog(playerid, 2655, DIALOG_STYLE_LIST, "KPK", "{ffdb58}Binco LS\n{ffdb58}Binco SF\n{ffdb58}Binco LV\n{ffdb58}Zip LS\n{ffdb58}Zip SF\n{ffdb58}Zip LV\n{ffdb58}Victim LS\n{ffdb58}Victim SF\n{ffdb58}Victim LV\n{ff3300}Отключить маркер", "Ок", "Отмена");
			}
		} else {
			ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
		}
	} else if (dialogid == 309) {
		if (response) {
			if (listitem == 0) {
				SetPlayerCheckpoint(playerid, -2448.9124, 503.5216, 30.0881, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 1) {
				SetPlayerCheckpoint(playerid, 1462.5239, -1015.2122, 26.2853, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 2) {
				SetPlayerCheckpoint(playerid, 2438.9033, 2376.2527, 10.8203, 5.0); //Покупка матов
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 3) {
				SetPlayerCheckpoint(playerid, 1551.9063, -1675.6187, 16.0562, 5.0); //Сдача матов
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 4) {
				SetPlayerCheckpoint(playerid, 2760.9414, -2428.0579, 13.5266, 5.0); //КПЗ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 5) {
				SetPlayerCheckpoint(playerid, -1740.5834, 152.4039, 3.5547, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 6) {
				SetPlayerCheckpoint(playerid, 2348.3230, 2727.2122, 10.8203, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 7) {
				SetPlayerCheckpoint(playerid, -2024.7554, -95.0198, 35.8843, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 8) {
				SetPlayerCheckpoint(playerid, 2412.88, 1123.84, 10.82, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 9) {
				SetPlayerCheckpoint(playerid, -1981.7372, 1118.0286, 53.1251, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 10) {
				SetPlayerCheckpoint(playerid, 2814.4006, 2587.2817, 9.9087, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 11) {
				SetPlayerCheckpoint(playerid, -2119.5737, -176.2192, 35.3203, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 12) {
				SetPlayerCheckpoint(playerid, -557.4274, -503.5450, 24.7572, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 13) {
				SetPlayerCheckpoint(playerid, 1159.4309, -751.9417, 59.8787, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 14) {
				SetPlayerCheckpoint(playerid, 2226.8743, 1840.1384, 10.8203, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 15) {
				SetPlayerCheckpoint(playerid, -1939.99, -1087.81, 30.78, 5.0); // АШ
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 16) {
				DisablePlayerCheckpoint(playerid);
				format(string, sizeof(string), "~r~MAPKEP YѓA‡E®");
				GameTextForPlayer(playerid, string, 5000, 1);
			}
		}
		ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
		return true;
	} else if (dialogid == 310) {
		if (response) {
			if (listitem == 0) {
				SetPlayerCheckpoint(playerid, -1854.9508, -1561.2805, 21.7500, 5.0); //мусор
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 1) {
				SetPlayerCheckpoint(playerid, -2483.6809, 781.9728, 35.1719, 5.0); // уборщик улиц
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 2) {
				SetPlayerCheckpoint(playerid, 2138.4390, -2281.3506, 20.6719, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 3) {
				SetPlayerCheckpoint(playerid, 1615.0743, 1816.1261, 10.8203, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 4) {
				SetPlayerCheckpoint(playerid, -1830.2748, -1639.3976, 22.2496, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen na karte");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 4) {
				DisablePlayerCheckpoint(playerid);
				format(string, sizeof(string), "~r~MAPKEP YѓA‡E®");
				GameTextForPlayer(playerid, string, 5000, 1);
			}
		}
		ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "Карманный компьютер", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
		return true;
	} else if (dialogid == 2655) {
		if (response) {
			if (listitem == 0) {
				SetPlayerCheckpoint(playerid, 2244.3423, -1665.5542, 15.4766, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 1) {
				SetPlayerCheckpoint(playerid, -2374.2480, 910.1654, 45.4453, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 2) {
				SetPlayerCheckpoint(playerid, 2102.2998, 2257.5190, 11.0234, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}

			if (listitem == 3) {
				SetPlayerCheckpoint(playerid, 1976.0017, -2036.6216, 13.5469, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 4) {
				SetPlayerCheckpoint(playerid, -1882.6859, 866.1516, 35.1719, 5.0); ///механик
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 5) {
				SetPlayerCheckpoint(playerid, 2090.5525, 2224.0918, 11.0234, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 6) {
				SetPlayerCheckpoint(playerid, 461.0589, -1500.9823, 31.0581, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 7) {
				SetPlayerCheckpoint(playerid, -1694.9639, 951.4175, 24.8906, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 8) {
				SetPlayerCheckpoint(playerid, 2802.5417, 2430.2510, 11.0625, 5.0);
				format(string, sizeof(string), "~r~Marker ustanovlen");
				GameTextForPlayer(playerid, string, 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_JOBS;
				return true;
			}
			if (listitem == 9) {
				DisablePlayerCheckpoint(playerid);
				format(string, sizeof(string), "~r~Marker off");
				GameTextForPlayer(playerid, string, 5000, 1);
			}
		}
		return true;
	}
	if (dialogid == 703) {
		if (response) {
			new cashdeposit = strval(inputtext);
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 1) {
				error(playerid, " Данная сумма превышает лимит вашего счета.");
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "|___ Банковая информация ___|");
			format(string, sizeof(string), "  Старый баланс: %d$", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			GivePlayerBablo(playerid, -cashdeposit);
			PlayerInfo[playerid][pAccount] = cashdeposit + PlayerInfo[playerid][pAccount];
			format(string, sizeof(string), "  Депозит: %d$", cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  Новый баланс: %d$", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		ShowPlayerDialog(playerid, 700, 2, "Банкомат", "{ffdb58}Баланс\n{ffdb58}Снять с счета\n{ffdb58}Перевод средств ", "Дальше", "Отмена");
	}
	if (dialogid == 704) {
		if (!response) {
			ShowPlayerDialog(playerid, 700, 2, "Банкомат", "{ffdb58}Баланс\n{ffdb58}Снять с счета\n{ffdb58}Перевод средств", "Дальше", "Отмена");
		} else {
			if (strlen(inputtext)) {
				WireTransferId[playerid] = strval(inputtext);
				ShowPlayerDialog(playerid, 705, 1, "Баланс", "{ffdb58}Введите сумму для передачи:", "Перевести", "Назад");
			}
		}
	}
	else if (dialogid == 10) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35);
				GivePlayerBablo(playerid, -2000);
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 1800;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[1][bTill] += 2000;
					BizzInfo[1][bProducts]--;
				}
				BizzInfo[1][bTill] += 2000;
				BizzInfo[1][bProducts]--;
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили deagle[35 патронов]");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 3150;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[1][bTill] += 3500;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили shotgun[35 патронов]");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 4500;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[1][bTill] += 5000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили rifle[30 патронов]");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 4500;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[1][bTill] += 5000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили AK-47[250 патронов]");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 5400;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[1][bTill] += 6000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили M4[300 патрон]");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 2700;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[1][bTill] += 3000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили MP5[200 патрон]");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 900;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[1][bTill] += 1000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Shovel");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 900;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[1][bTill] += 1000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Dildo.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 900;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[1][bTill] += 1000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Golf Club");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[1][bTill] += 1800;
					BizzInfo[1][bProducts]--;
					ObwyakInfo[BizzInfo[1][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[1][bTill] += 2000;
					BizzInfo[1][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Автомат Sdpistol.");
			}
		}
	} else if (dialogid == 11) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[10][bTill] += 1800;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[10][bTill] += 2000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили deagle[35 патронов]");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 3150;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[10][bTill] += 3500;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили shotgun[35 патронов]");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 4500;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[10][bTill] += 5000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили rifle[30 патронов]");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 4500;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[10][bTill] += 5000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили AK-47[250 патронов]");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 5400;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[10][bTill] += 6000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили M4[300 патрон]");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 2700;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[10][bTill] += 3000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили MP5[200 патрон]");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Shovel");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Dildo.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Golf Club");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 1800;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[10][bTill] += 2000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Автомат Sdpistol.");
			}
		}
	} else if (dialogid == 12102) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[1][bMafia] > 0) {
					BizzInfo[10][bTill] += 1800;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[10][bTill] += 2000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили deagle[35 патронов]");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 3150;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[10][bTill] += 3500;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили shotgun[35 патронов]");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 4500;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[10][bTill] += 5000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили rifle[30 патронов]");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 4500;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[10][bTill] += 5000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили AK-47[250 патронов]");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 5400;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[10][bTill] += 6000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили M4[300 патрон]");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 2700;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[10][bTill] += 3000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили MP5[200 патрон]");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Shovel");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Dildo.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 900;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[10][bTill] += 1000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Golf Club");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[10][bMafia] > 0) {
					BizzInfo[10][bTill] += 1800;
					BizzInfo[10][bProducts]--;
					ObwyakInfo[BizzInfo[10][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[10][bTill] += 2000;
					BizzInfo[10][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Автомат Sdpistol.");
			}
		}
	} else if (dialogid == 12) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 1800;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[11][bTill] += 2000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили deagle[35 патронов]");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 3150;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[11][bTill] += 3500;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили shotgun[35 патронов]");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 4500;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[11][bTill] += 5000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили rifle[30 патронов]");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 4500;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[11][bTill] += 5000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили AK-47[250 патронов]");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 4500;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[11][bTill] += 5000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили M4[300 патрон]");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 2700;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 270;
				} else {
					BizzInfo[11][bTill] += 3000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили MP5[200 патрон]");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 900;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[11][bTill] += 1000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Shovel");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 900;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[11][bTill] += 1000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Dildo.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 900;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[11][bTill] += 1000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Golf Club");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[11][bMafia] > 0) {
					BizzInfo[11][bTill] += 1800;
					BizzInfo[11][bProducts]--;
					ObwyakInfo[BizzInfo[11][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[11][bTill] += 2000;
					BizzInfo[11][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Автомат Sdpistol.");
			}
		}
	} else if (dialogid == 138) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35);
				GivePlayerBablo(playerid, -2000);
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 1800;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[9][bTill] += 2000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили deagle[35 патронов]");
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 3150;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[9][bTill] += 3500;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили shotgun[35 патронов]");
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 4500;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[9][bTill] += 5000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили rifle[30 патронов]");
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 4500;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[9][bTill] += 5000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили AK-47[250 патронов]");
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 5400;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[9][bTill] += 6000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили M4[300 патрон]");
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 2700;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[9][bTill] += 3000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили MP5[200 патрон]");
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 900;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[9][bTill] += 1000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Shovel");
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 900;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[9][bTill] += 1000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Dildo.");
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 900;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[9][bTill] += 1000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Golf Club");
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[9][bMafia] > 0) {
					BizzInfo[9][bTill] += 1800;
					BizzInfo[9][bProducts]--;
					ObwyakInfo[BizzInfo[9][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[9][bTill] += 2000;
					BizzInfo[9][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы купили Автомат Sdpistol.");
			}
		}
	} else if (dialogid == 14) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 1800;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[8][bTill] += 2000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 3150;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[8][bTill] += 3500;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 4500;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[8][bTill] += 5000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 4500;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[8][bTill] += 5000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 5400;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[8][bTill] += 6000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 2700;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[8][bTill] += 3000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 900;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[8][bTill] += 1000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 900;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[8][bTill] += 1000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 900;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[8][bTill] += 1000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[8][bMafia] > 0) {
					BizzInfo[8][bTill] += 1800;
					BizzInfo[8][bProducts]--;
					ObwyakInfo[BizzInfo[8][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[8][bTill] += 2000;
					BizzInfo[8][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 15) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 1800;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[14][bTill] += 2000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 3150;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[14][bTill] += 3500;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 4500;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[14][bTill] += 5000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 4500;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[14][bTill] += 5000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 5400;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[14][bTill] += 6000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 4500;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[14][bTill] += 5000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 900;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[14][bTill] += 1000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 900;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[14][bTill] += 1000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 900;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[14][bTill] += 1000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[14][bMafia] > 0) {
					BizzInfo[14][bTill] += 1800;
					BizzInfo[14][bProducts]--;
					ObwyakInfo[BizzInfo[14][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[14][bTill] += 2000;
					BizzInfo[14][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 16) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 1800;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[3][bTill] += 2000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 1800;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[3][bTill] += 2000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 4500;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[3][bTill] += 5000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 4500;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[3][bTill] += 5000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 5400;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[3][bTill] += 6000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 2700;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[3][bTill] += 3000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 900;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[3][bTill] += 1000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 900;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[3][bTill] += 1000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 900;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[3][bTill] += 1000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[3][bMafia] > 0) {
					BizzInfo[3][bTill] += 1800;
					BizzInfo[3][bProducts]--;
					ObwyakInfo[BizzInfo[3][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[3][bTill] += 2000;
					BizzInfo[3][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 17) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 1800;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[12][bTill] += 2000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 3150;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[12][bTill] += 3500;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 4500;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[12][bTill] += 5000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 4500;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[12][bTill] += 5000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 5400;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[12][bTill] += 6000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 2700;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[12][bTill] += 2000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 900;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[12][bTill] += 1000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 900;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[12][bTill] += 1000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 900;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[12][bTill] += 1000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[12][bMafia] > 0) {
					BizzInfo[12][bTill] += 1800;
					BizzInfo[12][bProducts]--;
					ObwyakInfo[BizzInfo[12][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[12][bTill] += 2000;
					BizzInfo[12][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 18) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 1800;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[0][bTill] += 2000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 3150;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[0][bTill] += 3500;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 4500;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[0][bTill] += 5000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 4500;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[0][bTill] += 5000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 5400;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[0][bTill] += 6000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 2700;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[0][bTill] += 3000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 900;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[0][bTill] += 1000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 900;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[0][bTill] += 1000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 900;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[0][bTill] += 1000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[0][bMafia] > 0) {
					BizzInfo[0][bTill] += 1800;
					BizzInfo[0][bProducts]--;
					ObwyakInfo[BizzInfo[0][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[0][bTill] += 2000;
					BizzInfo[0][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 20) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 1800;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[13][bTill] += 2000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 3150;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[13][bTill] += 3500;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 4500;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[13][bTill] += 5000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 4500;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[13][bTill] += 5000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 5400;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[13][bTill] += 6000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 2700;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[13][bTill] += 3000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 900;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[13][bTill] += 1000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 900;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[13][bTill] += 1000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 900;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[13][bTill] += 1000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[13][bMafia] > 0) {
					BizzInfo[13][bTill] += 1800;
					BizzInfo[13][bProducts]--;
					ObwyakInfo[BizzInfo[13][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[13][bTill] += 2000;
					BizzInfo[13][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	} else if (dialogid == 22) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 35); //  Дигл
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 1800;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[15][bTill] += 2000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 35); //  шотган
				GivePlayerBablo(playerid, -3500); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 3150;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 350;
				} else {
					BizzInfo[15][bTill] += 3500;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[35 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 33, 30); //  рифл
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 4500;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[15][bTill] += 5000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили rifle[30 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 30, 250); //  AK-47
				GivePlayerBablo(playerid, -5000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 4500;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 500;
				} else {
					BizzInfo[15][bTill] += 5000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили AK-47[250 патронов]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 300); //  M4
				GivePlayerBablo(playerid, -6000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 5400;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 600;
				} else {
					BizzInfo[15][bTill] += 6000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили M4[300 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200); //  MP5
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 2700;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 300;
				} else {
					BizzInfo[15][bTill] += 3000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили MP5[200 патрон]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 6, 1); // лопата
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 900;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[15][bTill] += 1000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Shovel");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 10, 1); //  дидло
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 900;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[15][bTill] += 1000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Dildo.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 8) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 2, 1); // клюшка
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 900;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 100;
				} else {
					BizzInfo[15][bTill] += 1000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Golf Club");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 9) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 22, 100); // sdpistol
				GivePlayerBablo(playerid, -2000); //    Цена за оружие
				if (BizzInfo[15][bMafia] > 0) {
					BizzInfo[15][bTill] += 1800;
					BizzInfo[15][bProducts]--;
					ObwyakInfo[BizzInfo[15][bMafia]][oGangMoney] += 200;
				} else {
					BizzInfo[15][bTill] += 2000;
					BizzInfo[15][bProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили Автомат Sdpistol.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
	}
	//===================================[/copgun]==================================
	else if (dialogid == 255) {
		if (response) {
			if (listitem == 0) {
				if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 24, 50); //  Дигл
				GivePlayerBablo(playerid, -1000); //    Цена за оружие
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 900;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 100;
				} else {
					SBizzInfo[9][sbTill] += 1000;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили deagle[50 патронов].");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 1) {
				if (GetPlayerBablo(playerid) < 1500) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 25, 50); //  шотган
				GivePlayerBablo(playerid, -1500); //    Цена за оружие
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 1350;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 150;
				} else {
					SBizzInfo[9][sbTill] += 1500;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				format(string, sizeof(string), "Вы купили shotgun[50 патронов].");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 2) {
				if (GetPlayerBablo(playerid) < 3000) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 31, 250);
				GivePlayerBablo(playerid, -3000);
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 2700;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 300;
				} else {
					SBizzInfo[9][sbTill] += 3000;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Вы купили M-4[250 патронов].");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 3) {
				if (GetPlayerBablo(playerid) < 2500) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 29, 200);
				GivePlayerBablo(playerid, -2500);
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 2250;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 250;
				} else {
					SBizzInfo[9][sbTill] += 2500;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Вы купили MP-5[250 патронов].");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 4) {
				if (GetPlayerBablo(playerid) < 3000) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 41, 1000); //  балончик
				GivePlayerBablo(playerid, -3000); //    Цена за оружие
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 2700;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 300;
				} else {
					SBizzInfo[9][sbTill] += 3000;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Вы купили spray.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 5) {
				if (GetPlayerBablo(playerid) < 3000) return error(playerid, " У вас недостаточно средств для покупки данного оружия.");
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				ServerGivePlayerWeapons(playerid, 17, 20); // дымовая
				GivePlayerBablo(playerid, -3000);
				if (SBizzInfo[9][sbMafia] > 0) {
					SBizzInfo[9][sbTill] += 2700;
					SBizzInfo[9][sbProducts]--;
					ObwyakInfo[SBizzInfo[9][sbMafia]][oGangMoney] += 300;
				} else {
					SBizzInfo[9][sbTill] += 3000;
					SBizzInfo[9][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Вы купили дымовую шашку.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 6) {
				if (PlayerInfo[playerid][pGunLic] < 1) return error(playerid, " Вы не можете купить оружие,так как у Вас нет лицензии на него");
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Вы одели бронежилет.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			if (listitem == 7) {
				tazer[playerid] = 20;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш тазер был заряжен.");
			}
		}
	}
	//================================[Набор Хитманов]==============================
	else if (dialogid == 13) {
		if (response) {
			if (listitem == 0) {
				new sendername[255];
				ServerGivePlayerWeapons(playerid, 4, 1);
				GivePlayerBablo(playerid, -1000); // ЦЕНА ЗА ОРУЖИЕ
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s взял knife со склада.", sendername);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
			if (listitem == 1) {
				new sendername[255];
				ServerGivePlayerWeapons(playerid, 23, 50); // Sniper
				GivePlayerBablo(playerid, -3000); // ЦЕНА ЗА ОРУЖИЕ
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s взял SdPistol головореза.", sendername);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
			if (listitem == 2) {
				new sendername[255];
				ServerGivePlayerWeapons(playerid, 34, 50); // Sniper
				GivePlayerBablo(playerid, -4000); // ЦЕНА ЗА ОРУЖИЕ
				PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0); //звук при взятии набора
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s взял Sniper головореза.", sendername);
				ProxDetector(25.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			}
		}
	}
	else if (dialogid == 21) {
		if (response) {
			if (listitem == 0) {
				ServerGivePlayerWeapons(playerid, 10, 1);
				GivePlayerBablo(playerid, -640);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
			if (listitem == 1) {
				ServerGivePlayerWeapons(playerid, 11, 1);
				GivePlayerBablo(playerid, -260);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
			if (listitem == 2) {
				ServerGivePlayerWeapons(playerid, 12, 1);
				GivePlayerBablo(playerid, -390);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
			if (listitem == 3) {
				ServerGivePlayerWeapons(playerid, 13, 1);
				GivePlayerBablo(playerid, -400);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
			if (listitem == 4) {
				ServerGivePlayerWeapons(playerid, 14, 1);
				GivePlayerBablo(playerid, -750);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
			if (listitem == 5) {
				Condom[playerid]++;
				GivePlayerBablo(playerid, -50);
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); //звук при покупке
			}
		}
	}
	else if (dialogid == 9) {
		if (!response) return false;
		else {
			switch (listitem) {
				case 0 :  {
					format(string, sizeof(string), "Детектив\nАдвокат\nНаркодиллер\nАвтоугонщик\nРазносчик газет\nМеханик\nПродавец оружия\nПродавец машин\nБоксер\nВодитель автобуса\nДальнобойщик\nУборщик улиц\nКомбайнёр");
					ShowPlayerDialog(playerid, 91, 2, "KPK(Работы)", string, "Дальше", "Отмена");
				}
				case 1 :  {
					format(string, sizeof(string), "Такси\nАвтобус\nМедик\nМеханик");
					ShowPlayerDialog(playerid, 92, 2, "KPK(Работы)", string, "Дальше", "Отмена");
				}
				case 2 :  {
					if (IsPlayerConnected(playerid)) {
						SendClientMessage(playerid, COLOR_WHITE, " Лицензеры онлайн :");
						for (new k = 0; k < GetMaxPlayers(); k++) {
							if (IsPlayerConnected(k)) {
								if (PlayerInfo[k][pMember] == 11 || PlayerInfo[k][pLeader] == 11) {
									new plname[255];
									GetPlayerName(k, plname, sizeof(plname));
									format(string, sizeof(string), " Лицензер: %s ", plname);
									SendClientMessage(playerid, COLOR_YELLOW, string);
								}
							}
						}
					}
					return true;
				}
				case 3 :  {
					if (IsPlayerConnected(playerid)) {
						SendClientMessage(playerid, 0x808000AA, "Лидеры онлайн :");
						for (new i = 0; i < GetMaxPlayers(); i++) {
							if (IsPlayerConnected(i)) {
								if (PlayerInfo[i][pLeader] > 0) {
									new ttext[255];
									if (PlayerInfo[i][pLeader] == 1) { ttext = "|Лидер Полиции:"; } else if (PlayerInfo[i][pLeader] == 2) { ttext = "ФБР"; } else if (PlayerInfo[i][pLeader] == 3) { ttext = "Армия"; } else if (PlayerInfo[i][pLeader] == 4) { ttext = "МЧС"; } else if (PlayerInfo[i][pLeader] == 5) { ttext = "ЛКН"; } else if (PlayerInfo[i][pLeader] == 6) { ttext = "Якудза"; } else if (PlayerInfo[i][pLeader] == 7) { ttext = "Мэр"; } else if (PlayerInfo[i][pLeader] == 8) { ttext = "Наёмные убийцы:"; } else if (PlayerInfo[i][pLeader] == 9) { ttext = "Репортёры"; } else if (PlayerInfo[i][pLeader] == 10) { ttext = "Таксисты"; } else if (PlayerInfo[i][pLeader] == 11) { ttext = "Лицензеры"; } else if (PlayerInfo[i][pLeader] == 12) { ttext = "Стритрейсеры"; } else if (PlayerInfo[i][pLeader] == 13) { ttext = "Грув"; } else if (PlayerInfo[i][pLeader] == 14) { ttext = "El Coronos"; } else if (PlayerInfo[i][pLeader] == 15) { ttext = "Los Santos Vagos"; } else if (PlayerInfo[i][pLeader] == 16) { ttext = "Баллас"; } else if (PlayerInfo[i][pLeader] == 18) { ttext = "Триада"; } else if (PlayerInfo[i][pLeader] == 19) { ttext = "SF Rifa"; } else if (PlayerInfo[i][pLeader] == 20) { ttext = "Русская мафия"; }
									new plname[255];
									GetPlayerName(i, plname, sizeof(plname));
									format(string, sizeof(string), "%s Фракция: %s", plname, ttext);
									SendClientMessage(playerid, 0xF5DEB3AA, string);
								}
							}
						}
					}
					return true;
				}
				case 4 :  {
					if (IsPlayerConnected(playerid)) {
						new teamnumber;
						if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
						else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
						else {
							error(playerid, " Вы не состоите в Банде/Фракции.");
							return true;
						}
						SendClientMessage(playerid, 0x808000AA, "Учасники онлайн:");
						for (new i = 0; i < GetMaxPlayers(); i++) {
							if (IsPlayerConnected(i)) {
								new plname[255];
								GetPlayerName(i, plname, sizeof(plname));
								format(string, sizeof(string), "");
								if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (Лидер)", plname);
								else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s Ранг: %d.", plname, PlayerInfo[i][pRank]);
								if (strlen(string) > 1) SendClientMessage(playerid, 0xF5DEB3AA, string);
							}
						}
					}
					return true;
				}
			}
		}
	} else if (dialogid == 91) {
		if (!response) return false;
		else {
			SendClientMessage(playerid, 0x808000AA, " Место, где можно устроиться на работу указано GPS ");
			switch (listitem) {
				case 0:
					SetPlayerCheckpoint(playerid, 1480.9803, -1769.8817, 18.79580, 5.0);
				case 1:
					SetPlayerCheckpoint(playerid, 1480.9803, -1769.8817, 18.79580, 5.0);
				case 2:
					SetPlayerCheckpoint(playerid, 2421.5200, -1221.7500, 25.3998, 5.0);
				case 3:
					SetPlayerCheckpoint(playerid, 2166.3772, -1675.3829, 16.0859, 5.0);
				case 4:
					SetPlayerCheckpoint(playerid, 1109.3318, -1796.3042, 17.5938, 5.0);
				case 5:
					SetPlayerCheckpoint(playerid, 648.5021, -1360.8267, 14.5888, 5.0);
				case 6:
					SetPlayerCheckpoint(playerid, -1932.3859, 276.2117, 42.0391, 5.0);
				case 7:
					SetPlayerCheckpoint(playerid, 2226.1716, -1718.1792, 14.5165, 5.0);
				case 8:
					SetPlayerCheckpoint(playerid, 1366.4325, -1275.2096, 14.5469, 5.0);
				case 9:
					SetPlayerCheckpoint(playerid, 531.7930, -1292.4044, 18.2422, 5.0);
				case 10:
					SetPlayerCheckpoint(playerid, 766.0804, 14.5133, 1001.7004, 5.0);
				case 12:
					SetPlayerCheckpoint(playerid, -1045.5681, -609.9824, 31.6756, 5.0);
				case 13:
					SetPlayerCheckpoint(playerid, 1611.5129, -1893.6997, 13.5469, 5.0);
				case 14:
					SetPlayerCheckpoint(playerid, -382.6660, -1426.5121, 26.2410, 5.0);
			}
		}
	}
	//==========================[/rentmoto]=========================================
	else if (dialogid == 2341) {
		if (response) OnPlayerCommandText(playerid, "/rentmoto");
		else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	} else if (dialogid == 3544) {
		if (response) {
			new tmpcar = GetPlayerVehicleID(playerid);
			if (IsARentMoto(tmpcar)) {
				if (SBizzInfo[13][sbProducts] == 0) {
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (PlayerInfo[playerid][pPbiskey] == 0) {
					GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (GetPlayerBablo(playerid) < SBizzInfo[13][sbEntranceCost]) {
					RemovePlayerFromVehicle(playerid);
					error(playerid, " У вас нет столько денег.");
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованое авто.");
					return true;
				}
				GivePlayerBablo(playerid, -SBizzInfo[13][sbEntranceCost]);
				if (SBizzInfo[13][sbMafia] > 0) {
					SBizzInfo[13][sbTill] += (SBizzInfo[13][sbEntranceCost] / 10 * 9);
					SBizzInfo[13][sbProducts]--;
					ObwyakInfo[SBizzInfo[13][sbMafia]][oGangMoney] += (SBizzInfo[13][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[13][sbTill] += SBizzInfo[13][sbEntranceCost];
					SBizzInfo[13][sbProducts]--;
				}
				TogglePlayerControllable(playerid, 1);
				HireCar[playerid] = tmpcar;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы взяли мото в аренду. Вы можете закрывать его командой /lock.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чтобы снять аренду с мото, введите /unrent.");
			}
		} else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	}
	//============================[/rentlodka]======================================
	else if (dialogid == 2341) {
		if (response) OnPlayerCommandText(playerid, "/rentlodka");
		else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	} else if (dialogid == 9128) {
		if (response) {
			new tmpcar = GetPlayerVehicleID(playerid);
			if (IsARentLodki(tmpcar)) {
				if (SBizzInfo[14][sbProducts] == 0) {
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (PlayerInfo[playerid][pPbiskey] == 0) {
					GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (GetPlayerBablo(playerid) < SBizzInfo[14][sbEntranceCost]) {
					error(playerid, " У вас нет столько денег.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованый трансопрт.");
					return true;
				}
				GivePlayerBablo(playerid, -SBizzInfo[14][sbEntranceCost]);
				if (SBizzInfo[14][sbMafia] > 0) {
					SBizzInfo[14][sbTill] += (SBizzInfo[14][sbEntranceCost] / 10 * 9);
					SBizzInfo[14][sbProducts]--;
					ObwyakInfo[SBizzInfo[14][sbMafia]][oGangMoney] += (SBizzInfo[14][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[14][sbTill] += SBizzInfo[14][sbEntranceCost];
					SBizzInfo[14][sbProducts]--;
				}
				TogglePlayerControllable(playerid, 1);
				HireCar[playerid] = tmpcar;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы взяли лодку в аренду. Вы можете закрывать его командой /lock.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чтобы снять аренду с мото, введите /unrent.");
			}
		} else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	}
	else if (dialogid == 9126) {
		if (response) OnPlayerCommandText(playerid, "/rentcar");
		else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	} else if (dialogid == 9127) {
		if (response) {
			new tmpcar = GetPlayerVehicleID(playerid);
			if (IsARentCar2(tmpcar)) {
				if (SBizzInfo[1][sbProducts] == 0) {
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					TogglePlayerControllable(playerid, 1);
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if (PlayerInfo[playerid][pPbiskey] == 0) {
					GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (GetPlayerBablo(playerid) < SBizzInfo[1][sbEntranceCost]) {
					error(playerid, " У вас нет столько денег.");
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					return true;
				}
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованое авто.");
					return true;
				}
				GivePlayerBablo(playerid, -SBizzInfo[1][sbEntranceCost]);
				if (SBizzInfo[1][sbMafia] > 0) {
					SBizzInfo[1][sbTill] += (SBizzInfo[14][sbEntranceCost] / 10 * 9);
					SBizzInfo[1][sbProducts]--;
					ObwyakInfo[SBizzInfo[1][sbMafia]][oGangMoney] += (SBizzInfo[1][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
					SBizzInfo[1][sbProducts]--;
				}
				TogglePlayerControllable(playerid, 1);
				HireCar[playerid] = tmpcar;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы взяли автомобиль в аренду. Вы можете закрывать его командой /lock.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чтобы снять аренду с автомобиля, введите /unrent.");
			}
		} else {
			RemovePlayerFromVehicle(playerid);
			TogglePlayerControllable(playerid, 1);
			return true;
		}
	}
	else if (dialogid == 19) {
		if (response) {
			new sendername[255];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (Masked[playerid] == 0) {
				if (listitem == 0) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 70);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 1) {
					format(string, sizeof(string), "%s Надел(а)  маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 286);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 2) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 288);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 3) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 287);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 4) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 269);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 5) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 112);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 6) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 123);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 7) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 116);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 8) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 102);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 9) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 173);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
				if (listitem == 10) {
					format(string, sizeof(string), "%s Надел(а) маскировку.", sendername);
					ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SetPlayerSkin(playerid, 29);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 0);
					}
					Masked[playerid] = 1;
				}
			} else {
				format(string, sizeof(string), "%s Cнимает маскировку.", sendername);
				ProxDetector(12.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				new model = PlayerInfo[playerid][pChar];
				SetPlayerSkin(playerid, model);
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
				Masked[playerid] = 0;
			}
		}
	} else if (dialogid == 99) {
		if (response) {
			if (Gotos[playerid] == 0) {
				if (listitem == 0) {
					SetPlayerPos(playerid, -2026.1193, -87.0082, 35.8766);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 1) {
					SetPlayerPos(playerid, 2223.9595, -1147.4235, 25.8095);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 2) {
					SetPlayerPos(playerid, 2626.8020, 1996.6038, 10.8203);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 3) {
					SetPlayerPos(playerid, 1539.7030, -1668.0088, 13.5492);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 4) {
					SetPlayerPos(playerid, -1336.3948, 466.9529, 7.1875);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 5) {
					SetPlayerPos(playerid, 271.7886, 1859.3013, 8.7578);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 6) {
					SetPlayerPos(playerid, 1463.1394, -1017.5176, 25.4240);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 7) {
					SetPlayerPos(playerid, -2659.1533, 1410.2878, 910.1703);
					SetPlayerInterior(playerid, 3);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 8) {
					SetPlayerPos(playerid, 476.1017, -14.9692, 1003.6953);
					SetPlayerInterior(playerid, 17);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 9) {
					SetPlayerPos(playerid, 1752.2485, -2544.1772, 13.5469);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 10) {
					SetPlayerPos(playerid, -1280.1223, -168.8073, 14.1484);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 11) {
					SetPlayerPos(playerid, 1432.9432, 1463.2916, 10.8203);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 12) {
					SetPlayerPos(playerid, -2299.2766, -1649.6071, 483.5220);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 13) {
					SetPlayerPos(playerid, 265.2010, 2480.7896, 16.4844);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s использовал команду /tp.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		return true;
	}
	//-----------/gm--------------------------------
	else if (dialogid == 547) {
		if (response) {
			if (GM[playerid] == 0) {
				if (listitem == 0) {
					SetPlayerPos(playerid, -2201.7656, 650.7231, 73.8359);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s телепортировался к какой-то фракции.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 1) {
					SetPlayerPos(playerid, -2501.6716, 2341.7544, 14.1182);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s телепортировался к какой-то фракции.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 2) {
					SetPlayerPos(playerid, 658.9179, -1266.4012, 13.6315);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s телепортировался к какой-то фракции.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
				if (listitem == 3) {
					SetPlayerPos(playerid, 1118.1954, -2036.9644, 78.7500);
					SetPlayerInterior(playerid, 0);
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s телепортировался к какой-то фракции.", adminname);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		return true;
	}
	else if (dialogid == 92) {
		if (!response) return false;
		else {
			switch (listitem) {
				case 0 :  {
					if (TaxiDrivers < 1) return error(playerid, " Сейчас нет Водителей Такси При исполнении служебных обязанностей, попробуйте позже.");
					if (TransportDuty[playerid] > 0) return error(playerid, " Вы не можете вызвать Такси в данный момент.");
					new plname[255];
					GetPlayerName(playerid, plname, sizeof(plname));
					format(string, sizeof(string), "%s Нуждается в такси. (используйте /accept taxi для принятия вызова)", plname);
					SendRadioMessage(10, TEAM_AZTECAS_COLOR, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вызвали такси, ждите подтверждения.");
					TaxiCall = playerid;
					return true;
				}
				case 2 :  {
					if (Medics < 1) return error(playerid, " Сейчас нет медиков При исполнении служебных обязанностей, попробуйте позже.");
					new plname[255];
					GetPlayerName(playerid, plname, sizeof(plname));
					format(string, sizeof(string), "%s Нуждается в медике.(используйте /accept medic для принятия вызова)", plname);
					SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вызвали медика, ожидайте ответа.");
					MedicCall = playerid;
					return true;
				}
				case 3 :  {
					if (Mechanics < 1) return error(playerid, " Сейчас нет механиков При исполнении служебных обязанностей, попробуйте позже.");
					new plname[255];
					GetPlayerName(playerid, plname, sizeof(plname));
					format(string, sizeof(string), "%s Нуждается в механике. (используйте /accept mechanic  для принятия вызова)", plname);
					SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вызвали механика, ожидайте ответа.");
					MechanicCall = playerid;
					return true;
				}
			}
		}
	}
	else if (dialogid == 38) {
		if (response) {
			new res[512];
			if (listitem == 0) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 5.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -30);
				BizzInfo[18][bTill] += 30; // Ресторан LCN
				BizzInfo[18][bProducts]--;
				if (BizzInfo[18][bMafia] > 0) {
					BizzInfo[18][bTill] += 27;
					BizzInfo[18][bProducts]--;
					ObwyakInfo[SBizzInfo[18][sbMafia]][oGangMoney] += 3;
				} else {
					BizzInfo[18][bTill] += 30;
					BizzInfo[18][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 1) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 10.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -60);
				if (BizzInfo[18][bMafia] > 0) {
					BizzInfo[18][bTill] += 54;
					BizzInfo[18][bProducts]--;
					ObwyakInfo[BizzInfo[18][bMafia]][oGangMoney] += 6;
				} else {
					BizzInfo[18][bTill] += 60;
					BizzInfo[18][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 2) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 15.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -90);
				if (BizzInfo[18][bMafia] > 0) {
					BizzInfo[18][bTill] += 81;
					BizzInfo[18][bProducts]--;
					ObwyakInfo[BizzInfo[18][bMafia]][oGangMoney] += 9;
				} else {
					BizzInfo[18][bTill] += 90;
					BizzInfo[18][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 3) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 20.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -120);
				if (BizzInfo[18][bMafia] > 0) {
					BizzInfo[18][bTill] += 108;
					BizzInfo[18][bProducts]--;
					ObwyakInfo[BizzInfo[18][bMafia]][oGangMoney] += 12;
				} else {
					BizzInfo[18][bTill] += 120;
					BizzInfo[18][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");

			}
			if (listitem == 4) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 25.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -150);
				if (BizzInfo[18][bMafia] > 0) {
					BizzInfo[18][bTill] += 135;
					BizzInfo[18][bProducts]--;
					ObwyakInfo[BizzInfo[18][bMafia]][oGangMoney] += 15;
				} else {
					BizzInfo[18][bTill] += 150;
					BizzInfo[18][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
		}
	}
	else if (dialogid == 37) {
		if (response) {
			new res[512];
			if (listitem == 0) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 5.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -30);
				if (BizzInfo[2][bMafia] > 0) {
					BizzInfo[2][bTill] += 27;
					BizzInfo[2][bProducts]--;
					ObwyakInfo[BizzInfo[2][bMafia]][oGangMoney] += 3;
				} else {
					BizzInfo[2][bTill] += 30;
					BizzInfo[2][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 1) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 10.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -60);
				if (BizzInfo[2][bMafia] > 0) {
					BizzInfo[2][bTill] += 54;
					BizzInfo[2][bProducts]--;
					ObwyakInfo[BizzInfo[2][bMafia]][oGangMoney] += 6;
				} else {
					BizzInfo[2][bTill] += 60;
					BizzInfo[2][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 2) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 15.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -90);
				if (BizzInfo[2][bMafia] > 0) {
					BizzInfo[2][bTill] += 81;
					BizzInfo[2][bProducts]--;
					ObwyakInfo[BizzInfo[2][bMafia]][oGangMoney] += 9;
				} else {
					BizzInfo[2][bTill] += 90;
					BizzInfo[2][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
			if (listitem == 3) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 20.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -120);
				if (BizzInfo[2][bMafia] > 0) {
					BizzInfo[2][bTill] += 108;
					BizzInfo[2][bProducts]--;
					ObwyakInfo[BizzInfo[2][bMafia]][oGangMoney] += 12;
				} else {
					BizzInfo[2][bTill] += 120;
					BizzInfo[2][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");

			}
			if (listitem == 4) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 100) return error(playerid, " Вы уже достаточно съели.");
				SetPlayerHealth(playerid, health + 25.0);
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				GivePlayerBablo(playerid, -150);
				if (BizzInfo[2][bMafia] > 0) {
					BizzInfo[2][bTill] += 135;
					BizzInfo[2][bProducts]--;
					ObwyakInfo[BizzInfo[2][bMafia]][oGangMoney] += 15;
				} else {
					BizzInfo[2][bTill] += 150;
					BizzInfo[2][bProducts]--;
				}
				format(res, sizeof(res), " Cалат \n Отбивная\n Картошка \n Коктейль\n Устрици");
				ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
			}
		}
	}
	if (dialogid == 1723) {
		if (response) {
			if (listitem == 0) {
				if (PlayerInfo[playerid][pTkMats] <= 0) return error(playerid, " У вас нет конфискованых материалов.");
				new mat = PlayerInfo[playerid][pTkMats];
				GivePlayerBablo(playerid, PlayerInfo[playerid][pTkMats]);
				PlayerInfo[playerid][pTkMats] = 0;
				format(string, sizeof(string), "Вы сдали отобранные материалы на сумму %d$.", mat);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if (listitem == 1) {
				if (PlayerInfo[playerid][pTkDrugs] <= 0) return error(playerid, " У вас нет конфискованых наркотических веществ.");
				new drug = PlayerInfo[playerid][pTkDrugs] * 20;
				GivePlayerBablo(playerid, drug);
				PlayerInfo[playerid][pTkDrugs] = 0;
				format(string, sizeof(string), "Вы сдали отобранные наркотики  на сумму %d$.", drug);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}
	if (dialogid == 1891) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1890) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1889) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1888) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1887) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1886) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1885) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1884) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1883) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 1882) {
		if (response) {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
	}
	if (dialogid == 24) {
		if (response) {
			if (listitem == 0 && GetPlayerBablo(playerid) > 180) {
				if (PlayerInfo[playerid][pClock] > 0) return error(playerid, " У вас уже есть часы.");
				GivePlayerBablo(playerid, -180);
				format(string, sizeof(string), "~r~-%d$", 180);
				GameTextForPlayer(playerid, string, 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /time.");
				PlayerInfo[playerid][pClock]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 162;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 18;
				} else {
					SBizzInfo[12][sbTill] += 180;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			}
			else if (listitem == 1 && GetPlayerBablo(playerid) > 100) {
				if (PlayerInfo[playerid][pRope] > 1) return error(playerid, " У вас уже есть верёвка.");
				if (PlayerInfo[playerid][pTraderPerk] > 0) {
					new skill = 800 / 100;
					new price = (skill) * (PlayerInfo[playerid][pTraderPerk]);
					new payout = 100 - price;
					GivePlayerBablo(playerid, -payout);
					format(string, sizeof(string), "~r~-%d$", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				} else {
					GivePlayerBablo(playerid, -100);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /tie-связать, /untie - развязать.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				PlayerInfo[playerid][pRope]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 54;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 6;
				} else {
					SBizzInfo[12][sbTill] += 6;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			}
			else if (listitem == 2 && GetPlayerBablo(playerid) > 200) {
				if (PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Для совершения этой покупки вам нужно иметь как минимум 2lvl.");
				if (PlayerInfo[playerid][pCard] >= 1) return error(playerid, " У вас уже есть банковская карточка.");
				GivePlayerBablo(playerid, -200);
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 180;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 20;
				} else {
					SBizzInfo[12][sbTill] += 200;
					SBizzInfo[12][sbProducts]--;
				}
				format(string, sizeof(string), "~r~-%d$", 300);
				GameTextForPlayer(playerid, string, 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "New Card Level is Gold", 3000, 3);
				PlayerInfo[playerid][pCard] = 1;
				return true;
			}
			else if (listitem == 3 && GetPlayerBablo(playerid) > 260) {
				PlayerInfo[playerid][pFuel] = 20;
				GivePlayerBablo(playerid, -200);
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 180;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 20;
				} else {
					SBizzInfo[12][sbTill] += 200;
					SBizzInfo[12][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /fillcar - заправить автомобиль.");
				GameTextForPlayer(playerid, "~r~-260$", 5000, 1);
				return true;
			}
			else if (listitem == 4 && GetPlayerBablo(playerid) > 65) {
				if (PlayerInfo[playerid][pDice] >= 1) return error(playerid, " У вас уже есть игральные кости.");
				if (PlayerInfo[playerid][pTraderPerk] > 0) {
					new skill = 65 / 100;
					new price = (skill) * (PlayerInfo[playerid][pTraderPerk]);
					new payout = 65 - price;
					GivePlayerBablo(playerid, -payout);
					SBizzInfo[12][sbTill] += payout;
					format(string, sizeof(string), "~r~-%d$", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				} else {
					GivePlayerBablo(playerid, -50);
					if (SBizzInfo[12][sbMafia] > 0) {
						SBizzInfo[12][sbTill] += 45;
						SBizzInfo[12][sbProducts]--;
						ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 5;
					} else {
						SBizzInfo[12][sbTill] += 50;
						SBizzInfo[12][sbProducts]--;
					}
					format(string, sizeof(string), "~r~-%d$", 65);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pDice] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /dice-играть в кости.");
				return true;
			}
			else if (listitem == 5 && GetPlayerBablo(playerid) > 550) {
				GivePlayerBablo(playerid, -550);
				ServerGivePlayerWeapons(playerid, 43, 25);
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 525;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 25;
				} else {
					SBizzInfo[12][sbTill] += 550;
					SBizzInfo[12][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~r~-550$", 5000, 1);
				return true;
			}
			else if (listitem == 6 && GetPlayerBablo(playerid) > 500) {
				GivePlayerBablo(playerid, -500);
				format(string, sizeof(string), "~r~-%d$", 500);
				GameTextForPlayer(playerid, string, 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, string, 5000, 1);
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /fish - рыбачить.");
				ServerGivePlayerWeapons(playerid, 7, 1); //Даем кий
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 450;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 50;
				} else {
					SBizzInfo[12][sbTill] += 500;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			}
			else if (listitem == 7 && GetPlayerBablo(playerid) > 10) {
				if (Groceries[playerid][pChickens] >= 3) {
					error(playerid, " У вас слишком много куриц,сначала приготовьте несколько из них.");
					return true;
				}
				if (PlayerInfo[playerid][pTraderPerk] > 0) {
					new skill = 10 / 100;
					new price = (skill) * (PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerBablo(playerid, -payout);
					format(string, sizeof(string), "~r~-%d$", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				} else {
					GivePlayerBablo(playerid, -10);
					format(string, sizeof(string), "~r~-%d$", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
					if (SBizzInfo[12][sbMafia] > 0) {
						SBizzInfo[12][sbTill] += 9;
						SBizzInfo[12][sbProducts]--;
						ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 1;
					} else {
						SBizzInfo[12][sbTill] += 10;
						SBizzInfo[12][sbProducts]--;
					}
				}
				GivePlayerBablo(playerid, -10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~r~-%d$", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pChickens] += 1;
				Groceries[playerid][pChicken] += rand;
				return true;
			}
			else if (listitem == 8 && GetPlayerBablo(playerid) > 10) {
				if (Groceries[playerid][pHamburgers] >= 3) return error(playerid, " У вас слишком много гамбургеров, сначала приговьте несколько из них.");
				if (PlayerInfo[playerid][pTraderPerk] > 0) {
					new skill = 10 / 100;
					new price = (skill) * (PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerBablo(playerid, -payout);
					format(string, sizeof(string), "~r~-%d$", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				} else {
					GivePlayerBablo(playerid, -10);
					format(string, sizeof(string), "~r~-%d$", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				GivePlayerBablo(playerid, -10);
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 9;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 1;
				} else {
					SBizzInfo[12][sbTill] += 10;
					SBizzInfo[12][sbProducts]--;
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~r~-%d$", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pHamburgers] += 1;
				Groceries[playerid][pHamburger] += rand;
				return true;
			}
			else if (listitem == 9 && GetPlayerBablo(playerid) > 10) {
				if (Groceries[playerid][pPizzas] >= 3) return error(playerid, " У вас слишком много пицц, сначала приговьте несколько из них.");
				if (PlayerInfo[playerid][pTraderPerk] > 0) {
					new skill = 10 / 100;
					new price = (skill) * (PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerBablo(playerid, -payout);
					format(string, sizeof(string), "~r~-%d$", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				} else {
					GivePlayerBablo(playerid, -10);
					if (SBizzInfo[12][sbMafia] > 0) {
						SBizzInfo[12][sbTill] += 9;
						SBizzInfo[12][sbProducts]--;
						ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 1;
					} else {
						SBizzInfo[12][sbTill] += 10;
						SBizzInfo[12][sbProducts]--;
					}
					format(string, sizeof(string), "~r~-%d$", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new rand = random(15);
				Groceries[playerid][pPizzas] += 1;
				Groceries[playerid][pPizza] += rand;
				return true;
			}
			else if (listitem == 10 && GetPlayerBablo(playerid) > 100) {
				if (PlayerInfo[playerid][pBancka] > 0) return error(playerid, "У вас уже есть баночка.");
				if (PlayerInfo[playerid][pFBancka] > 0) return error(playerid, "У вас уже есть наполненная баночка!Продайтее ее.");
				GivePlayerBablo(playerid, -100);
				format(string, sizeof(string), "~r~-%d$", 100);
				GameTextForPlayer(playerid, string, 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pBancka]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 90;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 10;
				} else {
					SBizzInfo[12][sbTill] += 100;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			} else if (listitem == 11 && GetPlayerBablo(playerid) > 500) {
				if (PlayerInfo[playerid][pLevel] < 2) error(playerid, " Для покупки отмычки вам нужен 2lvl.");
				if (otmuchka[playerid] > 0) return error(playerid, " У вас уже есть отмычка");
				GivePlayerBablo(playerid, -500);
				GameTextForPlayer(playerid, "~r~-500$", 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				otmuchka[playerid]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 450;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 50;
				} else {
					SBizzInfo[12][sbTill] += 500;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			} else if (listitem == 12 && GetPlayerBablo(playerid) >= 3000) {
				if (PlayerInfo[playerid][pLevel] < 3) error(playerid, " Для покупки этого прибора вам нужен 3lvl.");
				if (kusachki[playerid] > 0) return error(playerid, " У вас уже есть кусачки.");
				GivePlayerBablo(playerid, -3000);
				GameTextForPlayer(playerid, "~r~-3000$", 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				kusachki[playerid]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 2700;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 300;
				} else {
					SBizzInfo[12][sbTill] += 3000;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			} else if (listitem == 13 && GetPlayerBablo(playerid) >= 5000) {
				if (PlayerInfo[playerid][pLevel] < 3) return error(playerid, " Для покупки этого набора вам нужен 3lvl.");
				if (kusachki[playerid] > 0) return error(playerid, " У вас уже есть набор для подбора паролей.");
				GivePlayerBablo(playerid, -5000);
				GameTextForPlayer(playerid, "~r~-5000$", 5000, 1);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				nabor[playerid]++;
				if (SBizzInfo[12][sbMafia] > 0) {
					SBizzInfo[12][sbTill] += 4500;
					SBizzInfo[12][sbProducts]--;
					ObwyakInfo[SBizzInfo[12][sbMafia]][oGangMoney] += 500;
				} else {
					SBizzInfo[12][sbTill] += 5000;
					SBizzInfo[12][sbProducts]--;
				}
				return true;
			}
		}
	}
	if (dialogid == 25) {
		if (response) {
			if (listitem == 1) {
				ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "Продать рыбу", "{ffdb58}Введите номер рыбы,\n{ffdb58}Kоторую вы хотите продать", "Ок", "Отмена");
			}
		}
	}
	if (dialogid == 26) {
		if (response) {
			if (!strlen(inputtext)) {
				ShowPlayerDialog(playerid, 25, DIALOG_STYLE_INPUT, "Продать рыбу", "Введите номер рыбы,\nкоторую вы хотите продать", "Ок", "Отмена");
				return true;
			}
			new price;
			new fishid = strval(inputtext);
			if (fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "От 1 до 5."); return true; } else if (fishid == 1 && Fishes[playerid][pWeight1] < 1) { error(playerid, " Вы еще не поймали рыбу(1)."); return true; } else if (fishid == 2 && Fishes[playerid][pWeight2] < 1) { error(playerid, " Вы еще не поймали рыбу(2)."); return true; } else if (fishid == 3 && Fishes[playerid][pWeight3] < 1) { error(playerid, " Вы еще не поймали рыбу(3)."); return true; } else if (fishid == 4 && Fishes[playerid][pWeight4] < 1) { error(playerid, " Вы еще не поймали рыбу(4)."); return true; } else if (fishid == 5 && Fishes[playerid][pWeight5] < 1) { error(playerid, " Вы еще не поймали рыбу(5)."); return true; }
			ConsumingMoney[playerid] = 1;
			switch (fishid) {
				case 1 :  {
					if (Fishes[playerid][pWeight1] < 1) {
						error(playerid, " Нас не интересуют рыбы менее 1 кг.");
						return true;
					}
					price = FishCost(playerid, Fishes[playerid][pFid1]);
					price = price * Fishes[playerid][pWeight1];
					if (PlayerInfo[playerid][pTraderPerk] > 0) {
						new skill = price / 1000;
						new payout = (skill) * (5);
						price += payout;
					}
					GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
					format(string, sizeof(string), "Вы продали %s весом в %d, за %d$.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1], price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, price);
					ClearFishID(playerid, 1);
				}
				case 2 :  {
					if (Fishes[playerid][pWeight2] < 1) {
						error(playerid, " Нас не интересуют рыбы менее 1 кг.");
						return true;
					}
					price = FishCost(playerid, Fishes[playerid][pFid2]);
					price = price * Fishes[playerid][pWeight2];
					if (PlayerInfo[playerid][pTraderPerk] > 0) {
						new skill = price / 1000;
						new payout = (skill) * (5);
						price += payout;
					}
					GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
					format(string, sizeof(string), "Вы продали %s весом в %d, за %d$.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2], price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, price);
					ClearFishID(playerid, 2);
				}
				case 3 :  {
					if (Fishes[playerid][pWeight3] < 1) {
						error(playerid, " Нас не интересуют рыбы менее 1 кг.");
						return true;
					}
					price = FishCost(playerid, Fishes[playerid][pFid3]);
					price = price * Fishes[playerid][pWeight3];
					if (PlayerInfo[playerid][pTraderPerk] > 0) {
						new skill = price / 1000;
						new payout = (skill) * (5);
						price += payout;
					}
					GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
					format(string, sizeof(string), "Вы продали %s весом в %d, за %d$.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3], price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, price);
					ClearFishID(playerid, 3);
				}
				case 4 :  {
					if (Fishes[playerid][pWeight4] < 1) {
						error(playerid, " Нас не интересуют рыбы менее 1 кг.");
						return true;
					}
					price = FishCost(playerid, Fishes[playerid][pFid4]);
					price = price * Fishes[playerid][pWeight4];
					if (PlayerInfo[playerid][pTraderPerk] > 0) {
						new skill = price / 1000;
						new payout = (skill) * (5);
						price += payout;
					}
					GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
					format(string, sizeof(string), "Вы продали %s весом в %d, за %d$.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4], price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, price);
					ClearFishID(playerid, 4);
				}
				case 5 :  {
					if (Fishes[playerid][pWeight5] < 1) {
						error(playerid, " Нас не интересуют рыбы менее 1 кг.");
						return true;
					}
					price = FishCost(playerid, Fishes[playerid][pFid5]);
					price = price * Fishes[playerid][pWeight5];
					if (PlayerInfo[playerid][pTraderPerk] > 0) {
						new skill = price / 1000;
						new payout = (skill) * (5);
						price += payout;
					}
					GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
					format(string, sizeof(string), "Вы продали %s весом в %d, за %d$.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5], price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, price);
					ClearFishID(playerid, 5);
				}
			}
			Fishes[playerid][pLastFish] = 0;
			Fishes[playerid][pFishID] = 0;
			return true;
		}
	}
	if (dialogid == 27) {
		if (response) {
			if (!strlen(inputtext)) {
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "Продать еду", "Введите номер слота с едой, которую вы хотите продать", "Ок", "Отмена");
				return true;
			}
			new cookid = strval(inputtext);
			new bool:show;
			show = false;
			if (cookid < 1 || cookid > 5) {
				SendClientMessage(playerid, COLOR_GREY, "Номер слота от 1 до 5.");
				show = true;
			} else if (cookid == 1 && Cooking[playerid][pCWeight1] < 1) {
				error(playerid, " В этом слоте пусто(1).");
				show = true;
			} else if (cookid == 2 && Cooking[playerid][pCWeight2] < 1) {
				error(playerid, " В этом слоте пусто(2).");
				show = true;
			} else if (cookid == 3 && Cooking[playerid][pCWeight3] < 1) {
				error(playerid, " В этом слоте пусто(3).");
				show = true;
			} else if (cookid == 4 && Cooking[playerid][pCWeight4] < 1) {
				error(playerid, " В этом слоте пусто(4).");
				show = true;
			} else if (cookid == 5 && Cooking[playerid][pCWeight5] < 1) {
				error(playerid, " В этом слоте пусто(5).");
				show = true;
			}
			if (show) {
				ShowPlayerDialog(playerid, 10, DIALOG_STYLE_INPUT, "Продать еду", "Введите номер слота с едой, которую вы хотите продать", "Ок", "Отмена");
				return true;
			}
			PlayerFoodSlot[playerid] = cookid;
			ShowPlayerDialog(playerid, 28, DIALOG_STYLE_INPUT, "Продать еду", "Введите ID игрока, которому вы хотите продать еду", "Ок", "Отмена");
			return true;
		}
	}
	if (dialogid == 28) {
		if (response) {
			if (!strlen(inputtext)) {
				ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "Продать еду", "Введите ID игрока, которому вы хотите продать еду", "Ок", "Отмена");
				return true;
			}
			new cookid = PlayerFoodSlot[playerid];
			new giveplayer[MAX_PLAYER_NAME];
			new sendername[255];
			new giveplayerid;
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					switch (cookid) {
						case 1 :  {
							if (Cooking[giveplayerid][pCWeight1] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight2] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight3] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight4] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight5] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У этого игрока нет больше места.");
								return true;
							}
						}
						case 2 :  {
							if (Cooking[giveplayerid][pCWeight1] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight2] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight3] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight4] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight5] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У игрока нет больше места.");
								return true;
							}
						}
						case 3 :  {
							if (Cooking[giveplayerid][pCWeight1] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight2] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight3] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight4] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight5] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У игрока нет больше места.");
								return true;
							}
						}
						case 4 :  {
							if (Cooking[giveplayerid][pCWeight1] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight2] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight3] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight4] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight5] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У игрока нет больше места.");
								return true;
							}
						}
						case 5 :  {
							if (Cooking[giveplayerid][pCWeight1] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook1], Cooking[giveplayerid][pCWeight1]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight2] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook2], Cooking[giveplayerid][pCWeight2]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight3] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook3], Cooking[giveplayerid][pCWeight3]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight4] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook4], Cooking[giveplayerid][pCWeight4]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[giveplayerid][pCWeight5] < 1) {
								format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								format(string, sizeof(string), "%s передаёт вам %s весом в %d кг (/cooked ).", sendername, Cooking[giveplayerid][pCook5], Cooking[giveplayerid][pCWeight5]);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы передали %s весом в %d кг, для  %s.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У игрока нет больше места.");
								return true;
							}
						}
					} //switch
					ClearCookingID(playerid, cookid);
				} //invalid giveplayerid
			} else {
				error(playerid, " Этот игрок в оффлайне.");
				ShowPlayerDialog(playerid, 11, DIALOG_STYLE_INPUT, "Продать еду", "Введите ID игрока, которому вы хотите продать еду", "Ок", "Отмена");
				return true;
			}
			return true;
		}
	}
	//================================[/HELP]=======================================
	else if (dialogid == 30) {
		if (response) {
			if (listitem == 0) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Игрок", "/setpass - сменить пароль,/pay - передать деньги игроку,/cvet - установить себе цвет.\n/time - время,/drink - меню в баре,/licenses - лицензии,/resetupgrades - сбросить апгрейды.", "Ok", "");
			else if (listitem == 1) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Дом", "/open - открыть/закрыть дом,/home - месторасположение дома,/hu - купить апгрейд,/carupgrade - заказать транспорт к дому.\n/carcolor - перекрасить домашний транспорт,/sellhouse - продать дом,/spawnchange - поменять респавн,/fixcar - вернуть транспорт к дому.", "Ok", "");
			else if (listitem == 2) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Игрок", "/pm - приватное сообщение,/c - сказать,/s - крикнуть,/ad - подать рекламу,/me - действие.\n/o - глобальный чат,/report - написать жалобу администрации,/f - чат фракций.", "Ok", "");
			else if (listitem == 3) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Транспорт", "/untie - развязать игрока,/lock - закрыть/открыть домашний/арендованный транспорт.\n/fill - заправить транспорт,/eject - выкинуть из транспорта,/tie - связать игрока.", "Ok", "");
			else if (listitem == 4) {
				if (PlayerInfo[playerid][pLeader] == 0) return error(playerid, " Вы не лидер.");
				ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Лидерство", "/invite - взять игрока,/uninvite - уволить игрока, /giverank - понизить/повысить игрока в ранге, /fixteamcars - раставить фракционныа авто.\n/fwarn - дать выговор игроку(внутри фракции),/funwarn - снять выговор игроку(внутри фракции),/fmute - выдать игроку мут(внутри фракции),/funmute - убрать игроку мут(внутри фракции).", "Ok", "");
				return true;
			} else if (listitem == 5) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Бизнес", "/bizinfo - информация по бизнесу, /bizfee - цена входа в бизнес ,/prodprice - цена за компоненты в бизнес,/buybiz - купить бизнес.\n/open - открыть/закрыть бизнес,/bizwithdraw - снять прибыль с бизнеса, /bizbank - прибыль в бизнесе,/sellbiz - продать бизнес.", "Ok", "");
			else if (listitem == 6) {
				if (PlayerInfo[playerid][pJob] == 1) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/find - поиск игрока.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 2) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/free - выпустить игрока с КПЗ.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 3) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/delivery - начать рейс.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 4) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/get drugs - купить наркотики[в наркопритоне],/selldrugs - продать наркотики.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 5) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "В навигации вы сможете найти место для получения заказа.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 6) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/vor - ограбить игрока,/searchoff - очистить розыск[в убежище].", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 7) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/tow /repair /refill /duty.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 9) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/materials - закупка/продажа пакетов, /sellgun -  собрать оружие.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 10) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/sellcar - продать автомобиль игроку.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 12) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "Чтобы выбить деньги с игрока, нужно убить его оружием ближнего боя (Бита/Кулак/Катана,Кастет).\nУбив игрока (кроме игрока NG грейда) вы получите небольшое вознаграждение.", "Ok", "");
				else if (PlayerInfo[playerid][pJob] == 15) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Работа", "/papers /bring /deliver.", "Ok", "");
				return true;
			} else if (listitem == 7) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Рыбылка", "/fish - ловить рыбу,/fishes - список пойманой рыбы,/releasefish - отпустить рыбу.\n/throwback - выкинуть последнюю пойманую рыбу,/throwbackall - выкинуть всю рыбу.", "Ok", "");
			else if (listitem == 8) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Еда", "/cook - доступные функции,/cooked - список приготовленного,/eat - кушать.", "Ok", "");
			else if (listitem == 9) ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "Остальное", "/ram - взломать дом,/accept - принять,/service - вызвать сервис,/cancel - отменить заказ на сервис,/upgrade - изучить апгрейды.\n/give - передать предмет,/lotto - купить билет лотто,/brokecuff -взломать наручники кому либо,/contract - заказать убийство игрока.", "Ok", "");
		}
		return true;
	}
	//=================================[Тест на права]==============================
	if (dialogid == 36) //Вопросы пдд
	{
		if (!response) {
			SendClientMessage(playerid, COLOR_RED, " Вы провалили тест.");
			DrivingTest[playerid] = 0;
			Question1[playerid] = 0;
			Question2[playerid] = 0;
			Question3[playerid] = 0;
			Question4[playerid] = 0;
			Question5[playerid] = 0;
			Question6[playerid] = 0;
			Question7[playerid] = 0;
			Question8[playerid] = 0;
			Question9[playerid] = 0;
			Question10[playerid] = 0;
			Owibka[playerid] = 0;
			return true;
		}
		if (Question1[playerid] == 1) {
			if (listitem == 4) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, " Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test ", "\
					Вопрос №2.С какой максимальной скоростью разрешается\
					\nдвижение вне населённых пунктов\
					\nа) 70 км/ч\
					\nб) 90 км/ч\
					\nв) 100 км/ч\
					\nг) 120 км/ч\
					", "Ок", "Отмена");
				Question1[playerid] = 0;
				Question2[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, " Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, " Не Верно.");
					SendClientMessage(playerid, COLOR_RED, " Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test ", "\
					Вопрос №2.С какой максимальной скоростью разрешается\
					\nдвижение вне населённых пунктов\
					\nа) 70 км/ч\
					\nб) 90 км/ч\
					\nв) 100 км/ч\
					\nг) 120 км/ч\
					", "Далее", "Отмена");
					return false;
				}
			}
		}
		if (Question2[playerid] == 1) {
			if (listitem == 2) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, " Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №3.Водители обязаны пропускать пешеходов пересекающих\
					\n проезжую часть:\
					\nа) На пешеходном переходе\
					\nб) В любом месте\
					\nв) В любом месте только в населённых пунктах\
					\nг) Только если пешеход угрожает расправой\
					", "Далее", "Отмена");
				Question2[playerid] = 0;
				Question3[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, " Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, " Не Верно.");
					SendClientMessage(playerid, COLOR_RED, " Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №3.Водители обязаны пропускать пешеходов пересекающих\
					\n проезжую часть:\
					\nа) На пешеходном переходе\
					\nб) В любом месте\
					\nв) В любом месте только в населённых пунктах\
					\nг) Только если пешеход угрожает расправой\
					", "Далее", "Отмена");
					return false;
				}
			}
		}
		if (Question3[playerid] == 1) {
			if (listitem == 2) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, " Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №4.В каком случае вы можете начать обгон с выездом\
					\n на полосу встречного движения\
					\nа) Только если полоса свободна на достаточном для обгона расстоянии\
					\nб) Только если вас никто не обгоняет\
					\nв) Только в конце подъёма\
					\nг) Верно а) и б)\
					", "Далее", "Отмена");
				Question3[playerid] = 0;
				Question4[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №4.В каком случае вы можете начать обгон с выездом\
					\n на полосу встречного движения\
					\nа) Только если полоса свободна на достаточном для обгона расстоянии\
					\nб) Только если вас никто не обгоняет\
					\nв) Только в конце подъёма\
					\nг) Верно а) и б)\
					", "Далее", "Отмена");
					return false;
				}
			}
		}
		if (Question4[playerid] == 1) {
			if (listitem == 5) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №5.При движении в условиях тумана расстояние\
					\n до предметов представляется:\
					\nа) Большим чем в действительности\
					\nб) Меньшим чем в действительности\
					\nв) Соответствующим действительному\
					\nг) В двое меньше чем в действительности\
					", "Ок", "Отмена");
				Question4[playerid] = 0;
				Question5[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №5.При движении в условиях тумана расстояние\
					\n до предметов представляется:\
					\nа) Большим чем в действительности\
					\nб) Меньшим чем в действительности\
					\nв) Соответствующим действительному\
					\nг) В двое меньше чем в действительности\
					", "Ок", "Отмена");
					return false;
				}
			}
		}
		if (Question5[playerid] == 1) {
			if (listitem == 2) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №6.Кому необходимо уступить дорогу на четырёхстороннем\
					\n (равнозначном) перекрёстке\
					\nа) Автомобилям, приближающимся справа\
					\nб) Автомобилям, приближающимся слева\
					\nв) Только танкам и автомобилям с включенным спец. сигналом\
					\nг) Автомобилю, который первым въехал на перекрёсток\
					", "Ок", "Отмена");
				Question5[playerid] = 0;
				Question6[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №6.Кому необходимо уступить дорогу на четырёхстороннем\
					\n (равнозначном) перекрёстке\
					\nа) Автомобилям, приближающимся справа\
					\nб) Автомобилям, приближающимся слева\
					\nв) Только танкам и автомобилям с включенным спец. сигналом\
					\nг) Автомобилю, который первым въехал на перекрёсток\
					", "Ок", "Отмена");
					return false;
				}
			}
		}
		if (Question6[playerid] == 1) {
			if (listitem == 2) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №7.Количество топлива в автомобиле 10%.Ваши\
					\n действия:\
					\nа) Дать объявления о поиске механика несколько раз подряд\
					\nб) Заправиться на ближайшей заправке с помощью команды /fill\
					\nв) Воспользоваться командой /service mechanic\
					\nг) Верны пункты б) и в)\
					", "Ок", "Отмена");
				Question6[playerid] = 0;
				Question7[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №7.Количество топлива в автомобиле 10%.Ваши\
					\n действия:\
					\nа) Дать объявления о поиске механика несколько раз подряд\
					\nб) Заправиться на ближайшей заправке с помощью команды /fill\
					\nв) Воспользоваться командой /service mechanic\
					\nг) Верны пункты б) и в)\
					", "Ок", "Отмена");
					return false;
				}
			}
		}
		if (Question7[playerid] == 1) {
			if (listitem == 5) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №8.\
					\n Все перекрёстки штата являются:\
					\nа) Регулируемыми, езда разрешается при зелёном сигнале светофора\
					\nб) Нерегулируемыми. Авось прорвёмся\
					\nв) Нерегулируемыми. Езда разрешается при отсутствии помехи справа\
					\nг) Регулируемым при наличии светофора на перекрёстке\
					", "Ок", "Отмена");
				Question7[playerid] = 0;
				Question8[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №8.\
					\n Все перекрёстки штата являются:\
					\nа) Регулируемыми, езда разрешается при зелёном сигнале светофора\
					\nб) Нерегулируемыми. Авось прорвёмся\
					\nв) Нерегулируемыми. Езда разрешается при отсутствии помехи справа\
					\nг) Регулируемым при наличии светофора на перекрёстке\
					", "Ок", "Отмена");
					return false;
				}
			}
		}
		if (Question8[playerid] == 1) {
			if (listitem == 4) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №9.\
					\n На светофоре горит красный.Ваши действия?\
					\nа) Остановиться на красный сигнал светофора\
					\nб) Проехать т.к. сигналы разрешаеться не учитывать\
					\nв) Сбить светофор, чтобы он не путал других участников движения\
					\nг) А кто вобще смотрит на эти светофоры\
					", "Ок", "Отмена");
				Question8[playerid] = 0;
				Question9[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");
					ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №9.\
					\n На светофоре горит красный.Ваши действия?\
					\nа) Остановиться на красный сигнал светофора\
					\nб) Проехать т.к. сигналы разрешаеться не учитывать\
					\nв) Сбить светофор, чтобы он не путал других участников движения\
					\nг) А кто вобще смотрит на эти светофоры\
					", "Ок", "Отмена");
					return false;
				}
			}
		}
		if (Question9[playerid] == 1) {
			if (listitem == 3) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "* Верно. Следующий вопрос");
				ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test  ", "\
					Вопрос №10.На повороте возник занос переднеприводного\
					\n автомобиля.Ваши действия?\
					\nа) Схватиться за голову и выпрыгнуть из машины\
					\nб) Притормозить и повернуть в сторону заноса\
					\nв) Разогнаться до максимальной скорости, чтобы не заносило\
					\nг) Слегка увеличить газ и выровнять ход\
					", "Ок", "Отмена");
				Question9[playerid] = 0;
				Question10[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, "* Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					SendClientMessage(playerid, COLOR_RED, "* Не Верно.");
					SendClientMessage(playerid, COLOR_RED, "* Ещё 1 одна ошибка и Вы провалите тест");

					return false;
				}
			}
		}
		if (Question10[playerid] == 1) {
			if (listitem == 5) {
				EmptyMessages(playerid, 5);
				SendClientMessage(playerid, COLOR_GREEN, "_____________Теория_____________");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " Вы сдали тест, перейдем к практике.Возьмите автомобиль и отправляйтесь по маршруту.");
				Question10[playerid] = 0;
				SetPlayerCheckpoint(playerid, -2086.8542, -83.1063, 35.8766, 2.0);
				CP[playerid] = 160;
				Practice[playerid] = 1;
				return false;
			} else {
				if (Owibka[playerid] == 1) {
					SendClientMessage(playerid, COLOR_RED, " Вы провалили тест");
					DrivingTest[playerid] = 0;
					Question1[playerid] = 0;
					Question2[playerid] = 0;
					Question3[playerid] = 0;
					Question4[playerid] = 0;
					Question5[playerid] = 0;
					Question6[playerid] = 0;
					Question7[playerid] = 0;
					Question8[playerid] = 0;
					Question9[playerid] = 0;
					Question10[playerid] = 0;
					Owibka[playerid] = 0;
					return false;
				} else {
					Owibka[playerid] = 1;
					EmptyMessages(playerid, 5);
					Question10[playerid] = 0;
					DrivingTest[playerid] = 0;

				}
			}
		}
		return true;
	}
	if (dialogid == 793) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[21][bMafia] > 0) {
						BizzInfo[21][bTill] += 23;
						BizzInfo[21][bProducts]--;
						ObwyakInfo[BizzInfo[21][bMafia]][oGangMoney] += 2;
					} else {
						BizzInfo[21][bTill] += 25;
						BizzInfo[21][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[21][bMafia] > 0) {
						BizzInfo[21][bTill] += 45;
						BizzInfo[21][bProducts]--;
						ObwyakInfo[BizzInfo[21][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[21][bTill] += 50;
						BizzInfo[21][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[21][bMafia] > 0) {
						BizzInfo[21][bTill] += 68;
						BizzInfo[21][bProducts]--;
						ObwyakInfo[BizzInfo[21][bMafia]][oGangMoney] += 7;
					} else {
						BizzInfo[21][bTill] += 75;
						BizzInfo[21][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[21][bMafia] > 0) {
						BizzInfo[21][bTill] += 90;
						BizzInfo[21][bProducts]--;
						ObwyakInfo[BizzInfo[21][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[21][bTill] += 100;
						BizzInfo[21][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -2);
					if (BizzInfo[21][bMafia] > 0) {
						BizzInfo[21][bTill] += 1;
						BizzInfo[21][bProducts]--;
						ObwyakInfo[BizzInfo[21][bMafia]][oGangMoney] += 1;
					} else {
						BizzInfo[21][bTill] += 2;
						BizzInfo[21][bProducts]--;
					}
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//================================[Groove Streete Bar]==================================
	if (dialogid == 794) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[22][bMafia] > 0) {
						BizzInfo[22][bTill] += (25 / 10 * 9);
						BizzInfo[22][bProducts]--;
						ObwyakInfo[BizzInfo[22][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[22][bTill] += 25;
						BizzInfo[21][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[22][bMafia] > 0) {
						BizzInfo[22][bTill] += 90;
						BizzInfo[22][bProducts]--;
						ObwyakInfo[BizzInfo[22][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[22][bTill] += 100;
						BizzInfo[21][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[22][bMafia] > 0) {
						BizzInfo[22][bTill] += 68;
						BizzInfo[22][bProducts]--;
						ObwyakInfo[BizzInfo[22][bMafia]][oGangMoney] += 7;
					} else {
						BizzInfo[22][bTill] += 75;
						BizzInfo[21][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[22][bMafia] > 0) {
						BizzInfo[22][bTill] += 90;
						BizzInfo[22][bProducts]--;
						ObwyakInfo[BizzInfo[22][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[22][bTill] += 100;
						BizzInfo[21][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[22][bMafia] > 0) {
						BizzInfo[22][bTill] += (125 / 10 * 9);
						BizzInfo[22][bProducts]--;
						ObwyakInfo[BizzInfo[22][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[22][bTill] += 125;
						BizzInfo[21][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//================================[Club]==================================
	if (dialogid == 796) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[6][bMafia] > 0) {
						BizzInfo[6][bTill] += (25 / 10 * 9);
						BizzInfo[6][bProducts]--;
						ObwyakInfo[BizzInfo[6][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[6][bTill] += 25;
						BizzInfo[6][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[6][bMafia] > 0) {
						BizzInfo[6][bTill] += 45;
						BizzInfo[6][bProducts]--;
						ObwyakInfo[BizzInfo[6][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[6][bTill] += 50;
						BizzInfo[6][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[6][bMafia] > 0) {
						BizzInfo[6][bTill] += 68;
						BizzInfo[6][bProducts]--;
						ObwyakInfo[BizzInfo[6][bMafia]][oGangMoney] += 7;
					} else {
						BizzInfo[6][bTill] += 75;
						BizzInfo[6][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[6][bMafia] > 0) {
						BizzInfo[6][bTill] += 90;
						BizzInfo[6][bProducts]--;
						ObwyakInfo[BizzInfo[6][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[6][bTill] += 100;
						BizzInfo[6][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[6][bMafia] > 0) {
						BizzInfo[6][bTill] += (125 / 10 * 9);
						BizzInfo[6][bProducts]--;
						ObwyakInfo[BizzInfo[6][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[6][bTill] += 125;
						BizzInfo[6][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//================================[Strip Bar]==================================
	if (dialogid == 792) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[20][bMafia] > 0) {
						BizzInfo[20][bTill] += (25 / 10 * 9);
						BizzInfo[20][bProducts]--;
						ObwyakInfo[BizzInfo[20][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[20][bTill] += 25;
						BizzInfo[20][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[20][bMafia] > 0) {
						BizzInfo[20][bTill] += 45;
						BizzInfo[20][bProducts]--;
						ObwyakInfo[BizzInfo[20][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[20][bTill] += 50;
						BizzInfo[20][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[20][bMafia] > 0) {
						BizzInfo[20][bTill] += 68;
						BizzInfo[20][bProducts]--;
						ObwyakInfo[BizzInfo[20][bMafia]][oGangMoney] += 7;
					} else {
						BizzInfo[20][bTill] += 75;
						BizzInfo[20][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[20][bMafia] > 0) {
						BizzInfo[20][bTill] += 90;
						BizzInfo[20][bProducts]--;
						ObwyakInfo[BizzInfo[20][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[20][bTill] += 100;
						BizzInfo[20][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[20][bMafia] > 0) {
						BizzInfo[20][bTill] += (125 / 10 * 9);
						BizzInfo[20][bProducts]--;
						ObwyakInfo[BizzInfo[20][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[20][bTill] += 125;
						BizzInfo[20][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//================================[Клуб Vegas]==================================
	if (dialogid == 789) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[19][bMafia] > 0) {
						BizzInfo[19][bTill] += (25 / 10 * 9);
						BizzInfo[19][bProducts]--;
						ObwyakInfo[BizzInfo[19][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[19][bTill] += 25;
						BizzInfo[19][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[19][bMafia] > 0) {
						BizzInfo[19][bTill] += 45;
						BizzInfo[19][bProducts]--;
						ObwyakInfo[BizzInfo[19][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[19][bTill] += 50;
						BizzInfo[19][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[19][bMafia] > 0) {
						BizzInfo[19][bTill] += 68;
						BizzInfo[19][bProducts]--;
						ObwyakInfo[BizzInfo[19][bMafia]][oGangMoney] += 7;
					} else {
						BizzInfo[19][bTill] += 75;
						BizzInfo[19][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[19][bMafia] > 0) {
						BizzInfo[19][bTill] += 90;
						BizzInfo[19][bProducts]--;
						ObwyakInfo[BizzInfo[19][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[19][bTill] += 100;
						BizzInfo[19][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[19][bMafia] > 0) {
						BizzInfo[19][bTill] += 112.5;
						BizzInfo[19][bProducts]--;
						ObwyakInfo[BizzInfo[19][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[19][bTill] += 125;
						BizzInfo[19][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//================================[Клуб Джизи]==================================
	if (dialogid == 787) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += (25 / 10 * 9);
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[5][bTill] += 25;
						BizzInfo[5][bProducts]--;
					}
					Butilka[playerid] = 10;
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += 45;
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[5][bTill] += 50;
						BizzInfo[5][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += (75 / 10 * 9);
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += (75 / 10 * 1);
					} else {
						BizzInfo[5][bTill] += 75;
						BizzInfo[5][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					GivePlayerBablo(playerid, -10);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += 90;
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[5][bTill] += 100;
						BizzInfo[5][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += (125 / 10 * 9);
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[5][bTill] += 125;
						BizzInfo[5][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	//==============================[Выпивка в баре]================================
	if (dialogid == 786) {
		if (response) {
			if (PlayerDrunk[playerid] < 10) {
				new Float:health;
				new napitok[30];
				if (listitem == 0) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -25);
					if (BizzInfo[7][bMafia] > 0) {
						BizzInfo[7][bTill] += (25 / 10 * 9);
						BizzInfo[7][bProducts]--;
						ObwyakInfo[BizzInfo[7][bMafia]][oGangMoney] += (25 / 10 * 1);
					} else {
						BizzInfo[7][bTill] += 25;
						BizzInfo[7][bProducts]--;
					}
					Butilka[playerid] = 10;
					GetPlayerHealth(playerid, health);
					SetPlayerSpecialAction(playerid, 21);
					napitok = "пиво";
				}
				else if (listitem == 1) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 3;
					if (PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					if (GetPlayerHealth(playerid, health) < 100)
						GivePlayerBablo(playerid, -50);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += 45;
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += 5;
					} else {
						BizzInfo[5][bTill] += 50;
						BizzInfo[5][bProducts]--;
					}
					Butilka1[playerid] = 10;
					napitok = "водку";
				}
				else if (listitem == 2) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					PlayerDrunk[playerid] += 1;
					if (PlayerDrunk[playerid] >= 7) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -75);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += (75 / 10 * 9);
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += (75 / 10 * 1);
					} else {
						BizzInfo[5][bTill] += 75;
						BizzInfo[5][bProducts]--;
					}
					Butilka2[playerid] = 10;
					napitok = "коктейль";
				}
				else if (listitem == 3) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					PlayerDrunk[playerid] += 5;
					if (PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
					GivePlayerBablo(playerid, -100);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += 90;
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += 10;
					} else {
						BizzInfo[5][bTill] += 100;
						BizzInfo[5][bProducts]--;
					}
					Butilka3[playerid] = 10;
					napitok = "Виски";
				}
				else if (listitem == 4) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					GivePlayerBablo(playerid, -125);
					if (BizzInfo[5][bMafia] > 0) {
						BizzInfo[5][bTill] += (125 / 10 * 9);
						BizzInfo[5][bProducts]--;
						ObwyakInfo[BizzInfo[5][bMafia]][oGangMoney] += (125 / 10 * 1);
					} else {
						BizzInfo[5][bTill] += 125;
						BizzInfo[5][bProducts]--;
					}
					Butilka4[playerid] = 8;
					napitok = "Молоко";
				}
				else {
					SendClientMessage(playerid, COLOR_WHITE, "Бармен: Извините, но я не слышал о таком напитке.");
					return true;
				}
				new sendername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s заказал себе %s.", sendername, napitok);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			} else {
				SendClientMessage(playerid, COLOR_RED, "Вас сейчас стошнит.");
				return true;
			}
		}
	}
	if (dialogid == 3) {
		if (response) {
			PlayerInfo[playerid][pSex] = 1;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Хорошо, вы Мужчина.");
		} else {
			PlayerInfo[playerid][pSex] = 2;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Хорошо, вы Девушка.");
		}
		new listitems[] = "Los-Santos\nSan-Fierro\nLas-Venturas";
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_LIST, "Выберите свой город", listitems, "Ок", "Назад");
	}
	else if (dialogid == 4) {
		if (response) {
			if (listitem == 0) {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFFFF}Теперь вы будете появляться в городе {00C0FF}Los-Santos.");
				PlayerInfo[playerid][pOrigin] = 1;
				TutTime[playerid] = 1;
			} else if (listitem == 1) {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFFFF}Теперь вы будете появляться в городе {00C0FF}San-Fierro.");
				PlayerInfo[playerid][pOrigin] = 2;
				TutTime[playerid] = 1;
			} else if (listitem == 2) {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "{FFFFFF}Теперь вы будете появляться в городе {00C0FF}Las-Venturas.");
				PlayerInfo[playerid][pOrigin] = 3;
				TutTime[playerid] = 1;
			}
		} else {
			ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, "Укажите ваш пол", "Ваш пол Мужской или Женский?", "Мужской", "Женский");
		}
	}
	if (dialogid == 1) {
		if (response) {
			OnPlayerLogin(playerid, inputtext);
		} else {
			Kick(playerid);
		}
	}
	if (dialogid == 2) {
		if (response) {
			if (!strlen(inputtext) || !OnPlayerRegister(playerid, inputtext)) return ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Регистрация на YourWorld", "Зарегистрируйтесь\nВведите свой пароль", " Далее ", " Отмена ");
			return ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Авторизация на YourWorld", "Авторизируйтесь, введите свой пароль.", " Далее ", " Отмена ");

		} else {
			Kick(playerid);
		}
	}
	printf("диалог %d", vasya);
	return true;
}

EmptyMessages(playerid, count) {
	for (new i = 0; i < count; i++) {
		SendClientMessage(playerid, 0, "\n");
	}
}

public OnPlayerUpdate(playerid) {
	if (IsPlayerNPC(playerid)) return true;
	if (IsPlayerInRangeOfPoint(playerid, 1, 1544.1162, -1353.5121, 329.4740)) return GivePlayerWeapon(playerid, 46, 1);
	if (PlayerOnJob[playerid] && !PlayerStartJob[playerid] && !IsPlayerInAnyVehicle(playerid)) {
		if (IsPlayerInRangeOfPoint(playerid, 2.0, -1854.67, -1650.97, 25.7248) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, -1803.5344, -1655.2640, 25.8294) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, -1788.5780, -1640.7179, 27.0669)) {
			SendClientMessage(playerid, -1, "Вы начали добывать обычный металл.");
			TimerGiveMiner[playerid] = 5;
			ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
			PlayerStartJob[playerid] = true;
		}
		if (IsPlayerInRangeOfPoint(playerid, 2.0, -1869.1316, -1634.7915, -58.500) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, -1868.9603, -1643.6682, -58.046)) {
			SendClientMessage(playerid, -1, "Вы начали добывать качественный металл.");
			TimerGiveMinerEx[playerid] = 5;
			ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);
			PlayerStartJob[playerid] = true;
		}
		return 1;
	}
	if (PlayerStartJob[playerid]) {
		if (IsPlayerApplyAnimation(playerid, "FALL_back") ||
			IsPlayerApplyAnimation(playerid, "FALL_collapse") ||
			IsPlayerApplyAnimation(playerid, "FALL_fall") ||
			IsPlayerApplyAnimation(playerid, "FALL_front") ||
			IsPlayerApplyAnimation(playerid, "FALL_glide") ||
			IsPlayerApplyAnimation(playerid, "FALL_land") ||
			IsPlayerApplyAnimation(playerid, "FALL_skyDive") ||
			IsPlayerApplyAnimation(playerid, "JUMP_glide") ||
			IsPlayerApplyAnimation(playerid, "JUMP_land") ||
			IsPlayerApplyAnimation(playerid, "JUMP_launch") ||
			IsPlayerApplyAnimation(playerid, "JUMP_launch_R")) {
			if (!IsPlayerInRangeOfPoint(playerid, 3, -1854.7035, -1650.9668, 25.7248) &&
				!IsPlayerInRangeOfPoint(playerid, 3, -1803.5344, -1655.2640, 25.8294) &&
				!IsPlayerInRangeOfPoint(playerid, 3, -1788.5780, -1640.7179, 27.0669) &&
				!IsPlayerInRangeOfPoint(playerid, 3, -1869.1316, -1634.7915, -58.500) &&
				!IsPlayerInRangeOfPoint(playerid, 3, -1868.9603, -1643.6682, -58.046)) {
				SendClientMessage(playerid, -1, "Вы уронили металл.");
				DisablePlayerCheckpoint(playerid);
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
				PlayerStartJob[playerid] = false;
				RemovePlayerAttachedObject(playerid, 4);
				SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
				GetPlayerMetall[playerid] = 0;
				GetPlayerMetallEx[playerid] = 0;
				return 1;
			}
		}
	}
	new animlib[32];
	new animname[32];
	if (Meshok[playerid] == 1 && !IsPlayerInRangeOfPoint(playerid, 2.0, 2230.8132324219, -2285.7043457031, 13.531787872314)) {
		GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, 32, animname, 32);
		if (strcmp(animname, "IDLE_STANCE", true) != 0 && strcmp(animname, "RUN_CIVI", true) != 0 && strcmp(animname, "WALK_CIVI", true) != 0 && strcmp(animname, "crry_prtial", true) != 0 && strcmp(animname, "SPRINT_PANIC", true) != 0 && strcmp(animname, "RUN_PLAYER", true) != 0 && strcmp(animname, "WALK_PLAYER", true) != 0 && strcmp(animname, "SPRINT_CIVI", true) != 0) {
			Meshok[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Вы уронили мешок, будте осторожны.");
			if (IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
			SetPlayerCheckpoint(playerid, 2230.8132324219, -2285.7043457031, 13.531787872314, 2.0);
		}
	}
	new i = playerid;
	if (IsPlayerConnected(i)) {
		if (IsPlayerInAnyVehicle(playerid)) {
			new carid = GetPlayerVehicleID(playerid);
			GetVehicleHealth(GetPlayerVehicleID(playerid), VehicleHealth);
			format(vava, sizeof(vava), "%d km/h", SpeedVehicle(playerid));
			format(vava1, sizeof(vava1), "%d", Gas[GetPlayerVehicleID(playerid)]);
			TextDrawSetString(TextDraw3[playerid], vava);
			TextDrawSetString(TextDraw1[playerid], vava1);
			if (Gas[GetPlayerVehicleID(playerid)] <= 0) {
				GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(carid, false, lights, alarm, doors, bonnet, boot, objective);
			}
		}
	}
	if (IsPlayerConnected(playerid)) {
		if (IsPlayerInRangeOfPoint(playerid, 40.0, 806.0165, -1343.5483, -0.5078)) return SetPlayerArmedWeapon(playerid, 0);
		if (IsPlayerInRangeOfPoint(playerid, 40.0, -1966.8682, 117.5648, 27.6875)) return SetPlayerArmedWeapon(playerid, 0);
		if (IsPlayerInRangeOfPoint(playerid, 40.0, 2839.3174, 1290.5490, 11.3906)) return SetPlayerArmedWeapon(playerid, 0);
		if (IsPlayerInRangeOfPoint(playerid, 40.0, -1869.2205, -1637.1078, 21.9395)) return SetPlayerArmedWeapon(playerid, 0);
	}
	return true;
}

ClearMarriage(playerid) {
	if (IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		strmid(PlayerInfo[playerid][pMarriedTo], "None", 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return true;
}

ClearPaper(paper) {
	new string[MAX_PLAYER_NAME];
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], "нет", 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], "нет", 0, strlen(string), 255);
	SavePapers();
	return true;
}

ClearCrime(playerid) {
	if (IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		strmid(PlayerCrime[playerid][pBplayer], "********", 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], "********", 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], "********", 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], "********", 0, strlen(string), 255);
	}
	return true;
}

FishCost(playerid, fish) {
	if (IsPlayerConnected(playerid)) {
		new cost = 0;
		switch (fish) {
			case 1 :  {
				cost = 1;
			}
			case 2 :  {
				cost = 3;
			}
			case 3 :  {
				cost = 3;
			}
			case 5 :  {
				cost = 5;
			}
			case 6 :  {
				cost = 2;
			}
			case 8 :  {
				cost = 8;
			}
			case 9 :  {
				cost = 12;
			}
			case 11 :  {
				cost = 9;
			}
			case 12 :  {
				cost = 7;
			}
			case 14 :  {
				cost = 12;
			}
			case 15 :  {
				cost = 9;
			}
			case 16 :  {
				cost = 7;
			}
			case 17 :  {
				cost = 7;
			}
			case 18 :  {
				cost = 10;
			}
			case 19 :  {
				cost = 4;
			}
			case 21 :  {
				cost = 3;
			}
		}
		return cost;
	}
	return false;
}

ClearFishes(playerid) {
	if (IsPlayerConnected(playerid)) {
		Fishes[playerid][pFid1] = 0;
		Fishes[playerid][pFid2] = 0;
		Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0;
		Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0;
		Fishes[playerid][pWeight2] = 0;
		Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0;
		Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		strmid(Fishes[playerid][pFish1], "нет", 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], "нет", 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], "нет", 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], "нет", 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], "нет", 0, strlen(string), 255);
	}
	return true;
}

ClearFishID(playerid, fish) {
	if (IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		switch (fish) {
			case 1 :  {
				strmid(Fishes[playerid][pFish1], "нет", 0, strlen(string), 255);
				Fishes[playerid][pWeight1] = 0;
				Fishes[playerid][pFid1] = 0;
			}
			case 2 :  {
				strmid(Fishes[playerid][pFish2], "нет", 0, strlen(string), 255);
				Fishes[playerid][pWeight2] = 0;
				Fishes[playerid][pFid2] = 0;
			}
			case 3 :  {
				strmid(Fishes[playerid][pFish3], "нет", 0, strlen(string), 255);
				Fishes[playerid][pWeight3] = 0;
				Fishes[playerid][pFid3] = 0;
			}
			case 4 :  {
				strmid(Fishes[playerid][pFish4], "нет", 0, strlen(string), 255);
				Fishes[playerid][pWeight4] = 0;
				Fishes[playerid][pFid4] = 0;
			}
			case 5 :  {
				strmid(Fishes[playerid][pFish5], "нет", 0, strlen(string), 255);
				Fishes[playerid][pWeight5] = 0;
				Fishes[playerid][pFid5] = 0;
			}
		}
	}
	return true;
}

ClearCooking(playerid) {
	if (IsPlayerConnected(playerid)) {
		Cooking[playerid][pCookID1] = 0;
		Cooking[playerid][pCookID2] = 0;
		Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0;
		Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0;
		Cooking[playerid][pCWeight2] = 0;
		Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0;
		Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		strmid(Cooking[playerid][pCook1], "Ничего", 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], "Ничего", 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], "Ничего", 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], "Ничего", 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], "Ничего", 0, strlen(string), 255);
	}
	return true;
}

ClearCookingID(playerid, cook) {
	if (IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		switch (cook) {
			case 1 :  {
				strmid(Cooking[playerid][pCook1], "Ничего", 0, strlen(string), 255);
				Cooking[playerid][pCWeight1] = 0;
				Cooking[playerid][pCookID1] = 0;
			}
			case 2 :  {
				strmid(Cooking[playerid][pCook2], "Ничего", 0, strlen(string), 255);
				Cooking[playerid][pCWeight2] = 0;
				Cooking[playerid][pCookID2] = 0;
			}
			case 3 :  {
				strmid(Cooking[playerid][pCook3], "Ничего", 0, strlen(string), 255);
				Cooking[playerid][pCWeight3] = 0;
				Cooking[playerid][pCookID3] = 0;
			}
			case 4 :  {
				strmid(Cooking[playerid][pCook4], "Ничего", 0, strlen(string), 255);
				Cooking[playerid][pCWeight4] = 0;
				Cooking[playerid][pCookID4] = 0;
			}
			case 5 :  {
				strmid(Cooking[playerid][pCook5], "Ничего", 0, strlen(string), 255);
				Cooking[playerid][pCWeight5] = 0;
				Cooking[playerid][pCookID5] = 0;
			}
		}
	}
	return true;
}
ClearGroceries(playerid) {
	if (IsPlayerConnected(playerid)) {
		Groceries[playerid][pChickens] = 0;
		Groceries[playerid][pChicken] = 0;
		Groceries[playerid][pHamburgers] = 0;
		Groceries[playerid][pHamburger] = 0;
		Groceries[playerid][pPizzas] = 0;
		Groceries[playerid][pPizza] = 0;
	}
	return true;
}

public OnPlayerDisconnect(playerid, reason) {
	new string[64];
	SavePlayer(playerid);
	TextDrawDestroy(levelexpp[playerid]);
	if (Playerderbi[playerid] != 0) { DerbiPlayers -= 1; }
	if (keyss[playerid] > 0) {
		keyss[playerid] = 0;
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		keys = CreatePickup(1210, 22, x + 1, y + 1, z);
		RemovePlayerAttachedObject(playerid, 1);
	}
	WrongPassword[playerid] = 0;
	gCarLock[fura[playerid]] = 0;
	UnLockCar(fura[playerid]);
	PlayerInfo[playerid][pNoFree] = 0;
	PlayerMurder[playerid] = 0;
	PlayerInfo[playerid][pCar] = 0;
	Ograblen[playerid] = 0;
	if (IsPlayerConnected(playerid) && !IsPlayerNPC(playerid)) {
		gActivePlayers[playerid]--;
		numplayers--;
		PlayerInfo[playerid][pAdjustable] = 1;
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (IsPlayerConnected(i) && !IsPlayerNPC(i)) {
				if (TaxiAccepted[i] < 999) {
					if (TaxiAccepted[i] == playerid) {
						TaxiAccepted[i] = 999;
						GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
						TaxiCallTime[i] = 0;
						DisablePlayerCheckpoint(i);
					}
				}
			}
		}
		new str[256], PlayerNam[30];
		if (An[playerid] == 0) {
			switch (reason) {
				case 0 :  {
					GetPlayerName(playerid, PlayerNam, 30);
					format(str, 256, "{FF3300}« {FFFFFF}Покинул сервер игрок: {FF3300}%s{FFFFFF}. Причина:{FF3300} Таймаут{FFFFFF}.", PlayerNam);
					ABroadCast(COLOR_WHITE, str, 1);
				}
				case 1 :  {
					GetPlayerName(playerid, PlayerNam, 30);
					format(str, 256, "{FF3300}« {FFFFFF}Покинул сервер игрок: {FF3300}%s{FFFFFF}. Причина:{FF3300} Вышел{FFFFFF}.", PlayerNam);
					ABroadCast(COLOR_WHITE, str, 1);
				}
				case 2 :  {
					GetPlayerName(playerid, PlayerNam, 30);
					format(str, 256, "{FF3300}« {FFFFFF}Покинул сервер игрок: {FF3300}%s{FFFFFF}. Причина:{FF3300} Вылет/Кик/Бан{FFFFFF}.", PlayerNam);
					ABroadCast(COLOR_WHITE, str, 1);
				}
			}
		}
		if (GettingCK[playerid] < 999) {
			if (IsPlayerConnected(GettingCK[playerid])) {
				SendClientMessage(GettingCK[playerid], COLOR_YELLOW, "Ваша цель покинула сервер, попробуйте позже.");
				OnCK[GettingCK[playerid]] = 999;
			}
		}
		if (TransportCost[playerid] > 0 && TransportDriver[playerid] < 999) {
			if (IsPlayerConnected(TransportDriver[playerid])) {
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "~w~Passenger left~n~~g~Earned %d$", TransportCost[playerid]);
				GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			}
		}
		if (GotHit[playerid] > 0) {
			if (GetChased[playerid] < 999) {
				if (IsPlayerConnected(GetChased[playerid])) {
					SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Ваш Наёмный Убийца покинул сервер.");
					GoChase[GetChased[playerid]] = 999;
				}
			}
		}
		if (HireCar[playerid] != 299) {
			gLastDriver[HireCar[playerid]] = 300;
			gCarLock[HireCar[playerid]] = 0;
			UnLockCar(HireCar[playerid]);
		}
		if (gLastCar[playerid] > 0) {
			gLastDriver[gLastCar[playerid]] = 300;
			if (PlayerInfo[playerid][pPhousekey] != gLastCar[playerid] - 1) {
				gCarLock[gLastCar[playerid]] = 0;
				UnLockCar(gLastCar[playerid]);
			}
		}

		if (TransportDuty[playerid] == 1) {
			TaxiDrivers -= 1;
		} else if (TransportDuty[playerid] == 3) {
			TramDrivers -= 1;
		}
		if (PlayerInfo[playerid][pJob] == 11) {
			if (JobDuty[playerid] == 1) { Medics -= 1; }
		}
		else if (PlayerInfo[playerid][pJob] == 7) {
			if (JobDuty[playerid] == 1) { Mechanics -= 1; }
		}
	}
	return true;
}
GunSpawn(playerid) {
	if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) // Полиция
	{

		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 24, 30); // Дигл
			ServerGivePlayerWeapons(playerid, 31, 700); // m4
		}
		ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
		ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
		OnWeapon[playerid] = 0;
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) // ФБР
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 24, 175); // Дигл
			ServerGivePlayerWeapons(playerid, 31, 700); // m4
		}
		ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
		ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
		OnWeapon[playerid] = 0;
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) // Армия
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 24, 175); // Дигл
			ServerGivePlayerWeapons(playerid, 31, 700); // m4
		}
		ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
		ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
		PlayerInfo[playerid][pInt] = 0;
		OnWeapon[playerid] = 0;
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) // МЧС
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 24, 30);
		}
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) // Lis
	{
		ServerGivePlayerWeapons(playerid, 24, 50); //
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) //LaCosaNostra spawn
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); // golfbit
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) // Yakuza spawn
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 8, 1); // katana
		return 1;
	}	
	if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
	{
		ServerGivePlayerWeapons(playerid, 4, 1); //    Нож
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 23, 250); //   SD-Pistol
		}
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) // РЕПОРТЁРЫ
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 24, 40);
		}
		ServerGivePlayerWeapons(playerid, 43, 60); // Фотоаппарат
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) // ТАКСИ СФ
	{
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		ServerGivePlayerWeapons(playerid, 24, 40);
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) //Street Racer
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) // Grove Street Gang
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) //El Coronos
	{

		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) //Rifa spawn
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) //Los Santos Vagos
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) //The Ballas Gang
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) //Triads
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 8, 1); //Baseball Bat
		return 1;
	}
	if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) // Russian Mafia Spawn
	{
		if (PlayerInfo[playerid][pGunLic] > 0) {
			ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
		}
		ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
		return 1;
	}
	return true; //Обновить
}

SetPlayerSpawn(playerid) {
	if (IsPlayerNPC(playerid)) return true;
	SetPVarInt(playerid, "K_Times", 0);
	ZonaKill[playerid] = 0;
	NaCS[playerid] = 0;
	PlayerOnJob[playerid] = false;
	PlayerStartJob[playerid] = false;
	GetPlayerMetall[playerid] = 0;
	AllPlayerMetall[playerid] = 0;
	GetPlayerMetallEx[playerid] = 0;
	AllPlayerMetallEx[playerid] = 0;
	ExtraMetall[playerid] = 0;
	StopAudioStreamForPlayer(playerid);
	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	new house = PlayerInfo[playerid][pPhousekey];
	new flat = PlayerInfo[playerid][pFlatKey];
	if (IsPlayerConnected(playerid) && !IsPlayerNPC(playerid)) {
		if (PlayerInfo[playerid][pTut] == 0) {
			gOoc[playerid] = 1;
			gNews[playerid] = 1;
			gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, "Укажите ваш пол", "{ffdb58}Добро пожаловать на наш сервер, Укажи свой пол.", "Мужской", "Женский");
		}
		if (PlayerInfo[playerid][pJailed] == 2) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 268.5777, 1857.9351, 9.8133);
			SetPlayerWorldBounds(playerid, 337.5694, 101.5826, 1940.9759, 1798.7453);
			SetPlayerSkin(playerid, 268);
			return true;
		}
		new rand;
		if (PlayerInfo[playerid][pJailed] == 1) {
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
			SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFFF}Вы не отсидели свой тюремный срок.");
			SetPlayerSkin(playerid, 268);
			return true;
		}
		if (PlayerInfo[playerid][pJailed] == 4) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 107.2300, 1920.6311, 18.5208);
			SetPlayerWorldBounds(playerid, 337.5694, 101.5826, 1940.9759, 1798.7453);
			SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFFF}Вы не отмотали свой срок заключения.");
			SetPlayerSkin(playerid, 268);
			return true;
		}
		if (house != 0) {
			if (SpawnChange[playerid]) {
				SetPlayerVirtualWorld(playerid, 250 + house);
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid, HouseInfo[house][hInt]);
				SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity], HouseInfo[house][hExitz]); // Warp the player
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				GunSpawn(playerid);
				return true;
			}
		}
		if (flat != 0) {
			if (SpawnChange[playerid]) {
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid, FlatsInfo[flat][fInt]);
				SetPlayerPos(playerid, FlatsInfo[flat][fExitx], FlatsInfo[flat][fExity], FlatsInfo[flat][fExitz]);
				SetPlayerVirtualWorld(playerid, flat + 9999);
				GunSpawn(playerid);
				return true;
			}
		}
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) // Полиция
		{
			SetPlayerPos(playerid, 1530.8369, -1664.8872, 6.2188);
			SetPlayerFacingAngle(playerid, 270.0);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 24, 30); // Дигл
				ServerGivePlayerWeapons(playerid, 31, 700); // m4
			}
			ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
			ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) // ФБР
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 238.3722, 147.3542, 1003.0234);
			SetPlayerFacingAngle(playerid, 350.7064);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 24, 175); // Дигл
				ServerGivePlayerWeapons(playerid, 31, 700); // m4
			}
			ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
			ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pInt] = 3;
			OnWeapon[playerid] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) // Армия
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerColor(playerid, 0x00FF00);
			SetPlayerPos(playerid, -1346.2050, 492.3983, 11.2027);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 24, 175); // Дигл
				ServerGivePlayerWeapons(playerid, 31, 700); // m4
			}
			ServerGivePlayerWeapons(playerid, 3, 30); // Nite Stick
			ServerGivePlayerWeapons(playerid, 41, 500); // Спрей
			PlayerInfo[playerid][pInt] = 0;
			OnWeapon[playerid] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) // МЧС
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 24, 30);
			}
			SetPlayerPos(playerid, -2665.1858, 635.3693, 14.4531);
			SetPlayerFacingAngle(playerid, 180.9820);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) // Lis
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
			ServerGivePlayerWeapons(playerid, 24, 50); //
			SetPlayerPos(playerid, -2032.7527, -117.2502, 1035.1719);
			PlayerInfo[playerid][pInt] = 3;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) //LaCosaNostra spawn
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerPos(playerid, 1267.3101, -775.7049, 1091.9063);
			SetPlayerFacingAngle(playerid, 135.6846);
			SetPlayerVirtualWorld(playerid, 1);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); // golfbit
			PlayerInfo[playerid][pInt] = 5;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) // Yakuza spawn
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid, -2163.2495, 644.2790, 1057.5938); //
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 8, 1); // katana
			PlayerInfo[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 4);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
		{
			SetPlayerPos(playerid, -1111.8601, -1015.9464, 129.2188);
			SetPlayerFacingAngle(playerid, 96.4942);
			ServerGivePlayerWeapons(playerid, 4, 1); //    Нож
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 23, 250); //   SD-Pistol
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) // РЕПОРТЁРЫ
		{
			SetPlayerPos(playerid, 739.65, -1346.59, 13.51);
			SetPlayerVirtualWorld(playerid, 0);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 24, 40);
			}
			SetPlayerFacingAngle(playerid, 270.0304);
			ServerGivePlayerWeapons(playerid, 43, 60); // Фотоаппарат
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) // ТАКСИ СФ
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -1706.3195, 1018.3397, 17.5859);
			SetPlayerFacingAngle(playerid, 284.3912);
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			ServerGivePlayerWeapons(playerid, 24, 40);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) //Street Racer
		{
			SetPlayerPos(playerid, 2559.6538, -1286.3639, 1060.9844);
			SetPlayerFacingAngle(playerid, 145.7378);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid, 5);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) // Grove Street Gang
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2495.8245, -1707.7820, 1014.7422);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 1);
			PlayerInfo[playerid][pInt] = 3;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) //El Coronos
		{

			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2580.8113, -1284.5963, 1065.3579);
			SetPlayerFacingAngle(playerid, 80.0144);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid, 10);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) //Rifa spawn
		{

			SetPlayerPos(playerid, 2495.8245, -1707.7820, 1014.7422);
			SetPlayerFacingAngle(playerid, 281.4778);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 2);
			PlayerInfo[playerid][pInt] = 3;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) //Los Santos Vagos
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2580.8113, -1284.5963, 1065.3579);
			SetPlayerFacingAngle(playerid, 80.0144);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid, 1);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) //The Ballas Gang
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -2163.2495, 644.2790, 1057.5938);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 2);
			PlayerInfo[playerid][pInt] = 1;
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) //Triads
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 1718.8341, -1668.1051, 20.2257);
			SetPlayerFacingAngle(playerid, 178.3140);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 8, 1); //Baseball Bat
			SetPlayerInterior(playerid, 18);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid, 2);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) // Russian Mafia Spawn
		{
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2580.8113, -1284.5963, 1065.3579);
			SetPlayerFacingAngle(playerid, 80.0144);
			if (PlayerInfo[playerid][pGunLic] > 0) {
				ServerGivePlayerWeapons(playerid, 22, 80); // 9mm
			}
			ServerGivePlayerWeapons(playerid, 5, 1); //Baseball Bat
			SetPlayerInterior(playerid, 2);
			PlayerInfo[playerid][pInt] = 2;
			SetPlayerVirtualWorld(playerid, 4);
			return 1;
		}
		if (PlayerInfo[playerid][pMember] == 143 || PlayerInfo[playerid][pLeader] == 143) {
			SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 1742.5848, -1905.4375, 5.8248);
			SetPlayerFacingAngle(playerid, 184.5537);
			ServerGivePlayerWeapons(playerid, 5, 1);
			ServerGivePlayerWeapons(playerid, 24, 50);
			ServerGivePlayerWeapons(playerid, 41, 800);
			ServerGivePlayerWeapons(playerid, 1, 1);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		if ((gTeam[playerid]) == 1) {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 94.0375);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		} else {
			SetPlayerToTeamColor(playerid);
			if (PlayerInfo[playerid][pOrigin] == 1) // Los_Santos
			{
				SetPlayerPos(playerid, 806.0165, -1343.5483, -0.5078);
				SetPlayerFacingAngle(playerid, 139.2263);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
			} else if (PlayerInfo[playerid][pOrigin] == 2) // San_Fiero
			{
				SetPlayerPos(playerid, -1966.8682, 117.5648, 27.6875);
				SetPlayerFacingAngle(playerid, 359.0267);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
			} else if (PlayerInfo[playerid][pOrigin] == 3) // Las_Venturos
			{
				SetPlayerPos(playerid, 2839.3174, 1290.5490, 11.3906);
				SetPlayerFacingAngle(playerid, 88.7585);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
			} else {
				SetPlayerPos(playerid, 806.0165, -1343.5483, -0.5078);
				SetPlayerFacingAngle(playerid, 139.2263);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
			}
			return true;
		}
	}
	return true;
}

forward DeletePickup(pickmoney);
public DeletePickup() {
	DestroyPickup(pickmoney);
	return 1;
}

DropPlayerMoney(playerid) {
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	pickmoney = CreatePickup(1212, 3, x + 1, y + 1, z);
	SetTimerEx("DeletePickup", 10000, false, "d", pickmoney);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason) {
	if (IsPlayerNPC(playerid)) return true;
	if (GetPVarInt(playerid, "K_Times") > gettime()) return Kick(playerid);
	SetPVarInt(playerid, "K_Times", gettime() + 1);
	if (killerid == INVALID_PLAYER_ID) return false;
	new string[144];
	new victimteam;
	new killerteam;
	new Float:px, Float:py, Float:pz;
	new name[MAX_PLAYER_NAME];
	if (PlayerInfo[killerid][pJob] == 12) {
		if (PlayerInfo[playerid][pLevel] > 0) {
			if (reason == 0 || reason == 1 || reason == 5 || reason == 8) {
				PlayerInfo[killerid][pGromilaSkill] += 1;
				if (PlayerInfo[killerid][pGromilaSkill] == 100) SendClientMessage(killerid, COLOR_LIGHTBLUE, "Ваш скил вышибалы увеличен до 2 уровня.");
				else if (PlayerInfo[killerid][pGromilaSkill] == 200) SendClientMessage(killerid, COLOR_LIGHTBLUE, "Ваш скил вышибалы увеличен до 3 уровня.");
				else if (PlayerInfo[killerid][pGromilaSkill] == 300) SendClientMessage(killerid, COLOR_LIGHTBLUE, "Ваш скил вышибалы увеличен до 4 уровня.");
				else if (PlayerInfo[killerid][pGromilaSkill] == 400) SendClientMessage(killerid, COLOR_LIGHTBLUE, "Ваш скил вышибалы увеличен до 5 уровня.");
				new level = PlayerInfo[killerid][pGromilaSkill];
				if (level >= 0 && level <= 100) {
					GivePlayerBablo(playerid, -1000);
				} else if (level >= 101 && level <= 200) {
					GivePlayerBablo(playerid, -1250);
				} else if (level >= 201 && level <= 300) {
					GivePlayerBablo(playerid, -1500);
				} else if (level >= 301 && level <= 400) {
					GivePlayerBablo(playerid, -1750);
				} else if (level >= 401) {
					GivePlayerBablo(playerid, -2000);
				}
				DropPlayerMoney(playerid);
			}
		}
	}
	Spawned[playerid] = 0;
	GunCheckTime[playerid] = 5;
	TextDrawHideForPlayer(playerid, txtTimeDisp); // часы
	TextDrawHideForPlayer(playerid, lvledit);
	victimteam = gTeam[playerid];
	killerteam = gTeam[killerid];
	gPlayerSpawned[playerid] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerPos(playerid, px, py, pz);
	if (keyss[playerid] > 0) {
		keyss[playerid] = 0;
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		keys = CreatePickup(1210, 22, x + 2, y + 1, z);
		RemovePlayerAttachedObject(playerid, 1);
	}
	if (PlayerInfo[killerid][pLeader] == 8 || PlayerInfo[killerid][pMember] == 8 || PlayerInfo[killerid][pJailed] > 0) {} else {
		SendDeathMessage(killerid, playerid, reason);
	}
	if (IsAMember(killerid)) {
		new member_;
		if (PlayerInfo[killerid][pLeader] > 0) member_ = PlayerInfo[killerid][pLeader];
		else member_ = PlayerInfo[killerid][pMember];
		for (new j = 0; j < 23; j++) {
			if (MafiaWar[MafiaZoneFraction[j]] != 1 && MafiaWar[MafiaZoneFraction_[j]] != 1) continue;
			if (MafiaZoneWar[j] == true && MafiaZoneFraction[j] == member_) MafiaZoneDeath[j]++;
			if (MafiaZoneWar[j] == true && MafiaZoneFraction_[j] == member_) MafiaZoneDeath_[j]++;
		}
	}
	if (PlayerInfo[killerid][pJailed] == 0) {
		if (IsACop(killerid)) {} else {
			if (ZonaKill[killerid] == 1 || NaCS[playerid] > 0) return false;
			if (PlayerInfo[killerid][pWanted] == 6) return false;
			if (PlayerInfo[killerid][pLevel] == 0) return false;
			PlayerInfo[killerid][pWanted] += 1;
			SendClientMessage(killerid, COLOR_YELLOW, "Вы получили 1 уровень розыска. Настучал: Неизвестный. Причина: Убийство.");
			SetPlayerWantedLevel(killerid, PlayerInfo[killerid][pWanted]);
		}
	}
	if (killerid != 255) {
		if (GetPlayerState(killerid) == 2) return SendClientMessage(killerid, COLOR_YELLOW, "Внимание! DB запрещёно! Не повторяйте этого.");
	}
	if (reason == 38) {
		new kstring[128];
		new kickname[MAX_PLAYER_NAME];
		if (IsPlayerConnected(killerid)) {
			GetPlayerName(killerid, kickname, sizeof(kickname));
			format(string, sizeof(string), "Анти-Чит Система: [%d]%s толькo что убил игрока с Минигана.", killerid, kickname);
			ABroadCast(COLOR_YELLOW, string, 1);
			printf("%s", kstring);
		}
	}
	if (reason == 35) {
		new kstring[128];
		new kickname[MAX_PLAYER_NAME];
		if (IsPlayerConnected(killerid)) {
			GetPlayerName(killerid, kickname, sizeof(kickname));
			format(string, sizeof(string), "Анти-Чит Система: [%d]%s толькo что убил игрока с Базуки.", killerid, kickname);
			ABroadCast(COLOR_YELLOW, string, 1);
			printf("%s", kstring);
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11) {
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	ClearCrime(playerid);
	if (GettingCK[playerid] < 999 || OnCK[playerid] < 999) {
		if (IsPlayerConnected(killerid)) {
			if (GettingCK[killerid] < 999 || OnCK[playerid] < 999) {
				new killer[MAX_PLAYER_NAME];
				new dier[MAX_PLAYER_NAME];
				GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
				format(string, sizeof(string), "%s Убийство героя, вы несможете больше играть под этим героем.", killer);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), " %s был убит %s **", killer, dier);
				CKLog(string);
				PlayerInfo[playerid][pCK] = 1;
				if (GettingCK[playerid] < 999) { GettingCK[playerid] = 999; } else if (OnCK[playerid] < 999) { OnCK[playerid] = 999; }
				if (GettingCK[killerid] < 999) { GettingCK[killerid] = 999; } else if (OnCK[killerid] < 999) { OnCK[killerid] = 999; }
				KickPlayer[playerid] = 1;
			}
		}
	}
	if (PlayerInfo[playerid][pHeadValue] > 0) {
		if (IsPlayerConnected(killerid)) {
			if (gTeam[killerid] == 10 || PlayerInfo[killerid][pLeader] == 8) {
				if (GoChase[killerid] == playerid) {
					ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					GivePlayerBablo(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string, 128, "{FFFFFF}Наёмный убийца {00C0FF}%s {FFFFFF}выполнил контракт на {00C0FF}%s{FFFFFF} и забрал {00C0FF}%d$ ", killer, name, PlayerInfo[playerid][pHeadValue]);
					SendRadioMessage(8, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if (victimteam >= 3 && PlayerInfo[playerid][pWanted] > 0 && killerteam == 2) {
		SetPlayerFree(playerid, killerid, "Был убит");
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid, COLOR_GRAD2);
	return true;
}

public OnPlayerSpawn(playerid) {
	SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	gCarLock[fura[playerid]] = 0;
	UnLockCar(fura[playerid]);
	StopAudioStreamForPlayer(playerid);
	Spawned[playerid] = 1;
	OnDuty[playerid] = 0;
	ZonaKill[playerid] = 0;
	RaceCP[playerid] = 0;
	CP[playerid] = 0;
	NaCS[playerid] = 0;
	che[playerid] = 0;
	checkk[playerid] = 0;
	ChekPoint[playerid] = 0;
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	GunCheckTime[playerid] = 5;
	ServerResetPlayerWeapons(playerid);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
	if (Playerderbi[playerid] > 0) {
		Playerderbi[playerid] = 0;
		DerbiPlayers--;
	}
	new hour, minute;
	TextDrawShowForPlayer(playerid, txtTimeDisp);
	TextDrawHideForPlayer(playerid, lvledit);
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	TextDrawShowForPlayer(playerid, reklweb);
	TextDrawShowForPlayer(playerid, lvledit);
	InitLockDoors(playerid);
	Masked[playerid] = 0;
	STDPlayer[playerid] = 0;
	gTeam[playerid] = PlayerInfo[playerid][pTeam];
	if (PlayerInfo[playerid][pJailed] == 1) {
		SetPlayerInterior(playerid, 6);
		RemovePlayerAttachedObject(playerid, 8);
		PlayerCuffed[playerid] = 0;
		SetPlayerSpecialAction(playerid, 0);
		new rand = random(sizeof(LSPDSpawns));
		SetPlayerPos(playerid, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
		SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFFF}Вы не отсидели свой тюремный срок.");
		SetPlayerSkin(playerid, 268);
		return true;
	}
	if (gTeam[playerid] == 11 && PlayerInfo[playerid][pLeader] < 1) {
		MedicBill[playerid] = 0;
		new rand = random(sizeof(CIV));
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
		PlayerInfo[playerid][pChar] = CIV[rand];
		SpawnPlayer(playerid);
		SetCameraBehindPlayer(playerid);
	}
	if (gTeam[playerid] == 5) {
		if (PlayerInfo[playerid][pMember] < 1) {
			MedicBill[playerid] = 0;
			new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы больше не член семьи, Вы - теперь Гражданское лицо.");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			SetSpawnInfo(playerid, gTeam[playerid], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
			PlayerInfo[playerid][pChar] = CIV[rand];
			SpawnPlayer(playerid);
			SetCameraBehindPlayer(playerid);
		}
	}
	if (gTeam[playerid] == 10) {
		if (PlayerInfo[playerid][pMember] != 8) {
			MedicBill[playerid] = 0;
			new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "Вы не Участник этого Агентства, Вы - теперь Гражданское лицо.");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			SetSpawnInfo(playerid, gTeam[playerid], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
			PlayerInfo[playerid][pChar] = CIV[rand];
			SpawnPlayer(playerid);
			SetCameraBehindPlayer(playerid);
		}
	}
	if (gTeam[playerid] == 4) {
		gTeam[playerid] = 3;
	}
	if (PlayerInfo[playerid][pReg] == 0) {
		error(playerid, " Этот сервер требует регистрации! (Kicked)");
		Kick(playerid);
	}
	if (PlayerInfo[playerid][pJailed] == 2) {
		SetPlayerInterior(playerid, 0);
		SetPlayerSkin(playerid, 268);
		SetPlayerPos(playerid, 268.5777, 1857.9351, 9.8133);
		SetPlayerWorldBounds(playerid, 337.5694, 101.5826, 1940.9759, 1798.7453);
		return true;
	}

	if (PlayerInfo[playerid][pJailed] == 4) {
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 107.2300, 1920.6311, 18.5208);
		SetPlayerSkin(playerid, 268);
		SetPlayerWorldBounds(playerid, 337.5694, 101.5826, 1940.9759, 1798.7453);
		SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFFF}Вы не отмотали свой срок заключения.");
		return true;
	}
	if (PlayerInfo[playerid][pChar] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]); } else { SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]); }
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	if (MapIconsShown[playerid] != 1) {
		MapIconsShown[playerid] = 1;
		for (new i = 0; i < sizeof(BizzInfo); i++) {
			if (BizzInfo[i][bOwned] == 0) {
				CreateMapIcon(52, 0, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++) {
			if (SBizzInfo[i][sbOwned] == 0) {
				CreateMapIcon(52, 0, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]);
			}
		}
		for (new i = 0; i < sizeof(HouseInfo); i++) {
			if (HouseInfo[i][hOwned] == 0) {
				CreateMapIcon(31, 0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);
			}
			if (HouseInfo[i][hOwned] == 1) {
				CreateMapIcon(32, 0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);
			}
		}
		if (PlayerInfo[playerid][pFlatKey] != 0) {
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fInt]);
			SetPlayerPos(playerid, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fExitx], FlatsInfo[PlayerInfo[playerid][pFlatKey]][fExity], FlatsInfo[PlayerInfo[playerid][pFlatKey]][fExitz]);
			SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pFlatKey] + 9999);
			GunSpawn(playerid);
			return true;
		}
	}
	return true;
}

CKLog(string[]) {
	new entry[256];
	format(entry, sizeof(entry), "%s\n", string);
	new File:hFile;
	hFile = fopen("[logs]/ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

PayLog(string[]) {
	new entry[256];
	format(entry, sizeof(entry), "%s\n", string);
	new File:hFile;
	hFile = fopen("[logs]/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

KickLog(string[]) {
	new entry[256];
	format(entry, sizeof(entry), "%s\n", string);
	new File:hFile;
	hFile = fopen("[logs]/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

BanLog(string[]) {
	new entry[256];
	format(entry, sizeof(entry), "%s\n", string);
	new File:hFile;
	hFile = fopen("[logs]/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public OnPlayerEnterCheckpoint(playerid) {
	new string[128];
	new rad = random(sizeof(RandomMusor));
	if (PlayerStartJob[playerid]) {
		DisablePlayerCheckpoint(playerid);
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
		PlayerStartJob[playerid] = false;
		RemovePlayerAttachedObject(playerid, 4);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
		if (ExtraMetall[playerid] == 1) {
			GetPlayerMetallEx[playerid] = 20 + random(20);
			AllPlayerMetallEx[playerid] = AllPlayerMetallEx[playerid] + GetPlayerMetallEx[playerid];
			format(string, sizeof(string), "Вы принесли {9ACD32}%d{FFFFFF} кг. качественного металла.", GetPlayerMetallEx[playerid]);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "+%d", GetPlayerMetallEx[playerid]);
			SetPlayerChatBubble(playerid, string, 0x00FF00FF, 20.0, 3000);
			GetPlayerMetallEx[playerid] = 0;
		} else {
			GetPlayerMetall[playerid] = 20 + random(40);
			AllPlayerMetall[playerid] = AllPlayerMetall[playerid] + GetPlayerMetall[playerid];
			format(string, sizeof(string), "Вы принесли {FFA500}%d{FFFFFF} кг. обычного металла.", GetPlayerMetall[playerid]);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), "+%d", GetPlayerMetall[playerid]);
			SetPlayerChatBubble(playerid, string, 0x00FF00FF, 20.0, 3000);
			GetPlayerMetall[playerid] = 0;
		}
		format(string, sizeof(string), "Всего принесено металла: {FFA500}Обычного: {FFFFFF}%d {9ACD32}Качественного: {FFFFFF}%d", AllPlayerMetall[playerid], AllPlayerMetallEx[playerid]);
		SendClientMessage(playerid, -1, string);
		return 1;
	}
	if (MedicCP[playerid] == 1) {
		DisablePlayerCheckpoint(playerid);
		MedicCallTime[playerid] = 0;
		PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~r~RedMarker gone", 2500, 1);
		return 1;
	}
	if (PicCP[playerid] == 1) {
		Medicines[playerid] = 100;
		PicCP[playerid] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /munload чтобы разгрузть медикаменты.");
		DisablePlayerCheckpoint(playerid);
	}
	//===========================[Работа Мусоровозчик]=============================
	if (che[playerid] == 1) //проверка на чекпоинт
	{
		DisablePlayerCheckpoint(playerid);
		che[playerid] = 0;
		che[playerid] = 2;
		SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		return 1;
	}

	if (che[playerid] == 2) //Проверка на Чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 3; //убирает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		}
		return 1;
	}

	if (che[playerid] == 3) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 4; //выключает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		}
		return 1;
	}

	if (che[playerid] == 4) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 5; //выключает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		}
		return 1;
	}
	if (che[playerid] == 5) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 6; //выключает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		}
		return 1;
	}

	if (che[playerid] == 6) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 7; //выключает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}");
		}
		return 1;
	}
	if (che[playerid] == 7) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 8; //выключает чекпоинт
			SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}");
		}
		return 1;
	}


	if (che[playerid] == 8) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 408) {

			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			che[playerid] = 0;
			che[playerid] = 9; //выключаем чекпоинт
			SetPlayerCheckpoint(playerid, -1879.6199, -1659.9014, 21.7500, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Отвезите мусор на свалку.");
		} else {
			error(playerid, " Вы не выполнили работу.");
		}
		return 1;
	}
	if (che[playerid] == 9 && IsPlayerInRangeOfPoint(playerid, 4.0, -1879.6199, -1659.9014, 21.7500)) {
		DisablePlayerCheckpoint(playerid);
		che[playerid] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Вы получили за свою работу : {00C0FF}50 000$"); //Текст В Чате
		GameTextForPlayer(playerid, "~G~+50000$", 3000, 5); //Текст на икране
		GivePlayerBablo(playerid, 50000); //Сколько даётся при завершение
		PlayerInfo[playerid][pMusorTime] = 3600;
		return true;
	}
	//===========================[Работа Уборщика улиц]=============================
	if (checkk[playerid] == 1) //проверка на чекпоинт
	{
		DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
		checkk[playerid] = 0; //убирает чекпоинт
		checkk[playerid] = 2; //запускаем чекпоинт
		SetPlayerCheckpoint(playerid, -2372.9204, 805.4811, 35.1469, 4.0); //Ваши координаты
		SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		return true;
	}
	if (checkk[playerid] == 2) //Проверка на Чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //убирает чекпоинт
			checkk[playerid] = 3; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2147.4873, 784.0402, 69.4141, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 3) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 4; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2114.6165, 502.3500, 35.0156, 5.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 4) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 5; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2009.0181, 262.7419, 31.2889, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 5) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 6; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2030.6615, -68.1231, 35.1719, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 6) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 7; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2258.5205, -129.6749, 35.1797, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы.");
		return true;
	}
	if (checkk[playerid] == 7) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 8; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2393.6726, -69.0399, 35.1641, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 8) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 9; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2704.3608, -27.7488, 4.1797, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 9) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 10; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2746.7014, 349.7461, 4.1797, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}

	if (checkk[playerid] == 10) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 11; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2715.9114, 503.5720, 7.4460, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}

	if (checkk[playerid] == 11) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 12; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2748.0227, 721.5089, 41.6770, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 12) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 13; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2651.7859, 810.0156, 49.8281, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}

	if (checkk[playerid] == 13) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 14; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2512.1375, 906.4887, 64.8592, 4.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получено новое задание: Отправляйтесь на маркер, отмеченный на карте.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}

	if (checkk[playerid] == 14) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключает чекпоинт
			checkk[playerid] = 15; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2389.5757, 861.9426, 42.6181, 5.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Возвращайтесь на базу.");
		} else SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Возьми автомобиль для работы");
		return true;
	}
	if (checkk[playerid] == 15) //проверка на чекпоинт
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (GetVehicleModel(vehicleid) == 574) {
			DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
			checkk[playerid] = 0; //выключаем чекпоинт
			checkk[playerid] = 16; //запускаем чекпоинт
			SetPlayerCheckpoint(playerid, -2467.5522, 791.5416, 35.1786, 2.0); //Ваши координаты
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Отправляйтесь в {FFFFFF}офис {F5DEB3}и заберите свою {FFFFFF}зарплату.");
		} else error(playerid, " Вы не выполнили работу");
		return true;
	}
	if (checkk[playerid] == 16 && IsPlayerInRangeOfPoint(playerid, 2.0, -2467.5522, 791.5416, 35.1786)) //проверка на чек поинт
	{
		DisablePlayerCheckpoint(playerid); //Убираем Когда встаёт на ЧекПоинт
		checkk[playerid] = 0; //Выключает чекпоинт
		SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Вы получили за свою работу : {00C0FF}30 000$"); //Текст В Чате
		GameTextForPlayer(playerid, "~G~+30000$", 3000, 5); //Текст на икране
		GivePlayerBablo(playerid, 30000); //Сколько даётся при завершение
		PlayerInfo[playerid][pCleanTime] = 3000;
		return true;
	}
	if (IsPlayerInRangeOfPoint(playerid, 2.0, 2230.8132324219, -2285.7043457031, 13.531787872314)) {
		Meshok[playerid] = 1;
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 1, 1, 1, 1);
		SetPlayerAttachedObject(playerid, 2, 2060, 5, 0.01, 0.1, 0.2, 100, 10, 85);
		SetPlayerCheckpoint(playerid, 2172.1313476563, -2255.2292480469, 12.454199790955, 2.0);
	}
	if (IsPlayerInRangeOfPoint(playerid, 2.0, 2172.1313476563, -2255.2292480469, 12.454199790955)) {
		Meshok[playerid] = 0;
		ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, 0, 1, 1, 0, 1);
		Meshki[playerid]++;
		if (IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		format(string, sizeof(string), "Мешков перетащено {A52A2A}%d", Meshki[playerid]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SetPlayerCheckpoint(playerid, 2230.8132324219, -2285.7043457031, 13.531787872314, 2.0);
	}
	new tmpcar = GetPlayerVehicleID(playerid);
	if (CP[playerid] == 160) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 161;
			SetPlayerCheckpoint(playerid, -2003.9542, -25.8920, 35.0488, 4.0); //Координаты чекпоинта
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 161) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 162;
			SetPlayerCheckpoint(playerid, -2003.6946, 227.1322, 28.0998, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 162) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 163;
			SetPlayerCheckpoint(playerid, -1999.0122, 545.7150, 35.0156, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 163) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 164;
			SetPlayerCheckpoint(playerid, -1989.9709, 727.8899, 45.2969, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 164) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 165;
			SetPlayerCheckpoint(playerid, -1711.2205, 752.4386, 24.7422, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 165) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 166;
			SetPlayerCheckpoint(playerid, -1711.1599, 1064.7667, 45.0625, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 166) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 167;
			SetPlayerCheckpoint(playerid, -1736.2307, 1190.9115, 24.9766, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 167) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 168;
			SetPlayerCheckpoint(playerid, -2124.1829, 1180.4484, 55.5711, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 168) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 169;
			SetPlayerCheckpoint(playerid, -2393.8391, 1182.1682, 35.7697, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 169) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 170;
			SetPlayerCheckpoint(playerid, -2494.1489, 1238.3165, 35.0156, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 170) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 171;
			SetPlayerCheckpoint(playerid, -2741.0562, 1071.0911, 47.3414, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 171) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 172;
			SetPlayerCheckpoint(playerid, -2753.0640, 861.0723, 63.5175, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 172) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 173;
			SetPlayerCheckpoint(playerid, -2751.9729, 698.3832, 41.1250, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 173) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 174;
			SetPlayerCheckpoint(playerid, -2667.9121, 563.0414, 14.4609, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 174) {
		if (IsALicCar(tmpcar)) {

			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 175;
			SetPlayerCheckpoint(playerid, -2390.1787, 548.1099, 25.4022, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 175) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 176;
			SetPlayerCheckpoint(playerid, -2254.8984, 300.2203, 35.1641, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 176) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 177;
			SetPlayerCheckpoint(playerid, -2258.1016, 31.2114, 35.1719, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 177) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 178;
			SetPlayerCheckpoint(playerid, -2224.4189, -72.0032, 35.1719, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 178) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			CP[playerid] = 179;
			SetPlayerCheckpoint(playerid, -2086.1536, -90.0050, 35.8766, 6.0);
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Аккуратно заезжайте на парковку.");
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	} else if (CP[playerid] == 179) {
		if (IsALicCar(tmpcar)) {
			DisablePlayerCheckpoint(playerid);
			CP[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Поздравляем!{FFFFFF}Вы успешно сдали на права.");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			PlayerInfo[playerid][pCarLic] = 1;
			Practice[playerid] = 0;
		} else {
			error(playerid, " Вы не в школьном авто.");
			return true;
		}
	}
	if (JobCis[playerid] == 1) {
		new Veh = GetPlayerVehicleID(playerid);
		new carid = GetPlayerVehicleID(playerid);
		if ((Veh >= GRUZauto[0] && Veh <= GRUZauto[1])) {
			if (TrailerCescerna(carid)) {
				if (IsPlayerInRangeOfPoint(playerid, 4, 240.4488, 1421.1270, 11.5979)) {
					DisablePlayerCheckpoint(playerid);
					SendClientMessage(playerid, COLOR_YELLOW, "{00C0FF}[Диспетчерская] : Цистерна полная.");
					SendClientMessage(playerid, COLOR_YELLOW, "{00C0FF}[Диспетчерская] : Езжайте в LS и слейте половину топлива на бензозаправке.");
					SetPlayerCheckpoint(playerid, 998.9494, -896.7580, 43.2726, 4.0);
				} else if (IsPlayerInRangeOfPoint(playerid, 4, 998.9494, -896.7580, 43.2726)) {
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, -1012.6534, -604.6739, 32.0126, 4.0);
					SendClientMessage(playerid, COLOR_YELLOW, "{00C0FF}[Диспетчерская] : Половина топлива слита.");
					SendClientMessage(playerid, COLOR_YELLOW, "{00C0FF}[Диспетчерская] : Езжайте в SF и слейте остальную половину топлива.");
				} else if (IsPlayerInRangeOfPoint(playerid, 4, -1012.6534, -604.6739, 32.0126)) {
					GivePlayerBablo(playerid, 25000);
					JobCis[playerid] = 0;
					Limiter[playerid] = 0;
					SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SendClientMessage(playerid, COLOR_YELLOW, "{00C0FF}[Диспетчерская] : Спасибо за работу.Получите Ваш чек на 25000$.");
				}
			}
		}
	}
	if (TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999) {
		TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if (ChekPoint[playerid] == 132) {
		if (IsPlayerInAnyVehicle(playerid)) {
			new vehicleid = GetPlayerVehicleID(playerid);
			if (GetVehicleModel(vehicleid) != zakaz[playerid]) return error(playerid, " Мы не заказывали данный автомобиль.");
			PlayerInfo[playerid][pJackSkill] += 1;
			if (PlayerInfo[playerid][pJackSkill] == 50) SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш скил продавца машин увеличен до 2 уровня,теперь вы можете продавать больше машин.");
			else if (PlayerInfo[playerid][pJackSkill] == 100) SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш скил продавца машин увеличен до 3 уровня,теперь вы можете продавать больше машин.");
			else if (PlayerInfo[playerid][pJackSkill] == 200) SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш скил продавца машин увеличен до 4 уровня,теперь вы можете продавать больше машин.");
			else if (PlayerInfo[playerid][pJackSkill] == 400) SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваш скил продавца машин увеличен до 5 уровня,теперь вы можете продавать больше машин.");
			new level = PlayerInfo[playerid][pJackSkill];
			if (level >= 0 && level <= 50) {
				new rand = random(sizeof(SELLCAR1));
				format(string, sizeof(string), "Вы продали автомобиль за %d$.", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, SELLCAR1[rand]);
			} else if (level >= 51 && level <= 100) {
				new rand = random(sizeof(SELLCAR2));
				format(string, sizeof(string), "Вы продали автомобиль за %d$.", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, SELLCAR2[rand]);
			} else if (level >= 101 && level <= 200) {
				new rand = random(sizeof(SELLCAR3));
				format(string, sizeof(string), "Вы продали автомобиль за %d$.", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, SELLCAR3[rand]);
			} else if (level >= 201 && level <= 400) {
				new rand = random(sizeof(SELLCAR4));
				format(string, sizeof(string), "Вы продали автомобиль за %d$..", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, SELLCAR4[rand]);
			} else if (level >= 401) {
				new money = 7000;
				format(string, sizeof(string), "Вы продали автомобиль %d$.", money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, money);
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			ChekPoint[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			zakaz[playerid] = 0;
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		} else GameTextForPlayer(playerid, "Не в автомобиле", 5000, 1);
	}
	if (CP[playerid] == 5) {
		GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
		CP[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}

	if (CP[playerid] == 777) {
		if (GetPlayerVehicleID(playerid) >= dalnoboishikauto[0] && GetPlayerVehicleID(playerid) <= dalnoboishikauto[1]) {
			if (!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вы обязаны приехать на указанное место с грузом.");

			PlayerInfo[playerid][pDalnoboiSkill]++;
			if (PlayerInfo[playerid][pDalnoboiSkill] == 50) { SendClientMessage(playerid, COLOR_YELLOW, " Ваш уровень развития навыка Дальнобойщика увеличен до 2."); } else if (PlayerInfo[playerid][pDalnoboiSkill] == 100) { SendClientMessage(playerid, COLOR_YELLOW, " Ваш уровень развития навыка Дальнобойщика увеличен до 3."); } else if (PlayerInfo[playerid][pDalnoboiSkill] == 200) { SendClientMessage(playerid, COLOR_YELLOW, " Ваш уровень развития навыка Дальнобойщика увеличен до 4."); } else if (PlayerInfo[playerid][pDalnoboiSkill] == 400) { SendClientMessage(playerid, COLOR_YELLOW, " Ваш уровень развития навыка Дальнобойщика увеличен до 5."); }
			new level = PlayerInfo[playerid][pDalnoboiSkill];
			if (level >= 0 && level <= 50) {
				new rand = random(sizeof(DALNOBOY1));
				format(string, sizeof(string), "{00C0FF}Вы доставили груз и получили за него %d$.", DALNOBOY1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, DALNOBOY1[rand]);
			} else if (level >= 51 && level <= 100) {
				new rand = random(sizeof(DALNOBOY2));
				format(string, sizeof(string), "{00C0FF}Вы доставили груз и получили за него %d$.", DALNOBOY2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, DALNOBOY2[rand]);
			} else if (level >= 101 && level <= 200) {
				new rand = random(sizeof(DALNOBOY3));
				format(string, sizeof(string), "{00C0FF}Вы доставили груз и получили за него %d$.", DALNOBOY3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, DALNOBOY3[rand]);
			} else if (level >= 201 && level <= 400) {
				new rand = random(sizeof(DALNOBOY4));
				format(string, sizeof(string), "{00C0FF}Вы доставили груз и получили за него %d$.", DALNOBOY4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, DALNOBOY4[rand]);
			} else if (level >= 401) {
				new rand = random(sizeof(DALNOBOY5));
				format(string, sizeof(string), "{00C0FF}Вы доставили груз и получили за него %d$.", DALNOBOY5[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerBablo(playerid, DALNOBOY5[rand]);
			}
			GameTextForPlayer(playerid, "~y~‚PY€ ѓOC¦A‹‡E®", 2500, 1);
			CP[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
		} else {
			error(playerid, " Вы должны быть в грузовике.");
		}
	} else {
		switch (gPlayerCheckpointStatus[playerid]) {
			case CHECKPOINT_HOME:  {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
			}
			case CHECKPOINT_JOBS:  {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~r~B‘ ѓOC¦…‚‡…~n~~r~MEC¦A ®A€®AЌE®…•", 5000, 1);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			}
		}
	}
	return true;
}

public OnPlayerEnterRaceCheckpoint(playerid) {
	new name[MAX_PLAYER_NAME];
	new string[128];
	new tmp2[80];
	if (RaceCP[playerid] == 400) {
		RaceCP[playerid] = 401;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 0;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[1][0], murderace[1][1], murderace[1][2], murderace[2][0], murderace[2][1], murderace[2][2], 8.0);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 401) {
		RaceCP[playerid] = 402;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[2][0], murderace[2][1], murderace[2][2], murderace[3][0], murderace[3][1], murderace[3][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 402) {
		RaceCP[playerid] = 403;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[3][0], murderace[3][1], murderace[3][2], murderace[4][0], murderace[4][1], murderace[4][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 403) {
		RaceCP[playerid] = 404;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[4][0], murderace[4][1], murderace[4][2], murderace[5][0], murderace[5][1], murderace[5][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 404) {
		RaceCP[playerid] = 405;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[5][0], murderace[5][1], murderace[5][2], murderace[6][0], murderace[6][1], murderace[6][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 405) {
		RaceCP[playerid] = 406;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[6][0], murderace[6][1], murderace[6][2], murderace[7][0], murderace[7][1], murderace[7][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 406) {
		RaceCP[playerid] = 407;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[7][0], murderace[7][1], murderace[7][2], murderace[8][0], murderace[8][1], murderace[8][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 407) {
		RaceCP[playerid] = 408;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[8][0], murderace[8][1], murderace[8][2], murderace[9][0], murderace[9][1], murderace[9][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 408) {
		RaceCP[playerid] = 409;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[9][0], murderace[9][1], murderace[9][2], murderace[10][0], murderace[10][1], murderace[10][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 409) {
		RaceCP[playerid] = 410;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[10][0], murderace[10][1], murderace[10][2], murderace[11][0], murderace[11][1], murderace[11][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 410) {
		RaceCP[playerid] = 411;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[11][0], murderace[11][1], murderace[11][2], murderace[12][0], murderace[12][1], murderace[12][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 411) {
		RaceCP[playerid] = 412;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[12][0], murderace[12][1], murderace[12][2], murderace[13][0], murderace[13][1], murderace[13][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 412) {
		RaceCP[playerid] = 413;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[13][0], murderace[13][1], murderace[13][2], murderace[14][0], murderace[14][1], murderace[14][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 413) {
		RaceCP[playerid] = 414;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[14][0], murderace[14][1], murderace[14][2], murderace[15][0], murderace[15][1], murderace[15][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 414) {
		RaceCP[playerid] = 415;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[15][0], murderace[15][1], murderace[15][2], murderace[16][0], murderace[16][1], murderace[16][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 415) {
		RaceCP[playerid] = 416;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[16][0], murderace[16][1], murderace[16][2], murderace[17][0], murderace[17][1], murderace[17][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 416) {
		RaceCP[playerid] = 417;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[17][0], murderace[17][1], murderace[17][2], murderace[18][0], murderace[18][1], murderace[18][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 417) {
		RaceCP[playerid] = 418;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[18][0], murderace[18][1], murderace[18][2], murderace[19][0], murderace[19][1], murderace[19][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 418) {
		RaceCP[playerid] = 419;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[19][0], murderace[19][1], murderace[19][2], murderace[20][0], murderace[20][1], murderace[20][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 419) {
		RaceCP[playerid] = 420;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[20][0], murderace[20][1], murderace[20][2], murderace[21][0], murderace[21][1], murderace[21][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 420) {
		RaceCP[playerid] = 421;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[21][0], murderace[21][1], murderace[21][2], murderace[22][0], murderace[22][1], murderace[22][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 421) {
		RaceCP[playerid] = 422;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[22][0], murderace[22][1], murderace[22][2], murderace[23][0], murderace[23][1], murderace[23][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 422) {
		RaceCP[playerid] = 423;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[23][0], murderace[23][1], murderace[23][2], murderace[24][0], murderace[24][1], murderace[24][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 423) {
		RaceCP[playerid] = 424;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[24][0], murderace[24][1], murderace[24][2], murderace[25][0], murderace[25][1], murderace[25][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 424) {
		RaceCP[playerid] = 425;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[25][0], murderace[25][1], murderace[25][2], murderace[26][0], murderace[26][1], murderace[26][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 425) {
		RaceCP[playerid] = 426;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[26][0], murderace[26][1], murderace[26][2], murderace[27][0], murderace[27][1], murderace[27][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 426) {
		RaceCP[playerid] = 427;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[27][0], murderace[27][1], murderace[27][2], murderace[28][0], murderace[28][1], murderace[28][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 427) {
		RaceCP[playerid] = 428;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[28][0], murderace[28][1], murderace[28][2], murderace[29][0], murderace[29][1], murderace[29][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 428) {
		RaceCP[playerid] = 429;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[29][0], murderace[29][1], murderace[29][2], murderace[30][0], murderace[30][1], murderace[30][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 429) {
		RaceCP[playerid] = 430;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[30][0], murderace[30][1], murderace[30][2], murderace[31][0], murderace[31][1], murderace[31][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 430) {
		RaceCP[playerid] = 431;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[31][0], murderace[31][1], murderace[31][2], murderace[32][0], murderace[32][1], murderace[32][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 431) {
		RaceCP[playerid] = 432;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[32][0], murderace[32][1], murderace[32][2], murderace[33][0], murderace[33][1], murderace[33][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 432) {
		RaceCP[playerid] = 433;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[33][0], murderace[33][1], murderace[33][2], murderace[34][0], murderace[34][1], murderace[34][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 433) {
		RaceCP[playerid] = 434;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[34][0], murderace[34][1], murderace[34][2], murderace[35][0], murderace[35][1], murderace[35][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 434) {
		RaceCP[playerid] = 435;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[35][0], murderace[35][1], murderace[35][2], murderace[36][0], murderace[36][1], murderace[36][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 435) {
		RaceCP[playerid] = 436;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[36][0], murderace[36][1], murderace[36][2], murderace[37][0], murderace[37][1], murderace[37][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 436) {
		RaceCP[playerid] = 437;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[37][0], murderace[37][1], murderace[37][2], murderace[38][0], murderace[38][1], murderace[38][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 437) {
		RaceCP[playerid] = 438;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[38][0], murderace[38][1], murderace[38][2], murderace[39][0], murderace[39][1], murderace[39][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 438) {
		RaceCP[playerid] = 439;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[39][0], murderace[39][1], murderace[39][2], murderace[40][0], murderace[40][1], murderace[40][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 439) {
		RaceCP[playerid] = 440;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[40][0], murderace[40][1], murderace[40][2], murderace[41][0], murderace[41][1], murderace[41][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 440) {
		RaceCP[playerid] = 441;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[41][0], murderace[41][1], murderace[41][2], murderace[42][0], murderace[42][1], murderace[42][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 441) {
		RaceCP[playerid] = 442;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[42][0], murderace[42][1], murderace[42][2], murderace[43][0], murderace[43][1], murderace[43][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 442) {
		RaceCP[playerid] = 443;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[43][0], murderace[43][1], murderace[43][2], murderace[44][0], murderace[44][1], murderace[44][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 443) {
		RaceCP[playerid] = 444;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[44][0], murderace[44][1], murderace[44][2], murderace[45][0], murderace[45][1], murderace[45][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 444) {
		RaceCP[playerid] = 445;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[45][0], murderace[45][1], murderace[45][2], murderace[46][0], murderace[46][1], murderace[46][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 445) {
		RaceCP[playerid] = 446;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[46][0], murderace[46][1], murderace[46][2], murderace[47][0], murderace[47][1], murderace[47][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 446) {
		RaceCP[playerid] = 447;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[47][0], murderace[47][1], murderace[47][2], murderace[48][0], murderace[48][1], murderace[48][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 447) {
		RaceCP[playerid] = 448;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[48][0], murderace[48][1], murderace[48][2], murderace[49][0], murderace[49][1], murderace[49][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 448) {
		RaceCP[playerid] = 449;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[49][0], murderace[49][1], murderace[49][2], murderace[50][0], murderace[50][1], murderace[50][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 449) {
		RaceCP[playerid] = 450;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[50][0], murderace[50][1], murderace[50][2], murderace[51][0], murderace[51][1], murderace[51][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 450) {
		RaceCP[playerid] = 451;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[51][0], murderace[51][1], murderace[51][2], murderace[52][0], murderace[52][1], murderace[52][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 451) {
		RaceCP[playerid] = 452;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[52][0], murderace[52][1], murderace[52][2], murderace[53][0], murderace[53][1], murderace[53][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 452) {
		RaceCP[playerid] = 453;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[53][0], murderace[53][1], murderace[53][2], murderace[54][0], murderace[54][1], murderace[54][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 453) {
		RaceCP[playerid] = 454;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[54][0], murderace[54][1], murderace[54][2], murderace[55][0], murderace[55][1], murderace[55][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 454) {
		RaceCP[playerid] = 455;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[55][0], murderace[55][1], murderace[55][2], murderace[56][0], murderace[56][1], murderace[56][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 455) {
		RaceCP[playerid] = 456;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[56][0], murderace[56][1], murderace[56][2], murderace[57][0], murderace[57][1], murderace[57][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 456) {
		RaceCP[playerid] = 457;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[57][0], murderace[57][1], murderace[57][2], murderace[58][0], murderace[58][1], murderace[58][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 457) {
		RaceCP[playerid] = 458;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[58][0], murderace[58][1], murderace[58][2], murderace[59][0], murderace[59][1], murderace[59][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	} else if (RaceCP[playerid] == 458) {
		RaceCP[playerid] = 459;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] += 1;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[59][0], murderace[59][1], murderace[59][2], murderace[60][0], murderace[60][1], murderace[60][2], 8);
		format(tmp2, sizeof(tmp2), "~b~%d/60", Murderchet[playerid]);
		GameTextForPlayer(playerid, tmp2, 5000, 3);
	}
	if (Murderchet[playerid] == 60) {
		RaceCP[playerid] = 459;
		SetPlayerRaceCheckpoint(playerid, 1, murderace[0][0], murderace[0][1], murderace[0][2], 0.0, 0.0, 0.0, 8);
	}
	if (RaceCP[playerid] == 459) {
		GetPlayerName(playerid, name, sizeof(name));
		RaceCP[playerid] = 0;
		murder[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] = 0;
		if (FirstMurderWinner == 999) {
			FirstMurderWinner = playerid;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerMurder[i] != 0) {

						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s Finished - 1st", name);
						GameTextForPlayer(i, string, 2500, 3);
						format(string, sizeof(string), "Вы выиграли сумму в размере %d$", 5000 * MurderPlayers);
						SendClientMessage(playerid, 0x6495EDFF, string);
						GivePlayerBablo(playerid, 5000 * MurderPlayers);
						PlayerMurder[playerid] = 0;
						MurderPlayers = 0;
						return true;

					}
				}
			}
		} else if (SecondMurderWinner == 999) {
			SecondMurderWinner = playerid;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerMurder[i] != 0) {
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s Finished - 2nd", name);
						GameTextForPlayer(i, string, 2500, 3);
						PlayerMurder[playerid] = 0;
						return true;
					}
				}
			}
		} else if (ThirdMurderWinner == 999) {
			ThirdMurderWinner = playerid;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerMurder[i] != 0) {
						format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~%s Finished - 3d", name);
						GameTextForPlayer(i, string, 2500, 3);
						PlayerMurder[playerid] = 0;
						return true;
					}
				}
			}
		}
		PlayerMurder[playerid] = 0;
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		Murderchet[playerid] = 0;
		return true;
	}
	return true;
}

UseBackpack(playerid) {
	print("UseBackack");
	if (IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	new l = GetPlayerSkin(playerid);
	switch (l) {
		case 0..4:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.176000, -0.066000, 0.000000, 0.000000, 0.000000, 0.000000, 1.076000, 1.079999, 1.029000);
		case 5:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.160000, -0.116000, 0.000000, 0.000000, 0.000000, 0.000000, 1.141000, 1.279999, 1.176001);
		case 6:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.160000, -0.087999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 7:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.189000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 8, 9:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.189000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 10:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.259000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 11:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.183000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 12:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.209000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 13:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.154000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 14, 15:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.191000, -0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 16:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.159000, -0.074000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 17:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.188000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 18:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.213000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 19:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.164000, -0.059999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 20:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.196000, -0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 21..25:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.177000, -0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 26:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.177000, -0.177000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 27, 28:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.174000, -0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.040001);
		case 29:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.215000, -0.087999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 30:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.178000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 31:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.250000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 32:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.211000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 33:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.226000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 34..37:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.186000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 38, 39:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.259000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 40:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.213000, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 41:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.130999, -0.055999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 42:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.184000, -0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 43, 44:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.226000, -0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 45:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.207000, -0.063999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 46..48:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.193000, -0.063999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 49:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.209000, -0.063999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 50:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.175000, -0.063999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 51, 52:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.157999, -0.057999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 53:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.257000, -0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 54:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.262000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 55, 56:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.197999, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 57:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.151000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 58:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.240000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 59:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.194000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 60:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.171000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 61..65:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.191000, -0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 66..73:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.182000, -0.059999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 74:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.170000, -0.059999, 0.000000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 75, 76:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.182000, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 77:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.241000, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 78..81:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.161999, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 82..84:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.175999, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 85:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.158999, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 86, 87:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.175999, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 88:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.264000, -0.044999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 89:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.261000, -0.061999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 90:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.180000, -0.052999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 91:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.197000, -0.052999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 92:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.177000, -0.052999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 93:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.185000, -0.044000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 94, 95:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.243000, -0.044000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 96:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.145999, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 97:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.208000, -0.048999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 98:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.196000, -0.059999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 99:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.153999, -0.059999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 100:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.184999, -0.059999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 101:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.149999, -0.090999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 102:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.187999, -0.090999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.035001);
		case 103:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.135999, -0.090999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 104:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.186999, -0.063999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 105:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.139999, -0.063999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 106..110:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.191999, -0.063999, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 111:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.159999, -0.052000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 112:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.215000, -0.052000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 113..116:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.183999, -0.040000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 117, 118:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.209000, -0.056000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 119..123:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.185999, -0.067000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 124..127:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.176999, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 128:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.195000, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.096999, 0.971999, 1.084001);
		case 129:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.224000, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.016999, 0.788999, 0.888001);
		case 130:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.224000, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 131:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.153999, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 132:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.230999, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 133:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.162999, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 134:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.242000, -0.045000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 135:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.154999, -0.057000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 136:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.229000, -0.057000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 137:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.183000, -0.057000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 138..145:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.151999, -0.050000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 146:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.136999, -0.050000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 147, 148:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.173000, -0.040000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 149:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.137999, -0.091000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 150, 151:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.177000, -0.061000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 152:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.196000, -0.046000, -0.005000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 153:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.168000, -0.034000, 0.008999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 154:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.189000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 155..159:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.157999, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 160:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.182000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 161:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.151000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 162:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.169000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 163, 164:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.137999, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 165, 166:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.214000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 167, 168:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.163000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 169:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.179000, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 170..185:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.147000, -0.035000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 186..189:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.172000, -0.050000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 190..194:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.150000, -0.050000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 195:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.127999, -0.045000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 196:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.248000, -0.038000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 197:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.214000, -0.038000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 198:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.157000, -0.056000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 199:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.231000, -0.046000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 200..206:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.159000, -0.057000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 207:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.176000, -0.047000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 208:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.167000, -0.058000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 209, 210:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.236000, -0.058000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 211:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.153000, -0.058000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 212:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.231000, -0.041000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 213..217:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.161000, -0.052000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 218:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.236000, -0.052000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 219:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.175000, -0.039000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 220..226:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.171000, -0.054000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 227:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.134000, -0.054000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 228:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.171000, -0.054000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 229:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.219000, -0.040000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 230:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.183000, -0.040000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 231:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.245000, -0.040000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 232:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.224000, -0.063000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 233:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.152000, -0.058000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 234..237:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.211000, -0.055000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 238:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.158000, -0.055000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 239:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.134000, -0.055000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 240:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.174000, -0.055000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 241, 242:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.134000, -0.070000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 243, 244:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.178000, -0.049000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 245..252:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.149000, -0.049000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 253:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.209000, -0.041000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 254:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.151000, -0.041000, -0.004000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 255:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.168000, -0.041000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 256:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.149000, -0.057000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 257:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.175000, -0.057000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 258..260:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.148000, -0.057000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 261 : SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.230000, -0.041000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 262:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.160000, -0.041000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 263:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.176000, -0.034000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 264:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.125999, -0.087000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 265, 266:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.185000, -0.069000, 0.004999, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 267:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, 0.043999, -0.069000, -0.023000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 268..270:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.143999, -0.069000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 271, 272:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.143999, -0.043000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 273 : SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.173999, -0.043000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 274..276:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.147999, -0.043000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 277..279:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.099999, -0.060000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 280..283:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.142999, -0.060000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 284..291:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.153999, -0.053000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 292..294:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.138999, -0.064000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 295, 296:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.214999, -0.057000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 297, 298:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.164999, -0.057000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
		case 299:
			SetPlayerAttachedObject(playerid, 1, 3026, 1, -0.118999, -0.050000, -0.000000, 0.000000, 0.000000, 0.000000, 1.052999, 0.896999, 0.982001);
	}
}

public OnPlayerPickUpPickup(playerid, pickupid) {
	new string[144];
	if (pickupid == vagoskamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории банды Los Santos Vagos, котрая считается одной из самых\nМногочисленных в мире, состоящих из выходцев из Латинской Америки. Как принято,членов данной\nГруппировки опознают,по их манере одежды,которая состоит из желтых и белых оттенков.\nБанда представляет собою достаточно сильную структуру с жёсткой иерархией,\nLS Vagos подгребли под себя восточные и северные районы города Los Santos.");
		ShowPlayerDialog(playerid, 1891, DIALOG_STYLE_MSGBOX, "Los Santos Vagos", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 2848.3994, -1158.4856, 32.8983);
		SetPlayerCameraLookAt(playerid, 2827.9836, -1175.7740, 24.9981);
	}
	if (pickupid == rifakamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории The Rifa Gang, она является традиционной мексиканской бандой.\nЧлены банды носят тёмно-бирюзовые повязки. Отличительной чертой от других банд является то,\nЧто тела членов банды менее татуированные, чем у других мексиканских банд. Расположенная в\nSan Fierro, банда представляет собою достаточно сильную структуру с жёсткой иерархией,\nАктивно поддерживают наркоторговлю и оружейный бизнес.");
		ShowPlayerDialog(playerid, 1890, DIALOG_STYLE_MSGBOX, "The Rifa Gang", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, -2467.1387, -97.6956, 35.7108);
		SetPlayerCameraLookAt(playerid, -2456.7839, -134.1317, 26.0551);
	}
	if (pickupid == streetkamera) {
		new listitem[500];
		strcat(listitem, "Вы попали на парковку гоночного клуба Street Racers, Они живут в своём ритме. Для них главное ощущение\nАдреналина в крови и учащённое сердцебиение. Живут они тремя вещами: машина, адреналин \nИ жажда скорости.Их время - ночь.Они стритрейсиры - уличные гонщики. Уже не осталось\nНа наших просторах городов, где бы не гонялись отчаянные автогонщики, как профессиональные, так и любители.\nЧлена клуба гонщиков,опознают не по одежде, а по красоте тюнинга его автомобиля и манере вождения.");
		ShowPlayerDialog(playerid, 1889, DIALOG_STYLE_MSGBOX, "Street Racers", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 1087.3494, 1322.0017, 20.8203);
		SetPlayerCameraLookAt(playerid, 1066.0524, 1282.3219, 10.8203);
	}
	if (pickupid == koronoskamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории банды El Coronos, это Латинская уличная банда, которая взяла под свой\nКонтроль Железнодорожный Вокзал города Los Santos, их главный опознавательный цвет  одежды - бирюзовый.\nЭти парни любители похвастаться своими умениями в соревнавинии под названием лоурайдинг, или просто\nПогонять на раритетных автомобилях, по районам штата San Andreas.");
		ShowPlayerDialog(playerid, 1888, DIALOG_STYLE_MSGBOX, "El Coronos", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 1811.3186, -1897.3234, 20.5783);
		SetPlayerCameraLookAt(playerid, 1754.7444, -1895.5846, 13.5569);
	}
	if (pickupid == grovekamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории банды The Grove Street Family. Представителей этой группировки легко опознать\nПо зелёной одежде. Она состоит преимущественно из Афро Американцев. В большинстве случаев онивооружены пистолетом и битой\nПостарайтесь не привлекать их внимания и вы останетесь живы.");
		ShowPlayerDialog(playerid, 1887, DIALOG_STYLE_MSGBOX, "The Grove Street", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 2457.1042, -1656.6262, 20.3047);
		SetPlayerCameraLookAt(playerid, 2481.4080, -1671.1338, 13.3399);
	}
	if (pickupid == ballaskamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории банды The Ballas Gang, это уличная банда, преступное сообщество\nГорода Los Santos, состоящее преимущественно из афроамериканцев,входит в одну из крупнейших гангстерских систем штата.\nОтличительный знак участников банды - ношение бандан (и одежды в общем) в феолетовых оттенках.");
		ShowPlayerDialog(playerid, 1886, DIALOG_STYLE_MSGBOX, "The Ballas Gang", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 2019.7534, -1150.8564, 33.6932);
		SetPlayerCameraLookAt(playerid, 2005.1354, -1127.7048, 25.3693);
	}
	if (pickupid == yakuzakamera) {
		new nyakuza[500];
		strcat(nyakuza, "Будьте осторожны, вы находитесь на территории мафии Yakuza, это участники традиционных преступных синдикатов\nВ Японии, которые расположились в японском квартале города SF. Кланы Yakuza, проникли во все сферы жизни\nЯпонского общества, особенно в бизнес и в политику всего штата, они заслуживают уважения,потому что сохранили\nсвои жестокие традиции с древности до нашего времени. Членов данной группировки выделяются наличием\nкатаны, а также, конечно, по их азиатской внешности.");
		ShowPlayerDialog(playerid, 1885, DIALOG_STYLE_MSGBOX, "Yakuza Mafia", nyakuza, "Спасибо", "");
		SetPlayerCameraPos(playerid, -2209.6353, 632.8263, 59.4360);
		SetPlayerCameraLookAt(playerid, -2197.8481, 642.9592, 53.4429);
	}
	if (pickupid == triadkamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории The Triads Mafia, это традиционная форма преступного\nСообщества, их история насчитывает более двух с половиной тысяч лет. Сегодня Китайская Mафия\nМафия является одним из крупных поставщиков героина в города штата San Andreas.Их\nштаб-квартира расположена почти в центре города Los Santos.Участники данной группировки,как и Yakuza \nносят катану (длинный японский меч),а также конечно имеют Азиатскую внешность,поэтому их часто путают.");
		ShowPlayerDialog(playerid, 1884, DIALOG_STYLE_MSGBOX, "Triads Mafia", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, 650.4659, -1298.4913, 14.5613);
		SetPlayerCameraLookAt(playerid, 665.8542, -1289.2355, 13.4609);
	}
	if (pickupid == russiankamera) {
		new listitem[500];
		strcat(listitem, "Будьте осторожны, вы находитесь на территории Русской Мафии, это преступное сообщество\nОрганизованное в России, для осуществления криминальной деятельности ,штаб-квартира которых находится\nна островке Деревня Русской Мафии,название которого и повлекла сама группировка.Русская Мафия\nимеет в своем составе лиц разных национальностей, но основная масса и организаторы\nсообщества - русские,которых на улице можно узнать по простой форме одежды,в серых тоннах.");
		ShowPlayerDialog(playerid, 1883, DIALOG_STYLE_MSGBOX, "Russian Mafia", listitem, "Спасибо", "");
		SetPlayerCameraPos(playerid, -2472.1238, 2340.6152, 15.9844);
		SetPlayerCameraLookAt(playerid, -2488.5073, 2359.5195, 10.2696);
	}
	if (pickupid == lcnkamera) {
		new listitems[500];
		strcat(listitems, "Будьте осторожны, вы находитесь на территории La Cosa Nostra, это криминальное сообщество (мафия),\nСформировавшееся на Сицилии во второй половине ХIX века и в последствии распространившее свою активность\nна крупные экономически развитые города в штате San Andreas.Представляет собой объединение («семью»)\nкриминальных групп,имеющих общую организацию,структуру и кодекс поведения (Омерту).\nЧлены семьи La Cosa Nostra,носят строгую одежду,в темных или светлых тонах.");
		ShowPlayerDialog(playerid, 1882, DIALOG_STYLE_MSGBOX, "La Cosa Nostra", listitems, "Спасибо", "");
		SetPlayerCameraPos(playerid, 1203.9232, -2065.2344, 79.0078);
		SetPlayerCameraLookAt(playerid, 1189.5889, -2059.2639, 74.0006);
	}
	if (pickupid == bombb) {
		if (GetPVarInt(playerid, "Bomba") == 1) return SendClientMessage(playerid, -1, "{FF0000}У вас уже есть бомба.");
		SendClientMessage(playerid, -1, " Вы украли взрывное устройство.");
		SetPVarInt(playerid, "Bomba", 1);
	}
	if (pickupid == pickmoney) {
		if (PlayerInfo[playerid][pJob] == 12) {
			new level = PlayerInfo[playerid][pGromilaSkill];
			if (level >= 0 && level <= 100) {
				GivePlayerBablo(playerid, 1000);
				GameTextForPlayer(playerid, "~g~Bonus~n~~r~1000$", 5000, 1);
			} else if (level >= 101 && level <= 200) {
				GivePlayerBablo(playerid, 1250);
				GameTextForPlayer(playerid, "~g~Bonus~n~~r~1250$", 5000, 1);
			} else if (level >= 201 && level <= 300) {
				GivePlayerBablo(playerid, 1500);
				GameTextForPlayer(playerid, "~g~Bonus~n~~r~1500$", 5000, 1);
			} else if (level >= 301 && level <= 400) {
				GivePlayerBablo(playerid, 1750);
				GameTextForPlayer(playerid, "~g~Bonus~n~~r~1750$", 5000, 1);
			} else if (level >= 401) {
				GivePlayerBablo(playerid, 2000);
				GameTextForPlayer(playerid, "~g~Bonus~n~~r~2000$", 5000, 1);
			}
		}
		DestroyPickup(pickmoney);
	}
	if (pickupid == keys) {
		UseBackpack(playerid);
		keyss[playerid] = 1;
		DestroyPickup(keys);
		if (IsACop(playerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "Вы вернули государству украденные деньги.");
			DestroyPickup(keys);
			keyss[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			return true;
		}
	}
	if (pickupid == ugonshik) {
		if (zakaz[playerid] > 0) return error(playerid, " У вас уже есть заказ на автотранспорт.");
		if (PlayerInfo[playerid][pJob] != 5) return error(playerid, " Вам нужно работать угонщиком автомобилей,что бы взять заказ.");
		new tachka[40];
		new ugnal = random(sizeof(dropcars));
		if (dropcars[ugnal][0] == 475) tachka = "Sabre";
		if (dropcars[ugnal][0] == 479) tachka = "regina";
		if (dropcars[ugnal][0] == 489) tachka = "Dozer";
		if (dropcars[ugnal][0] == 401) tachka = "Bravura";
		if (dropcars[ugnal][0] == 439) tachka = "Stallion";
		if (dropcars[ugnal][0] == 560) tachka = "Sultan";
		if (dropcars[ugnal][0] == 404) tachka = "Perenniel";
		if (dropcars[ugnal][0] == 445) tachka = "Admiral";
		if (dropcars[ugnal][0] == 458) tachka = "Solair";
		if (dropcars[ugnal][0] == 402) tachka = "Buffalo";
		if (dropcars[ugnal][0] == 562) tachka = "Elegy";
		if (dropcars[ugnal][0] == 400) tachka = "Landstalker";
		if (dropcars[ugnal][0] == 558) tachka = "Uranus";
		if (dropcars[ugnal][0] == 585) tachka = "Emperor";
		if (dropcars[ugnal][0] == 405) tachka = "Sentinel";
		if (dropcars[ugnal][0] == 410) tachka = "Manana";
		if (dropcars[ugnal][0] == 421) tachka = "Washington";
		if (dropcars[ugnal][0] == 436) tachka = "Previon";
		if (dropcars[ugnal][0] == 516) tachka = "Nebula";
		if (dropcars[ugnal][0] == 542) tachka = "Clover";
		if (dropcars[ugnal][0] == 559) tachka = "Jaster";
		if (dropcars[ugnal][0] == 603) tachka = "Pheonix";
		if (dropcars[ugnal][0] == 589) tachka = "Club";
		if (dropcars[ugnal][0] == 561) tachka = "Stratum";
		if (dropcars[ugnal][0] == 565) tachka = "Flash";
		if (dropcars[ugnal][0] == 554) tachka = "Yosemite";
		if (dropcars[ugnal][0] == 549) tachka = "Tampa";
		if (dropcars[ugnal][0] == 505) tachka = "Rancher";
		if (dropcars[ugnal][0] == 480) tachka = "Comet";
		if (dropcars[ugnal][0] == 529) tachka = "Willard";
		if (dropcars[ugnal][0] == 506) tachka = "Super GT";
		if (dropcars[ugnal][0] == 529) tachka = "Banshee";
		if (dropcars[ugnal][0] == 546) tachka = "Intruder";
		if (dropcars[ugnal][0] == 477) tachka = "ZR-350";
		if (dropcars[ugnal][0] == 507) tachka = "Elegant";
		if (dropcars[ugnal][0] == 551) tachka = "Merit";
		if (dropcars[ugnal][0] == 535) tachka = "Slamvan";
		prinyal[playerid] = dropcars[ugnal][0];
		format(string, sizeof(string), "Поступил заказ на автомобиль %s[id: %d].Желаете его выполнить?", tachka, dropcars[ugnal][0]);
		ShowPlayerDialog(playerid, 2419, DIALOG_STYLE_MSGBOX, "Стол заказов", string, "Да", "Нет");
	}
	if (pickupid == menu) {
		OnPlayerCommandText(playerid, "/menu");
	}
	if (pickupid == menulcn) {
		OnPlayerCommandText(playerid, "/menulcn");
	}
	if (pickupid == buygunsf) {
		OnPlayerCommandText(playerid, "/buygunsf");
	}
	if (pickupid == buygunlv) {
		OnPlayerCommandText(playerid, "/buygunlv");
	}
	if (pickupid == buygunlv2) {
		OnPlayerCommandText(playerid, "/buygunlv2");
	}
	if (pickupid == buygunRM) {
		OnPlayerCommandText(playerid, "/buygunRM");
	}
	if (pickupid == buyguncentr) {
		OnPlayerCommandText(playerid, "/buyguncentr");
	}
	if (pickupid == buygungroove) {
		OnPlayerCommandText(playerid, "/buygungroove");
	}
	if (pickupid == buygunmeri) {
		OnPlayerCommandText(playerid, "/buygunmeri");
	}
	if (pickupid == buygunkolhoz) {
		OnPlayerCommandText(playerid, "/buygunkolhoz");
	}
	if (pickupid == buygunDB1) {
		OnPlayerCommandText(playerid, "/buygunDB1");
	}
	if (pickupid == buygunkarer) {
		OnPlayerCommandText(playerid, "/buygunkarer");
	}
	if (pickupid == buygunkarer2) {
		OnPlayerCommandText(playerid, "/buygunkarer2");
	}
	if (pickupid == gryz1) {
		ShowPlayerDialog(playerid, 102, DIALOG_STYLE_MSGBOX, "Раздевалка", "Вы хотите переодеться для начала работы", "Да", "Нет");
	}
	if (pickupid == gryz2) {
		ShowPlayerDialog(playerid, 103, DIALOG_STYLE_MSGBOX, "Касса", "Вы хотите получить зарплату и уйти домой?", "Да", "Нет");
	}
	if (pickupid == picjob) {
		if (!PlayerOnJob[playerid]) ShowPlayerDialog(playerid, DIALOG_STARTJOB, DIALOG_STYLE_MSGBOX, "{FFFFFF}Работа шахтёра", "{FFFFFF}Вы согласны устроиться на работу {00C0FF}шахтёра?", "Да", "Нет");
		else ShowPlayerDialog(playerid, DIALOG_ENDJOB, DIALOG_STYLE_MSGBOX, "{FFFFFF}Работа шахтёра", "{FFFFFF}Вы согласны уволится с работы {00C0FF}шахтёра?", "Да", "Нет");
	}
	else if (pickupid == gmedicines) {
		if (!IsAMember(playerid)) return SendClientMessage(playerid, COLOR_GREY, " Вы не бандит.");
		if (GetPVarInt(playerid, "Ukral") > gettime()) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже крали медикаменты!Украсть можно раз в 30 минут.");
		if (medwarehouse <= 0) return SendClientMessage(playerid, COLOR_GRAD1, " На складе нет медикаментов.");
		if (Medicines[playerid] > 3) return SendClientMessage(playerid, COLOR_GRAD1, " Вы не можете взять еще больше медикаментов.");
		SendClientMessage(playerid, COLOR_WHITE, " Вы украли медикаменты.");
		SendClientMessage(playerid, COLOR_WHITE, " (( Чтобы сварить из них наркотики, Введите /drugsweld на кухне наркопритона. ))");
		medwarehouse -= 3;
		SetPVarInt(playerid, "Ukral", gettime() + 1800);
		Medicines[playerid] += 3;
		PlayerInfo[playerid][pWanted] += 1;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	}
	//=============================[Магазины одежды]================================
	if (pickupid == buyclother1) //binco
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 15\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
		SetPlayerPos(playerid, 213.2302, -129.1464, 1003.5078);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 213.6037, -132.5949, 1003.3125);
		SetPlayerCameraLookAt(playerid, 214.5493, -129.5651, 1003.5078);

	} else if (pickupid == buyclother2) //binco
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 15\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
		SetPlayerPos(playerid, 213.2302, -129.1464, 1003.5078);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 213.6037, -132.5949, 1003.3125);
		SetPlayerCameraLookAt(playerid, 214.5493, -129.5651, 1003.5078);

	} else if (pickupid == buyclother3) // binco
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15\nМодель 15\nМодель 17\nМодель 18\nМодель 19\nМодель 20", "Показать", "Выйти");
		SetPlayerPos(playerid, 213.2302, -129.1464, 1003.5078);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 213.6037, -132.5949, 1003.3125);
		SetPlayerCameraLookAt(playerid, 214.5493, -129.5651, 1003.5078);

	} else if (pickupid == buyclother4) //victim
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
		SetPlayerPos(playerid, 208.9138, -3.5265, 1001.2178);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 209.8104, -6.9428, 1001.2109);
		SetPlayerCameraLookAt(playerid, 210.1761, -4.6778, 1001.2109);

	} else if (pickupid == buyclother5) //victim
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
		SetPlayerPos(playerid, 208.9138, -3.5265, 1001.2178);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 209.8104, -6.9428, 1001.2109);
		SetPlayerCameraLookAt(playerid, 210.1761, -4.6778, 1001.2109);
	} else if (pickupid == buyclother6) //victim
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 335, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10\nМодель 11\nМодель 12\nМодель 13\nМодель 14\nМодель 15", "Показать", "Выйти");
		SetPlayerPos(playerid, 208.9138, -3.5265, 1001.2178);
		SetPlayerFacingAngle(playerid, 175.9623);
		SetPlayerCameraPos(playerid, 209.8104, -6.9428, 1001.2109);
		SetPlayerCameraLookAt(playerid, 210.1761, -4.6778, 1001.2109);
	} else if (pickupid == buyclother7) //zip
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10", "Показать", "Выйти");
		SetPlayerPos(playerid, 155.2719, -76.5889, 1001.8047);
		SetPlayerFacingAngle(playerid, 178.5640);
		SetPlayerCameraPos(playerid, 157.1460, -80.4219, 1001.8047);
		SetPlayerCameraLookAt(playerid, 157.1180, -77.0351, 1001.8047);
	} else if (pickupid == buyclother8) //zip
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10", "Показать", "Выйти");
		SetPlayerPos(playerid, 155.2719, -76.5889, 1001.8047);
		SetPlayerFacingAngle(playerid, 178.5640);
		SetPlayerCameraPos(playerid, 157.1460, -80.4219, 1001.8047);
		SetPlayerCameraLookAt(playerid, 157.1180, -77.0351, 1001.8047);
	} else if (pickupid == buyclother9) //zip
	{
		if (PlayerInfo[playerid][pMember] >= 1 || PlayerInfo[playerid][pLeader] >= 1) return error(playerid, " Не доступно для членов фракций");
		skin[playerid] = GetPlayerSkin(playerid);
		ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST, "YourWorld : Одежда", "Модель 1\nМодель 2\nМодель 3\nМодель 4\nМодель 5\nМодель 6\nМодель 7\nМодель 8\nМодель 9\nМодель 10", "Показать", "Выйти");
		SetPlayerPos(playerid, 155.2719, -76.5889, 1001.8047);
		SetPlayerFacingAngle(playerid, 178.5640);
		SetPlayerCameraPos(playerid, 157.1460, -80.4219, 1001.8047);
		SetPlayerCameraLookAt(playerid, 157.1180, -77.0351, 1001.8047);
	}
	//---------------------- Пикапы рецепшена --------------------------------------
	if (pickupid == recept[0] || pickupid == recept[1] || pickupid == recept[2]) {
		new s[256];
		format(s, sizeof(s), "{ffdb58}Los Santos\n{ffdb58}San Fierro\n{ffdb58}Las Venturas");
		ShowPlayerDialog(playerid, 5310, DIALOG_STYLE_LIST, "Рецепшен", s, "Применить", "Отмена");
	}
	//=============================[Оружие Хитманам]================================
	if (pickupid == gunhit) {
		if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
			if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
			ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Склад оружия Hitman Agency", "Knife\n SD pistol\n Sniper", "Взять", "Отмена");
			return true;
		}
	}
	//----------------------------[пикапы-вход/выход]-------------------------------
	else if (pickupid == enter4) {
		SetPlayerPos(playerid, 246.7079, 66.2239, 1003.6406); //
		GameTextForPlayer(playerid, "~y~Police Departament", 5000, 1);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
	}
	//===============================[Центр занятости]==============================
	else if (pickupid == entermer) {
		SetPlayerPos(playerid, 388.03, 173.71, 1008.38);
		SetPlayerInterior(playerid, 3);
		SetPlayerFacingAngle(playerid, 83.3443);
		SetPlayerVirtualWorld(playerid, 1);
	} else if (pickupid == exitmer) {
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2415.19, 1123.91, 10.82);
		SetPlayerFacingAngle(playerid, 272.2903);
	}
	//===================================[Нубы СФ]==================================
	else if (pickupid == entersf) {
		SetPlayerPos(playerid, -1976.96, 137.8527, 27.6875);
		SetPlayerFacingAngle(playerid, 0);
	} else if (pickupid == exitsf) {
		SetPlayerPos(playerid, -1983.74, 138.13, 27.69);
		SetPlayerFacingAngle(playerid, 85.3070);
	}
	else if (pickupid == enter5) {
		SetPlayerPos(playerid, 1552.3231, -1674.6780, 16.1953);
		GameTextForPlayer(playerid, "~y~Los Santos", 5000, 1);
		SetPlayerFacingAngle(playerid, 89.8316);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (pickupid == enter14) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if (pickupid == enter15) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if (pickupid == enter17) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		SetPlayerShopName(playerid, "FDBURG");
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if (pickupid == enter18) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if (pickupid == enter19) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if (pickupid == enter20) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		SetPlayerShopName(playerid, "FDPIZA");
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if (pickupid == enter21) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		SetPlayerShopName(playerid, "FDPIZA");
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if (pickupid == enter23) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if (pickupid == enter24) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if (pickupid == enter25) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if (pickupid == enter26) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if (pickupid == enter27) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if (pickupid == enter28) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if (pickupid == enter29) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if (pickupid == enter30) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if (pickupid == enter31) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 6);
	}
	else if (pickupid == enter32) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 7);
	}
	else if (pickupid == enter33) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 6);
	}
	else if (pickupid == enter34) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if (pickupid == enter35) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 6);
	}
	else if (pickupid == enter36) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 7);
	}
	else if (pickupid == enter37) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 7);
	}
	else if (pickupid == enter76) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 8);
	}
	else if (pickupid == enter77) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 9);
	}
	else if (pickupid == enter78) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 10);
	}
	else if (pickupid == enter79) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 8);
	}
	else if (pickupid == enter80) {
		SetPlayerPos(playerid, 372.1661, -131.6861, 1001.4922); // Pizza
		SetPlayerFacingAngle(playerid, 0.3264);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerShopName(playerid, "FDPIZA");
		SetPlayerVirtualWorld(playerid, 11);
	}
	else if (pickupid == enter81) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 9);
	}
	else if (pickupid == enter82) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 8);
	}
	else if (pickupid == enter83) {
		SetPlayerPos(playerid, 365.5280, -9.6964, 1001.8516); // Clucken Bell
		SetPlayerFacingAngle(playerid, 354.9762);
		SetPlayerInterior(playerid, 9);
		PlayerInfo[playerid][pInt] = 9;
		SetPlayerShopName(playerid, "FDCHICK");
		SetPlayerVirtualWorld(playerid, 10);
	}
	else if (pickupid == enter84) {
		SetPlayerPos(playerid, 364.4679, -73.8313, 1001.5078); // Burger Shot
		SetPlayerFacingAngle(playerid, 302.6491);
		SetPlayerInterior(playerid, 10);
		PlayerInfo[playerid][pInt] = 10;
		SetPlayerShopName(playerid, "FDBURG");
		SetPlayerVirtualWorld(playerid, 9);
	}
	else if (pickupid == enter41) {
		SetPlayerPos(playerid, 2307.8792, -1643.7610, 14.8270);
		GameTextForPlayer(playerid, "~y~Los Santos", 5000, 3);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (pickupid == enter46) {
		SetPlayerPos(playerid, -25.1326, -139.0670, 1003.5469);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : {00C0FF}/buy {FFFFFF} - купить, {00C0FF}/sell{FFFFFF}-продать.");
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 16);
		PlayerInfo[playerid][pInt] = 16;
	}
	else if (pickupid == enter47) {
		SetPlayerPos(playerid, -2441.9749, 752.0135, 35.1786);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 3);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (pickupid == enter48) {
		SetPlayerPos(playerid, -25.6821, -185.8139, 1003.5469);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : {00C0FF}/buy {FFFFFF} - купить,{00C0FF}/sell{FFFFFF}-продать.");
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 17);
		PlayerInfo[playerid][pInt] = 17;
	}
	else if (pickupid == enter49) {
		SetPlayerPos(playerid, 2117.1863, 899.2179, 11.1797);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 3);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	else if (pickupid == enter85) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : {00C0FF}/buy {FFFFFF} - купить, {00C0FF}/sell{FFFFFF}-продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if (pickupid == enter86) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if (pickupid == enter87) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if (pickupid == enter88) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if (pickupid == enter89) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if (pickupid == enter90) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 6);
	}
	else if (pickupid == enter91) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 7);
	}
	else if (pickupid == enter98) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 8);
	}
	else if (pickupid == enter99) {
		SetPlayerPos(playerid, -27.3786, -56.2203, 1003.5469); // Магазин 24/7
		SetPlayerFacingAngle(playerid, 13.3607);
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /buy  - купить, /sell - продать.");
		SetPlayerInterior(playerid, 6);
		PlayerInfo[playerid][pInt] = 6;
		SetPlayerVirtualWorld(playerid, 9);
	}
	return true;
}

public OnPlayerStateChange(playerid, newstate, oldstate) {
	new newcar = GetPlayerVehicleID(playerid);
	if (IsPlayerNPC(playerid)) return true; // Подключение Ботов
	new string[256];
	if ((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)) return Kick(playerid);
	if (newstate == PLAYER_STATE_DRIVER) SetPVarInt(playerid, "VehID", GetPlayerVehicleID(playerid));
	if (oldstate == PLAYER_STATE_DRIVER) {
		if (BanCar[GetPVarInt(playerid, "VehID")]) KillTimer(TimeUpdate[playerid]);
		TimeUpdate[playerid] = SetTimerEx("UpdateVehiclePos", 10000, false, "ii", GetPVarInt(playerid, "VehID"), 1);
		BanCar[GetPVarInt(playerid, "VehID")] = true;
	}
	if (newstate == PLAYER_STATE_ONFOOT) {
		TextDrawHideForPlayer(playerid, TextDraw0);
		TextDrawHideForPlayer(playerid, TextDraw2);
		TextDrawHideForPlayer(playerid, TextDraw4);
		TextDrawHideForPlayer(playerid, TextDraw1[playerid]);
		TextDrawHideForPlayer(playerid, TextDraw3[playerid]);
		if (PlayerSpec[playerid] != -1 && PlayerSpectateID[PlayerSpec[playerid]] != -1) {
			PlayerSpectatePlayer(PlayerSpec[playerid], playerid);
		}
		if (TransportDuty[playerid] > 0) {
			if (TransportDuty[playerid] == 1) {
				TaxiDrivers -= 1;
			} else if (TransportDuty[playerid] == 3) {
				TramDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "Вы теперь не на дежурстве и заработали %d$.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerBablo(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1;
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
		}
		if (TransportCost[playerid] > 0 && TransportDriver[playerid] < 999) {
			if (IsPlayerConnected(TransportDriver[playerid])) {
				TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
				TransportTime[TransportDriver[playerid]] = 0;
				TransportCost[TransportDriver[playerid]] = 0;
				format(string, sizeof(string), "~w~The ride cost~n~~r~%d$", TransportCost[playerid]);
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "~w~Passenger left the car~n~~g~Earned %d$", TransportCost[playerid]);
				GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				GivePlayerBablo(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new vehicleid = GetPlayerVehicleID(playerid);
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (IsPlayerConnected(i)) {
				if (IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0) {
					if (GetPlayerBablo(playerid) < TransportValue[i]) {
						format(string, sizeof(string), "Вы нуждаетесь %d$,для того чтобы воспользоватся услугами такси.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						RemovePlayerFromVehicle(playerid);
					} else {
						if (TransportDuty[i] == 1) {
							format(string, sizeof(string), "Вы заплатили %d$ Таксисту.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Пассажир %s сел к вам в Такси.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							TransportTime[i] = 1;
							TransportTime[playerid] = 1;
							TransportCost[playerid] = TransportValue[i];
							TransportCost[i] = TransportValue[i];
							TransportDriver[playerid] = i;
						} else if (TransportDuty[i] == 2) {
							format(string, sizeof(string), "Вы заплатили %d$ водителю автобуса.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Пассажир %s вошел в ваш автобус.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
						}
						GivePlayerBablo(playerid, -TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
					}
				}
			}
		}
	}
	if (newstate == PLAYER_STATE_WASTED) {
		if (PlayerInfo[playerid][pWanted] >= 1) {
			new price = PlayerInfo[playerid][pWanted] * 1000;
			new count;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (IsACop(i)) {
						if (CrimInRange(20.0, playerid, i)) {
							count = 1;
							ConsumingMoney[i] = 1;
							GivePlayerBablo(i, price);
							format(string, sizeof(string), "~g~Bonus~n~~r~%d$", price);
							GameTextForPlayer(i, string, 5000, 1);
							PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
						}
					}
				}
			}
			if (count == 1) {
				GivePlayerBablo(playerid, -price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
				PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWanted]) * (300);
				SetPlayerSkin(playerid, 268);
				new rand = random(sizeof(LSPDSpawns));
				SetPlayerPos(playerid, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
				format(string, sizeof(string), "Вы были посаженны за решетку на %d секунд и потеряли %d$.", PlayerInfo[playerid][pJailTime], price);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pWanted] = 0;
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
			}
		}
	}
	if (newstate == PLAYER_STATE_DRIVER) {
		new model = GetVehicleModel(newcar);
		new oldcar = gLastCar[playerid];
		new housecar = PlayerInfo[playerid][pPhousekey] + 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if (IsABoat(newcar) || IsAPlane(newcar) || IsABMX(newcar) || IsAMoped(newcar)) {
			TextDrawHideForPlayer(playerid, TextDraw1[playerid]);
			TextDrawShowForPlayer(playerid, TextDraw3[playerid]);
			TextDrawShowForPlayer(playerid, TextDraw0);
			TextDrawShowForPlayer(playerid, TextDraw2);
			TextDrawHideForPlayer(playerid, TextDraw4);
		} else {
			TextDrawShowForPlayer(playerid, TextDraw1[playerid]);
			TextDrawShowForPlayer(playerid, TextDraw3[playerid]);
			TextDrawShowForPlayer(playerid, TextDraw0);
			TextDrawShowForPlayer(playerid, TextDraw2);
			TextDrawShowForPlayer(playerid, TextDraw4);
		}
		//=============================[Двигатель]=======================================
		if (CarEngine[newcar] == 0) {
			if (!IsABMX(newcar)) {
				if (CarEngine[newcar] == 0) {
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Чтобы завести/заглушить двигатель, используйте клавишу - {00C0FF}2 (/engine).");
				}
			}
		}
		new carid = GetPlayerVehicleID(playerid);
		if (IsABMX(carid)) {
			if (CarEngine[carid] == 0) {
				GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(carid, true, lights, alarm, doors, bonnet, boot, objective);
				CarEngine[carid] = 1;
			}
		}
		if (model >= 596 && model <= 599) {
			new gun, ammo;
			GetPlayerWeaponData(playerid, 3, gun, ammo);
			if (PlayerInfo[playerid][pGun3] == 0 && gun == 0)
				PlayerInfo[playerid][pGun3] = 25;
			PlayerInfo[playerid][pAmmo3] += 5;
		}

		if (IsABoat(newcar)) {
			if (PlayerInfo[playerid][pBoatLic] < 1) {
				RemovePlayerFromVehicle(playerid);
				ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет лицензии на управление водным транспортом.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", "");
			}
		}
		if (IsAMotoVeh(newcar)) {
			if (PlayerInfo[playerid][pMotoLic] < 1) {
				if (TakingLesson[playerid] == 1) {} else {
					RemovePlayerFromVehicle(playerid);
					ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет лицензии на управление мото транспортом.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", "");
				}
			} else {

			}
		}
		else if (IsAPlane(newcar)) {
			if (PlayerInfo[playerid][pFlyLic] < 1) {
				if (TakingLesson[playerid] == 1) {} else {
					RemovePlayerFromVehicle(playerid);
					ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет лицензии Пилота.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", " ок ");
				}
			}
		}
		else if (IsALicCar(newcar)) {
			if (PlayerInfo[playerid][pCarLic] < 1) {
				if (Practice[playerid] == 1) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "{F5DEB3}Получен новый маршрут,отправляйтесь на маркер отмеченный на карте.");
					SetPlayerCheckpoint(playerid, -2086.5247, -83.6351, 35.8766, 6.0);
					CP[playerid] = 160;
				} else {
					RemovePlayerFromVehicle(playerid);
					ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет прав на управление автомобилем.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", " ок ");
				}
			}
		}
		if (newcar >= copcar[0] && newcar <= copcar[1]) {
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {} else {
				ClearAnimations(playerid);
				error(playerid, " Этот транспорт доступен только для сотрудников LSPD.");
			}
		}
		if (newcar >= fbicar[0] && newcar <= fbicar[1]) {
			if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {} else {
				ClearAnimations(playerid);
				error(playerid, " Этот транспорт доступен только для сотрудников FBI.");
			}
		}
		if (newcar >= armycar[0] && newcar <= armycar[1]) {
			if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {} else {
				ClearAnimations(playerid);
				error(playerid, " Этот транспорт доступен только для сотрудников Army.");
			}
		}
		//==============================[дальнобои]=====================================
		if (newcar >= dalnoboishikauto[0] && newcar <= dalnoboishikauto[1]) {
			if (PlayerInfo[playerid][pJob] == 3) {
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}На этом транспорте Вы можете доставлять грузы.");
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /delivery.");
			} else { RemovePlayerFromVehicle(playerid); }
		}
		else if (IsAnAmbulance(newcar)) {
			if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {} else { RemovePlayerFromVehicle(playerid); }
		}
		if (IsATruck(newcar)) {
			format(string, sizeof(string), "Продукты: %d/%d", PlayerHaul[newcar][pLoad], PlayerHaul[newcar][pCapasity]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_WHITE, "Вы можете доставлять продукты по бизнесам.");
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /load[тоннаж], /buyprods[купить продукты], /sellprods[продать продукты].");
		}
		if (IsTrailerAttachedToVehicle(newcar)) {
			SendClientMessage(playerid, COLOR_WHITE, "Трейлер присоединен.");
		}
		if (newcar >= RusMafLimo[0] && newcar <= RusMafLimo[1])
		{
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
			{
				if (PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pLeader] != 20) {
					error(playerid, " Вам нужен 3 ранг чтобы управлять этим видом транспорта.");
					RemovePlayerFromVehicle(playerid);
				}
			} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				ClearAnimations(playerid);
				error(playerid, "  У тебя нет ключей от этого автомобиля.");
			}
		}
		else if (GetVehicleModel(newcar) == 525) //      Механики
		{
			if (PlayerInfo[playerid][pJob] == 7) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		} else if (GetVehicleModel(newcar) == 571) // картинг
		{
			if (KartingCar[playerid] == 1) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		} else if (GetVehicleModel(newcar) == 574) // уборщик
		{
			if (checkk[playerid] != 0) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		} else if (GetVehicleModel(newcar) == 408) // мусоровоз
		{
			if (che[playerid] != 0) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			}
		}
		if (newcar >= Vagos[0] && newcar <= Vagos[1]) //        Транспорт Los Santos Vagos
		{
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) {} else {
				ClearAnimations(playerid);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		if (newcar >= Groov[0] && newcar <= Groov[1]) //         Транспорт Грув
		{
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) {} else {
				RemovePlayerFromVehicle(playerid);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//---------------------------------------[MS13]---------------------------------
		if (newcar >= Aztek[0] && newcar <= Aztek[1]) //         Транспорт El Coronos
		{
			if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) {} else {
				RemovePlayerFromVehicle(playerid);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//----------------------------------[The Ballas Gang]--------------------------
		if (newcar >= Balla[0] && newcar <= Balla[1]) {
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {} else {
				RemovePlayerFromVehicle(playerid);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}

		//----------------------------------[La Cosa Nostra]----------------------------
		if (newcar >= LKN[0] && newcar <= LKN[1]) {
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//----------------------------------[La Cosa Nostra]----------------------------
		if (newcar >= GRUZauto[0] && newcar <= GRUZauto[1]) {
			if (PlayerInfo[playerid][pJob] == 16) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " Ты не водитель грузовика.");
			}
		}
		//------------------------------------[ЯКУДЗА]----------------------------------
		if (newcar >= Yakudza[0] && newcar <= Yakudza[1]) {
			if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//-------------------------------------[ТРИАДА]---------------------------------
		if (newcar >= Triad[0] && newcar <= Triad[1]) {
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		if (newcar >= kvartiraLS[0] && newcar <= kvartiraLS[1]) {
			if (PlayerInfo[playerid][pFlatKey] < 9 || PlayerInfo[playerid][pFlatKey] > 17) {
				error(playerid, " Этот транспорт для жителей квартир города Los Santos.");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			} else {}
		}
		if (newcar >= kvartiraLS2[0] && newcar <= kvartiraLS2[1]) {
			if (PlayerInfo[playerid][pFlatKey] < 18 || PlayerInfo[playerid][pFlatKey] > 26) {
				error(playerid, " Этот транспорт для жителей квартир города Los Santos.");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			} else {}
		}
		if (newcar >= kvartiraSF[0] && newcar <= kvartiraSF[1]) {
			if (PlayerInfo[playerid][pFlatKey] < 1 || PlayerInfo[playerid][pFlatKey] > 8) {
				error(playerid, " Этот транспорт для жителей квартир города San Fierro.");
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
			} else {}
		}
		//---------------------------------------[РИФА]---------------------------------
		else if (newcar >= Rifa[0] && newcar <= Rifa[1]) {
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//--------------------------------[РУССКАЯ МАФИЯ]-------------------------------
		if (newcar >= RusMaf[0] && newcar <= RusMaf[1]) {
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {} else {
				RemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//------------------------------------[СТРИТ РЕЙСЕРЫ]---------------------------
		if (newcar >= Street[0] && newcar <= Street[11]) {
			if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) {} else {
				RemovePlayerFromVehicle(playerid);
				error(playerid, " У тебя нет ключей от этого автомобиля.");
			}
		}
		//--------------------------------[ТАКСИ]---------------------------------------
		if (newcar >= Taxi[0] && newcar <= Taxi[1]) {
			if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {} else {
				error(playerid, " У тебя нет ключей от этого автомобиля.");
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
		}
		//--------------------------------[ЛИЦЕНЗЁРЫ]-----------------------------------
		if (newcar >= Instruc[0] && newcar <= Instruc[1]) {
			if (Practice[playerid] == 1) {} else if (!IsAnInstructor(playerid)) {
				error(playerid, " У тебя нет ключей от этого автомобиля.");
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (newcar >= Rent[0] && newcar <= Rent[1]) {
			if (HireCar[playerid] != newcar) {
				TogglePlayerControllable(playerid, 0);
				format(string, sizeof(string), "Эта машина сдаётся в аренду.\nСтоимость: %d$.", SBizzInfo[0][sbEntranceCost]);
				ShowPlayerDialog(playerid, 9126, DIALOG_STYLE_MSGBOX, "Аренда машины", string, "Снять", "Отмена");
			}
		}
		if (newcar >= RentSF[0] && newcar <= RentSF[1]) {
			if (HireCar[playerid] != newcar) {
				TogglePlayerControllable(playerid, 0);
				format(string, sizeof(string), "Эта машина сдаётся в аренду.\nСтоимость: %d$.", SBizzInfo[1][sbEntranceCost]);
				ShowPlayerDialog(playerid, 9127, DIALOG_STYLE_MSGBOX, "Аренда машины", string, "Снять", "Отмена");
			}
		}
		if (newcar >= RentLodki[0] && newcar <= RentLodki[1]) {
			if (HireCar[playerid] != newcar) {
				TogglePlayerControllable(playerid, 0);
				format(string, sizeof(string), "Лодка сдается в аренду.\nСтоимость: %d$.", SBizzInfo[13][sbEntranceCost]);
				ShowPlayerDialog(playerid, 9128, DIALOG_STYLE_MSGBOX, "Аренда лодки", string, "Снять", "Отмена");
			}
		}
		if (newcar >= RentMoto[0] && newcar <= RentMoto[1]) {
			if (HireCar[playerid] != newcar) {
				TogglePlayerControllable(playerid, 0);
				format(string, sizeof(string), "Это мото сдаётся в аренду.\nСтоимость: %d$.", SBizzInfo[13][sbEntranceCost]);
				ShowPlayerDialog(playerid, 3544, DIALOG_STYLE_MSGBOX, "Аренда мото", string, "Снять", "Отмена");
			}
		}
		//-------------------------------[ХИТМАНЫ]--------------------------------------
		if (newcar >= Hit[0] && newcar <= Hit[1]) {
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
				if (PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pLeader] != 8) {
					SendClientMessage(playerid, COLOR_RED, "Вам нужен 3 ранг чтобы управлять этим транспортом.");
					RemovePlayerFromVehicle(playerid);
				}
			} else {
				error(playerid, " У тебя нет ключей от этого автомобиля.");
				RemovePlayerFromVehicle(playerid);
			}
		}
		//-------------------------------[РЕПОРТЁРЫ]------------------------------------
		if (newcar >= Report[0] && newcar <= Report[1]) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {} else {
				error(playerid, " У тебя нет ключей от этого автомобиля.");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (newcar == Report2) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
				if (PlayerInfo[playerid][pRank] < 4 && PlayerInfo[playerid][pLeader] != 9) {
					error(playerid, " Вам нужен 4 ранг чтобы управлять этим транспортом.");
					RemovePlayerFromVehicle(playerid);
				}
			} else {
				error(playerid, " У тебя нет ключей от этого автомобиля.");
				RemovePlayerFromVehicle(playerid);
			}
		}
		if (oldcar != 685) {
			if ((housecar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != housecar)) {
				if (gLastDriver[oldcar] == playerid && oldcar != newcar) {
					gLastDriver[oldcar] = 300;
					gCarLock[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if (newstate == PLAYER_STATE_SPAWNED) {
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if ((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || IsPlayerInRangeOfPoint(playerid, 1000.0, -1041.9, -1868.4, 79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		}
		if (PlayerInfo[playerid][pDonateRank] > 0) { SetPlayerHealth(playerid, 100.0); } else { SetPlayerHealth(playerid, 50.0 + PlayerInfo[playerid][pSHealth]); }
		MedicBill[playerid] = 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return true;
}

HireCost(carid) {
	switch (carid) {
		case 69 :  {
			return 90000; //bullit
		}
		case 70 :  {
			return 130000; //infurnus
		}
		case 71 :  {
			return 100000; //turismo
		}
		case 72 :  {
			return 80000;
		}
		case 73 :  {
			return 70000;
		}
		case 74 :  {
			return 60000;
		}
	}
	return false;
}

forward CarCheck();
public CarCheck() {
	new string[144];
	for (new j = 0; j < GetMaxPlayers(); j++) {
		if (IsPlayerConnected(j)) {
			SetVehicleParamsForPlayer(99, j, 0, 0);
			SetVehicleParamsForPlayer(100, j, 0, 0);
			SetVehicleParamsForPlayer(101, j, 0, 0);
			SetVehicleParamsForPlayer(102, j, 0, 0);
			SetVehicleParamsForPlayer(103, j, 0, 0);
			SetVehicleParamsForPlayer(104, j, 0, 0);
			SetVehicleParamsForPlayer(105, j, 0, 0);
			SetVehicleParamsForPlayer(106, j, 0, 0);
			SetVehicleParamsForPlayer(107, j, 0, 0);
			SetVehicleParamsForPlayer(108, j, 0, 0);
			SetVehicleParamsForPlayer(109, j, 0, 0);
			new Float:health;
			GetPlayerHealth(j, health);
			SetPlayerHealth(j, health - 0.5);
			if (GetPlayerBablo(j) < 0) {
				if (MoneyMessage[j] == 0) {
					format(string, sizeof(string), "Вы залезли в долги,у вас: %d$,найдите деньги или попадете в тюрьму.", GetPlayerBablo(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			} else {
				MoneyMessage[j] = 0;
			}
		}
	}
	for (new c = 1; c < 254; c++) {
		if (gLastDriver[c] == 685) {
			CarRespawn(c);
		}
		if (gLastDriver[c] >= 300) {
			gLastDriver[c]++;
		}
	}
	return true;
}

CarInit() {
	for (new c = 1; c < 254; c++) {
		gLastDriver[c] = 299;
	}
	gLastDriver[685] = 255;
	return true;
}
CarRespawn(carid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (IsPlayerInVehicle(i, carid) || HireCar[i] == carid) {
				gLastDriver[carid] = 255;
				return false;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return true;
}
LockCar(carid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			SetVehicleParamsForPlayer(carid, i, 0, 1);
		}
	}
}
UnLockCar(carid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (!IsAPlane(carid)) {
				SetVehicleParamsForPlayer(carid, i, 0, 0);
			}
		}
	}
}
LockCarHome(carid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			SetVehicleParamsForPlayer(carid, i, 0, 1);
		}
	}
}
UnLockCarHome(carid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (!IsAPlane(carid)) {
				SetVehicleParamsForPlayer(carid, i, 0, 0);
			}
		}
	}
}
InitLockDoors(playerid) {
	if (IsPlayerConnected(playerid)) {
		new c;
		while (c < 254) {
			c++;
			if (gCarLock[c] == 1) {
				SetVehicleParamsForPlayer(c, playerid, 0, 1);
			}
		}
	}
	return true;
}

public OnPlayerExitVehicle(playerid, vehicleid) {
	GunCheckTime[playerid] = 5;
	if (IsPlayerNPC(playerid)) return true; // Подключение Ботов
	new vehicle = GetPlayerVehicleID(playerid);
	PlayerInfo[playerid][pCar] = 0;
	if (Playerderbi[playerid] != 0 && startgonka == 1 && GetPlayerInterior(playerid) == 15) {
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были дисквалифицированы!");
		DisablePlayerRaceCheckpoint(playerid);
		DerbiPlayers -= 1;
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -2111.95, -443.52, 38.73);
		SetPlayerFacingAngle(playerid, 76.4112);
		Playerderbi[playerid] = 0;
		return 1;
	}
	if (GetPlayerState(playerid) == 1) {
		return true;
	}
	if (gGas[playerid] == 1) {
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
	}
	if (CP[playerid] == 132) {
		if (vehicleid >= dalnoboishikauto[0] && vehicleid <= dalnoboishikauto[1]) {
			GameTextForPlayer(playerid, "~r~MAPЋPY¦ O¦ME®E®", 500, 1);
			CP[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
		}
	}
	if (vehicleid >= dalnoboishikauto[0] && vehicleid <= dalnoboishikauto[1]) {
		GameTextForPlayer(playerid, "~r~MAPЋPY¦ O¦ME®E®", 500, 1);
		CP[playerid] = 0;
		gCarLock[GetPlayerVehicleID(playerid)] = 0;
		UnLockCar(GetPlayerVehicleID(playerid));
		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
	}
	if (GetVehicleModel(vehicle) == 408) {
		if (che[playerid] > 0) {
			che[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Вы самовольно прекратили работу.");
		}
	}
	if (GetVehicleModel(vehicle) == 574) {
		if (checkk[playerid] > 0) {
			checkk[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Вы самовольно прекратили работу.");
		}
	}
	if (RaceCP[playerid] > 0) {
		RaceCP[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Вы прекратили участие в гонке.");
	}
	if (ChekPoint[playerid] == 132) {
		ChekPoint[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	return true;
}

public OnPlayerRequestClass(playerid, classid) {
	if (IsPlayerNPC(playerid)) return true; // Подключение Ботов
	SetPlayerInterior(playerid, 0);
	SetPlayerCameraPos(playerid, 1521.4435, -1636.1875, 24.5469); //камера при входе
	SetPlayerCameraLookAt(playerid, 1452.7257, -1644.5986, 14.0469); //камера при входе
	new loginmsg[400], loginname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, loginname, MAX_PLAYER_NAME);
	if (gPlayerAccount[playerid] != 0) {
		format(loginmsg, sizeof(loginmsg), "{FFFFFF}   \n  Добро пожаловать на сервер YourWorld [RPG] [RUS/By/UA]\n\nНа сервере:\n» {ffdb58}183 {ffffff}дома\n» {ffdb58}23 {ffffff}бизнесов\n» {ffdb58}18 {ffffff}сбизнесов\n» {ffdb58}3 {ffffff}квартирных дома\n » {ffdb58}15 {ffffff}различных работ\n{ffffff}И многое другое!\n\n\tЭтот аккаунт {00C0FF}зарегестрирован{ffffff}!\n\nЛогин: {00C0FF}%s\n{ffffff}Введи пароль:", loginname);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Авторизация на YourWorld ", loginmsg, " Войти ", " Отмена ");
		return 1;
	} else {
		format(loginmsg, sizeof(loginmsg), "{FFFFFF}   \n  Добро пожаловать на сервер YourWorld [RPG] [RUS/By/UA]\n\nНа сервере:\n» {ffdb58}183 {ffffff}дома\n» {ffdb58}23 {ffffff}бизнесов\n» {ffdb58}18 {ffffff}сбизнесов\n» {ffdb58}3 {ffffff}квартирных дома\n » {ffdb58}15 {ffffff}различных работ\n{ffffff}И многое другое!\n\n\tЭтот аккаунт {FF0000}не зарегестрирован{ffffff}!\n\nЛогин: {e3be88}%s\n{ffffff}Придумай себе пароль:", loginname);
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "Регистрация на YourWorld ", loginmsg, "Регистрация", "Отмена");
	}
	return 1;
}

SetPlayerCriminal(playerid, declare, const reason[]) {
	if (IsPlayerConnected(playerid)) {
		PlayerInfo[playerid][pCrimes] += 1;
		new points = PlayerInfo[playerid][pWanted];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new wantedmes[128];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255) {
			format(turner, sizeof(turner), "Неизвестный");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		} else {
			if (IsPlayerConnected(declare)) {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		PlayCrimeReportForPlayer(playerid, declare, 3);
		if (points > 0) {
			format(wantedmes, sizeof(wantedmes), "Текущий уровень розыска: %d. Повышен законником: %s. Причина: %s.", points, turner, reason);
			SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
		}
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
	}
}
MoneyCheck() {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (!IsPlayerConnected(i)) continue;
		new money = GetPlayerBablo(i);
		if (money != PlayerInfo[i][pCash]) {
			if ((money - PlayerInfo[i][pCash]) > 1) SetPlayerBablo(i, PlayerInfo[i][pCash]);
		}
	}
}

forward OtherTimer();
public OtherTimer() {
	GunAntiCheat();
	MoneyCheck();
	new Float:maxspeed = 381.0;
	new plname[MAX_PLAYER_NAME];
	new string[144];
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i) && !IsPlayerNPC(i)) {
			if (GetPlayerState(i) == 1) CheckForWalkingTeleport(i);
			if (SafeTime[i] > 0) {
				SafeTime[i]--;
			}
			if (SafeTime[i] == 1) {
				if (gPlayerAccount[i] == 1) {}
			}
			if (GetPlayerState(i) == 2) {
				GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if (TelePos[i][5] > 550.0) {
					TelePos[i][0] = 0.0;
					TelePos[i][1] = 0.0;
				}
				if (TelePos[i][0] != 0.0) {
					new Float:xdist = TelePos[i][3] - TelePos[i][0];
					new Float:ydist = TelePos[i][4] - TelePos[i][1];
					new Float:sqxdist = xdist * xdist;
					new Float:sqydist = ydist * ydist;
					new Float:distance = (sqxdist + sqydist) / 31;
					if (gSpeedo[i] == 2) {
						if (distance < 10) format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f", distance);
						if (distance > 10 && distance < 100) format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f", distance);
						if (distance > 100) format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f", distance);
						GameTextForPlayer(i, string, 2000, 5);
					}
					if (distance > maxspeed && PlayerInfo[i][pAdmin] < 1) {
						new tmpcar = GetPlayerVehicleID(i);
						if (!IsAPlane(tmpcar)) {
							GetPlayerName(i, plname, sizeof(plname));
							format(string, 256, "Анти-Чит система: Игрок [%d]%s, движется со скоростью %.0f mph.", i, plname, distance);
							ABroadCast(COLOR_YELLOW, string, 1);
						}
					}
				}
				if (TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0) {
					TelePos[i][0] = TelePos[i][3];
					TelePos[i][1] = TelePos[i][4];
				}
			}
			new exp = PlayerInfo[i][pExp];
			new nxtlevel = PlayerInfo[i][pLevel] + 1;
			new expamount = nxtlevel * levelexp;
			format(string, sizeof(string), "~w~LvL: ~y~%d ~w~Exp: ~y~%d~w~/~y~%d", PlayerInfo[i][pLevel], exp, expamount);
			TextDrawHideForPlayer(i, levelexpp[i]);
			TextDrawSetString(levelexpp[i], string);
			TextDrawShowForPlayer(i, levelexpp[i]);
			if (TransportTime[i] > 0) {
				if (TransportTime[i] >= 16) {
					TransportTime[i] = 1;
					if (TransportDriver[i] < 999) {
						if (IsPlayerConnected(TransportDriver[i])) {
							TransportCost[i] += TransportValue[TransportDriver[i]];
							TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
				TransportTime[i] += 1;
				format(string, sizeof(string), "~r~%d ~w~: ~g~%d$", TransportTime[i], TransportCost[i]);
				GameTextForPlayer(i, string, 15000, 6);
			}
		}
	}
	return true;
}
MafiaZoneRandIF(i) {
	for (new p = 0; p < 23; p++) {
		if (p == i) continue;
		if (MafiaZoneRandom[p] == MafiaZoneRandom[i] && MafiaZoneRandom[p] != -1) {
			for (new q = 0; q < 23; q++) {
				if (MafiaZoneRandom[q] == -1) MafiaZoneRandom[i] = q;
			}
		}
	}
	return 1;
}

MafiaBizWar(playerid) {
	new zonecolor, bancolor;
	new i = GetPVarInt(playerid, "BIZZID"), fraction = MafiaZoneFraction[i], randomz;
	MafiaZoneWar[i] = true;
	MafiaZoneRandom[i] = random(sizeof(MafiaZone));
	randomz = MafiaZoneRandom[i];
	MafiaZoneRandIF(i);
	MafiaZoneTime[i] = 300;
	MafiaZoneTimeAll[i] = 900;
	MafiaZoneFraction_[i] = PlayerInfo[playerid][pLeader];
	if (MafiaZoneStatus[i] == 0) MafiaZoneFraction[i] = SBizzInfo[i][sbMafia];
	else MafiaZoneFraction[i] = BizzInfo[i][bMafia];
	SendRadioMessage(PlayerInfo[playerid][pLeader], COLOR_LIGHTRED, "Вы начали захватывать бизнес. У вас есть 5 минут, чтобы добраться до места.");
	SendRadioMessage(fraction, COLOR_LIGHTRED, "Ваш бизнес атакован. У вас есть 10 минут, чтобы отбить его.");
	MafiaWar[PlayerInfo[playerid][pLeader]] = 1;
	MafiaWar[fraction] = 1;
	if (fraction == 5) zonecolor = 0x057F94FF;
	if (fraction == 6) zonecolor = 0xFAFB71FF;
	if (fraction == 13) zonecolor = 0x10DC29FF;
	if (fraction == 14) zonecolor = 0x0FD9FAFF;
	if (fraction == 16) zonecolor = 0x8A2CD7FF;
	if (fraction == 15) zonecolor = 0xFFD720FF;
	if (fraction == 18) zonecolor = 0xBCE635FF;
	if (fraction == 19) zonecolor = COLOR_LIGHTRED;
	if (fraction == 20) zonecolor = 0x778899FF;
	if (PlayerInfo[playerid][pLeader] == 5) bancolor = 0x057F94FF;
	if (PlayerInfo[playerid][pLeader] == 6) bancolor = 0xFAFB71FF;
	if (PlayerInfo[playerid][pLeader] == 13) bancolor = 0x10DC29FF;
	if (PlayerInfo[playerid][pLeader] == 14) bancolor = 0x0FD9FAFF;
	if (PlayerInfo[playerid][pLeader] == 15) bancolor = 0xFFD720FF;
	if (PlayerInfo[playerid][pLeader] == 16) bancolor = 0x8A2CD7FF;
	if (PlayerInfo[playerid][pLeader] == 18) bancolor = 0xBCE635FF;
	if (PlayerInfo[playerid][pLeader] == 19) bancolor = COLOR_LIGHTRED;
	if (PlayerInfo[playerid][pLeader] == 20) bancolor = 0x778899FF;
	MafiaZoneID[i] = GangZoneCreate(MafiaZone[randomz][0], MafiaZone[randomz][1], MafiaZone[randomz][2], MafiaZone[randomz][3]);
	for (new q = 0; q < GetMaxPlayers(); q++) {
		if (IsAMember(q) && PlayerInfo[q][pLeader] != 12 && PlayerInfo[q][pMember] != 12) {
			GangZoneShowForPlayer(q, MafiaZoneID[i], zonecolor);
			GangZoneFlashForPlayer(q, MafiaZoneID[i], bancolor);
		}
	}
	return 1;
}

MafiaZoneCheck() {
	new polno;
	for (new j = 0; j < 23; j++) {
		if (MafiaZoneWar[j] == true) {
			MafiaZoneTime[j]--;
			MafiaZoneTimeAll[j]--;
			if (MafiaZoneTimeAll[j] > 0 && MafiaZoneTime[j] <= 0) {
				for (new z = 0; z < GetMaxPlayers(); z++) {
					if (!IsPlayerConnected(z)) continue;
					if ((PlayerInfo[z][pMember] == MafiaZoneFraction_[j] || PlayerInfo[z][pLeader] == MafiaZoneFraction_[j]) &&
						PlayerToKvadrat(z, MafiaZone[MafiaZoneRandom[j]][0], MafiaZone[MafiaZoneRandom[j]][1], MafiaZone[MafiaZoneRandom[j]][2], MafiaZone[MafiaZoneRandom[j]][3])) polno++;
				}
				if (polno < 2) {
					SendRadioMessage(MafiaZoneFraction[j], COLOR_LIGHTRED, "Вы отбили зону у атакущей банды/мафии, т.к. у них было недостаточно бойцов в зоне.");
					SendRadioMessage(MafiaZoneFraction_[j], COLOR_LIGHTRED, "У вас было не достаточно бойцов в зоне.");
					MafiaWar[MafiaZoneFraction[j]] = 0;
					MafiaWar[MafiaZoneFraction_[j]] = 0;
					MafiaZoneTime[j] = -1;
					MafiaZoneWar[j] = false;
					MafiaZoneTimeAll[j] = -1;
					MafiaZoneFraction_[j] = 0;
					MafiaZoneFraction[j] = 0;
					MafiaZoneRandom[j] = -1;
					MafiaZoneDeath_[j] = 0;
					MafiaZoneDeath[j] = 0;
					MafiaZoneStatus[j] = -1;
					MafiaOtkat[MafiaZoneFraction[j]] = gettime() + 5000;
					GangZoneStopFlashForAll(MafiaZoneID[j]);
					GangZoneHideForAll(MafiaZoneID[j]);
					GangZoneDestroy(MafiaZoneID[j]);
				}
			}
			if (MafiaZoneTimeAll[j] == 0) {
				new _full = 0;
				for (new z = 0; z < GetMaxPlayers(); z++) {
					if (!IsPlayerConnected(z)) continue;
					if ((PlayerInfo[z][pMember] == MafiaZoneFraction[j] || PlayerInfo[z][pLeader] == MafiaZoneFraction[j]) &&
						PlayerToKvadrat(z, MafiaZone[MafiaZoneRandom[j]][0], MafiaZone[MafiaZoneRandom[j]][1], MafiaZone[MafiaZoneRandom[j]][2], MafiaZone[MafiaZoneRandom[j]][3])) _full++;
				}
				if (_full < 2 && MafiaZoneDeath[j] == 0) {
					SendRadioMessage(MafiaZoneFraction[j], COLOR_LIGHTRED, "Ваших бойцов не было на зоне, поэтому зона переходит врагу.");
					SendRadioMessage(MafiaZoneFraction_[j], COLOR_LIGHTRED, "У врагов не было бойцов, вы одерживаете вверх над этой зоной.");
					MafiaOtkat[MafiaZoneFraction[j]] = gettime() + 5000;
					if (MafiaZoneStatus[j] == 0) SBizzInfo[j][sbMafia] = MafiaZoneFraction_[j];
					else BizzInfo[j][bMafia] = MafiaZoneFraction_[j];
					UpdateBizz(j);
					UpdateSBizz(j);
					MafiaWar[MafiaZoneFraction[j]] = 0;
					MafiaWar[MafiaZoneFraction_[j]] = 0;
					OnPropUpdate();
				} else {
					if (MafiaZoneDeath_[j] == MafiaZoneDeath[j]) {
						SendRadioMessage(MafiaZoneFraction[j], COLOR_LIGHTRED, "Увы, вы не смогли отстоять свой бизнес.");
						SendRadioMessage(MafiaZoneFraction_[j], COLOR_LIGHTRED, "Вы хорошо дрались, и одерживаете победу в этой битве.");
						if (MafiaZoneStatus[j] == 0) SBizzInfo[j][sbMafia] = MafiaZoneFraction_[j];
						else BizzInfo[j][bMafia] = MafiaZoneFraction_[j];
						UpdateBizz(j);
						UpdateSBizz(j);
						MafiaOtkat[MafiaZoneFraction[j]] = gettime() + 5000;
						MafiaWar[MafiaZoneFraction[j]] = 0;
						MafiaWar[MafiaZoneFraction_[j]] = 0;
						OnPropUpdate();
					} else if (MafiaZoneDeath_[j] > MafiaZoneDeath[j]) {
						SendRadioMessage(MafiaZoneFraction_[j], COLOR_LIGHTRED, "Вы побеждаете в этой битве, теперь бизнес ваш.");
						SendRadioMessage(MafiaZoneFraction[j], COLOR_LIGHTRED, "Вы проигрываете в этой битве и поэтому теряете бизнес.");
						if (MafiaZoneStatus[j] == 0) SBizzInfo[j][sbMafia] = MafiaZoneFraction_[j];
						else BizzInfo[j][bMafia] = MafiaZoneFraction_[j];
						UpdateBizz(j);
						UpdateSBizz(j);
						MafiaOtkat[MafiaZoneFraction[j]] = gettime() + 5000;
						MafiaWar[MafiaZoneFraction[j]] = 0;
						MafiaWar[MafiaZoneFraction_[j]] = 0;
						OnPropUpdate();
					} else if (MafiaZoneDeath_[j] < MafiaZoneDeath[j]) {
						SendRadioMessage(MafiaZoneFraction_[j], COLOR_LIGHTRED, "Увы, ваша агрессия ни к чему не привела, вы проиграли.");
						SendRadioMessage(MafiaZoneFraction[j], COLOR_LIGHTRED, "Вы отстояли свой бизнес, вы молодцы.");
						MafiaWar[MafiaZoneFraction[j]] = 0;
						MafiaWar[MafiaZoneFraction_[j]] = 0;
						MafiaOtkat[MafiaZoneFraction[j]] = gettime() + 5000;
					}
				}
				MafiaZoneTime[j] = 0;
				MafiaZoneWar[j] = false;
				MafiaZoneTimeAll[j] = 0;
				MafiaZoneFraction_[j] = 0;
				MafiaZoneFraction[j] = 0;
				MafiaZoneRandom[j] = -1;
				MafiaZoneDeath_[j] = 0;
				MafiaZoneDeath[j] = 0;
				MafiaZoneStatus[j] = -1;
				GangZoneStopFlashForAll(MafiaZoneID[j]);
				GangZoneHideForAll(MafiaZoneID[j]);
				GangZoneDestroy(MafiaZoneID[j]);
			}
		}
	}
	return 1;
}

forward SetPlayerUnjail();
public SetPlayerUnjail() {
	new plname[MAX_PLAYER_NAME], GoLotto, string[144], JackpotFallen;
	MafiaZoneCheck();
	if (bankotkat != 0) {
		bankotkat--;
		if (bankotkat == 0) {
			keys = CreatePickup(1210, 22, 1400.03, -1012.85, 0.67);
		}
	}
	if (door != 0) {
		door--;
		if (door == 0) {
			MoveObject(redver, 1435.1789550781, -1009.7760009766, 10.696892738342, 20.5);
			DestroyPickup(pickboom);
			door2 = 120;
		}
	}
	if (door2 != 0) {
		door2--;
		if (door2 == 0) {
			MoveObject(redver, 1435.1789550781, -1007.7760009766, 10.696892738342, 20.5);
		}
	}
	if (door1 != 0) {
		door1--;
		if (door1 == 0) {
			MoveObject(hrandver, 1412.7796630859, -1012.91796875, 1.3489612340927, 20.5);
		}
	}
	if (LottoStart != 0) {
		LottoStart--;
		if (LottoStart == 0) {
			OOCOff(COLOR_WHITE, "{F5DEB3}Через 2 минуты начнется лотерейная партия. Для покупки билета введите:{FFFFFF} /lotto");
			ranlotto = random(80);
			LottoStart2 = 120;
		}
	}
	if (LottoStart2 != 0) { LottoStart2--; if (LottoStart2 == 0) { GoLotto = 10; } }
	if (DerbiStartGonkatwo != 0) {
		DerbiStartGonkatwo--;
		if (DerbiStartGonkatwo == 0) {
			format(string, sizeof(string), "::: Внимание! Дерби гонки начнуться через 2 минуты. Регистрация у стадиона Сан Фиеро. :::");
			OOCOff(COLOR_YELLOW2, string);
			EndingderbiRound = 0;
			DerbiStartGonka1 = 120;
		}
	}
	for (new s = 0; s < GetMaxPlayers(); s++) {
		if (!IsPlayerConnected(s)) continue;
		if (PlayerInfo[s][pAdmin] >= 1) {
			if (PlayerSpectateID[s] != -1) {
				new gunss;
				new SM_HAstring[256];
				new Float:armour, Float:healt;
				new ping = GetPlayerPing(PlayerSpectateID[s]);
				new gun, patr;
				new level = PlayerInfo[PlayerSpectateID[s]][pLevel];
				new tmpgunname[64];
				new guns = GetPlayerWeapon(PlayerSpectateID[s]);
				if (guns == 0) tmpgunname = "None";
				if (guns == 4) tmpgunname = "Knife";
				if (guns == 9) tmpgunname = "Chainsaw";
				if (guns == 10) tmpgunname = "Dildo";
				if (guns == 16) tmpgunname = "Grenade";
				if (guns == 18) tmpgunname = "Molotov Cocktail";
				if (guns == 23) tmpgunname = "9mm";
				if (guns == 24) tmpgunname = "Eagle";
				if (guns == 25) tmpgunname = "Shotgun";
				if (guns == 26) tmpgunname = "Sawnoff Shotgun";
				if (guns == 27) tmpgunname = "Combat Shotgun";
				if (guns == 28) tmpgunname = "Uzi";
				if (guns == 29) tmpgunname = "MP5";
				if (guns == 30) tmpgunname = "AK-47";
				if (guns == 31) tmpgunname = "M4";
				if (guns == 32) tmpgunname = "Tec-9";
				if (guns == 33) tmpgunname = "Rifle";
				if (guns == 34) tmpgunname = "Rifle";
				if (guns == 35) tmpgunname = "RPG";
				if (guns == 36) tmpgunname = "HS Rocket";
				if (guns == 37) tmpgunname = "Flamethrower";
				if (guns == 38) tmpgunname = "Minigun";
				GetPlayerWeaponData(PlayerSpectateID[s], 0, gun, patr);
				new giveplayer[MAX_PLAYER_NAME];
				GetPlayerHealth(PlayerSpectateID[s], healt);
				GetPlayerArmour(PlayerSpectateID[s], armour);
				GetPlayerName(PlayerSpectateID[s], giveplayer, sizeof(giveplayer));
				format(SM_HAstring, sizeof(SM_HAstring), "~b~Name: %s  ~r~ID: %d    ~g~Level: %d  ~y~Ping: %d~n~~b~Health: %.0f ~r~Armour: %.0f ~g~Gun: %s ~y~Ammo: %d", giveplayer, PlayerSpectateID[s], level, ping, healt, armour, tmpgunname, gunss);
				TextDrawSetString(SM_HA[s], SM_HAstring);
			}
		}
	}
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			new level = PlayerInfo[i][pLevel];
			if (level >= 0 && level <= 2) {
				PlayerInfo[i][pPayCheck] += 1;
			} else if (level >= 3 && level <= 4) {
				PlayerInfo[i][pPayCheck] += 2;
			} else if (level >= 5 && level <= 6) {
				PlayerInfo[i][pPayCheck] += 3;
			} else if (level >= 7 && level <= 8) {
				PlayerInfo[i][pPayCheck] += 4;
			} else if (level >= 9 && level <= 10) {
				PlayerInfo[i][pPayCheck] += 5;
			} else if (level >= 11 && level <= 12) {
				PlayerInfo[i][pPayCheck] += 6;
			} else if (level >= 13 && level <= 14) {
				PlayerInfo[i][pPayCheck] += 7;
			} else if (level >= 15 && level <= 16) {
				PlayerInfo[i][pPayCheck] += 8;
			} else if (level >= 17 && level <= 18) {
				PlayerInfo[i][pPayCheck] += 9;
			} else if (level >= 19 && level <= 20) {
				PlayerInfo[i][pPayCheck] += 10;
			} else if (level >= 21) {
				PlayerInfo[i][pPayCheck] += 11;
			}
		}
	}
	if (GoLotto == 10) {
		new winner[MAX_PLAYER_NAME];
		format(string, sizeof(string), "{F5DEB3}Лотерея: Сегодня выиграшный номер: {FFFFFF}%d.", ranlotto);
		OOCOff(COLOR_WHITE, string);
		for (new l = 0; l < GetMaxPlayers(); l++) {
			if (!IsPlayerConnected(l)) continue;
			if (PlayerInfo[l][pLottoNr] > 0) {
				if (PlayerInfo[l][pLottoNr] == ranlotto) {
					JackpotFallen = 1;
					GivePlayerBablo(l, Jackpot);
					GetPlayerName(l, winner, sizeof(winner));
					format(string, sizeof(string), "{F5DEB3}Лотерея: победителем джекпота стал(а) {FFFFFF}%s.", winner);
					OOCOff(COLOR_WHITE, string);
					format(string, sizeof(string), "Вы выиграли %d$ лотерею.", Jackpot);
					SendClientMessage(l, COLOR_YELLOW, string);
					PlayerInfo[l][pLottoNr] = 0;
				} else {
					SendClientMessage(l, COLOR_LIGHTBLUE, "Вы не выйграли сейчас, может повезёт потом.");
					PlayerInfo[l][pLottoNr] = 0;
				}
			}
		}
		if (JackpotFallen == 1) {
			new rand = random(125000);
			rand += 15789;
			Jackpot = rand;
			format(string, sizeof(string), "{F5DEB3}Лотерея: назначен новый джекпот в размере {FFFFFF}%d$.", Jackpot);
			OOCOff(COLOR_WHITE, string);
			JackpotFallen = 0;
			SaveStuff();
		} else {
			new rand = random(15000);
			rand += 2158;
			Jackpot += rand;
			format(string, sizeof(string), "{F5DEB3}Лотерея: Джекпот был поднят. Выигрыш составляет: {FFFFFF}%d$.", Jackpot);
			OOCOff(COLOR_WHITE, string);
			JackpotFallen = 0;
			SaveStuff();
		}
		GoLotto = 0;
	}
	if (DerbiStartGonka1 != 0) {
		DerbiStartGonka1--;
		if (DerbiStartGonka1 == 0) {
			EndingderbiRound = 0;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (Playerderbi[i] == 0) continue;
				new rands = random(sizeof(derbi));
				GameTextForPlayer(i, "1", 1000, 3);
				new rand;
				rand = random(sizeof(DerbiSpawns));
				new carid = CreateVehicle(derbi[rands], DerbiSpawns[rand][0], DerbiSpawns[rand][1], DerbiSpawns[rand][2], DerbiSpawns[rand][3], 3, 3, 60000);
				PutPlayerInVehicle(i, carid, 0);
				CreatedCars[CreatedCar] = carid;
				TogglePlayerControllable(i, 0);
				SetPlayerInterior(i, 15);
				LinkVehicleToInterior(carid, 15);
				derbistart = 4;
			}
		}
	}
	for (new i = 0; i < GetMaxPlayers(); i++) {
		new Float:healt;
		GetPlayerHealth(i, healt);
		if (healt < 15.0) {
			MnePizda[i] = 1;
			AnimationKill(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		} else if (healt > 15.0 && MnePizda[i] == 1) {
			SetPlayerDrunkLevel(i, 0);
			MnePizda[i] = 0;
			ClearAnimations(i);
		}
	}
	if (derbistart != 0) {
		derbistart--;
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (derbistart == 3) {
				if (Playerderbi[i] != 0) {
					GameTextForPlayer(i, "3", 1000, 3);
				}
			}
			if (derbistart == 2) {
				if (Playerderbi[i] != 0) {
					GameTextForPlayer(i, "2", 1000, 3);
				}
			}
			if (derbistart == 1) {
				if (Playerderbi[i] != 0) {
					GameTextForPlayer(i, "1", 1000, 3);
				}
			}
			if (derbistart == 0) {
				if (Playerderbi[i] != 0) {
					if (DerbiPlayers < 2) {
						OOCOff(COLOR_YELLOW2, "::: Дерби - Гонка отменена из-за не достаточного колличества участников! :::");
						EndingderbiRound = 1;
						Playerderbi[i] = 0;
						TogglePlayerControllable(i, 1);
						DerbiPlayers = 0;
						DisablePlayerRaceCheckpoint(i);
						SetPlayerInterior(i, 1);
						SetPlayerPos(i, -2111.95, -443.52, 38.73);
						SetPlayerFacingAngle(i, 76.4112);
						DestroyVehicle(GetPlayerVehicleID(i));
					} else {
						GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
						PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
						TogglePlayerControllable(i, 1);
						Playerderbi[i] = 1;
						startgonka = 1;
						SetVehicleParamsEx(GetPlayerVehicleID(i), VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
					}
				}
			}
		}
	}
	if (DerbiPlayers <= 1 && startgonka == 1) {
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (Playerderbi[i] == 0) continue;
			Playerderbi[i] = 0;
			EndingderbiRound = 1;
			Playerderbi[i] = 0;
			DerbiPlayers = 0;
			startgonka = 0;
			DestroyVehicle(GetPlayerVehicleID(i));
			TogglePlayerControllable(i, 1);
			SetPlayerInterior(i, 0);
			error(i, "1");
			SetPlayerFacingAngle(i, 76.4112);
		}
	}
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (Refueling[i] > 0) {
				Refueling[i]--;
				if (Refueling[i] == 0) {
					new VID, FillUp;
					if (GetPlayerBablo(i) >= FillUp + 4) {
						VID = GetPlayerVehicleID(i);
						FillUp = GasMax - Gas[VID];
						Gas[VID] += FillUp;
						FillUp = FillUp * 10;
						format(string, sizeof(string), "Ваш автомобиль заправлен. Вы заплатили %d$.", FillUp);
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
						GivePlayerBablo(i, -FillUp);
						SBizzInfo[3][sbTill] += FillUp;
						TogglePlayerControllable(i, true);
					} else {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : У вас нет средств,для заправки автомобиля (нужно %d$).", FillUp);
						SendClientMessage(i, COLOR_WHITE, string);
						TogglePlayerControllable(i, true);
					}
				}
			}
			if (MurderStartGonka1 > 0) {
				MurderStartGonka1--;
				if (MurderStartGonka1 == 3) {
					if (PlayerMurder[i] != 0) {
						GameTextForPlayer(i, "3", 1000, 3);
					}
				}
				if (MurderStartGonka1 == 2) {
					if (PlayerMurder[i] != 0) {
						GameTextForPlayer(i, "2", 1000, 3);
					}
				}
				if (MurderStartGonka1 == 1) {
					if (PlayerMurder[i] != 0) {
						GameTextForPlayer(i, "1", 1000, 3);
					}
				}
				if (MurderStartGonka1 == 0) {
					if (PlayerMurder[i] != 0) {
						if (MurderPlayers < 1) {
							PlayerMurder[i] = 0;
							TogglePlayerControllable(i, 1);
						}
						FirstMurderWinner = 999;
						SecondMurderWinner = 999;
						ThirdMurderWinner = 999;
						if (PlayerMurder[i] != 0) {
							RaceCP[i] = 400;
							GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 3);
							PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
							Murderchet[i] += 1;
							SetPlayerRaceCheckpoint(i, 1, murderace[0][0], murderace[0][1], murderace[0][2], murderace[1][0], murderace[1][1], murderace[1][2], 8.0);
							TogglePlayerControllable(i, 1);
							PlayerMurder[i] = 1;
							murder[i] = 1;
							SetVehicleParamsEx(GetPlayerVehicleID(i), VEHICLE_PARAMS_ON, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
							CarEngine[i] = 1;
						}
					}
				}
			}
			if (vzlomvopros[i] > 0) {
				if (IsPlayerInRangeOfPoint(i, 2.0, 1413.36, -1012.90, 0.78)) {
					new ranvzlomr = 99 + random(200);
					bankpasword[i] = 212;
					format(string, sizeof(string), "Автоматический подбор пароля: {FFFFFF}%d.", ranvzlomr);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
					if (ranvzlomr == bankpasword[i]) {
						SendClientMessage(i, COLOR_GREEN, "Совпадение паролей. Дверь открыта!");
						MoveObject(hrandver, 1412.6999511719, -1010.5, 1.2999999523163, 4.0);
						door1 = 120;
						banksistem = 0;
						bankotkat = 7200;
						vzlomvopros[i] = 0;
					}
				}
			}
			new Float:arm;
			GetPlayerArmour(i, arm);
			if (arm > 0 && !IsACop(i)) {
				if (!IsPlayerNPC(i)) {
					SetPlayerArmour(i, 0);
					GetPlayerName(i, plname, sizeof(plname));
					format(string, sizeof(string), "Анти-Чит система: %s[%d] имеет броню, хотя он не законник.", plname, i);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
			new newcar = GetPlayerVehicleID(i); {
				PlayerInfo[i][pForce] = PlayerInfo[i][pForce] + 1;
			}
			//--------------------------[Анти-АФК]------------------------------------------
			new sendername[MAX_PLAYER_NAME];
			GetPlayerPos(i, AntiAFK[i][3], AntiAFK[i][4], AntiAFK[i][5]);
			if (PlayerAFKtime[i] >= 30) {
				SetPlayerAttachedObject(i, 7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			}
			if (PlayerAFKtime[i] < 29) {
				RemovePlayerAttachedObject(i, 7);
			}
			if (AntiAFK[i][0] == AntiAFK[i][3] && AntiAFK[i][1] == AntiAFK[i][4] && AntiAFK[i][2] == AntiAFK[i][5]) {
				PlayerAFKtime[i]++;
				if (PlayerAFKtime[i] == 10800 && PlayerInfo[i][pLevel] < 5 && PlayerInfo[i][pVipTime] != 1) {
					for (new a; a < 54; a++) {
						SendClientMessage(i, 0xFFFFFFFF, "");
					}
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "{00C0FF}YourWorld{FFFFFF} : Вы были кикнуты сервером. Причина: Долгое бездействие более 3 часов [AFK]", sendername);
					SendClientMessage(i, COLOR_WHITE, string);
					Kick(i);
					TogglePlayerControllable(i, 0);
				}
				if (PlayerAFKtime[i] == 10800 && PlayerInfo[i][pLevel] < 10 && PlayerInfo[i][pVipTime] != 1) {
					for (new a; a < 54; a++) {
						SendClientMessage(i, 0xFFFFFFFF, "");
					}
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "{00C0FF}YourWorld{FFFFFF} : Вы были кикнуты сервером. Причина: Долгое бездействие более 3 часов [AFK]", sendername);
					SendClientMessage(i, COLOR_WHITE, string);
					Kick(i);
					TogglePlayerControllable(i, 0);
				}
				if (PlayerAFKtime[i] == 100500 && PlayerInfo[i][pAdmin] >= 1) {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "{00C0FF}В афк уже 100500 минут..", sendername);
					SendClientMessage(i, COLOR_WHITE, string);
				}
			} else {
				PlayerAFKtime[i] = 0;
				RemovePlayerAttachedObject(i, 7);
				AntiAFK[i][0] = AntiAFK[i][3];
				AntiAFK[i][1] = AntiAFK[i][4];
				AntiAFK[i][2] = AntiAFK[i][5];
			}
			new vehicleid = GetPlayerVehicleID(i);
			if (IsPlayerInVehicle(i, vehicleid)) {
				if (GetPlayerWeapon(i) == 29 || GetPlayerWeapon(i) == 31 || GetPlayerWeapon(i) == 30 || GetPlayerWeapon(i) == 22) {} else { SetPlayerArmedWeapon(i, 0); }
			}
			if (PlayerInfo[i][pMutedTime] != 0) {
				PlayerInfo[i][pMutedTime]--;
				if (PlayerInfo[i][pMutedTime] == 0) {
					PlayerInfo[i][pMuted] = 0;
					GetPlayerName(i, plname, sizeof(plname));
					format(string, sizeof(string), "{00C0FF}YourWorld :{ffffff} %s снова может говорить с нами.", plname);
					BroadCast(COLOR_WHITE, string);
					SendClientMessage(i, COLOR_GREY, "Бан чата автоматически снят.");
				}
			}
			if (MuteHelpTime[i] != 0) {
				MuteHelpTime[i]--;
				if (MuteHelpTime[i] == 0) SendClientMessage(i, COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Вы снова можите задавать вопросы хелперам.");
			}
			if (MuteFamily[i] != 0) {
				MuteFamily[i]--;
				if (MuteFamily[i] == 0) SendClientMessage(i, COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Вы снова можите общатся в семейном чате.");
			}
			if (OOCChat[i] > 0) OOCChat[i]--;
			if (TimerGiveMiner[i] > 0) {
				TimerGiveMiner[i]--;
				if (TimerGiveMiner[i] == 0) {
					RemovePlayerAttachedObject(i, 3);
					SendClientMessage(i, -1, "Вы добыли обычный металл. Теперь отнесите его на склад.");
					ApplyAnimation(i, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
					SetPlayerAttachedObject(i, 4, 2936, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769);
					SetPlayerCheckpoint(i, -1865.7438, -1622.5901, 21.9036, 3.0);
					ExtraMetall[i] = 0;
				}
			}
			if (TimerGiveMinerEx[i] > 0) {
				TimerGiveMinerEx[i]--;
				if (TimerGiveMinerEx[i] == 0) {
					RemovePlayerAttachedObject(i, 3);
					SendClientMessage(i, -1, "Вы добыли качественный металл. Теперь отнесите его на склад.");
					ApplyAnimation(i, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 1, 1);
					SetPlayerAttachedObject(i, 4, 2936, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769);
					SetPlayerCheckpoint(i, -1865.7438, -1622.5901, 21.9036, 3.0);
					ExtraMetall[i] = 1;
				}
			}
			if (PlayerInfo[i][pJailed] > 0) {
				if (PlayerInfo[i][pJailTime] > 0 && WantLawyer[i] == 0) PlayerInfo[i][pJailTime]--;
				if (PlayerInfo[i][pJailTime] <= 0 && WantLawyer[i] == 0) {
					PlayerInfo[i][pJailTime] = 0;
					if (PlayerInfo[i][pJailed] == 1) {
						SetPlayerInterior(i, 6);
						PlayerInfo[i][pZapret] = 0;
						SetPlayerSkin(i, PlayerInfo[i][pChar]);
						SetPlayerPos(i, 246.5201, 69.0075, 1003.6406);
					}
					else if (PlayerInfo[i][pJailed] == 2) {
						SetPlayerWorldBounds(i, 20000.0000, -20000.0000, 20000.0000, -20000.0000); //Reset world to player
						SetPlayerInterior(i, 0);
						SetPlayerSkin(i, PlayerInfo[i][pChar]);
						SetPlayerPos(i, 90.2101, 1920.4854, 17.9422);
					}
					PlayerInfo[i][pJailed] = 0;
					SetPlayerSkin(i, PlayerInfo[i][pChar]);
					SendClientMessage(i, COLOR_LIGHTBLUE, "Ты отмотал свой срок, надеюсь мы тебя здесь больше не увидим.");
					format(string, sizeof(string), "~g~Freedom~n~~w~Try to be a better citizen");
					GameTextForPlayer(i, string, 5000, 1);
					if (gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if (PlayerFishTimer[i] > 0) {
				PlayerFishTimer[i]--;
				if (PlayerFishTimer[i] == 0) TryFish(i);
			}
			if (PlayerMayNarco[i] > 0) PlayerMayNarco[i]--;
			if (PlayerMayAlco[i] > 0) PlayerMayAlco[i]--;

			if (IsABoat(newcar)) {
				if (PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2) RemovePlayerFromVehicle(i);
			}
			else if (IsABMX(newcar)) {
				if (GetPlayerState(i) != 2) RemovePlayerFromVehicle(i);
			}
			if (UnfreezePlayer[i] > 0) { UnfreezePlayer[i]--; if (UnfreezePlayer[i] == 0) TogglePlayerControllable(i, true); }
			if (PlayerLomkaTime[i] > 0) {
				GetPlayerName(i, sendername, sizeof(sendername));
				PlayerLomkaTime[i]--;
				if (PlayerLomkaTime[i] == 0) {
					TogglePlayerControllable(i, 1);
					ClearAnimations(i);
					format(string, sizeof(string), "%s Пришёл в себя", sendername);
					ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			if (PlayerInfo[i][pNarcoLomka] > 0) {
				PlayerInfo[i][pNarcoLomka]--;
				if (PlayerLomkaTime[i] == 0) {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "У %s Началась ломка", sendername);
					ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					SendClientMessage(i, COLOR_LIGHTBLUE, "У тебя началась ломка, тебе нужно принять дозу");
					SetPlayerWeather(i, -68);
					PlayerInfo[i][pNarcoLomka] = 400;
				}
			}
			new dl = GetPlayerDrunkLevel(i);
			if (dl >= 30000) {
				new v = random(100);
				if (v == 0) {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s Вырвало", sendername);
					new Float:health;
					GetPlayerHealth(i, health);
					health -= 20;
					SetPlayerHealth(i, health);
					SetPlayerDrunkLevel(i, dl - 10000);
					ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				}
			}
			else if (IsAPlane(newcar)) {
				if (PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2) {
					if (TakingLesson[i] == 1) {} else {
						RemovePlayerFromVehicle(i);
						ShowPlayerDialog(i, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет лицензии на управление авиа транспортом.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", "");
					}
				}
			}
			else {
				if (PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2) {
					if (Practice[i] == 1 || IsABMX(newcar) || IsAMoped(newcar)) {} else {
						ShowPlayerDialog(i, 12, DIALOG_STYLE_MSGBOX, "{00C0FF}YourWorld :{FFFFFF}", "1\tУ Вас нет лицензии на управление автомобилем.\n2\tВведите /kpk и следуйте в АвтоШколу.", " ок ", "");
						RemovePlayerFromVehicle(i);
					}
				}
			}
			if (UsedFind[i] >= 1) {
				UsedFind[i] += 1;
				if (UsedFind[i] >= 120) {
					UsedFind[i] = 0;
				}
			}
			if (WantLawyer[i] >= 1) {
				CallLawyer[i] = 111;
				if (WantLawyer[i] == 1) SendClientMessage(i, COLOR_LIGHTRED, "Вам нужен Адвокат? Если нужен, напишите - yes.");
				WantLawyer[i]++;
				if (WantLawyer[i] == 8) SendClientMessage(i, COLOR_LIGHTRED, "Вам нужен Адвокат? Если нужен, напишите - yes.");
				if (WantLawyer[i] == 15) SendClientMessage(i, COLOR_LIGHTRED, "Вам нужен Адвокат? Если нужен, напишите - yes.");
				if (WantLawyer[i] == 20) {
					SendClientMessage(i, COLOR_LIGHTRED, "На месте нет адвокатов, возврощайтесь в камеру.");
					WantLawyer[i] = 0;
					CallLawyer[i] = 0;
				}
			}
			if (TutTime[i] >= 1) {
				TutTime[i] += 1;
				if (TutTime[i] == 2) {
					SetCameraBehindPlayer(i);
					PlayerInfo[i][pBoatLic] = 1;
					PlayerInfo[i][pFishLic] = 1;
					PlayerInfo[i][pCarLic] = 1;
					PlayerInfo[i][pFlyLic] = 1;
					PlayerInfo[i][pMotoLic] = 1;
					PlayerInfo[i][pGunLic] = 1;
					OnPlayerCommandText(i, "/rules");
					SetPlayerFightingStyle(i, FIGHT_STYLE_NORMAL);
					TutTime[i] = 0;
					PlayerInfo[i][pTut] = 1;
					gOoc[i] = 0;
					gNews[i] = 0;
					gFam[i] = 0;
					TogglePlayerControllable(i, 1);
					MedicBill[i] = 0;
					SavePlayer(i);
					SetPlayerSpawn(i);
				}
			}
			if (PlayerTazeTime[i] >= 1) {
				PlayerTazeTime[i] += 1;
				if (PlayerTazeTime[i] == 15) {
					PlayerTazeTime[i] = 0;
				} else {
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
				}
			}
			if (PlayerDrunk[i] >= 5) {
				PlayerDrunkTime[i] += 1;
				if (PlayerDrunkTime[i] == 8) {
					PlayerDrunkTime[i] = 0;
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if (IsPlayerInAnyVehicle(i)) {
						if (GetPlayerState(i) == 2) {
							SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					} else {
						ApplyAnimation(i, "PED", "WALK_DRUNK", 4.0, 0, 1, 0, 0, 0);
					}
				}
			}
			if (PlayerStoned[i] >= 2) {
				PlayerStoned[i] += 1;
				if (PlayerStoned[i] == 10) {
					PlayerStoned[i] = 2;
					new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if (IsPlayerInAnyVehicle(i)) {
						if (GetPlayerState(i) == 2) {
							SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					} else {
						SetPlayerFacingAngle(i, angle + 90);
					}
				}
			}
			if (DmZona[i] > 0) {
				if (DmZona[i] <= 0) {
					DmZona[i] = 0;
					players = 0;
				} else {
					DmZona[i] -= 1;
				}
			}
			if (PlayerInfo[i][pMusorTime] > 0) {
				if (PlayerInfo[i][pMusorTime] <= 0) {
					PlayerInfo[i][pMusorTime] = 0;
				} else {
					PlayerInfo[i][pMusorTime] -= 1;
				}
			}
			if (PlayerInfo[i][pRobTime] > 0) {
				if (PlayerInfo[i][pRobTime] <= 0) {
					PlayerInfo[i][pRobTime] = 0;
				} else {
					PlayerInfo[i][pRobTime] -= 1;
				}
			}
			if (PlayerInfo[i][pCleanTime] > 0) {
				if (PlayerInfo[i][pCleanTime] <= 0) {
					PlayerInfo[i][pCleanTime] = 0;
				} else {
					PlayerInfo[i][pCleanTime] -= 1;
				}
			}
			if (PlayerInfo[i][pCarTime] > 0) {
				if (PlayerInfo[i][pCarTime] <= 0) {
					PlayerInfo[i][pCarTime] = 0;
				} else {
					PlayerInfo[i][pCarTime] -= 1;
				}
			}
			if (PlayerInfo[i][pTruckTime] > 0) {
				if (PlayerInfo[i][pTruckTime] <= 0) {
					PlayerInfo[i][pTruckTime] = 0;
				} else {
					PlayerInfo[i][pTruckTime] -= 1;
				}
			}
			if (FindTime[i] > 0) {
				if (FindTime[i] == FindTimePoints[i]) {
					FindTime[i] = 0;
					FindTimePoints[i] = 0;
					DisablePlayerCheckpoint(i);
					PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~r~–APKEP УCЏAмO‹‡Eм", 2500, 1);
				} else {
					format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if (TaxiCallTime[i] > 0) {
				if (TaxiAccepted[i] < 999) {
					if (IsPlayerConnected(TaxiAccepted[i])) {
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
					}
				}
			}
			if (tietime[i] > 0 && uTarget[i] < 999) {
				tietime[i]--;
			}
			if (tietime[i] == 1 && uTarget[i] < 999) {
				if (GetDistanceBetweenPlayers(i, uTarget[i]) < 1.5) {
					if (PlayerCuffed[uTarget[i]] == 0) {
						if (PlayerCuffed[i] == 0) {
							new giveplayer[MAX_PLAYER_NAME];
							GetPlayerName(uTarget[i], giveplayer, sizeof(giveplayer));
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s Связывает вас при помощи верёвки.", sendername);
							SendClientMessage(uTarget[i], COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Bы связали %s.", giveplayer);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s Связывает %s при помощи верёвки.", sendername, giveplayer);
							ProxDetector(30.0, i, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(uTarget[i], "~r~Tied", 2500, 3);
							TogglePlayerControllable(uTarget[i], 0);
							PlayerCuffed[uTarget[i]] = 3;
							uTarget[i] = 999;
							tietime[i] = 0;
							PlayerInfo[i][pRope]--;
						} else {
							error(i, " Вы не можете cвязывать.");
						}
					} else {
						error(i, " Этот человек уже обездвижен.");
						uTarget[i] = 999;
						tietime[i] = 0;
					}
				} else {
					error(i, " Вы слишком далеко друг от друга.");
					uTarget[i] = 999;
					tietime[i] = 0;
				}
			}
			if (MedicCallTime[i] > 0) {
				if (MedicCallTime[i] != 0) {
					MedicCallTime[i] -= 1;
					format(string, sizeof(string), "%d", MedicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					if (MedicCallTime[i] == 0) {
						PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
						DisablePlayerCheckpoint(i);
						GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1);
					}
				}
			}
			if (Robbed[i] == 1) {
				if (RobbedTime[i] <= 0) {
					RobbedTime[i] = 0;
					Robbed[i] = 0;
				} else {
					RobbedTime[i] -= 1;
				}
			}
			if (PlayerCuffed[i] == 1) {
				if (PlayerCuffedTime[i] <= 0) {
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
					PlayerTazeTime[i] = 1;
				} else {
					PlayerCuffedTime[i] -= 1;
				}
			}
			if (PlayerCuffed[i] == 2) {
				if (PlayerCuffedTime[i] <= 0) {
					GameTextForPlayer(i, "~r~*‹‘ C‡O–A‡… мAPУЌм…K…, ЏEЊEP’ ‹‘ C‹OЂOѓм‘.", 2500, 3);
					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					PlayerCuffedTime[i] = 0;
				} else {
					PlayerCuffedTime[i] -= 1;
				}
			}
		}
	}
	return true;
}

forward CheckGas();
public CheckGas() {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i) && !IsPlayerNPC(i)) {
			if (GetPlayerState(i) == PLAYER_STATE_DRIVER) {
				new vehicle = GetPlayerVehicleID(i);
				new carid = GetPlayerVehicleID(i);
				new model = GetVehicleModel(carid);
				if (Gas[vehicle] >= 1 && CarEngine[carid] != 0) {
					if (Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0); }
					if (IsAPlane(vehicle) || IsABoat(vehicle) || IsABMX(vehicle) || IsAMoped(vehicle) || model == 537 || model == 437) { Gas[vehicle]++; }
					Gas[vehicle]--;
				} else {
					NoFuel[i] = 1;
				}
			}
		}
	}
	return true;
}

Motor(playerid) {
	if (PlayerInVeh[playerid] == 1) {}
	return true;
}

forward StoppedVehicle();
public StoppedVehicle() {
	new Float:x, Float:y, Float:z;
	new Float:distance, value;
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i) && !IsPlayerNPC(i)) {
			if (IsPlayerInAnyVehicle(i)) {
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x, SavePlayerPos[i][LastX])), 2) + floatpower(floatabs(floatsub(y, SavePlayerPos[i][LastY])), 2) + floatpower(floatabs(floatsub(z, SavePlayerPos[i][LastZ])), 2));
				value = floatround(distance * 3600);
				if (UpdateSeconds > 1) {
					value = floatround(value / UpdateSeconds);
				}
				if (SpeedMode) {}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return true;
}

SetPlayerWeapons(playerid) {
	if (IsPlayerConnected(playerid) && !IsPlayerNPC(playerid)) {
		SafeResetPlayerWeapons(playerid);
		if (PlayerInfo[playerid][pJailed] < 1) {
			if (gTeam[playerid] == 2 || IsACop(playerid)) {
				ServerGivePlayerWeapons(playerid, 41, 100); //spray
				ServerGivePlayerWeapons(playerid, 24, 30);
				if (PlayerInfo[playerid][pMember] == 2) //Cops & FBI/ATF
				{
					ServerGivePlayerWeapons(playerid, 41, 100); //spray
					ServerGivePlayerWeapons(playerid, 24, 30);
					if (PlayerInfo[playerid][pChar] == 285) //SWAT
					{} else if (PlayerInfo[playerid][pChar] == 287) //Army
					{
						ServerGivePlayerWeapons(playerid, 41, 100); //spray
						ServerGivePlayerWeapons(playerid, 24, 30);
					}
				}
				if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) //КОЗА НОСТРА
				{
					ServerGivePlayerWeapons(playerid, 22, 30);
					ServerGivePlayerWeapons(playerid, 1, 1);
				}
				if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) { //ЯКУДЗА

					ServerGivePlayerWeapons(playerid, 22, 30);
					ServerGivePlayerWeapons(playerid, 8, 1);
				}
				if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) // Хитманы
				{
					ServerGivePlayerWeapons(playerid, 23, 30); // SD-Pistol
					ServerGivePlayerWeapons(playerid, 4, 1); // Нож
				}
				if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News
				{
					ServerGivePlayerWeapons(playerid, 43, 60);
				}
				if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) //СТРИТ РЕЙСЕРЫ
				{
					ServerGivePlayerWeapons(playerid, 0, 1);
				}
				if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) //The Ballas Gang

					ServerGivePlayerWeapons(playerid, 0, 1);
			}
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) //ТРИАДЫ
			{
				ServerGivePlayerWeapons(playerid, 22, 30);
				ServerGivePlayerWeapons(playerid, 1, 1);
			}
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) //РУССКАЯ МАФИЯ
			{
				ServerGivePlayerWeapons(playerid, 22, 30);
				ServerGivePlayerWeapons(playerid, 1, 1);

			}
			if (PlayerInfo[playerid][pMember] == 30 || PlayerInfo[playerid][pLeader] == 30) // Admins
			{
				ServerGivePlayerWeapons(playerid, 5, 1);
				ServerGivePlayerWeapons(playerid, 24, 50);
				ServerGivePlayerWeapons(playerid, 41, 800);
			}
		}
	}
}

PrintSBizInfo(playerid, targetid) {
	if (IsPlayerConnected(playerid)) {
		new coordsstring[256];
		new sbiz[20];
		new ftext[10];
		if (SBizzInfo[targetid][sbLocked] == 1) { ftext = "закрыт"; } else { ftext = "открыт"; }
		if (SBizzInfo[targetid][sbMafia] == 0) sbiz = "None";
		if (SBizzInfo[targetid][sbMafia] == 5) sbiz = "La Cosa Nostra";
		if (SBizzInfo[targetid][sbMafia] == 6) sbiz = "Yakuza";
		if (SBizzInfo[targetid][sbMafia] == 13) sbiz = "Grove Street";
		if (SBizzInfo[targetid][sbMafia] == 14) sbiz = "El Coronos";
		if (SBizzInfo[targetid][sbMafia] == 15) sbiz = "Los Santos Vagos";
		if (SBizzInfo[targetid][sbMafia] == 16) sbiz = "East Side Ballas";
		if (SBizzInfo[targetid][sbMafia] == 18) sbiz = "Triads Mafia";
		if (SBizzInfo[targetid][sbMafia] == 19) sbiz = "The Rifa Gang";
		if (SBizzInfo[targetid][sbMafia] == 20) sbiz = "Russian Mafia";
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		format(coordsstring, sizeof(coordsstring), "*** %s ***", SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE, coordsstring);
		format(coordsstring, sizeof(coordsstring), " Крыша: %s", sbiz);
		SendClientMessage(playerid, COLOR_WHITE, coordsstring);
		format(coordsstring, sizeof(coordsstring), " Состояние: %s Цена входа: %d$ Деньги в бизнесе: %d$", ftext, SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1, coordsstring);
		format(coordsstring, sizeof(coordsstring), " Продукты: %d/%d", SBizzInfo[targetid][sbProducts], SBizzInfo[targetid][sbMaxProducts]);
		SendClientMessage(playerid, COLOR_GRAD2, coordsstring);
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
	}
}

PrintBizInfo(playerid, targetid) {
	if (IsPlayerConnected(playerid)) {
		new coordsstring[256];
		new fftext[10];
		new biz[20];
		if (BizzInfo[targetid][bLocked] == 1) { fftext = "закрыт"; } else { fftext = "открыт"; }
		if (BizzInfo[targetid][bMafia] == 0) biz = "None";
		if (BizzInfo[targetid][bMafia] == 5) biz = "La Cosa Nostra";
		if (BizzInfo[targetid][bMafia] == 6) biz = "Yakuza";
		if (BizzInfo[targetid][bMafia] == 13) biz = "Grove Street";
		if (BizzInfo[targetid][bMafia] == 14) biz = "El Coronos";
		if (BizzInfo[targetid][bMafia] == 15) biz = "Los Santos Vagos";
		if (BizzInfo[targetid][bMafia] == 16) biz = "East Side Ballas";
		if (BizzInfo[targetid][bMafia] == 18) biz = "Triads Mafia";
		if (BizzInfo[targetid][bMafia] == 19) biz = "The Rifa Gang";
		if (BizzInfo[targetid][bMafia] == 20) biz = "Russian Mafia";
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		format(coordsstring, sizeof(coordsstring), "*** %s ***", BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE, coordsstring);
		format(coordsstring, sizeof(coordsstring), "Cостояние: %s Цена входа: %d$ Деньги в бизнесе: %d$ Крыша: %s", fftext, BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill], biz);
		SendClientMessage(playerid, COLOR_GRAD1, coordsstring);
		format(coordsstring, sizeof(coordsstring), " Продукты: %d/%d", BizzInfo[targetid][bProducts], BizzInfo[targetid][bMaxProducts]);
		SendClientMessage(playerid, COLOR_GRAD2, coordsstring);
		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
	}
}

ShowStats(playerid, targetid) {
	if (IsPlayerConnected(playerid) && IsPlayerConnected(targetid)) {
		new cash = GetPlayerBablo(targetid);
		new atext[20];
		if (PlayerInfo[targetid][pSex] == 1) { atext = "Мужчина"; } else if (PlayerInfo[targetid][pSex] == 2) { atext = "Женщина"; }
		new otext[20];
		if (PlayerInfo[targetid][pOrigin] == 1) { otext = "Los Santos"; } else if (PlayerInfo[targetid][pOrigin] == 2) { otext = "San Fierro"; } else if (PlayerInfo[targetid][pOrigin] == 3) { otext = "Las Venturos"; }
		new ttext[21];
		if (PlayerInfo[targetid][pMember] == 0 && PlayerInfo[targetid][pLeader] < 1) { ttext = "Гражданин"; } else if (PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "LSPD"; } else if (PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "F.B.I."; } else if (PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "National Guard"; } else if (PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "МЧС"; } else if (PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "La Cosa Nostra"; } else if (PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "Yakuza"; } else if (PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "Hitman Agency"; } else if (PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "Репортёры"; } else if (PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "Taxi Cab Company"; } else if (PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "Учитель"; } else if (PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "Street Racers"; } else if (PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "Grove Street Gang"; } else if (PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "El Coronos "; } else if (PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "Los Santos Vagos"; } else if (PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "San Fierro Rifa"; } else if (PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "The Ballas Gang"; } else if (PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "Triads"; } else if (PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "Russian Mafia"; } else if (PlayerInfo[targetid][pMember] == 143 || PlayerInfo[targetid][pLeader] == 143) { ttext = "Администрация"; }
		new ftext[21];
		if (PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ftext = "МЧС"; } else if (PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ftext = "La Cosa Nostra"; } else if (PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ftext = "Yakuza"; } else if (PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "Мэрия"; } else if (PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ftext = "Лицензёры"; } else if (PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ftext = "Street Racers"; } else if (PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ftext = "Grove Street Gang"; } else if (PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ftext = "El Coronos"; } else if (PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "Los Santos Vagos"; } else if (PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "The Ballas Gang"; } else if (PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "Triads"; } else if (PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ftext = "San Fierro Rifa"; } else if (PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ftext = "Russian Mafia"; } else if (PlayerInfo[targetid][pMember] == 143 || PlayerInfo[targetid][pLeader] == 143) { ftext = "Администрация"; } else { ftext = "None"; }
		new rtext[64];
		if (PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) //PD Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Кадет"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Патрульный"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Офицер"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Инспектор"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Комиссар"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 1) { rtext = "Шериф"; } else { rtext = "Кадет"; }
		}
		else if (PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) //FBI Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Стажёр"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Агент"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Спец. Агент"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Командир"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам.Директора"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 2) { rtext = "Директор"; } else { rtext = "Стажёр"; }
		}
		else if (PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) //NG Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = " Рядовой"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Сержант"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Лейтинант"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Капитан"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Майор"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 3) { rtext = "Генерал "; }
		}
		else if (PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) {
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Фельдшер"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Реаниматор"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Спасатель"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Глав.врач"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам.Министра здравоохранения"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 4) { rtext = "Министр здравоохранения"; } else { rtext = "Фельдшер"; }
		}
		else if (PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) //La Cosa Nostra
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Соучастник"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Солдат"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Капо"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Подручный"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Консельери"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 5) { rtext = "Дон"; } else { rtext = "Соучастник"; }
		}
		else if (PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) //Yakuza
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Вакасю"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Кёдай"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Cятэйгасира"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Сайко"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Оябун-Кобун"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 6) { rtext = "Кумитё"; } else { rtext = "Вакасю"; }
		}
		else if (PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) //Hitman Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Внештатный сотрудник"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Меткий стрелок"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Агент"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Специальный Агент"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам.Директора"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 8) { rtext = "Директор"; } else { rtext = "Внештатный сотрудник"; }
		}
		else if (PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) //NR Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Стажер"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Репортёр"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Новостной редактор"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Репортер Телесети"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Редактор Телесети"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 9) { rtext = "Продюсер Телесети"; } else { rtext = "Новичок"; }
		}
		else if (PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) //Taxi Company Ranks
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Новичок"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Бомбила"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Таксист"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Опытный Таксист"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам.Управляющего"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 10) { rtext = "Управляющий"; } else { rtext = " Новичок"; }
		}
		else if (IsAnInstructor(targetid)) {
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Стажёр"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Инструктор "; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Старший Инструктор"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Менеджер"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам.Главного Инструктора"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 11) { rtext = "Главный Инструктор"; } else { rtext = " Стажёр"; }
		}
		else if (PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) //Street Race
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Новичек"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Освоившийся"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Водитель"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Опытный водитель"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Зам. Лидера"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 12) { rtext = "Лидер"; } else { rtext = "Новичек"; }
		}
		else if (PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) //Grove Street Gang
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Youngsta"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Gangsta"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Old Gangsta"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Checked Up "; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Authority"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 13) { rtext = "Босс"; } else { rtext = " Youngsta"; }
		}
		else if (PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) //Los Santos Vagos
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = " Novato"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Ordinario"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Verificado"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Autoritad"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Adjunto"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 15) { rtext = "Padre"; } else { rtext = " Novato"; }
		}
		else if (PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) // El Coronos
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Novato"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Comprobar"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Verificado"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "El Entrenador Mayor"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Adjunto"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 14) { rtext = "Padre"; } else { rtext = " Novato"; }
		}
		else if (PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) // The Ballas Gang
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Young Nigga"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Gangsta"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Old Gangsta"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Killa"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Big Brothers"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 16) { rtext = "Daddy"; } else { rtext = " Young Nigga"; }
		}
		else if (PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) // Triads
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Сей Кой Джай"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Шо Хай"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Хунг Кван"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Синг Фунг"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Фу Шан Су"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 18) { rtext = "Taй Ло"; } else { rtext = "Сей Кой Джай"; }
		}
		else if (PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) {
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Novato"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Ordinaro"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Verificado"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Autoridad"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Adjunto"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 19) { rtext = "Padre"; } else { rtext = "Novato"; }
		}
		else if (PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) // Русская Мафия
		{
			if (PlayerInfo[targetid][pRank] == 1) { rtext = "Шнырь"; } else if (PlayerInfo[targetid][pRank] == 2) { rtext = "Фраер"; } else if (PlayerInfo[targetid][pRank] == 3) { rtext = "Жиган"; } else if (PlayerInfo[targetid][pRank] == 4) { rtext = "Смотрящий"; } else if (PlayerInfo[targetid][pRank] == 5) { rtext = "Авторитет"; } else if (PlayerInfo[targetid][pRank] == 6 || PlayerInfo[targetid][pLeader] == 20) { rtext = "Главарь"; } else { rtext = " Шнырь"; }
		}
		else {
			rtext = "none";
		}
		new jtext[20];
		if (PlayerInfo[targetid][pJob] == 1) { jtext = "Детектив"; } else if (PlayerInfo[targetid][pJob] == 2) { jtext = "Юрист"; } else if (PlayerInfo[targetid][pJob] == 3) { jtext = "Дальнобойщик"; } else if (PlayerInfo[targetid][pJob] == 4) { jtext = "Наркодиллер"; } else if (PlayerInfo[targetid][pJob] == 5) { jtext = "Автоугонщик"; } else if (PlayerInfo[targetid][pJob] == 6) { jtext = "Карманник"; } else if (PlayerInfo[targetid][pJob] == 7) { jtext = "Механик"; } else if (PlayerInfo[targetid][pJob] == 9) { jtext = "Продавец оружия"; } else if (PlayerInfo[targetid][pJob] == 10) { jtext = "Продавец машин"; } else if (PlayerInfo[targetid][pJob] == 12) { jtext = "Вышибала"; } else if (PlayerInfo[targetid][pJob] == 15) { jtext = "Продавец газет"; }
		else { jtext = "None"; }
		new drank[20];
		if (PlayerInfo[targetid][pDonateRank] == 1) { drank = "Есть(1 уровня)"; } else if (PlayerInfo[targetid][pDonateRank] == 2) { drank = "Есть(2 уровня)"; } else { drank = "Нет"; }
		new married[20];
		if (PlayerInfo[targetid][pMarried] == 0) { married = "Нет"; } else { married = "Да"; }
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new robk[10];
		if (PlayerInfo[targetid][pRobKey] == 0) robk = "Нет";
		else robk = "Имеется";
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new tkmats = PlayerInfo[targetid][pTkMats];
		new tkdrugs = PlayerInfo[targetid][pTkDrugs];
		new exp = PlayerInfo[targetid][pExp];
		new account = PlayerInfo[targetid][pAccount];
		new warns = PlayerInfo[targetid][pWarns];
		new mats1 = PlayerInfo[targetid][ptMats];
		new drugs1 = PlayerInfo[targetid][ptDrugs];
		new vigovors = PlayerInfo[targetid][pFWarns];
		new ptime = PlayerInfo[targetid][pConnectTime];
		new warrests = PlayerInfo[targetid][pWantedDeaths];
		new crimes = PlayerInfo[targetid][pCrimes];
		new nxtlevel = PlayerInfo[targetid][pLevel] + 1;
		new expamount = nxtlevel * levelexp;
		new level = PlayerInfo[targetid][pLevel];
		new kills = PlayerInfo[targetid][pKills];
		new deaths = PlayerInfo[targetid][pDeaths];
		new clock[20];
		if (PlayerInfo[targetid][pClock] == 0) { clock = "Нет"; } else { clock = "Есть"; }
		new playerip[256];
		GetPlayerIp(targetid, playerip, sizeof(playerip));
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		new Float:px, Float:py, Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new str[128];
		new sctring[2000];
		format(str, sizeof(str), "{33FFCC}Аккаунт:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Уровень: {ffffff}%d\n", level);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Exp: {ffffff}%d/%d\n", exp, expamount);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}VIP: {ffffff}%s\n", drank);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Часов в игре: {ffffff}%d\n", ptime);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Пол: {ffffff}%s\n", atext);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Женат/Замужем: {ffffff}%s\n", married);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Кол-во предупреждений: {ffffff}%d/3\n", warns);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Кол-во блокировок: {ffffff}%d/3\n\n", PlayerInfo[targetid][pBlockeds]);
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Банда/Мафия/Организация:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Фракция: {ffffff}%s\n", ttext);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Ранг: {ffffff}%s\n", rtext);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Кол-Во Выговоров: {ffffff}%d/3\n\n", vigovors);
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Финансы:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Наличные: {ffffff}%d\n", cash);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Банк: {ffffff}%d\n\n", account);
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Трудоустройство:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Работа: {ffffff}%s\n", jtext);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Зарплата: {ffffff}-\n\n");
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Криминал:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Всего убийств: {ffffff}%d\n", kills);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Всего смертей: {ffffff}%d\n", deaths);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Преступлений: {ffffff}%d\n", crimes);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Уровень розыска: {ffffff}%d\n", PlayerInfo[targetid][pWanted]);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Смертей с розыском: {ffffff}%d\n\n", warrests);
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Вещи:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Часы: {ffffff}%s\n", clock);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Ключи от КПЗ: {ffffff}%s\n\n", robk);
		strcat(sctring, str);
		format(str, sizeof(str), "{33FFCC}Запрещённое:{ffffff}\n");
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Наркотики: {ffffff}%d\n", drugs);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Материалы: {ffffff}%d\n", mats);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Наркотики на складе: {ffffff}%d\n", mats1);
		strcat(sctring, str);
		format(str, sizeof(str), "» {ffdb58}Материалы на складе: {ffffff}%d\n", drugs1);
		strcat(sctring, str);
		if (IsACop(targetid)) {
			format(str, sizeof(str), "» {ffdb58}Конфискованные наркотики: {ffffff}%d\n", tkdrugs);
			strcat(sctring, str);
			format(str, sizeof(str), "» {ffdb58}Конфискованные материалы: {ffffff}%d", tkmats);
			strcat(sctring, str);
		}
		format(str, sizeof(str), "{ffdb58}Статистика: {ffffff}%s", name);
		ShowPlayerDialog(playerid, 112, DIALOG_STYLE_MSGBOX, str, sctring, "Закрыть", "");
	}
}

SetPlayerToTeamColor(playerid) {
	if (IsPlayerConnected(playerid) && !IsPlayerNPC(playerid)) {
		SetPlayerColor(playerid, 0xFFFFFF00);
	}
}

GameModeInitExitFunc() {
	new string[128];
	format(string, sizeof(string), "~r~RESTART");
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i, 1460.0, -1324.0, 287.2); //    координата камеры, где она стоит
			SetPlayerCameraLookAt(i, 1374.5, -1291.1, 239.0); // куда камера смотрит, ее координата
			SavePlayer(i);
		}
	}
	SetTimer("GameModeExitFunc", 8000, 0);
	return true;
}

forward GameModeExitFunc();
public GameModeExitFunc() {
	KillTimer(synctimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(checkgastimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(reclamatimer);
	for (new i = 0; i < GetMaxPlayers(); i++) {
		KillTimer(blinks[i]);
		DestroyObject(arrow[i]);
	}
	GameModeExit();
}

GetInitials(playerid) {
	if (IsPlayerConnected(playerid)) {
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new name12[2][128];
		split(name, name12, '_');
		strmid(firstname[playerid], name12[0], 0, strlen(name12[0]), 255);
		strmid(secondname[playerid], name12[1], 0, strlen(name12[1]), 255);
		return true;
	}
	return false;
}

LoadStuff() {
	new arrCoords[14][64];
	new strFromFile2[256];
	new File: file = fopen("[logs]/stuff.ini", io_read);
	if (file) {
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		Treasury = strval(arrCoords[4]);
		CopSal = strval(arrCoords[5]);
		FbiSal = strval(arrCoords[6]);
		NGSal = strval(arrCoords[7]);
		MedSal = strval(arrCoords[8]);
		SwatSal = strval(arrCoords[9]);
		ReportSal = strval(arrCoords[10]);
		PolSal = strval(arrCoords[11]);
		LicSal = strval(arrCoords[12]);
		NonJobSal = strval(arrCoords[13]);
		fclose(file);
		if (Security == 0 || Security == 1) {} else {
			GameModeExit();
		}
	} else {
		GameModeExit();
	}
	return true;
}

SaveStuff() {
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", Jackpot, Tax, TaxValue, Security, Treasury, CopSal, FbiSal, NGSal, MedSal, SwatSal, ReportSal, PolSal, LicSal, NonJobSal);
	new File: file2 = fopen("[logs]/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	new iniFile = ini_openFile("stuff.ini");
	ini_setInteger(iniFile, "House/Property", sizeof(HouseInfo));
	ini_closeFile(iniFile);
	return true;
}

LoadCK() {
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("[logs]/ck.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(CKInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
				idx, CKInfo[idx][cUsed], CKInfo[idx][cSendername], CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return true;
}

LoadPapers() {
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("[logs]/papers.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(PaperInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			PaperInfo[idx][PaperUsed] = strval(arrCoords[0]);
			strmid(PaperInfo[idx][PaperMaker], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(PaperInfo[idx][PaperTitle], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(PaperInfo[idx][PaperText1], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(PaperInfo[idx][PaperText2], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(PaperInfo[idx][PaperText3], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(PaperInfo[idx][PaperText4], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(PaperInfo[idx][PaperText5], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(PaperInfo[idx][PaperText6], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			strmid(PaperInfo[idx][PaperText7], arrCoords[9], 0, strlen(arrCoords[9]), 255);
			PaperInfo[idx][SafeSaving] = strval(arrCoords[10]);
			printf("Paper:%d Used: %d Maker:%s Title: %s Text1: %s Text2: %s Text3: %s Text4: %s Text5: %s Text6: %s Text7: %s",
				idx, PaperInfo[idx][PaperUsed], PaperInfo[idx][PaperMaker], PaperInfo[idx][PaperTitle], PaperInfo[idx][PaperText1], PaperInfo[idx][PaperText2], PaperInfo[idx][PaperText3], PaperInfo[idx][PaperText4], PaperInfo[idx][PaperText5], PaperInfo[idx][PaperText6], PaperInfo[idx][PaperText7]);
			idx++;
		}
		fclose(file);
	}
	return true;
}

SavePapers() {
	new idx;
	new File: file2; {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%d\n",
			PaperInfo[idx][PaperUsed],
			PaperInfo[idx][PaperMaker],
			PaperInfo[idx][PaperTitle],
			PaperInfo[idx][PaperText1],
			PaperInfo[idx][PaperText2],
			PaperInfo[idx][PaperText3],
			PaperInfo[idx][PaperText4],
			PaperInfo[idx][PaperText5],
			PaperInfo[idx][PaperText6],
			PaperInfo[idx][PaperText7],
			PaperInfo[idx][SafeSaving]);
		if (idx == 0) {
			file2 = fopen("[logs]/papers.cfg", io_write);
		} else {
			file2 = fopen("[logs]/papers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}

SaveMaterials() {
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d", medwarehouse);
	new File: file2 = fopen("materials.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

LoadProperty() {
	new arrCoords[36][64];
	new strFromFile2[256];
	new File: file = fopen("House/property.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(HouseInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmourx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmoury] = strval(arrCoords[10]);
			HouseInfo[idx][hArmourz] = strval(arrCoords[11]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[13]);
			HouseInfo[idx][hHel] = strval(arrCoords[14]);
			HouseInfo[idx][hArm] = strval(arrCoords[15]);
			HouseInfo[idx][hInt] = strval(arrCoords[16]);
			HouseInfo[idx][hLock] = strval(arrCoords[17]);
			HouseInfo[idx][hOwned] = strval(arrCoords[18]);
			HouseInfo[idx][hRooms] = strval(arrCoords[19]);
			HouseInfo[idx][hRent] = strval(arrCoords[20]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[21]);
			HouseInfo[idx][hTakings] = strval(arrCoords[22]);
			HouseInfo[idx][hVec] = strval(arrCoords[23]);
			if (HouseInfo[idx][hVec] == 457) {
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[24]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[25]);
			HouseInfo[idx][hDate] = strval(arrCoords[26]);
			HouseInfo[idx][hId] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hKoleso] = strval(arrCoords[29]);
			HouseInfo[idx][hSpoiler] = strval(arrCoords[30]);
			HouseInfo[idx][hBamper] = strval(arrCoords[31]);
			HouseInfo[idx][hBamper2] = strval(arrCoords[32]);
			HouseInfo[idx][hPaintjob] = strval(arrCoords[33]);
			HouseInfo[idx][hNitro] = strval(arrCoords[34]);
			HouseInfo[idx][hGidravlika] = strval(arrCoords[35]);
			printf("HouseInfo:%d Owner:%s hTakings %d hVec %d", idx, HouseInfo[idx][hOwner], HouseInfo[idx][hTakings], HouseInfo[idx][hVec]);
			idx++;
		}
		fclose(file);
	}
	return true;
}
LoadFlats() {
	new arrCoords[18][64];
	new strFromFile2[256];
	new File: file = fopen("flats.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(FlatsInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			FlatsInfo[idx][fOwned] = strval(arrCoords[0]);
			strmid(FlatsInfo[idx][fOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			FlatsInfo[idx][fEntrancex] = floatstr(arrCoords[2]);
			FlatsInfo[idx][fEntrancey] = floatstr(arrCoords[3]);
			FlatsInfo[idx][fEntrancez] = floatstr(arrCoords[4]);
			FlatsInfo[idx][fExitx] = floatstr(arrCoords[5]);
			FlatsInfo[idx][fExity] = floatstr(arrCoords[6]);
			FlatsInfo[idx][fExitz] = floatstr(arrCoords[7]);
			FlatsInfo[idx][fInt] = strval(arrCoords[8]);
			FlatsInfo[idx][fVirtWorld] = strval(arrCoords[9]);
			FlatsInfo[idx][fValue] = strval(arrCoords[10]);
			FlatsInfo[idx][fLock] = strval(arrCoords[11]);
			FlatsInfo[idx][fRent] = strval(arrCoords[12]);
			FlatsInfo[idx][fRentabil] = strval(arrCoords[13]);
			FlatsInfo[idx][fTakings] = strval(arrCoords[14]);
			FlatsInfo[idx][fDate] = strval(arrCoords[15]);
			FlatsInfo[idx][fLevel] = strval(arrCoords[16]);
			FlatsInfo[idx][fID] = strval(arrCoords[17]);
			printf("ID: [%d] Квартира(Порядковый номер): [%d] | Владелец: [%s]", FlatsInfo[idx][fID], idx, FlatsInfo[idx][fOwner]);
			idx++;
		}
		fclose(file);
	}
	return true;
}
LoadObwyak() {
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("obw/obwyak.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(ObwyakInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			ObwyakInfo[idx][oGangMoney] = strval(arrCoords[0]);
			ObwyakInfo[idx][oGangDrugs] = strval(arrCoords[1]);
			ObwyakInfo[idx][oGangMats] = strval(arrCoords[2]);
			printf("ObwyakInfo:%d Деньги:%d Нарко:%d Маты:%d.\n", idx, ObwyakInfo[idx][oGangMoney], ObwyakInfo[idx][oGangDrugs], ObwyakInfo[idx][oGangMats]);
			idx++;
		}
		fclose(file);
	}
	return true;
}

LoadBizz() {
	new arrCoords[20][64];
	new strFromFile2[256];
	new File: file = fopen("[bizz]/bizz.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(BizzInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[3]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[5]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[8]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[9]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[10]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[11]);
			BizzInfo[idx][bTill] = strval(arrCoords[12]);
			BizzInfo[idx][bLocked] = strval(arrCoords[13]);
			BizzInfo[idx][bInterior] = strval(arrCoords[14]);
			BizzInfo[idx][bProducts] = strval(arrCoords[15]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[16]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[17]);
			BizzInfo[idx][bWorld] = strval(arrCoords[18]);
			BizzInfo[idx][bMafia] = strval(arrCoords[19]);
			printf("BizzInfo:%d Владелец:%s Сообщение:%s Entfee:%d Till:%d Продукты:%d/%d Интерьер:%d.\n",
				idx,
				BizzInfo[idx][bOwner],
				BizzInfo[idx][bMessage],
				BizzInfo[idx][bEntranceCost],
				BizzInfo[idx][bTill],
				BizzInfo[idx][bProducts],
				BizzInfo[idx][bMaxProducts],
				BizzInfo[idx][bInterior]);
			idx++;
		}
		fclose(file);
	}
	return true;
}

LoadSBizz() {
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("[sbizz]/sbizz.cfg", io_read);
	if (file) {
		new idx;
		while (idx < sizeof(SBizzInfo)) {
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[3]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[6]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[7]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[8]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[9]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[10]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[11]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[12]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[14]);
			SBizzInfo[idx][sbMafia] = strval(arrCoords[15]);
			printf("SBizzInfo:%d Владелец:%s Сообщение:%s Entfee:%d Till:%d Продукты:%d/%d Цена:%d.\n",
				idx,
				SBizzInfo[idx][sbOwner],
				SBizzInfo[idx][sbMessage],
				SBizzInfo[idx][sbEntranceCost],
				SBizzInfo[idx][sbTill],
				SBizzInfo[idx][sbProducts],
				SBizzInfo[idx][sbMaxProducts],
				SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}
	return true;
}

public OnGameModeInit() {
	LoadProperty();
	LoadFlats();
	LoadObwyak();
	LimitPlayerMarkerRadius(75.0);
	TextDraw4 = TextDrawCreate(20.000000, 313.000000, "Fuel:");
	TextDraw2 = TextDrawCreate(20.000000, 321.000000, "Speed:");
	TextDrawLetterSize(TextDraw0, 0.399999, 1.010000);
	TextDrawLetterSize(TextDraw2, 0.399999, 1.010000);
	TextDrawLetterSize(TextDraw4, 0.399999, 1.010000);
	TextDrawFont(TextDraw2, 1);
	TextDrawFont(TextDraw4, 1);
	TextDrawBackgroundColor(TextDraw2, COLOR_BLACK);
	TextDrawBackgroundColor(TextDraw4, COLOR_BLACK);
	TextDrawColor(TextDraw2, COLOR_LIGHTBLUE);
	TextDrawColor(TextDraw4, COLOR_LIGHTBLUE);
	TextDrawSetOutline(TextDraw2, 1);
	TextDrawSetOutline(TextDraw4, 1);
	TextDrawSetProportional(TextDraw2, 1);
	TextDrawSetProportional(TextDraw4, 1);
	TextDrawSetShadow(TextDraw2, 1);
	TextDrawSetShadow(TextDraw4, 1);
	SetTimer("AvtoRestart", 1000, true);
	SetTimer("PredAvtoRestart", 1000, true);
	for (new i = 0; i < GetMaxPlayers(); i++) //создаём отдельные текстдравы для каждого игрока(Тоесть жизни авто скорость и бензин)
	{
		TextDraw1[i] = TextDrawCreate(60.000000, 313.000000, "0 %");
		TextDraw3[i] = TextDrawCreate(80.000000, 321.000000, "0 km/h");
		TextDrawBackgroundColor(TextDraw1[i], COLOR_BLACK);
		TextDrawBackgroundColor(TextDraw3[i], COLOR_BLACK);
		TextDrawLetterSize(TextDraw1[i], 0.399999, 1.010000);
		TextDrawLetterSize(TextDraw3[i], 0.399999, 1.010000);
		TextDrawFont(TextDraw1[i], 1);
		TextDrawFont(TextDraw3[i], 1);
		TextDrawColor(TextDraw1[i], COLOR_WHITE);
		TextDrawColor(TextDraw3[i], COLOR_WHITE);
		TextDrawSetOutline(TextDraw1[i], 1);
		TextDrawSetOutline(TextDraw3[i], 1);
		TextDrawSetProportional(TextDraw1[i], 1);
		TextDrawSetProportional(TextDraw3[i], 1);
		TextDrawSetShadow(TextDraw1[i], 1);
		TextDrawSetShadow(TextDraw3[i], 1);
	}
	SetWeather(1);
	UsePlayerPedAnims();
	DisableInteriorEnterExits(); // Уберает стандартные пикапы
	EnableStuntBonusForAll(0); //Уберает бонус за трюки 0 - отключить, 1 - включить.
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF}, чтобы пройти регистрацию.", COLOR_YELLOW, -2111.11, -448.05, 38.73, 5, 0);
	for (new i = 0; i < 23; i++) {
		MafiaZoneRandom[i] = -1;
		MafiaZoneStatus[i] = -1;
	}
	for (new i = 0; i < sizeof(CreatedCars); i++) {
		CreatedCars[i] = 0;
	}
	for (new i = 0; i <= sizeof(Peds) - 1; i++) {
		AddPlayerClass(Peds[i][0], 1958.3783, 1343.1572, 1100.3746, 269.1425, -1, -1, -1, -1, -1, -1);
	}
	print("cars1");
	for (new h = 0; h < sizeof(HouseInfo); h++) // House Car System
	{
		new housespawncar1,
		Text3D:vehicle3Dtext10000;
		hCar[h] = AddStaticVehicleEx(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 60000);
		new temp[MAX_STRING];
		format(temp, sizeof(temp), "", h + 100);
		vehicle3Dtext10000 = Create3DTextLabel(temp, 0xF6F6F6F6, 0.77, 0.77, 0.77, 17.0, 0);
		Attach3DTextLabelToVehicle(vehicle3Dtext10000, housespawncar1, 0.0, 0.0, 1.1);
		SetVehicleHealth(h, 1000);
		gCarLock[h + 1] = 1;
	}
	print("cars");
	AddStaticVehicleEx(carselect[14], 1279.4, -1337.0, 13.5, 1.0, -1, -1, -1); //long
	CreateObject(2970, -2531.7299804688, 53.5, 7.5999999046326, 0, 0, 0);
	for (new i = 0; i < sizeof(HouseInfo); i++) // House Car System
	{
		AddVehicleComponent(hCar[i], HouseInfo[i][hKoleso]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hBamper]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hBamper2]);
		ChangeVehiclePaintjob(hCar[i], HouseInfo[i][hPaintjob]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hNitro]);
		AddVehicleComponent(hCar[i], HouseInfo[i][hGidravlika]);
	}
	//=============================[Работа Уборщик улиц]============================
	Create3DTextLabel("{FFFFFF}Уборщик Улиц\nДля начала Работы введите {00C0FF}/clean{FFFFFF}", COLOR_GREEN, -2483.7781, 781.8073, 35.1719, 80.0, 0, 0);
	CreateObject(4857, -2482.1000976563, 774.39996337891, 36.5, 0, 0, 90); //object(drvin_projhut) (1)
	CreateObject(16001, -2473.1000976563, 775.5, 34.200000762939, 0, 0, 180); //object(snpedmtsp1_las) (1)
	//=============================[Heal]===========================================
	Create3DTextLabel("{FFFFFF}Чтобы вылечиться\nВведите {00C0FF}/healme{FFFFFF}", COLOR_GREEN, 2029.5566, -1404.6027, 17.2508, 10.0, 0, 0);
	Create3DTextLabel("{FFFFFF}Чтобы вылечиться\nВведите {00C0FF}/healme{FFFFFF}", COLOR_GREEN, 1173.2023, -1323.3982, 15.3950, 10.0, 0, 0);
	//====================================[grove str]===============================
	CreateObject(970, 2477.3999023438, -1722.0100097656, 13.10000038147, 0, 0, 359);
	CreateObject(970, 2481.5, -1722.0100097656, 13.89999961853, 0, 0, 358.99475097656);
	CreateObject(970, 2477.3994140625, -1722.009765625, 13.89999961853, 0, 0, 358.99475097656);
	CreateObject(970, 2481.5, -1722.009765625, 13.10000038147, 0, 0, 358.99475097656);
	//====================================[шахтёр]==================================
	CreateObject(7191, -1901, -1640.69921875, 5, 270, 180.29704284668, 90.505798339844);
	CreateObject(7191, -1901.099609375, -1637.099609375, 5, 270, 174.17150878906, 84.924072265625);
	CreateObject(7191, -1902.7998046875, -1639, 5, 270, 180, 180);
	CreateObject(5153, -1900.69921875, -1639.5, 27.10000038147, 0, 23.999633789063, 0);
	CreateObject(5153, -1900.6999511719, -1638.1999511719, 27.10000038147, 0, 23.999633789063, 0);
	CreateObject(5153, -1901.0999755859, -1641, 21.799999237061, 90, 166.38427734375, 217.61529541016);
	CreateObject(5153, -1901.0999755859, -1641, 23.89999961853, 90, 192.02313232422, 191.97094726563);
	CreateObject(5153, -1901.0999755859, -1641, 26, 90, 173.66217041016, 210.32653808594);
	CreateObject(5153, -1901.0999755859, -1641, 28.10000038147, 90, 171.52404785156, 212.45910644531);
	CreateObject(5153, -1903.3000488281, -1638.9000244141, 21.799999237061, 90, 185.21534729004, 108.76779174805);
	CreateObject(5153, -1903.3000488281, -1638.9000244141, 23.89999961853, 90, 184.5463104248, 109.4313659668);
	CreateObject(5153, -1903.3000488281, -1638.9000244141, 26, 90, 184.60627746582, 109.36590576172);
	CreateObject(5153, -1903.3000488281, -1638.9000244141, 28.10000038147, 90, 184.36218261719, 109.6044921875);
	CreateObject(9131, -1903.1999511719, -1640.9000244141, 21.89999961853, 0, 0, 90);
	CreateObject(9131, -1903.1999511719, -1640.9000244141, 24.10000038147, 0, 0, 90);
	CreateObject(9131, -1903.1999511719, -1640.9000244141, 26.200000762939, 0, 0, 90);
	CreateObject(9131, -1903.1999511719, -1640.9000244141, 28.39999961853, 0, 0, 90);
	CreateObject(5153, -1901.1999511719, -1636.6999511719, 21.799999237061, 90, 184.30581665039, 19.237091064453);
	CreateObject(5153, -1901.1999511719, -1636.6999511719, 23.89999961853, 90, 184.3505859375, 19.18212890625);
	CreateObject(5153, -1901.1999511719, -1636.6999511719, 26, 90, 175.826171875, 27.706573486328);
	CreateObject(5153, -1901.1999511719, -1636.6999511719, 28, 90, 175.77575683594, 27.75146484375);
	CreateObject(9131, -1903.1999511719, -1636.8000488281, 21.89999961853, 0, 0, 0);
	CreateObject(9131, -1903.1999511719, -1636.8000488281, 24.10000038147, 0, 0, 0);
	CreateObject(9131, -1903.1999511719, -1636.8000488281, 26.200000762939, 0, 0, 0);
	CreateObject(9131, -1903.1999511719, -1636.8000488281, 28.39999961853, 0, 0, 0);
	CreateObject(9131, -1898.9000244141, -1636.8000488281, 21.89999961853, 0, 0, 180);
	CreateObject(9131, -1898.9000244141, -1636.8000488281, 24.10000038147, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.9000244141, -1636.8000488281, 26.299999237061, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.9000244141, -1636.8000488281, 28.39999961853, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.8994140625, -1640.8994140625, 21.89999961853, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.9000244141, -1640.9000244141, 24.10000038147, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.9000244141, -1640.9000244141, 26.200000762939, 0, 0, 179.99450683594);
	CreateObject(9131, -1898.9000244141, -1640.9000244141, 28.39999961853, 0, 0, 179.99450683594);
	CreateObject(5153, -1898.69921875, -1638.8994140625, 28.200000762939, 90, 183.87551879883, 110.08013916016);
	CreateObject(5153, -1900.9000244141, -1639.5, 29.10000038147, 0, 23.999633789063, 0);
	CreateObject(5153, -1901.3000488281, -1639.5, 29.10000038147, 0, 23.999633789063, 0);
	CreateObject(5153, -1901.3000488281, -1638.0999755859, 29.10000038147, 0, 23.999633789063, 0);
	CreateObject(5153, -1900.9000244141, -1638.1999511719, 29.10000038147, 0, 23.999633789063, 0);
	CreateObject(9131, -1901.9000244141, -1636.9000244141, 29.10000038147, 0, 90, 0);
	CreateObject(9131, -1900, -1636.9000244141, 29.10000038147, 0, 90, 0);
	CreateObject(9131, -1903.0999755859, -1639.5999755859, 29.10000038147, 0, 90, 89.999816894531);
	CreateObject(9131, -1903.0999755859, -1638.0999755859, 29.10000038147, 0, 90, 90);
	CreateObject(9131, -1901.8000488281, -1640.8000488281, 29.10000038147, 90, 192.92098999023, 257.07904052734);
	CreateObject(9131, -1900.1999511719, -1640.8000488281, 29.10000038147, 90, 192.919921875, 257.07458496094);
	CreateObject(9131, -1898.9000244141, -1639.5, 29.10000038147, 90, 191.77824401855, 348.22174072266);
	CreateObject(9131, -1898.9000244141, -1638.0999755859, 29.10000038147, 90, 191.77734375, 348.21716308594);
	CreateObject(10244, -1896.1999511719, -1642.8000488281, 20.5, 0, 0, 92);
	CreateObject(7191, -1899.19921875, -1639, 1.2000000476837, 270, 179.99963378906, 179.99963378906);
	CreateObject(5153, -1898.9000244141, -1638.5, 21.799999237061, 90, 176.34619140625, 117.60406494141);
	CreateObject(5153, -1898.9000244141, -1638.5, 22.799999237061, 90, 183.69140625, 110.25332641602);
	CreateObject(7191, -1901.099609375, -1637.099609375, -38.5, 90, 174.16625976563, 96.668823242188);
	CreateObject(7191, -1901, -1640.69921875, -38.5, 90, 181.08764648438, 88.79638671875);
	CreateObject(7191, -1902.7998046875, -1639, -38.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(7191, -1899.19921875, -1639, -35, 90, 180.00549316406, 179.98352050781);
	CreateObject(7191, -1901.69921875, -1638.8994140625, -61.299999237061, 0, 90, 270);
	CreateObject(1698, -1901.6999511719, -1638.8000488281, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1900.599609375, -1638.7998046875, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1899.5, -1638.8994140625, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1898.19921875, -1638.8994140625, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1896.8994140625, -1638.8994140625, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1895.6999511719, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1894.5999755859, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1893.3000488281, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1892, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1890.8000488281, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1889.8000488281, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1888.5, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1887.3000488281, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1886.0999755859, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1884.9000244141, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1883.5999755859, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1882.3000488281, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1881.0999755859, -1638.9000244141, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1880.099609375, -1638.8994140625, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1898.5, -1637.2998046875, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(7191, -1898.5, -1637.19921875, -59, 0, 0, 270);
	CreateObject(1698, -1897.1999511719, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1895.9000244141, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1894.5999755859, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1893.2998046875, -1637.2998046875, -59.5, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1892, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1890.6999511719, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1889.5999755859, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1888.3000488281, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1887, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1885.6999511719, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1884.4000244141, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1883.099609375, -1637.2998046875, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1882, -1637.3000488281, -59.5, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1880.69921875, -1637.2998046875, -59.5, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1880.1999511719, -1637.3000488281, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(7191, -1899, -1640.69921875, -59.200000762939, 0, 0, 270);
	CreateObject(1698, -1898.4000244141, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1897.0999755859, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1895.8000488281, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1894.5, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1893.1999511719, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1891.9000244141, -1640.5999755859, -59.5, 90, 0, 179.98352050781);
	CreateObject(1698, -1890.5999755859, -1640.5999755859, -59.5, 90, 180, 359.98352050781);
	CreateObject(1698, -1889.3000488281, -1640.5999755859, -59.5, 90, 179.99450683594, 359.97802734375);
	CreateObject(1698, -1888, -1640.5999755859, -59.5, 90, 179.99450683594, 359.97802734375);
	CreateObject(1698, -1886.6999511719, -1640.5999755859, -59.5, 90, 179.99450683594, 359.97802734375);
	CreateObject(1698, -1885.4000244141, -1640.5999755859, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1884.099609375, -1640.599609375, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1882.8000488281, -1640.5999755859, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1881.5, -1640.599609375, -59.5, 90, 180.00549316406, 359.9670715332);
	CreateObject(1698, -1880.1999511719, -1640.5999755859, -59.5, 90, 179.99450683594, 359.97805786133);
	CreateObject(1698, -1898.19921875, -1638.8994140625, -57.700000762939, 0, 180, 0);
	CreateObject(1698, -1896.9000244141, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1895.5999755859, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1894.3000488281, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1893, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1891.6999511719, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1890.5, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1889.1999511719, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1888, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1886.6999511719, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1885.4000244141, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1884.0999755859, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1882.7998046875, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1881.5, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1880.1999511719, -1639.0999755859, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1878.9000244141, -1640.5999755859, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1877.5999755859, -1640.5999755859, -59.5, 90, 179.99450683594, 359.97805786133);
	CreateObject(1698, -1879, -1637.3000488281, -59.400001525879, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1877.6999511719, -1637.3000488281, -59.400001525879, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1876.3994140625, -1637.2998046875, -59.400001525879, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1876.3994140625, -1640.599609375, -59.5, 90, 180.00549316406, 359.9670715332);
	CreateObject(1698, -1879.3994140625, -1639.099609375, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1878.6999511719, -1639.0999755859, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1878, -1639.0999755859, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1877.3000488281, -1639.0999755859, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1876.599609375, -1639.099609375, -61.099998474121, 0, 0, 0);
	CreateObject(1698, -1878.8994140625, -1639.099609375, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1877.69921875, -1639.099609375, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1876.4000244141, -1639, -57.700000762939, 0, 179.99450683594, 0);
	CreateObject(1698, -1875.6999511719, -1641.1999511719, -59.5, 90, 185.73919677734, 264.26092529297);
	CreateObject(1698, -1875.6999511719, -1642.3000488281, -59.5, 90, 187.97314453125, 262.02142333984);
	CreateObject(1698, -1875.6999511719, -1643.5999755859, -59.5, 90, 186.34075927734, 263.64831542969);
	CreateObject(1698, -1875.6999511719, -1644.9000244141, -59.5, 90, 184.56207275391, 265.42150878906);
	CreateObject(1698, -1875.6999511719, -1646.0999755859, -59.5, 90, 185.73486328125, 264.2431640625);
	CreateObject(1698, -1875.6999511719, -1636.6999511719, -59.5, 90, 185.15081787109, 264.84362792969);
	CreateObject(1698, -1875.6999511719, -1635.4000244141, -59.5, 90, 184.77618408203, 265.21276855469);
	CreateObject(1698, -1875.6999511719, -1634.0999755859, -59.5, 90, 184.56420898438, 265.41381835938);
	CreateObject(1698, -1875.6999511719, -1632.9000244141, -59.5, 90, 175.69116210938, 274.28143310547);
	CreateObject(1698, -1875.6999511719, -1631.6999511719, -59.5, 90, 184.36706542969, 265.59997558594);
	CreateObject(6959, -1875.5999755859, -1641.9000244141, -61, 0, 0, 0);
	CreateObject(18326, -1791.7998046875, -1629.099609375, -47.900001525879, 332.99560546875, 0, 285.99609375);
	CreateObject(1698, -1875, -1646.5, -59.5, 90, 180.00549316406, 359.9670715332);
	CreateObject(1698, -1873.6999511719, -1646.5, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1872.5, -1646.5, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1871.3000488281, -1646.5, -59.5, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1870.1999511719, -1646.5, -59.5, 90, 179.99450683594, 359.97802734375);
	CreateObject(1698, -1868.9000244141, -1646.5, -59.400001525879, 90, 179.99450683594, 359.97805786133);
	CreateObject(1698, -1875, -1631.1999511719, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1873.6999511719, -1631.1999511719, -59.5, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1872.4000244141, -1631.1999511719, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1871.0999755859, -1631.1999511719, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1869.8000488281, -1631.1999511719, -59.5, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1868.5, -1631.1999511719, -59.099998474121, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1867.3000488281, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1868.3000488281, -1646.5, -56.200000762939, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1867, -1646.5, -56.200000762939, 90, 179.99450683594, 359.97805786133);
	CreateObject(1698, -1875.5999755859, -1643.4000244141, -57.700000762939, 45, 180, 270);
	CreateObject(1698, -1875.5999755859, -1644.6999511719, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1645.9000244141, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1642.0999755859, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1641.1999511719, -57.700000762939, 44.994506835938, 179.99450683594, 269.99996948242);
	CreateObject(1698, -1875.5999755859, -1636.6999511719, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1635.5, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1634.1999511719, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1633.0999755859, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1875.5999755859, -1631.9000244141, -57.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1637.9000244141, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1639.1999511719, -56.700000762939, 44.994506835938, 179.99450683594, 269.99996948242);
	CreateObject(1698, -1874.5999755859, -1639.9000244141, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1641.1999511719, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1642.5, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1643.8000488281, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1645, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1645.9000244141, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1636.5999755859, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1635.3000488281, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1634.0999755859, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1632.9000244141, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.5999755859, -1631.9000244141, -56.700000762939, 44.994506835938, 179.99450683594, 270);
	CreateObject(1698, -1874.9000244141, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1872.3000488281, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1873.5999755859, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1871, -1631.1999511719, -56.200000762939, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1869.8000488281, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1868.5, -1631.1999511719, -56.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1866, -1631.1999511719, -56, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1864.9000244141, -1631.1999511719, -55.200000762939, 90, 179.99450683594, 179.99450683594);
	CreateObject(1698, -1874.8000488281, -1646.5, -56.200000762939, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1873.5, -1646.5, -56.200000762939, 90, 179.99450683594, 359.97802734375);
	CreateObject(1698, -1872.1999511719, -1646.5, -56.200000762939, 90, 180.00549316406, 359.9670715332);
	CreateObject(1698, -1870.9000244141, -1646.5, -56.200000762939, 90, 179.99450683594, 359.97805786133);
	CreateObject(1698, -1869.5999755859, -1646.5, -56.200000762939, 90, 180.00549316406, 359.96704101563);
	CreateObject(1698, -1872.6999511719, -1645.4000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872.6999511719, -1642.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872.6999511719, -1639.4000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872.6999511719, -1636.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872.6999511719, -1633, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1871.3000488281, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1870.5999755859, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1869.9000244141, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1869.1999511719, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1868.5, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.8000488281, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.0999755859, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866.0999755859, -1632.3000488281, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1865.099609375, -1632.2998046875, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1872, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1871.3000488281, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1870.5999755859, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1869.9000244141, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1869.1999511719, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1868.5999755859, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.3000488281, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1864.6999511719, -1635.5, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1871.4000244141, -1638.5999755859, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1870.4000244141, -1638.5999755859, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1869.0999755859, -1638.5999755859, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.8000488281, -1638.5999755859, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866.6999511719, -1638.5999755859, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1865.3994140625, -1638.599609375, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1864, -1631.1999511719, -55.400001525879, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1867.5999755859, -1631.1999511719, -58.099998474121, 90, 180.00549316406, 179.98352050781);
	CreateObject(1698, -1871.4000244141, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1870.0999755859, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1868.9000244141, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.6999511719, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866.5, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1865.1999511719, -1641.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1871.4000244141, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1870.0999755859, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1868.8000488281, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1867.5, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866.1999511719, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1865.5, -1645.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1866.1999511719, -1646.5, -55.599998474121, 90, 180.00549316406, 359.96704101563);
	CreateObject(867, -1868.0999755859, -1635.3000488281, -58.5, 0, 327, 358);
	CreateObject(867, -1868.599609375, -1644.099609375, -57.799999237061, 0, 313, 357.98950195313);
	CreateObject(1698, -1863.9000244141, -1632.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1863.9000244141, -1634.1999511719, -55.400001525879, 0, 179.99450683594, 0);
	CreateObject(1698, -1864.5, -1637.9000244141, -55.400001525879, 0, 179.99450683594, 0);
	floorlift[0] = CreateObject(1698, -1900.1999511719, -1638.9000244141, 23.89999961853, 0, 0, 0);
	floorlift[1] = CreateObject(1698, -1901.4000244141, -1638.9000244141, 23.89999961853, 0, 0, 0);
	floorlift[2] = CreateObject(1698, -1902.0999755859, -1638.9000244141, 23.89999961853, 0, 0, 0);
	Create3DTextLabel("Место добычи {00C0FF}№1\n{C1C1C1}Для начала работы подойдите к камням", 0xFFFFFFFF, -1854.7035, -1650.9668, 25.7248, 30, 0, 1);
	Create3DTextLabel("Место добычи {00C0FF}№2\n{C1C1C1}Для начала работы подойдите к камням", 0xFFFFFFFF, -1803.5344, -1655.2640, 25.8294, 30, 0, 1);
	Create3DTextLabel("Место добычи {00C0FF}№3\n{C1C1C1}Для начала работы подойдите к камням", 0xFFFFFFFF, -1788.5780, -1640.7179, 27.0669, 30, 0, 1);
	Create3DTextLabel("Место добычи {00C0FF}№4\n{C1C1C1}Для начала работы подойдите к камням", 0xFFFFFFFF, -1869.1316, -1634.7915, -58.500, 30, 0, 1);
	Create3DTextLabel("Место добычи {00C0FF}№5\n{C1C1C1}Для начала работы подойдите к камням", 0xFFFFFFFF, -1868.9603, -1643.6682, -58.046, 30, 0, 1);
	Create3DTextLabel("{00C0FF}/lift{FFFFFF} - вызов/спуск", 0x00FF00FF, -1898.670, -1636.7733, 26.0391, 15, 0, 1);
	Create3DTextLabel("{00C0FF}/lift{FFFFFF} - вызов/подъём", 0x00FF00FF, -1898.500, -1637.5000, -58.974, 10, 0, 1);
	Create3DTextLabel("{FFFFFF}Место работы: Шахтер\n Подойди к пикапу,чтобы приступить к работе", 0x00FF00FF, -1830.2748, -1639.3976, 22.2496, 20.0, 0);
	CreateObject(3798, -1870.40002441, -1625.59997559, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox3_sfs) (1)
	CreateObject(3798, -1870.40002441, -1623.50000000, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox3_sfs) (2)
	CreateObject(3798, -1868.00000000, -1625.50000000, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox3_sfs) (3)
	CreateObject(3800, -1866.19995117, -1626.00000000, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (1)
	CreateObject(3800, -1870.19995117, -1625.90002441, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (2)
	CreateObject(3800, -1868.59997559, -1625.69995117, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (3)
	CreateObject(3800, -1870.69995117, -1621.80004883, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (4)
	CreateObject(3800, -1870.30004883, -1621.59997559, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (5)
	CreateObject(3800, -1868.40002441, -1623.80004883, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (6)
	CreateObject(3800, -1865.00000000, -1626.09997559, 20.79999962, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (7)
	CreateObject(3800, -1870.69995117, -1619.59997559, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox4_sfs) (8)
	CreateObject(3929, -1803.30004883, -1654.19995117, 25.29999924, 0.00000000, 0.00000000, 0.00000000); //object(d_rock) (1)
	CreateObject(3929, -1802.40002441, -1654.69995117, 25.29999924, 0.00000000, 0.00000000, 40.0000000); //object(d_rock) (2)
	CreateObject(3929, -1801.59997559, -1655.09997559, 25.89999962, 0.00000000, 0.00000000, 310.000000); //object(d_rock) (3)
	CreateObject(3929, -1802.50000000, -1655.90002441, 25.29999924, 0.00000000, 0.00000000, 300.000000); //object(d_rock) (4)
	CreateObject(3929, -1802.19921875, -1656.79980469, 25.50000000, 0.00000000, 0.00000000, 0.00000000); //object(d_rock) (5)
	CreateObject(3929, -1786.90002441, -1640.40002441, 27.00000000, 0.00000000, 0.00000000, 8.00000000); //object(d_rock) (6)
	CreateObject(3929, -1788.50000000, -1640.30004883, 25.39999962, 0.00000000, 0.00000000, 40.0000000); //object(d_rock) (7)
	CreateObject(3929, -1789.09960938, -1641.50000000, 27.00000000, 0.00000000, 0.00000000, 280.000000); //object(d_rock) (8)
	CreateObject(3929, -1787.89941406, -1641.39941406, 27.00000000, 0.00000000, 0.00000000, 80.0000000); //object(d_rock) (9)
	CreateObject(3929, -1856.09997559, -1652.40002441, 25.00000000, 0.00000000, 0.00000000, 50.0000000); //object(d_rock) (10)
	CreateObject(3929, -1786.69921875, -1639.50000000, 26.00000000, 0.00000000, 0.00000000, 294.000000); //object(d_rock) (11)
	CreateObject(3929, -1790.69921875, -1639.89941406, 25.00000000, 0.00000000, 0.00000000, 30.0000000); //object(d_rock) (12)
	CreateObject(3929, -1855.40002441, -1649.50000000, 25.00000000, 0.00000000, 0.00000000, 90.0000000); //object(d_rock) (13)
	CreateObject(3929, -1856.00000000, -1650.80004883, 25.39999962, 0.00000000, 0.00000000, 320.000000); //object(d_rock) (14)
	CreateObject(3929, -1856.90002441, -1651.50000000, 25.00000000, 0.00000000, 0.00000000, 50.0000000); //object(d_rock) (15)
	CreateObject(3929, -1855.00000000, -1652.00000000, 24.60000038, 0.00000000, 0.00000000, 320.000000); //object(d_rock) (16)
	CreateObject(3929, -1853.90002441, -1654.00000000, 23.39999962, 0.00000000, 0.00000000, 60.0000000); //object(d_rock) (17)
	CreateObject(3930, -1787.50000000, -1639.40002441, 25.50000000, 0.00000000, 0.00000000, 0.00000000); //object(d_rock01) (1)
	CreateObject(3931, -1853.50000000, -1650.19995117, 24.00000000, 0.00000000, 0.00000000, 350.000000); //object(d_rock02) (1)
	CreateObject(3173, -1830.09997559, -1637.30004883, 20.79999924, 0.00000000, 0.00000000, 270.000000); //object(trailer_large4_01) (1)
	CreateObject(3798, -1837.00000000, -1636.09997559, 20.79999924, 0.00000000, 0.00000000, 0.00000000); //object(acbox3_sfs) (4)
	//=====================================[Банк]===================================
	CreateObject(14576, 1420.40625, -1012.8154296875, 7.8501682281494, 0, 0, 90.692138671875);
	CreateObject(2007, 1419.3303222656, -1016.2568969727, 7.1315684318542, 0, 0, 89.730041503906);
	CreateObject(2164, 1433.9787597656, -1013.091003418, 7.0628595352173, 0, 0, 270.77026367188);
	CreateObject(2608, 1424.9298095703, -1004.7521362305, 9.2608585357666, 0, 0, 0);
	CreateObject(5171, 1426.8211669922, -1010.2001953125, 7.4918675422668, 0, 0, 0);
	CreateObject(14455, 1424.5854492188, -1016.7573852539, 8.835807800293, 0, 0, 0);
	CreateObject(3089, 1436.1650390625, -1007.01171875, 9.3890390396118, 0, 0, 0);
	CreateObject(2959, 1436.1295166016, -1007.0358886719, 8.0600366592407, 0, 0, 271.78527832031);
	redver = CreateObject(2930, 1435.1789550781, -1007.7760009766, 10.696892738342, 0, 0, 0.5); //решетка
	hrandver = CreateObject(2634, 1412.7796630859, -1012.91796875, 1.3489612340927, 0, 0, 273.00524902344); //дверь в банк
	CreateObject(2922, 1435.17578125, -1007.5089111328, 9.8865146636963, 0, 0, 267.75524902344);
	CreateObject(2922, 1412.9813232422, -1014.1073608398, 1.2460784912109, 0, 0, 273.740234375);
	CreateObject(2921, 1417.0677490234, -1020.3650512695, 3.6593725681305, 0, 0, 324.240234375);
	CreateObject(2921, 1324.6818847656, -1015.1112670898, -36.863521575928, 0, 0, 0);
	CreateObject(2921, 1417.4133300781, -1021.5797119141, 3.5857803821564, 0, 0, 87.790161132813);
	CreateObject(2921, 1417.3247070313, -1007.0040283203, 3.8346025943756, 0, 0, 181.7099609375);
	CreateObject(2921, 1443.8924560547, -1012.2043457031, 4.9590225219727, 0, 0, 34.994750976563);
	CreateObject(2921, 1433.9610595703, -1010.4979858398, 10.264769554138, 0, 0, 40.660034179688);
	CreateObject(2921, 1438.7248535156, -1014.1942138672, 15.517020225525, 0, 0, 324.27026367188);
	CreateObject(3389, 1418.8056640625, -1012.1982421875, 7.0611057281494, 0, 0, 181.35131835938);
	CreateObject(2986, 1415.5572509766, -1027.4515380859, 1.4987223148346, 270, 0, 0);
	CreateObject(2986, 1434.5921630859, -1058.1749267578, 22.844179153442, 0, 0, 0);
	CreateObject(3035, 1428.8520507813, -1095.2708740234, 17.33299446106, 0, 0, 0);
	CreateObject(2930, 1418.8072509766, -1013.0993652344, 10.535212516785, 0, 0, 1.25);
	CreateObject(1421, 1432.6567382813, -1005.501159668, 7.8200144767761, 0, 0, 0);
	CreateObject(1416, 1419.0391845703, -1007.823425293, 7.6277041435242, 0, 0, 89.699951171875);
	CreateObject(1555, 1435.1000976563, -1009.75, 12.300000190735, 0, 0, 90);
	CreateObject(1555, 1435.099609375, -1009.75, 14.800000190735, 0, 0, 90);
	//=================================[Маппа Респы нубов LS]=======================
	CreateObject(970, 812.08, -1337.34, 13.05, 0.00, 0.00, 0.00);
	CreateObject(970, 818.67, -1337.33, 13.05, 0.00, 0.00, 0.00);
	CreateObject(970, 825.38, -1337.36, 13.05, 0.00, 0.00, 0.00);
	CreateObject(970, 807.45, -1339.42, 13.05, 0.00, 0.00, 90.00);
	CreateObject(970, 807.46, -1346.35, 13.05, 0.00, 0.00, 90.00);
	CreateObject(970, 807.47, -1352.91, 13.05, 0.00, 0.00, 90.00);
	CreateObject(1215, 815.31, -1337.35, 12.70, 0.00, 0.00, 0.00);
	CreateObject(1215, 822.04, -1337.34, 12.70, 0.00, 0.00, 0.00);
	CreateObject(1215, 808.73, -1337.39, 12.70, 0.00, 0.00, 0.00);
	CreateObject(1215, 807.42, -1342.96, 12.70, 0.00, 0.00, 0.00);
	CreateObject(1215, 807.43, -1349.67, 12.70, 0.00, 0.00, 0.00);
	CreateObject(1215, 807.48, -1356.01, 12.70, 0.00, 0.00, 0.00);
	CreateObject(2754, 809.90, -1356.78, 13.42, 0.00, 0.00, -90.00);
	//==================================[Банкоматы]=================================
	CreateObject(2754, -544.59997558594, -506.89999389648, 25.39999961853, 0, 0, 272);
	CreateObject(2754, -1980.47, 110.60, 27.57, 0.00, 0.00, 0.00);
	CreateObject(2754, 1466.99609375, -1749.8603515625, 15.34700012207, 0, 0, 269.99450683594);
	CreateObject(2754, 395.90900000, -1806.81000000, 7.74000000, 0.00000000, 0.00000000, -90.00000000);
	CreateObject(2754, 585.87300000, -1250.88900000, 17.94200000, 0.00000000, 0.00000000, -67.50000000);
	CreateObject(2754, 2233.48600000, -1161.42100000, 25.79300000, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2754, 1955.48700000, -2179.65700000, 13.44900000, 0.00000000, 0.00000000, -90.00000000);
	CreateObject(2754, -78.94400000, -1172.45100000, 2.03100000, 0.00000000, 0.00000000, -22.50000000);
	CreateObject(2754, -2028.6999511719, -98.300003051758, 35.75, 0, 0, 269.99450683594);
	CreateObject(2754, -2445.53000000, 511.26800000, 29.74800000, 0.00000000, 0.00000000, -180.00000000);
	CreateObject(2754, -1737.28000000, 963.40600000, 24.79300000, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2754, -1496.23600000, 925.62200000, 7.09000000, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2754, -2633.31400000, 1400.33400000, 7.00200000, 0.00000000, 0.00000000, 101.25000000);
	CreateObject(2754, -2483.07200000, 2408.32100000, 17.01200000, 0.00000000, 0.00000000, 33.75000000);
	CreateObject(2754, -1389.34400000, 2631.44000000, 55.88700000, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2754, -865.68500000, 1536.47400000, 22.48900000, 0.00000000, 0.00000000, -90.00000000);
	CreateObject(2754, -312.75600000, 1306.88400000, 53.49100000, 0.00000000, 0.00000000, -90.00000000);
	CreateObject(2754, 1672.54600000, 1444.96500000, 10.69000000, 0.00000000, 0.00000000, -180.00000000);
	CreateObject(2754, 2023.11300000, 1017.64600000, 10.72200000, 0.00000000, 0.00000000, -180.00000000);
	CreateObject(2754, 2197.01500000, 1670.10400000, 12.26900000, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2754, 2299.68700000, 2432.50300000, 10.72200000, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2754, 1567.61, -1326.32, 16.35, 0.00, 0.00, 180.00);
	CreateObject(10631, -1920.69995117, 883.40002441, 38.29999924, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(1497, -1911.80004883, 882.05999756, 34.29999924, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(1693, -1917.50000000, 889.29998779, 43.40000153, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1693, -1917.50000000, 878.29998779, 43.40000153, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(997, 1601.30004883, 1835.50000000, 9.80000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(997, 1606.09997559, 1835.50000000, 9.80000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(11455, 1637.30004883, 1826.30004883, 13.60000038, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(11455, 1577.80004883, 1842.40002441, 13.60000038, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(11431, 1633.50000000, 1818.80004883, 11.14999962, 0.00000000, 0.00000000, 90.00000000);
	//==================================[Отбойники]=================================
	CreateObject(979, -1588.8348388672, -789.77789306641, 49.220245361328, 0, 5, 162);
	CreateObject(979, -1603.3405761719, -785.07171630859, 47.920246124268, 0, 4.998779296875, 161.99890136719);
	CreateObject(979, -1616.5311279297, -780.19653320313, 46.820247650146, 0, 4.998779296875, 159.99890136719);
	CreateObject(979, -1629.5023193359, -774.97369384766, 45.620246887207, 0, 4.9932861328125, 155.99389648438);
	CreateObject(979, -1642.0487060547, -769.603515625, 44.420246124268, 0, 4.98779296875, 151.98937988281);
	CreateObject(979, -1654.5145263672, -764.02569580078, 43.320247650146, 0, 4.9822998046875, 151.984375);
	CreateObject(979, -1666.5239257813, -757.99310302734, 42.320247650146, 0, 4.9822998046875, 149.984375);
	CreateObject(979, -1678.2214355469, -752.12414550781, 41.210247039795, 0, 4.976806640625, 151.97985839844);
	CreateDynamic3DTextLabel("{FFFFFF}Для просмотра общака нажмите {00C0FF}ALT{FFFFFF}", COLOR_WHITE, 2546.8777, -1281.8262, 1060.9844, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Для просмотра общака нажмите {00C0FF}ALT{FFFFFF}", COLOR_WHITE, 2498.2224, -1710.7615, 1014.7422, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Для просмотра общака нажмите {00C0FF}ALT{FFFFFF}", COLOR_WHITE, -2165.1587, 646.3699, 1057.5938, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Для просмотра общака нажмите {00C0FF}ALT{FFFFFF}", COLOR_WHITE, 1267.3802, -787.2311, 1091.9063, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Для просмотра общака нажмите {00C0FF}ALT{FFFFFF}", COLOR_WHITE, 1733.2671, -1639.8517, 20.2299, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("La Cosa Nostra", 0x057F94FF, 1178.20, -2036.85, 69.01, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Russian Mafia", 0x778899FF, -2490.33, 2357.72, 10.27, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Triads Mafia", 0xBCE635FF, 656.64, -1312.85, 13.63, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Yakuza Mafia", 0xFAFB71FF, -2244.51, 649.89, 49.45, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Grove Street", 0x10DC29FF, 2498.78, -1686.37, 13.47, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("El Coronos", 0x0FD9FAFF, 1753.66, -1885.92, 13.56, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Los Santos Vagos", 0xFFD720FF, 2803.71, -1187.71, 25.47, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("The Ballas Gang", 0x8A2CD7FF, 1995.75, -1115.87, 26.77, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("San Fierro Rifa", 0x6495EDFF, -2491.75, -133.28, 25.62, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	CreateDynamic3DTextLabel("Street Racers", 0x11F891FF, 1059.43, 1364.56, 10.82, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0, -1, 100.0);
	//===========================moder most==========================================
	CreateObject(11011, -1245.601074, -752.732239, 66.048515, 1.9988, 0.0000, 49.1589);
	CreateObject(16357, -792.8740234375, -1135.0302734375, 94.114685058594, 0, 1.99951171875, 349.99694824219);
	CreateObject(16357, -638.591796875, -1170.5419921875, 85.763084411621, 0, 3.9935302734375, 343.99291992188);
	CreateObject(16357, -487.90625, -1219.349609375, 70.508811950684, 359.69787597656, 6.998291015625, 339.98840332031);
	CreateObject(16357, -339.4111328125, -1270.2744140625, 42.846347808838, 0.1922607421875, 12.996826171875, 341.982421875);
	CreateObject(16357, -200.34143066, -1315.32080078, 9.11107540, 0.19775391, 12.99682617, 341.98791504);
	CreateObject(3463, -418.12677002, -1244.70434570, 61.73328400, 0.00000000, 0.00000000, 70.00000000);
	CreateObject(3463, -471.77517700, -1225.37646484, 68.74208832, 0.00000000, 0.00000000, 69.99938965);
	CreateObject(3463, -560.76464844, -1192.91296387, 80.37000275, 0.00000000, 0.00000000, 71.99938965);
	CreateObject(3463, -624.37432861, -1174.51306152, 85.07571411, 0.00000000, 0.00000000, 71.99938965);
	CreateObject(3463, -705.53881836, -1151.53552246, 90.97285461, 0.00000000, 0.00000000, 73.99938965);
	CreateObject(3463, -755.30163574, -1141.83557129, 93.11784363, 0.00000000, 0.00000000, 77.99938965);
	CreateObject(3463, -815.68420410, -1130.75830078, 95.26106262, 0.00000000, 0.00000000, 77.99938965);
	CreateObject(3463, -378.44238281, -1257.70349121, 52.65535736, 0.00000000, 0.00000000, 69.99938965);
	CreateObject(3463, -319.14077759, -1276.86669922, 38.27929688, 0.00000000, 0.00000000, 69.99938965);
	CreateObject(3463, -282.12789917, -1288.88745117, 29.28916931, 0.00000000, 0.00000000, 69.99938965);
	CreateObject(3463, -235.60038757, -1303.87182617, 18.01987839, 0.00000000, 0.00000000, 73.99938965);
	CreateObject(16357, -209.05957031, -1312.51367188, 11.69663429, 0.19226074, 11.99707031, 341.98242188);
	CreateObject(16501, -165.30508423, -1331.15600586, 2.16072273, 0.00000000, 275.00000000, 344.00000000);
	CreateObject(16501, -163.18067932, -1324.71264648, 2.16431069, 0.00000000, 275.00000000, 342.00000000);
	CreateObject(16501, -162.62112427, -1322.90185547, 2.16024446, 0.00000000, 274.99877930, 341.99890137);
	CreateObject(16501, -161.46942139, -1332.31433105, 1.91054106, 0.00000000, 271.99877930, 343.99841309);
	CreateObject(16501, -869.10101318, -1118.66638184, 97.19379425, 0.00000000, 276.00000000, 348.00000000);
	CreateObject(16501, -870.27441406, -1125.46777344, 97.19348145, 358.99475098, 275.99230957, 341.99243164);
	CreateObject(16501, -868.93328857, -1117.29785156, 97.19373322, 0.00000000, 275.99853516, 347.99743652);
	CreateObject(973, -870.50097656, -1108.76562500, 98.24280548, 0.00000000, 1.99951172, 91.99951172);
	CreateObject(973, -873.37384033, -1133.30163574, 99.49251556, 0.00000000, 11.00000000, 67.99951172);
	CreateObject(3463, -856.70690918, -1123.70275879, 96.72676086, 0.00000000, 0.00000000, 69.99743652);
	CreateObject(3463, -516.89459229, -1208.67260742, 74.63893127, 0.00000000, 0.00000000, 69.99389648);
	CreateObject(973, -157.61132812, -1315.42382812, 2.87928247, 0.00000000, 0.00000000, 261.99645996);
	CreateObject(973, -163.06176758, -1341.20971680, 2.87928247, 0.00000000, 0.00000000, 269.99645996);
	CreateObject(973, -163.16545105, -1350.18383789, 2.87928247, 0.00000000, 0.00000000, 267.99450684);
	CreateObject(973, -156.31982422, -1306.47827148, 2.78287458, 0.00000000, 0.00000000, 261.99096680);
	CreateObject(3463, -190.00067139, -1318.59155273, 7.79627991, 0.00000000, 0.00000000, 73.99841309);
	CreateObject(5130, -1335.16699219, 478.80569458, 8.17666435, 0.00000000, 0.00000000, 225.00000000);
	CreateObject(1473, -1334.31311035, 485.66983032, 10.68041611, 3.00000000, 0.00000000, 180.00000000);
	CreateObject(1473, -1335.79858398, 485.64492798, 10.68041611, 3.00000000, 0.00000000, 179.99450684);
	CreateObject(3877, -869.63262939, -1113.22961426, 99.16967773, 0.00000000, 0.00000000, 352.00000000);
	CreateObject(3877, -871.47460938, -1129.55554199, 99.03868866, 0.00000000, 0.00000000, 351.99645996);
	CreateObject(1215, -163.73196411, -1335.93579102, 2.64107585, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1215, -158.41519165, -1320.35852051, 2.60338569, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(9958, -1391.05554199, 391.03262329, 6.31084824, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(3330, -264.41015625, -1294.28479004, 11.94478607, 0.00000000, 0.00000000, 252.00000000);
	CreateObject(3330, -373.61883545, -1258.10180664, 39.89373016, 0.00000000, 0.00000000, 251.99890137);
	CreateObject(3330, -508.66323853, -1211.64160156, 62.88817596, 0.00000000, 0.00000000, 247.99890137);
	CreateObject(3330, -628.76977539, -1173.39648438, 74.54878998, 0.00000000, 0.00000000, 251.99438477);
	CreateObject(3330, -784.09350586, -1136.23986816, 83.42803192, 0.00000000, 0.00000000, 259.99340820);
	CreateDynamicObject(8657, -852.90002441406, -1124.3100585938, 95.690002441406, 2, 0, 260);
	CreateDynamicObject(8657, -822.47003173828, -1129.6800537109, 95.700004577637, 357.99499511719, 0, 259.99694824219);
	CreateDynamicObject(8657, -791.97003173828, -1135.0599365234, 94.624992370605, 357.99499511719, 0, 259.99694824219);
	CreateDynamicObject(8657, -761.5, -1140.4300537109, 93.550003051758, 357.99499511719, 0, 259.99694824219);
	CreateDynamicObject(8657, -730.98999023438, -1145.8100585938, 92.479995727539, 357.99499511719, 0, 259.99694824219);
	CreateDynamicObject(8657, -729, -1146.1599121094, 92.408996582031, 357.99499511719, 0, 259.99694824219);
	CreateDynamicObject(8657, -699.70001220703, -1153, 90.800003051758, 355.99499511719, 0, 253.59704589844);
	CreateDynamicObject(8657, -670.43005371094, -1161.4000244141, 88.680000305176, 355.98999023438, 0, 254.39190673828);
	CreateDynamicObject(8657, -640.79998779297, -1169.9000244141, 86.526000976563, 355.98449707031, 0, 253.58837890625);
	CreateDynamicObject(8657, -611.07995605469, -1178.5, 84.36499786377, 355.98449707031, 0, 254.08642578125);
	CreateDynamicObject(8657, -581.61999511719, -1186.9000244141, 82.230003356934, 355.98449707031, 0, 254.08630371094);
	CreateDynamicObject(8657, -576.72003173828, -1188.3000488281, 81.879997253418, 355.98449707031, 0, 254.08630371094);
	CreateDynamicObject(8657, -547.94000244141, -1197.5999755859, 79, 353.00451660156, 0, 249.986328125);
	CreateDynamicObject(8657, -519.66003417969, -1207.9000244141, 75.319999694824, 353.00170898438, 0, 249.98291015625);
	CreateDynamicObject(8657, -491.64999389648, -1218, 71.680000305176, 353.00170898438, 0, 250.38287353516);
	CreateDynamicObject(8657, -463.27001953125, -1228.1999511719, 67.990997314453, 353.00170898438, 0, 250.07843017578);
	CreateDynamicObject(8657, -434.94998168945, -1238.5999755859, 64.300003051758, 353.00170898438, 0, 249.57629394531);
	CreateDynamicObject(8657, -427.70001220703, -1241.3000488281, 63.350002288818, 353.00170898438, 0, 249.57092285156);
	CreateDynamicObject(8657, -399.5, -1251.0999755859, 58.099998474121, 347.00170898438, 0, 252.1708984375);
	CreateDynamicObject(8657, -370.88998413086, -1260.3000488281, 51.171997070313, 346.99768066406, 0, 252.16918945313);
	CreateDynamicObject(8657, -342.58999633789, -1269.4000244141, 44.318008422852, 346.99768066406, 0, 252.16918945313);
	CreateDynamicObject(8657, -313.97998046875, -1278.5999755859, 37.388000488281, 346.99768066406, 0, 252.16918945313);
	CreateDynamicObject(8657, -285.67999267578, -1287.6999511719, 30.529998779297, 346.99768066406, 0, 252.16918945313);
	CreateDynamicObject(8657, -258.01000976563, -1296.5999755859, 23.829999923706, 346.99768066406, 0, 252.16918945313);
	CreateDynamicObject(8657, -229.70999145508, -1305.6999511719, 17.139999389648, 347.59765625, 0, 252.16918945313);
	CreateDynamicObject(8657, -201.10000610352, -1314.9000244141, 9.8199996948242, 344.99645996094, 0, 252.16369628906);
	//===============================[DM zona]======================================
	CreateObject(13634, 2009.484863, 3555.489258, 23.996700, 0.0000, 0.0000, 0.0000);
	CreateObject(13608, 2007.099731, 3550.198975, 24.292028, 0.0000, 0.0000, 0.0000);
	CreateObject(14873, 2003.200684, 3523.038086, 11.465568, 0.0000, 0.0000, 0.0000);
	CreateObject(14873, 2009.788330, 3568.228027, 11.490567, 0.0000, 0.0000, 180.0000);
	CreateObject(14875, 2014.503174, 3568.280273, 11.489468, 0.0000, 0.0000, 180.0000);
	CreateObject(17010, 1993.059570, 3571.211182, 10.520437, 0.0000, 0.0000, 0.0000);
	CreateObject(14873, 2024.545776, 3568.136963, 11.320071, 0.0000, 0.0000, 180.0000);
	CreateObject(14873, 2012.982056, 3522.969482, 11.395070, 0.0000, 0.0000, 0.0000);
	CreateObject(14875, 1998.790894, 3523.045410, 11.439468, 0.0000, 0.0000, 0.0000);
	CreateObject(17010, 1988.321289, 3524.857666, 10.495438, 0.0000, 0.0000, 0.0000);
	CreateObject(3252, 2031.578247, 3569.273193, 10.748932, 0.0000, 0.0000, 0.0000);
	CreateObject(3252, 2023.262207, 3522.215576, 10.673932, 0.0000, 0.0000, 0.0000);
	CreateObject(3419, 2038.874756, 3543.986816, 10.534853, 0.0000, 0.0000, 270.0000);
	CreateObject(17061, 1982.232910, 3547.649902, 10.456188, 0.0000, 0.0000, 86.5622);
	CreateObject(17063, 2035.319702, 3531.633789, 10.470016, 0.0000, 0.0000, 236.2501);
	CreateObject(4100, 2030.609375, 3518.525146, 12.227889, 0.0000, 0.0000, 349.6868);
	CreateObject(4100, 2020.709839, 3513.283936, 12.302889, 0.0000, 0.0000, 345.2349);
	CreateObject(4100, 2007.531250, 3510.888428, 12.323387, 0.0000, 0.0000, 315.0000);
	CreateObject(4100, 1994.148071, 3513.380859, 12.277889, 0.0000, 0.0000, 303.7500);
	CreateObject(4100, 1982.155396, 3519.531738, 12.277888, 0.0000, 0.0000, 281.2500);
	CreateObject(4100, 1973.426270, 3529.763916, 12.273388, 0.0000, 0.0000, 258.7500);
	CreateObject(4100, 1971.454102, 3533.414063, 12.298388, 0.0000, 0.0000, 258.7500);
	CreateObject(4100, 1969.683594, 3562.145996, 12.098391, 0.0000, 0.0000, 33.7500);
	CreateObject(4100, 1976.040283, 3574.044189, 12.173389, 0.0000, 0.0000, 11.2500);
	CreateObject(4100, 1986.450439, 3582.607178, 12.252890, 0.0000, 0.0000, 348.7500);
	CreateObject(4100, 1999.057861, 3587.920410, 12.298387, 0.0000, 0.0000, 337.5000);
	CreateObject(4100, 2012.444946, 3589.241943, 12.298388, 0.0000, 0.0000, 315.0000);
	CreateObject(4100, 2025.316406, 3585.349121, 12.323387, 0.0000, 0.0000, 292.5000);
	CreateObject(4100, 2035.722534, 3576.823975, 12.323387, 0.0000, 0.0000, 270.0000);
	CreateObject(4100, 2043.357178, 3565.518555, 12.373386, 0.0000, 0.0000, 258.7500);
	CreateObject(4100, 2047.261108, 3552.672852, 12.348387, 0.0000, 0.0000, 236.2501);
	CreateObject(4100, 2045.934937, 3539.305664, 12.352887, 0.0000, 0.0000, 213.7500);
	CreateObject(4100, 2040.367798, 3527.660889, 12.323387, 0.0000, 0.0000, 15.5472);
	CreateObject(14873, 1988.579956, 3556.362305, 11.465568, 0.0000, 0.0000, 179.1406);
	CreateObject(4100, 1967.489624, 3546.849854, 12.176129, 0.0000, 0.0000, 229.5290);
	CreateObject(1225, 2031.771606, 3535.692139, 11.056973, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1997.417603, 3525.151367, 11.052472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1976.508667, 3539.078369, 11.077472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2027.680420, 3567.333740, 11.031973, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1981.872070, 3577.969971, 11.052472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1969.220093, 3556.580322, 11.077472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2035.690918, 3549.813232, 11.077472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1998.267334, 3544.288818, 11.077472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1993.089722, 3544.272705, 14.194757, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2010.850342, 3511.209229, 11.052472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2012.378052, 3588.480469, 11.077472, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2023.260010, 3522.164063, 22.600422, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2012.958740, 3546.716064, 11.052472, 0.0000, 0.0000, 0.0000);
	CreateObject(3279, 2032.918335, 3561.531738, 10.472338, 0.0000, 0.0000, 0.0000);
	CreateObject(3279, 1987.070190, 3534.250732, 10.497337, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2024.669922, 3597.939941, 9.129035, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1940.047241, 3570.786621, 9.201931, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 1973.282471, 3498.962891, 9.194282, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2037.946777, 3501.233643, 9.158072, 0.0000, 0.0000, 0.0000);
	CreateObject(1225, 2067.967529, 3570.194824, 9.154035, 0.0000, 0.0000, 0.0000);
	CreateObject(672, 1997.215576, 3581.256348, 11.424208, 0.0000, 0.0000, 0.0000);
	CreateObject(672, 2041.239502, 3562.917236, 11.424208, 0.0000, 0.0000, 67.5000);
	CreateObject(672, 1999.329346, 3515.065186, 11.374209, 0.0000, 0.0000, 0.0000);
	CreateObject(672, 1971.202148, 3558.250244, 11.294709, 0.0000, 0.0000, 0.0000);
	CreateObject(672, 2026.143188, 3527.195313, 11.374210, 0.0000, 0.0000, 0.0000);
	//==================================[CS зона]===================================
	CreateObject(5172, 202.099609375, -2993.7998046875, 26.799999237061, 0, 267.99499511719, 353.99597167969);
	CreateObject(5172, 185.099609375, -2929.5, 26.799999237061, 0, 267.98400878906, 89.994506835938);
	CreateObject(5172, 143.5, -2976.599609375, 26.799999237061, 0, 267.98400878906, 269.98901367188);
	CreateObject(5172, 125.19921875, -2974.3994140625, 26.799999237061, 0, 267.98950195313, 177.24243164063);
	CreateObject(5172, 113.599609375, -3003, 9, 0, 0, 0);
	CreateObject(5172, 206.69921875, -2947.7998046875, 9, 0, 0, 177.98950195313);
	CreateObject(3576, 142.60000610, -2962.89990234, 2.70000005, 0.00000000, 8.00000000, 14.00000000);
	CreateObject(3576, 139.39999390, -2949.10009766, 3.09999990, 0.00000000, 7.99804688, 13.99658203);
	CreateObject(3576, 144, -2932.69921875, 2.2999999523163, 0, 7.9925537109375, 13.99658203125);
	CreateObject(3576, 178.89999390, -2948.10009766, 3.00000000, 0.00000000, 353.99804688, 13.99658203);
	CreateObject(3576, 172.69999695, -2973.30004883, 2.20000005, 0.00000000, 353.99597168, 13.99658203);
	CreateObject(3576, 176.60000610, -2936.39990234, 2.70000005, 0.00000000, 353.99597168, 13.99658203);
	CreateObject(3378, 205.8994140625, -2923.099609375, 5.8000001907349, 0, 0, 357.98950195313);
	CreateObject(3378, 203.5, -2966.2998046875, 5.8000001907349, 0, 0, 355.99548339844);
	CreateObject(3378, 204.8994140625, -2943.8994140625, 5.8000001907349, 0, 0, 355.98449707031);
	CreateObject(3378, 127.19921875, -2965.7998046875, 3.5, 0, 0, 358.98999023438);
	CreateObject(3378, 128.10000610352, -2945.1000976563, 3.5, 0, 0, 355.98999023438);
	CreateObject(3378, 129, -2930.6999511719, 3.5, 0, 0, 355.99047851563);
	CreateObject(8651, 202.10000610, -2944.30004883, 7.00000000, 0.00000000, 0.00000000, 355.99548340);
	CreateObject(8651, 201.099609375, -2958.099609375, 7, 0, 0, 355.98999023438);
	CreateObject(10244, 134.00921630859, -2931.69921875, 1, 0, 0, 177.98999023438);
	CreateObject(10244, 197.8994140625, -2974.9990234375, 3.4000000953674, 0, 0, 355.98950195313);
	CreateObject(12991, 145.69921875, -2957.19921875, 0.69999998807907, 0, 0, 0);
	CreateObject(12991, 176.3994140625, -2954, 0.69999998807907, 0, 0, 185.99853515625);
	CreateObject(1271, 202.89921569824, -2942.8994140625, 7.3000001907349, 0, 0, 0);
	CreateObject(1271, 202.89921569824, -2943.599609375, 7.3000001907349, 0, 0, 0);
	CreateObject(1271, 202.89921569824, -2942.8994140625, 8, 0, 0, 0);
	CreateObject(1271, 129.29940795898, -2970.3994140625, 5, 0, 0, 0);
	CreateObject(1271, 129.29940795898, -2969.69921875, 5, 0, 0, 0);
	CreateObject(1271, 129.29940795898, -2970.3994140625, 5.6999998092651, 0, 0, 0);
	CreateObject(1431, 187.39999390, -2936.50000000, 3.29999995, 0.00000000, 0.00000000, 92.00000000);
	CreateObject(1431, 187.39999390, -2938.39990234, 3.29999995, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 171.099609375, -2941.8994140625, 1, 0, 0, 91.994018554688);
	CreateObject(1431, 171.19999695, -2943.80004883, 1.00000000, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 142.3994140625, -2970.8994140625, 2, 0, 0, 91.994018554688);
	CreateObject(1431, 142.2998046875, -2969, 2, 0, 0, 91.994018554688);
	CreateObject(1431, 147.7998046875, -2966.099609375, 1.3999999761581, 0, 0, 91.994018554688);
	CreateObject(1431, 146.8994140625, -2941.19921875, 1.5, 0, 0, 91.994018554688);
	CreateObject(1431, 178.10000610, -2963.39990234, 2.00000000, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 180.30000305, -2970.60009766, 2.29999995, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 185.80000305, -2969.10009766, 3.09999990, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 185.89999390, -2961.19995117, 3.09999990, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1431, 178.19999695, -2959.30004883, 2.00000000, 0.00000000, 0.00000000, 91.99951172);
	CreateObject(1685, 190.19999695, -2940.30004883, 3.90000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2942.00000000, 3.90000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2943.69995117, 3.90000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2943.69995117, 5.40000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2942.00000000, 5.40000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2943.69995117, 6.90000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1685, 190.19999695, -2945.39990234, 3.90000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(5172, 199.0986328125, -2947.7998046875, 8, 0, 0.3900146484375, 177.98950195313);
	CreateObject(5172, 125.599609375, -3003, 7, 0, 358.99475097656, 357.98950195313);
	CreateObject(8651, 130.75999450684, -2948.6999511719, 4.6999998092651, 0, 0, 177.98986816406);
	CreateObject(8651, 130.099609375, -2966.8994140625, 4.6999998092651, 0, 0, 177.98950195313);
	CreateObject(3378, 209.998046875, -2943.8994140625, 5.8000001907349, 0, 0, 355.98449707031);
	CreateObject(3378, 209.9990234375, -2923.099609375, 5.8000001907349, 0, 0, 357.98950195313);
	//==================================[нубы СФ]=========================================
	CreateObject(1557, -1980.1599121094, 136.39999389648, 26.700000762939, 0, 0, 90);
	CreateObject(1557, -1980.1595458984, 139.3994140625, 26.700000762939, 0, 0, 269.99499511719);
	CreateObject(991, -1980.2000732422, 133.19999694824, 27.800001144409, 0, 0, 270);
	CreateObject(991, -1980.19921875, 142.599609375, 27.200000762939, 0, 0, 270);
	CreateObject(991, -1980.19921875, 142.599609375, 27.800001144409, 0, 0, 270);
	CreateObject(1227, -1963.5999755859, 102.69999694824, 27.5, 0, 0, 90);
	CreateObject(1227, -1963.5999755859, 105, 27.5, 0, 0, 90);
	CreateObject(1440, -1962.6999511719, 107.09999847412, 27.200000762939, 0, 0, 0);
	CreateObject(1440, -1961.8000488281, 103.30000305176, 27.200000762939, 0, 0, 79.994873046875);
	CreateObject(8650, -1961.0400390625, 123.21999359131, 26.799999237061, 0, 0, 0);
	CreateObject(8650, -1961.0400390625, 153.61972045898, 26.799999237061, 0, 0, 0);
	CreateObject(3851, -1960.8994140625, 115.8994140625, 29.89999961853, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 115.8994140625, 33.899997711182, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 146.8994140625, 29.89999961853, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 136.8994140625, 33.899997711182, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 126.8994140625, 29.89999961853, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 126.8994140625, 33.899997711182, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 136.8994140625, 29.89999961853, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 146.8994140625, 33.899997711182, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 156.8994140625, 33.899997711182, 0, 0, 179.99450683594);
	CreateObject(3851, -1960.8994140625, 156.8994140625, 29.89999961853, 0, 0, 179.99450683594);
	CreateObject(1215, -2001.12, 130.01, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.20, 132.57, 27.13, 0.00, 0.00, 90.00);
	CreateObject(970, -2001.19, 127.62, 27.13, 0.00, 0.00, 90.00);
	CreateObject(970, -2001.19, 122.59, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.10, 125.07, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.20, 137.58, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.11, 135.08, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.18, 142.72, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.12, 140.13, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.18, 147.98, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.11, 145.34, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.19, 153.24, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.12, 150.60, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.18, 158.57, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.11, 155.88, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.21, 163.91, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.10, 161.18, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.21, 169.21, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.11, 166.55, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -2001.20, 174.46, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -2001.11, 171.82, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1998.22, 177.76, 27.13, 0.00, 0.00, 0.00);
	CreateObject(1215, -2000.73, 177.05, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.27, 174.34, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.83, 177.08, 26.95, 0.00, 0.00, 0.00);
	CreateObject(1215, -1995.36, 171.78, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.25, 169.20, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.37, 166.57, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.25, 163.98, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.35, 161.36, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.23, 158.75, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.40, 156.15, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.26, 153.62, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.37, 150.93, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.26, 148.18, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.36, 145.58, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.25, 142.96, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.35, 140.28, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1995.25, 137.62, 27.13, 0.00, 0.00, 90.00);
	CreateObject(970, -1995.23, 132.70, 27.13, 0.00, 0.00, 90.00);
	CreateObject(970, -1995.25, 127.72, 27.13, 0.00, 0.00, 90.00);
	CreateObject(970, -1995.28, 122.50, 27.13, 0.00, 0.00, 90.00);
	CreateObject(1215, -1995.68, 119.69, 26.95, 0.00, 0.00, 0.00);
	CreateObject(1215, -2000.77, 119.74, 26.95, 0.00, 0.00, 0.00);
	CreateObject(970, -1998.22, 118.99, 27.13, 0.00, 0.00, 0.00);
	CreateObject(1215, -1995.41, 135.18, 26.95, 0.00, 0.00, 0.00);
	CreateObject(1215, -1995.40, 130.18, 26.95, 0.00, 0.00, 0.00);
	CreateObject(1215, -1995.37, 125.11, 26.95, 0.00, 0.00, 0.00);
	CreateObject(1359, -1980.6999511719, 140.69999694824, 27.39999961853, 0, 0, 0);
	CreateObject(983, -1980.2998046875, 175.099609375, 27.39999961853, 0, 0, 1.29638671875);
	CreateObject(983, -1980.4296875, 181.4794921875, 27.39999961853, 0, 0, 1.29638671875);
	CreateObject(983, -1980.599609375, 195.87948608398, 27.39999961853, 0, 0, 0.59634399414063);
	CreateObject(1616, -1977.5, 205.89999389648, 30.10000038147, 0, 0, 162);
	CreateObject(3785, -1976.4000244141, 169.42001342773, 30.39999961853, 0, 0, 84);
	CreateObject(3785, -1961.3994140625, 169.419921875, 30.39999961853, 0, 0, 83.995971679688);
	CreateObject(3785, -1968.3994140625, 169.419921875, 30.39999961853, 0, 0, 83.995971679688);
	CreateObject(3785, -1968.3994140625, 169.419921875, 34.399997711182, 0, 0, 83.995971679688);
	CreateObject(3785, -1961.3994140625, 169.419921875, 34.399997711182, 0, 0, 83.995971679688);
	CreateObject(3785, -1976.3994140625, 169.419921875, 34.399997711182, 0, 0, 83.995971679688);
	CreateObject(4003, -1983.6999511719, 137.19999694824, 37.799999237061, 0, 0, 89.994506835938);
	CreateObject(3515, -1998.0999755859, 125.5, 26.89999961853, 0, 0, 0);
	CreateObject(3515, -1998.099609375, 169.5, 26.89999961853, 0, 0, 0);
	//============================[респ РМ]=========================================
	CreateObject(6976, -2533.9396972656, 2353.1945800781, 3.4143741130829, 0, 0, 0);
	CreateObject(994, -2553.1000976563, 2343.8999023438, 4.0099997520447, 0, 0, 0);
	//=========================[респ стритов]=======================================
	CreateObject(3627, 1076.9962158203, 1232.5059814453, 13.666963577271, 0, 0, 90);
	//=========================[Забор-медики]=======================================
	CreateObject(987, -2686.7607421875, 579.27478027344, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2698.7956542969, 579.37823486328, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2710.794921875, 579.416015625, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2722.4191894531, 580.69000244141, 13.52215385437, 0, 0, 354);
	CreateObject(987, -2658.7607421875, 579.6298828125, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2646.7543945313, 579.68463134766, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2634.7253417969, 579.60107421875, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2626.48046875, 579.62713623047, 13.52215385437, 0, 0, 0);
	CreateObject(987, -2614.5378417969, 579.53253173828, 13.52215385437, 0, 0, 90);
	CreateObject(987, -2614.408203125, 591.5322265625, 13.52215385437, 0, 0, 90);
	CreateObject(987, -2614.3891601563, 603.54370117188, 13.52215385437, 0, 0, 90);
	CreateObject(987, -2614.2048339844, 615.54315185547, 13.52215385437, 0, 0, 90);
	CreateObject(987, -2614.0817871094, 627.595703125, 13.52215385437, 0, 0, 123.99996948242);
	//=========================[хиты]=========================================
	CreateObject(7497, -1111.0999755859, -1010.0999755859, 132.80000305176, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.299987793, 133.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 128.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 129.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 130.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 131.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 132.89999389648, 0, 0, 0);
	CreateObject(9339, -1081.8999023438, -1010.2998046875, 134.89999389648, 0, 0, 0);
	//=========================[топливные колонки]=========================================
	CreateObject(1244, 1000.4000244141, -937.40002441406, 42.099998474121, 0, 0, 278);
	CreateObject(1244, 1006.9000244141, -936.59997558594, 42.099998474121, 0, 0, 277.998046875);
	CreateObject(1244, -2026.5, 156.69999694824, 28.799999237061, 0, 0, 0);
	//=========================[Забор-рифа]=========================================
	CreateObject(987, -2464.0158691406, -159.8343963623, 24.626789093018, 0, 0, 0);
	CreateObject(987, -2451.1323242188, -80.933738708496, 32.849578857422, 0, 0, 0);
	CreateObject(987, -2489.2099609375, -128.19609069824, 24.623662948608, 0, 0, 270);
	//=========================[Забор-репортёры]====================================
	CreateObject(991, 781.25915527344, -1384.8181152344, 15.491227149963, 0, 0, 0);
	CreateObject(991, 774.59130859375, -1384.818359375, 13.941226959229, 0, 0, 180);
	CreateObject(991, 774.5908203125, -1384.818359375, 15.491227149963, 0, 0, 180);
	CreateObject(991, 781.2587890625, -1384.8173828125, 13.941226959229, 0, 0, 0);
	//===============================[репортёры]====================================
	NewsGate = CreateDynamicObject(988, 775.37744140625, -1330.0141601563, 12.552271842957, 0, 0, 179, -1, -1, -1, 300.0);
	News2Gate = CreateDynamicObject(988, 780.77716064453, -1330.1136474609, 12.552271842957, 0, 0, 178.99475097656, -1, -1, -1, 300.0);
	//===============================[МЕДИКИ]=======================================
	MedicGate = CreateDynamicObject(986, -2670.7937011719, 579.01361083984, 15.253124237061, 0, 0, 359.99963378906, -1, -1, -1, 300.0); //Ваши закрытые ворота медиков
	LimitPlayerMarkerRadius(75.0);
	Medic2Gate = CreateDynamicObject(986, -2662.8596191406, 579.09484863281, 15.253124237061, 0, 0, 359.99963378906, -1, -1, -1, 300.0); //Ваши закрытые ворота медиков
	LimitPlayerMarkerRadius(75.0);
	//===============================[МИЛИЦИЯ]======================================
	CreateObject(970, 1544.4000244141, -1634.8000488281, 13.10000038147, 0, 0, 270);
	CreateObject(970, 1544.4000244141, -1638.9005126953, 13.10000038147, 0, 0, 270);
	CreateObject(970, 1544.6999511719, -1621.6999511719, 13.10000038147, 0, 0, 270);
	CreateObject(970, 1544.6999511719, -1619.6300048828, 13.10000038147, 0, 0, 270);
	CreateObject(2930, 222.19999694824, 78.999946594238, 1006.6500244141, 0, 0, 0);
	CreateObject(2930, 222.19921875, 80.729759216309, 1006.6500244141, 0, 0, 0);
	CreateObject(2930, 222.19999694824, 69, 1006.700012207, 0, 0, 0);
	CreateObject(2930, 222.19921875, 70.69921875, 1006.700012207, 0, 0, 0);
	CreateObject(2930, 266.29998779297, 83.830001831055, 1002.6699829102, 0, 0, 0);
	CreateObject(2930, 266.2998046875, 88.3291015625, 1002.6699829102, 0, 0, 0);
	LSPDGate = CreateDynamicObject(980, 1588.519, -1638.079, 15.021, 0.0, 0.0, -180.000, -1, -1, -1, 300.0); //ворота копов 5
	LSGate = CreateDynamicObject(1500, 244.89999389648, 72.5, 1002.5999755859, 0, 0, 0, -1, -1, -1, 300.0);
	LS2Gate = CreateDynamicObject(1500, 246.3994140625, 72.5, 1002.5999755859, 0, 0, 0, -1, -1, -1, 300.0);
	LSBar = CreateDynamicObject(968, 1544.684692, -1630.881592, 13.004568, 0.0000, 90.0000, 90.0000); //шлак
	//===============================[FBI]==========================================
	CreateObject(991, -1640.5999755859, 688.09997558594, 7.4000000953674, 0, 0, 180);
	CreateObject(991, -1640.599609375, 688.099609375, 9.8000001907349, 0, 0, 179.99450683594);
	CreateObject(991, -1622.3996582031, 688.099609375, 9.8000001907349, 0, 0, 359.90551757813);
	CreateObject(991, -1622.3996582031, 688.099609375, 7.4000000953674, 0, 0, 179.99450683594);
	FBIGate = CreateDynamicObject(980, -1631.519897, 688.084777, 9.030563, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.0); //ворота ФБР
	FBI1Gate = CreateDynamicObject(968, -1572.1889648438, 658.85864257813, 6.8781251907349, 0, 90, 90); // Ворота с улицы
	FBI2Gate = CreateDynamicObject(968, -1701.4367675781, 687.59826660156, 24.582813262939, 0, -90, 92); // Ворота с улицы
	//===============================[аммо]======================================
	CreateObject(8651, 306.5, -129.88998413086, 998.59997558594, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 999.59997558594, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 999.59997558594, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 1000.5999755859, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 999.59997558594, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 1000.5999755859, 0, 0, 271);
	CreateObject(8651, 306.5, -129.8896484375, 1001.5999755859, 0, 0, 271);
	//===============================[мэрия]======================================
	CreateObject(1567, 344.89999389648, 157.41000366211, 1013.1799926758, 0, 0, 0);
	CreateObject(1567, 344.8994140625, 157.4091796875, 1013.200012207, 0, 0, 0);
	CreateObject(1567, 344.8994140625, 157.4091796875, 1013.200012207, 0, 0, 0);
	CreateObject(1567, 344.8994140625, 157.4091796875, 1013.200012207, 0, 0, 0);
	CreateObject(1567, 344.8994140625, 157.4091796875, 1013.200012207, 0, 0, 0);
	CreateObject(1567, 344.85998535156, 157, 1013.1799926758, 0, 0, 0);
	CreateObject(2255, 348.79998779297, 166.39999389648, 1015.200012207, 0, 0, 0);
	CreateObject(2086, 349.10000610352, 162.30000305176, 1013.5999755859, 0, 0, 0);
	CreateObject(2090, 346.89999389648, 164.89999389648, 1013.200012207, 0, 0, 272);
	CreateObject(2090, 347, 160.39999389648, 1013.200012207, 0, 0, 271.9990234375);
	CreateObject(2238, 349.10000610352, 162.30000305176, 1014.4000244141, 0, 0, 0);
	CreateObject(2855, 348.60000610352, 162.5, 1014, 0, 0, 0);
	CreateObject(2852, 349.39999389648, 162.5, 1014, 0, 0, 0);
	CreateObject(2816, 348.89999389648, 161.89999389648, 1014, 0, 0, 0);
	//===============================[фдм]======================================
	CreateObject(997, 96.800003051758, 1922, 17.200000762939, 0, 0, 268);
	//===============================[стритам]======================================
	CreateObject(1251, 1161.3000488281, -752.10003662109, 58.819999694824, 0, 0, 80);
	CreateObject(1251, 1158, -751.5, 58.819999694824, 0, 0, 79.996948242188);
	//===============================[аш]======================================
	CreateObject(8678, -2056.658203125, -100.3994140625, 35.400001525879, 0, 0, 0);
	CreateObject(13681, -2034.5, -107.5, 39.599998474121, 0, 0, 179.99450683594);
	CreateObject(713, -2058, -97.199996948242, 35.099998474121, 0, 0, 0);
	CreateObject(713, -2058, -97.19921875, 35.099998474121, 0, 0, 0);
	CreateObject(713, -2020.1999511719, -87.300003051758, 35.099998474121, 0, 0, 80);
	CreateObject(713, -2093.8999023438, -87.199996948242, 35.099998474121, 0, 0, 79.996948242188);
	CreateObject(9339, -2104.8999023438, -80.5, 34.099998474121, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.5, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2042.8000488281, -80.5, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.8994140625, -80.5, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2016.638671875, -93.19921875, 34, 0, 0, 0);
	CreateObject(9339, -2029.8994140625, -80.19921875, 34, 0, 0, 90);
	CreateObject(9339, -2056, -80.199996948242, 34, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.199996948242, 34.099998474121, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.699996948242, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.900001525879, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2042.8000488281, -80.699996948242, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2042.8000488281, -80.900001525879, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.9000244141, -80.699996948242, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.9000244141, -80.900001525879, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2017.099609375, -93.5, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2104.8999023438, -80.5, 35.5, 0, 0, 90);
	CreateObject(9339, -2104.8999023438, -80.699996948242, 35.5, 0, 0, 90);
	CreateObject(9339, -2104.8999023438, -80.900001525879, 35.5, 0, 0, 90);
	CreateObject(9339, -2029.7998046875, -80.3994140625, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.7998046875, -80.19921875, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2042.8000488281, -80.199996948242, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2042.8000488281, -80.400001525879, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.199996948242, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2068.8000488281, -80.400001525879, 35.400001525879, 0, 0, 90);
	CreateObject(1696, -2084.19921875, -78, 33.900001525879, 355.74829101563, 0, 179.99450683594);
	CreateObject(1696, -2088.8000488281, -78, 33.900001525879, 355.74829101563, 0, 179.99450683594);
	CreateObject(717, -2074.2998046875, -89.8994140625, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2074.3000488281, -82.5, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2064.1000976563, -82.599998474121, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2054.5, -82.599998474121, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2044.9000244141, -82.599998474121, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2035.1999511719, -82.599998474121, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2025.6999511719, -82.599998474121, 35.200000762939, 0, 0, 90);
	CreateObject(717, -2064, -99.199996948242, 35.200000762939, 0, 0, 180);
	CreateObject(717, -2052.5, -99.300003051758, 35.200000762939, 0, 0, 180);
	CreateObject(717, -2094.3999023438, -82.400001525879, 35.200000762939, 0, 0, 90);
	CreateObject(9339, -2082.8000488281, -120.19999694824, 34.900001525879, 0, 0, 90);
	CreateObject(9339, -2056.8999023438, -120.19999694824, 34.900001525879, 0, 0, 90);
	CreateObject(9339, -2030, -120.19999694824, 34.900001525879, 0, 0, 90);
	CreateObject(9339, -2031.5999755859, -120.19999694824, 34.900001525879, 0, 0, 90);
	CreateObject(9339, -2017.099609375, -107.2998046875, 34.900001525879, 0, 0, 179.99450683594);
	CreateObject(13681, -2034.5999755859, -111.90000152588, 39.599998474121, 0, 0, 180.49450683594);
	CreateObject(3934, -2034.1999511719, -111.80000305176, 39.599998474121, 0, 0, 90);
	CreateObject(3934, -2024.0999755859, -111.80000305176, 39.599998474121, 0, 0, 90);
	CreateObject(12958, -2041, -119.80000305176, 36.299999237061, 0, 0, 0);
	CreateObject(12958, -2041, -119.7998046875, 36.299999237061, 0, 0, 0);
	CreateObject(1257, -2047.1999511719, -79.099998474121, 35.5, 0, 0, 270);
	CreateObject(1223, -2074.3000488281, -93.099998474121, 34.900001525879, 0, 0, 270);
	CreateObject(1223, -2068.8000488281, -83.699996948242, 34.900001525879, 0, 0, 270);
	CreateObject(1223, -2058.6000976563, -83.699996948242, 34.900001525879, 0, 0, 270);
	CreateObject(1223, -2042.4000244141, -83.699996948242, 34.900001525879, 0, 0, 270);
	CreateObject(1223, -2026.5999755859, -83.699996948242, 34.900001525879, 0, 0, 270);
	CreateObject(1223, -2020.4000244141, -89.900001525879, 34.900001525879, 0, 0, 270);
	CreateObject(966, -2083.3999023438, -80.599998474121, 34.799999237061, 0, 0, 0);
	CreateObject(970, -2092.4497070313, -80.630004882813, 35.200000762939, 0, 0, 0);
	CreateObject(9339, -2029.548828125, -80.19921875, 34, 0, 0, 90);
	CreateObject(9339, -2029.5494384766, -80.19921875, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.5494384766, -80.3994140625, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2016.6495361328, -107.2998046875, 34.900001525879, 0, 0, 179.99450683594);
	CreateObject(9339, -2016.8388671875, -107.2998046875, 34.900001525879, 0, 0, 179.99450683594);
	CreateObject(9339, -2016.6586914063, -107.19921875, 34, 0, 0, 0);
	CreateObject(9339, -2017.099609375, -107.33009338379, 35.400001525879, 0, 0, 179.99450683594);
	CreateObject(9339, -2016.8995361328, -93.5, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2016.6994628906, -93.5, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2016.4992675781, -93.5, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2029.4173583984, -80.19921875, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2029.4173583984, -80.5, 35.400001525879, 0, 0, 90);
	CreateObject(9339, -2016.4986572266, -93.19921875, 34, 0, 0, 0);
	CreateObject(9339, -2029.4173583984, -80.19921875, 34, 0, 0, 90);
	CreateObject(9339, -2016.8994140625, -107.33999633789, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2016.498046875, -107.33999633789, 34, 0, 0, 0);
	CreateObject(9339, -2016.4990234375, -107.33999633789, 35.400001525879, 0, 0, 0);
	CreateObject(9339, -2016.6989746094, -107.33984375, 35.400001525879, 0, 0, 0);
	LizBar = CreateDynamicObject(968, -2083.3994140625, -80.58984375, 35.5, 0, 270, 0);
	//===============================[стриты]=======================================
	StritGate = CreateDynamicObject(971, 1071.8283691406, 1362.5655517578, 11.673456954956, 0, 0, 0); //ворота Фстритов
	Strit2Gate = CreateDynamicObject(971, 1062.9665527344, 1362.5650634766, 11.673456954956, 0, 0, 0); // Ворота стритов
	//===============================[ТАКСИ]========================================
	CreateObject(991, -1750.2000732422, 987.09997558594, 24.200000762939, 0, 0, 270);
	CreateObject(991, -1750.19921875, 981.099609375, 24.200000762939, 0, 0, 270);
	TAXIGate = CreateDynamicObject(980, -1749.9000244141, 984.29998779297, 20.299999237061, 0, 0, 270); //ворота
	//================================[рифа]========================================
	RifaGate = CreateDynamicObject(988, -2489.1108398438, -125.36126708984, 25.636631011963, 0, 0, 270);
	//==============================[ТРИАДА]========================================
	CreateObject(980, 660.29998779297, -1227.5999755859, 17.700000762939, 0, 0, 66);
	CreateDynamicObject(980, 786.726074, -1152.466064, 25.404205, 0.0, 0.0, -90.000, -1, -1, -1, 300.0); //TRGate =
	TR2Gate = CreateDynamicObject(980, 664.943848, -1309.613770, 15.234329, 0.0, 0.0, -180.000, -1, -1, -1, 300.0); //
	CreateObject(974, 667.20001220703, -1216.4000244141, 19.700000762939, 0, 0, 48);
	CreateObject(974, 667.19921875, -1216.3994140625, 14.700000762939, 0, 0, 47.999267578125);
	//==================================[YAKUZA]====================================
	CreateObject(986, -2242.916, 604.810, 41.472, 0.0, 0.0, -91.719); //огрожден
	CreateObject(986, -2211.856, 578.748, 35.800, 0.0, 0.0, -180.000); //огрожден
	gateYak = CreateDynamicObject(986, -2241.450, 641.532, 50.159, 0.0, 0.0, 90.000, -1, -1, -1, 300.0); //Yak Закрыто
	CreateObject(7927, 1280.4507, -789.1681, 1084.2578, 0.000000, 0.000000, 0, 0);
	CreateObject(7927, 1251.8077, -789.1934, 1084.2578, 0.000000, 0.000000, 180, 0);
	//======================================[Killers]===============================
	KillersGate = CreateDynamicObject(10671, -1121.6000976563, -1033.1999511719, 130.10000610352, 0, 0, 359.45007324219, -1, -1, -1, 300.0); //Ворота киллеров
	//======================================[АРМИЯ]=================================
	CreateObject(9241, -1321.6999511719, 449.79998779297, 7.8000001907349, 0, 0, 270);
	CreateObject(10831, -1274.4000244141, 447.79998779297, 11.10000038147, 0, 0, 180);
	CreateObject(10831, -1246.099609375, 447.7998046875, 11.10000038147, 0, 0, 179.99450683594);
	CreateObject(10841, -1274.4000244141, 434.39999389648, 11.10000038147, 0, 0, 0);
	CreateObject(10841, -1246.3994140625, 434.3994140625, 11.10000038147, 0, 0, 0);
	CreateObject(982, -1494.3000488281, 481.5, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1468.6999511719, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(983, -1454.3000488281, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1273.0999755859, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1247.4990234375, 481.3994140625, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1298.6500244141, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1324.3000488281, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1349.9000244141, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1360.3000488281, 487.39999389648, 6.5, 0, 0, 270);
	CreateObject(982, -1375.5, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1426.6999511719, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1401.099609375, 481.3994140625, 6.9000000953674, 0, 0, 270);
	CreateObject(983, -1442.6999511719, 481.39999389648, 6.9000000953674, 0, 0, 270);
	CreateObject(984, -1230.0999755859, 476.89999389648, 6.8000001907349, 0, 0, 45.5);
	CreateObject(984, -1225.5, 472.39999389648, 6.8000001907349, 0, 0, 45.499877929688);
	CreateObject(982, -1220.8000488281, 455, 6.9000000953674, 0, 0, 0);
	CreateObject(983, -1220.8000488281, 440.60000610352, 6.9000000953674, 0, 0, 0);
	CreateObject(983, -1223.5999755859, 435.89999389648, 6.9000000953674, 0, 0, 297);
	CreateObject(983, -1229.6999511719, 434.19998168945, 6.9000000953674, 0, 0, 273.99890136719);
	CreateObject(982, -1301.4000244141, 434.20001220703, 6.9000000953674, 0, 0, 270);
	CreateObject(982, -1327, 434.20001220703, 6.9000000953674, 0, 0, 270);
	CreateObject(987, -1580.6999511719, 427.5, 6.1999998092651, 0, 0, 350);
	CreateObject(987, -1378.4000244141, 303.5, 6.1999998092651, 0, 0, 270);
	CreateObject(987, -1378.4000244141, 315.5, 6.1999998092651, 0, 0, 270);
	CreateObject(987, -1378.4000244141, 327.39999389648, 6.1999998092651, 0, 0, 270);
	CreateObject(987, -1378.4000244141, 339.10000610352, 6.1999998092651, 0, 0, 270);
	CreateObject(987, -1569, 425.29998779297, 6.1999998092651, 0, 0, 349.99694824219);
	CreateObject(987, -1557.3000488281, 423.20001220703, 6.1999998092651, 0, 0, 349.99694824219);
	CreateObject(987, -1545.5999755859, 421.10000610352, 6.1999998092651, 0, 0, 349.99694824219);
	CreateObject(987, -1533.8000488281, 418.89999389648, 6.1999998092651, 0, 0, 349.99694824219);
	VoyakGate = CreateDynamicObject(971, -1529.9065, 482.1588, 7.1875, 0.000000, 0.000000, 000.000000, 0); //Вояки ворота
	Voyak2Gate = CreateDynamicObject(3113, -1464.323, 501.525, 1.443, 0.0, 31.799, -179.923, 0); //Вояки ворота авианосца
	//====================[Rus MaF]=================================================
	RussMgate = CreateDynamicObject(976, -2511.474854, 2342.051270, 4.145635, 0.000000, 0.000000, 000.000000, -1, -1, -1, 300.0); //Ворота
	//====================[zip]=================================================
	CreateObject(2734, 1977, -2034.8000488281, 14.60000038147, 0, 0, 268);
	//===================================[Церковь]============================================
	CreateObject(14623, -1998, 1119.5, 30.599998474121, 0, 0, 270);
	CreateObject(2808, -2030.69995117, 1115.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2868, -2033.40002441, 1118.59997559, 26.60000038, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2808, -2030.69995117, 1116.90002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2030.69995117, 1123.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2030.69995117, 1121.69995117, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2027.90002441, 1123.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2027.90002441, 1121.69995117, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2025.30004883, 1123.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2025.29980469, 1121.69921875, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2022.599609375, 1121.69921875, 25.700000762939, 0, 0, 90);
	CreateObject(2808, -2022.59997559, 1123.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2027.90002441, 1116.90002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2025.2998046875, 1116.8994140625, 25.700000762939, 0, 0, 90);
	CreateObject(2808, -2022.599609375, 1116.8994140625, 25.700000762939, 0, 0, 90);
	CreateObject(2808, -2027.90002441, 1115.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2025.30004883, 1115.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2808, -2022.59997559, 1115.40002441, 25.70000076, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(2868, -2033.40002441, 1120.00000000, 26.60000038, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2842, -2033, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2031.19921875, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2029.3994140625, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2027.599609375, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2025.7998046875, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2024, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2022.19921875, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2020.3994140625, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(936, -2034.69995117, 1119.96765137, 25.11000061, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(1743, -2034.69995117, 1119.84997559, 25.29000092, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(936, -2034.69995117, 1118.64001465, 25.10000038, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(936, -2033.77990723, 1118.66003418, 25.11100006, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(936, -2033.77990723, 1119.99304199, 25.11209869, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(936, -2035.30004883, 1118.63000488, 24.86000061, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(936, -2035.30004883, 1119.96765137, 24.87000084, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(630, -2033.50000000, 1120.59997559, 26.60000038, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(630, -2033.50000000, 1118.00000000, 26.60000038, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1667, -2033.90002441, 1119.59997559, 26.39999962, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1664, -2033.80004883, 1119.09997559, 26.45999908, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(5710, -2014, 1119.33984375, 28.60000038147, 0, 0, 179.99450683594);
	CreateObject(2842, -2018.599609375, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(2842, -2016.7998046875, 1118.7998046875, 25.050001144409, 0, 0, 0);
	CreateObject(7191, -2015.66003418, 1119.69995117, 5.69999981, 90.00000000, 0.00000000, 0.00000000);
	CreateObject(7191, -2036.72998047, 1120.69995117, 27.00000000, 0.00000000, 180.00000000, 0.00000000);
	CreateObject(1557, -2015.80004883, 1117.80004883, 25.10000038, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(1557, -2015.80004883, 1120.80004883, 25.10000038, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(2894, -2033.40002441, 1119.50000000, 26.60000038, 0.00000000, 0.00000000, 280.00000000);
	CreateObject(2195, -2017.00000000, 1117.40002441, 25.70000076, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2195, -2017.00000000, 1121.30004883, 25.70000076, 0.00000000, 0.00000000, 0.00000000);
	//-----------------Боты на респах
	//-----------мусарка------------------------------------------------------------
	CreateObject(2930, 266.3984375, 88.352127075195, 1002.6759033203, 0.000000, 0.000000, 0.000000);
	CreateObject(2930, 266.39999389648, 83.865303039551, 1002.6759033203, 0.000000, 0.000000, 0.000000);
	CreateObject(1344, 1633.1999511719, -1554, 13.39999961853, 0, 0, 180);
	CreateObject(1344, 1635.0999755859, -1554, 13.39999961853, 0, 0, 179.99450683594);
	CreateObject(1344, 2941, -1520.8000488281, 10.89999961853, 0, 0, 258);
	CreateObject(1344, 476.5, -1762.1999511719, 5.3000001907349, 0, 0, 0);
	CreateObject(1344, 478.5, -1762.1999511719, 5.3000001907349, 0, 0, 0);
	CreateObject(1344, 1777.6999511719, -1687.8000488281, 13.199999809265, 0, 0, 0);
	CreateObject(1344, 979.59997558594, -922.5, 41.299999237061, 0, 0, 86);
	CreateObject(1344, 2399.8999023438, -2017.1999511719, 13.39999961853, 0, 0, 178);
	CreateObject(1344, 2397.8999023438, -2017.0999755859, 13.39999961853, 0, 0, 177.99499511719);
	CreateObject(1344, 2134.8999023438, -1207, 23.700000762939, 0, 0, 48);
	//==================================[CopGun]====================================
	CreateObject(10631, -1920.69995117, 883.40002441, 38.29999924, 0.00000000, 0.00000000, 270.00000000);
	CreateObject(1497, -1911.80004883, 882.05999756, 34.29999924, 0.00000000, 0.00000000, 90.00000000);
	CreateObject(1693, -1917.50000000, 889.29998779, 43.40000153, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(1693, -1917.50000000, 878.29998779, 43.40000153, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(5837, -1513.80004883, 479.20001221, 7.61999989, 0.00000000, 0.00000000, 180.00000000);
	CreateObject(2040, -1516.80004883, 479.50000000, 6.30000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2043, -1516.80004883, 478.70001221, 6.30000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2359, -1515.80004883, 480.20001221, 6.40000010, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2359, -1516.00000000, 478.79998779, 6.40000010, 0.00000000, 0.00000000, 120.00000000);
	CreateObject(2040, -1515.69995117, 478.10000610, 6.30000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(3016, -1510.69995117, 478.50000000, 6.30000019, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(3015, -1510.59997559, 479.50000000, 6.19999981, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(3014, -1511.40002441, 478.29998779, 6.40000010, 0.00000000, 0.00000000, 0.00000000);

	CreateObject(2060, 2172.89526367, -2256.86108398, 12.46142387, 0.00000000, 0.00000000, 44.00000000);
	CreateObject(2060, 2172.89453125, -2256.86035156, 12.46142387, 0.00000000, 0.00000000, 43.99475098);
	CreateObject(2060, 2172.42309570, -2256.42822266, 12.46099281, 0.00000000, 0.00000000, 47.25003052);
	CreateObject(2060, 2173.31835938, -2257.36694336, 12.46148300, 0.00000000, 0.00000000, 43.75000000);
	CreateObject(2060, 2172.75854492, -2256.49853516, 12.77687645, 0.00000000, 0.00000000, 315.24987793);
	CreateObject(2060, 2172.41381836, -2256.85815430, 12.77693558, 0.00000000, 0.00000000, 316.25000000);
	CreateObject(2060, 2173.61865234, -2257.31201172, 12.77693558, 0.00000000, 0.00000000, 136.00000000);
	CreateObject(2060, 2173.29321289, -2257.70800781, 12.77693558, 0.00000000, 0.00000000, 134.00000000);
	CreateObject(2060, 2173.73193359, -2257.77856445, 12.46504116, 0.00000000, 0.00000000, 42.00000000);
	CreateObject(2060, 2172.61962891, -2256.63281250, 13.09232903, 0.00000000, 0.00000000, 0.00000000);
	CreateObject(2060, 2229.29809570, -2286.05883789, 13.53178787, 0.00000000, 0.00000000, 226.00000000);
	CreateObject(2060, 2229.61987305, -2286.45825195, 13.53178787, 0.00000000, 0.00000000, 45.00000000);
	CreateObject(2060, 2230.00610352, -2286.81738281, 13.53178787, 0.00000000, 0.00000000, 44.00000000);
	CreateObject(2060, 2230.39746094, -2287.23168945, 13.53178787, 0.00000000, 0.00000000, 44.00000000);
	CreateObject(2060, 2229.35400391, -2286.54858398, 13.80724049, 0.00000000, 0.00000000, 134.00000000);
	CreateObject(2060, 2230.20898438, -2286.95312500, 13.82723999, 0.00000000, 0.00000000, 102.00000000);
	Create3DTextLabel("{FFFFFF}Место погрузки Трейлеров\nИспользуйте {00C0FF}/delivery{FFFFFF}\n\n{FF0000}Соблюдайте осторожность и дистанцию.", COLOR_WHITE, -86.3184, -299.9765, 5.9812, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Место работы: Грузчик\n Подойди к пикапу,чтобы приступить к работе", 0x0000FFAA, 2137.8227539063, -2282.4379882813, 20.671875, 40.0, 0, 1);
	Create3DTextLabel("[{FFFFFF}Подойди к пикапу,чтобы получить зарплату", 0x0000FFAA, 2127.6430664063, -2275.4113769531, 20.671875, 40.0, 0, 1);
	Create3DTextLabel(" Разгрузка\n медикаментов", COLOR_GREEN, -2685.3289, 636.1305, 14.4531, 10.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/buytune{FFFFFF} для тюнинга автомобиля.", COLOR_WHITE, 1017.6431, -916.8083, 42.2262, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/copgun{FFFFFF} для покупки оружия.", COLOR_WHITE, 1580.3419, -1634.6920, 13.5615, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/copgun {FFFFFF}для покупки оружия.", COLOR_WHITE, -1616.4886, 685.6258, 7.1875, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/copgun {FFFFFF}для покупки оружия.", COLOR_WHITE, -1515.2664, 479.2319, 7.1903, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/sdat {FFFFFF}для сдачи запретных веществ.", COLOR_WHITE, 1580.40, -1636.75, 13.56, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/sdat {FFFFFF}для сдачи запретных веществ.", COLOR_WHITE, -1614.71, 680.93, 7.19, 40.0, 0, 1);
	Create3DTextLabel("{FFFFFF}Введи команду {00C0FF}/sdat {FFFFFF}для сдачи запретных веществ.", COLOR_WHITE, -1519.48, 479.52, 7.18, 40.0, 0, 1);
	Textdraw0 = TextDrawCreate(500.000000, 401.000000, "YourGame-Server");
	Textdraw1 = TextDrawCreate(536.000000, 412.000000, "   RPG");
	Textdraw2 = TextDrawCreate(514.000000, 394.000000, "YourGame.su");
	TextDrawAlignment(Textdraw0, 0);
	TextDrawAlignment(Textdraw1, 0);
	TextDrawAlignment(Textdraw2, 0);
	TextDrawBackgroundColor(Textdraw0, 0x000000ff);
	TextDrawBackgroundColor(Textdraw1, 0x000000ff);
	TextDrawBackgroundColor(Textdraw2, 0x000000ff);
	TextDrawFont(Textdraw0, 2);
	TextDrawLetterSize(Textdraw0, 0.399999, 1.900000);
	TextDrawFont(Textdraw1, 0);
	TextDrawLetterSize(Textdraw1, 0.799999, 2.399999);
	TextDrawFont(Textdraw2, 2);
	TextDrawLetterSize(Textdraw2, 0.199999, 1.000000);
	TextDrawColor(Textdraw0, 0xffffffff);
	TextDrawColor(Textdraw1, 0xFF9900ff);
	TextDrawColor(Textdraw2, 0xFF9900ff);
	TextDrawSetOutline(Textdraw0, 1);
	TextDrawSetOutline(Textdraw1, 1);
	TextDrawSetOutline(Textdraw2, 1);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetProportional(Textdraw1, 1);
	TextDrawSetProportional(Textdraw2, 1);
	TextDrawSetShadow(Textdraw0, 1);
	TextDrawSetShadow(Textdraw1, 1);
	TextDrawSetShadow(Textdraw2, 1);
	new string[MAX_PLAYER_NAME];
	new string1[MAX_PLAYER_NAME];
	for (new c = 0; c < CAR_AMOUNT; c++) {
		Gas[c] = GasMax;
	}
	txtTimeDisp = TextDrawCreate(548.0, 23.0, "00:00");
	TextDrawAlignment(txtTimeDisp, 0);
	TextDrawBackgroundColor(txtTimeDisp, 0x000000FF);
	TextDrawFont(txtTimeDisp, 3);
	TextDrawLetterSize(txtTimeDisp, 0.5999, 2.2999);
	TextDrawColor(txtTimeDisp, 0xF6F6F6EA);
	TextDrawSetOutline(txtTimeDisp, 2);
	TextDrawSetProportional(txtTimeDisp, true);
	TextDrawSetShadow(txtTimeDisp, 10);
	UpdateTime();
	SetTimer("UpdateTime", 1000 * 60, 1);
	InitDraws();
	printf("LoadDraws");
	LoadBizz();
	printf("LoadBiz");
	LoadSBizz();
	printf("LoadSBiz");
	LoadStuff();
	printf("LoadStuff");
	LoadCK();
	printf("LoadCK");
	LoadPapers();
	printf("LPapersz");
	News[hTaken1] = 0;
	News[hTaken2] = 0;
	News[hTaken3] = 0;
	News[hTaken4] = 0;
	News[hTaken5] = 0;
	strmid(News[hAdd1], "Nothing", 0, strlen(string), 255);
	strmid(News[hAdd2], "Nothing", 0, strlen(string), 255);
	strmid(News[hAdd3], "Nothing", 0, strlen(string), 255);
	strmid(News[hAdd4], "Nothing", 0, strlen(string), 255);
	strmid(News[hAdd5], "Nothing", 0, strlen(string), 255);
	strmid(News[hContact1], "No-one", 0, strlen(string1), 255);
	strmid(News[hContact2], "No-one", 0, strlen(string1), 255);
	strmid(News[hContact3], "No-one", 0, strlen(string1), 255);
	strmid(News[hContact4], "No-one", 0, strlen(string1), 255);
	strmid(News[hContact5], "No-one", 0, strlen(string1), 255);
	SetGameModeText("EY: LS/SF/LV [RPG]");
	format(objstore, sizeof(objstore), "MOLE: Я ничего неполучил, свяжитесь со мной попозже.");
	format(cbjstore, sizeof(cbjstore), "HQ: Некого нет в вашей местности, Out.");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if (!realtime) {
		SetWorldTime(wtime);
	}
	SetNameTagDrawDistance(20); // Дистанция отображения ников
	AllowInteriorWeapons(1);
	Vagos[0] = AddStaticVehicleEx(576, 2848.8210, -1186.7214, 24.2752, 6.2282, 6, 6, 900);
	AddStaticVehicleEx(576, 2847.6450, -1175.0442, 24.3876, 185.4123, 6, 6, 900);
	AddStaticVehicleEx(474, 2828.2422, -1197.0060, 24.6040, 0.8557, 6, 6, 900);
	AddStaticVehicleEx(467, 2807.6074, -1178.8964, 25.1306, 271.2893, 6, 1, 900);
	AddStaticVehicleEx(474, 2821.3923, -1187.8322, 24.9783, 268.0295, 6, 6, 900);
	AddStaticVehicleEx(566, 2821.7532, -1178.3933, 25.1081, 271.2586, 6, 6, 900);
	Vagos[1] = AddStaticVehicleEx(566, 2826.9658, -1169.4065, 24.9781, 184.0925, 6, 6, 900);
	Aztek[0] = AddStaticVehicleEx(535, 1774.5341, -1892.2129, 13.2282, 178.8699, 2, 2, 900);
	AddStaticVehicleEx(535, 1797.4159, -1884.8256, 13.2465, 271.3840, 2, 2, 900);
	AddStaticVehicleEx(534, 1806.4478, -1914.3119, 13.2024, 0.8553, 2, 2, 900);
	AddStaticVehicleEx(534, 1806.4285, -1927.3925, 13.1953, 0.5004, 2, 2, 900);
	AddStaticVehicleEx(419, 1803.6759, -1935.5990, 13.2593, 89.0077, 2, 2, 900);
	AddStaticVehicleEx(534, 1787.4200, -1935.4480, 13.1887, 91.6817, 2, 2, 900);
	AddStaticVehicleEx(567, 1774.6995, -1925.1711, 13.3325, 0.8586, 2, 2, 900);
	Aztek[1] = AddStaticVehicleEx(567, 1774.6978, -1910.5107, 13.3348, 359.9314, 2, 2, 900);
	//=================================[Трейлеры]===================================
	AddStaticVehicle(435, -232.6993, -189.3563, 2.0588, 168.0977, 1, 1);
	AddStaticVehicle(435, -226.6552, -190.6302, 2.0587, 168.0977, 1, 1);
	AddStaticVehicle(435, -221.2907, -191.9358, 2.0615, 168.0977, 1, 1);
	AddStaticVehicle(435, -216.3044, -193.0117, 2.0618, 168.0977, 1, 1);
	AddStaticVehicle(450, -211.3488, -194.3557, 2.0666, 168.0977, 1, 1);
	AddStaticVehicle(450, -207.0300, -195.2909, 2.0669, 168.0977, 1, 1);
	AddStaticVehicle(450, -202.5486, -196.4103, 2.0697, 168.0977, 1, 1);
	AddStaticVehicle(450, -197.2914, -197.5184, 2.0696, 168.0977, 1, 1);
	AddStaticVehicle(450, -192.8383, -198.6562, 2.0728, 168.0977, 1, 1);
	AddStaticVehicle(584, -187.1152, -201.0571, 2.5999, 167.1223, 1, 1);
	AddStaticVehicle(584, -181.8957, -202.4259, 2.6031, 167.1223, 1, 1);
	AddStaticVehicle(584, -175.7538, -203.8301, 2.6031, 167.1223, 1, 1);
	AddStaticVehicle(584, -169.0684, -205.3586, 2.6031, 167.1223, 1, 1);
	AddStaticVehicle(591, -189.1694, -247.2982, 2.0550, 269.1382, 1, 1);
	//====================================[TRIADS]==================================
	Triad[0] = AddStaticVehicleEx(409, 659.7657, -1279.4584, 13.8359, 181.6864, 0, 0, 900);
	AddStaticVehicleEx(560, 670.4441, -1286.2716, 13.4166, 180.0360, 0, 0, 900);
	AddStaticVehicleEx(560, 692.6685, -1219.3087, 16.5963, 118.8620, 0, 0, 900);
	AddStaticVehicleEx(560, 687.8652, -1233.4291, 15.8813, 120.9831, 0, 0, 900);
	AddStaticVehicleEx(560, 659.9333, -1257.4114, 13.4035, 179.0736, 0, 0, 900);
	Triad[1] = AddStaticVehicleEx(560, 670.4203, -1260.3315, 13.4365, 179.5769, 0, 0, 900);
	Street[0] = AddStaticVehicleEx(560, 1093.7612, 1313.3556, 10.5253, 90.3775, 1, 1, 900);
	Street[1] = AddStaticVehicleEx(560, 1093.7035, 1307.3967, 10.5254, 91.7893, 1, 1, 900);
	Street[2] = AddStaticVehicleEx(562, 1080.1821, 1229.6794, 10.4791, 359.0475, 1, 1, 900);
	Street[3] = AddStaticVehicleEx(562, 1084.3190, 1229.6608, 10.4798, 359.9464, 1, 1, 900);
	Street[4] = AddStaticVehicleEx(559, 1093.8137, 1280.2571, 10.4766, 93.8684, 1, 1, 900);
	Street[5] = AddStaticVehicleEx(559, 1093.6864, 1274.1539, 10.4766, 92.1922, 1, 1, 900);
	Street[6] = AddStaticVehicleEx(558, 1063.4071, 1230.0215, 10.4579, 0.8437, 1, 1, 900);
	Street[7] = AddStaticVehicleEx(558, 1069.8411, 1229.8333, 10.4568, 358.7612, 1, 1, 900);
	Street[8] = AddStaticVehicleEx(558, 1074.1637, 1229.6835, 10.4580, 0.1527, 1, 1, 900);
	Street[9] = AddStaticVehicleEx(562, 1090.6993, 1229.6162, 10.4798, 0.4343, 1, 1, 900);
	Street[10] = AddStaticVehicleEx(559, 1093.9480, 1266.1349, 10.4767, 92.7073, 1, 1, 900);
	Street[11] = AddStaticVehicleEx(560, 1093.9105, 1299.9916, 10.5256, 92.9952, 1, 1, 900);
	//---------sultan tuning------------------
	ChangeVehiclePaintjob(Street[0], 2);
	AddVehicleComponent(Street[0], 1026);
	AddVehicleComponent(Street[0], 1028);
	AddVehicleComponent(Street[0], 1032);
	AddVehicleComponent(Street[0], 1010); //Закись азота
	AddVehicleComponent(Street[0], 1080);
	AddVehicleComponent(Street[0], 1140);
	AddVehicleComponent(Street[0], 1169);
	AddVehicleComponent(Street[0], 1138);
	ChangeVehiclePaintjob(Street[1], 1);
	AddVehicleComponent(Street[1], 1027);
	AddVehicleComponent(Street[1], 1029);
	AddVehicleComponent(Street[1], 1033);
	AddVehicleComponent(Street[1], 1010); //Закись азота
	AddVehicleComponent(Street[1], 1085);
	AddVehicleComponent(Street[1], 1170);
	AddVehicleComponent(Street[1], 1141);
	AddVehicleComponent(Street[1], 1139);

	ChangeVehiclePaintjob(Street[11], 0);
	AddVehicleComponent(Street[11], 1026);
	AddVehicleComponent(Street[11], 1028);
	AddVehicleComponent(Street[11], 1032);
	AddVehicleComponent(Street[11], 1010); //Закись азота
	AddVehicleComponent(Street[11], 1080);
	AddVehicleComponent(Street[11], 1140);
	AddVehicleComponent(Street[11], 1169);
	AddVehicleComponent(Street[11], 1138);

	//--------------chester tuning---------------------------
	ChangeVehiclePaintjob(Street[4], 1);
	AddVehicleComponent(Street[4], 1065);
	AddVehicleComponent(Street[4], 1067);
	AddVehicleComponent(Street[4], 1069);
	AddVehicleComponent(Street[4], 1158);
	AddVehicleComponent(Street[4], 1010); //Закись азота
	AddVehicleComponent(Street[4], 1159);
	AddVehicleComponent(Street[4], 1082);
	AddVehicleComponent(Street[4], 1160);
	ChangeVehiclePaintjob(Street[5], 2);
	AddVehicleComponent(Street[5], 1066);
	AddVehicleComponent(Street[5], 1068);
	AddVehicleComponent(Street[5], 1070);
	AddVehicleComponent(Street[5], 1010); //Закись азота
	AddVehicleComponent(Street[5], 1161);
	AddVehicleComponent(Street[5], 1173);
	AddVehicleComponent(Street[5], 1162);
	AddVehicleComponent(Street[5], 1080);

	ChangeVehiclePaintjob(Street[10], 0);
	AddVehicleComponent(Street[10], 1065);
	AddVehicleComponent(Street[10], 1067);
	AddVehicleComponent(Street[10], 1069);
	AddVehicleComponent(Street[10], 1158);
	AddVehicleComponent(Street[10], 1010); //Закись азота
	AddVehicleComponent(Street[10], 1159);
	AddVehicleComponent(Street[10], 1082);
	AddVehicleComponent(Street[10], 1160);

	//----------Elegy-----------------------
	ChangeVehiclePaintjob(Street[2], 2);
	AddVehicleComponent(Street[2], 1034);
	AddVehicleComponent(Street[2], 1038);
	AddVehicleComponent(Street[2], 1036);
	AddVehicleComponent(Street[2], 1010); //Закись азота
	AddVehicleComponent(Street[2], 1146);
	AddVehicleComponent(Street[2], 1082);
	AddVehicleComponent(Street[2], 1149);
	AddVehicleComponent(Street[2], 1171);
	AddVehicleComponent(Street[2], 1067);
	AddVehicleComponent(Street[2], 1159);
	AddVehicleComponent(Street[2], 1160);
	AddVehicleComponent(Street[2], 1158);

	ChangeVehiclePaintjob(Street[3], 1);
	AddVehicleComponent(Street[3], 1037);
	AddVehicleComponent(Street[3], 1035);
	AddVehicleComponent(Street[3], 1039);
	AddVehicleComponent(Street[3], 1010); //Закись азота
	AddVehicleComponent(Street[3], 1147);
	AddVehicleComponent(Street[3], 1148);
	AddVehicleComponent(Street[3], 1084);
	AddVehicleComponent(Street[3], 1172);
	AddVehicleComponent(Street[3], 1068);
	AddVehicleComponent(Street[3], 1061);
	AddVehicleComponent(Street[3], 1173);
	AddVehicleComponent(Street[3], 1162);

	ChangeVehiclePaintjob(Street[9], 0);
	AddVehicleComponent(Street[9], 1034);
	AddVehicleComponent(Street[9], 1038);
	AddVehicleComponent(Street[9], 1036);
	AddVehicleComponent(Street[9], 1010); //Закись азота
	AddVehicleComponent(Street[9], 1146);
	AddVehicleComponent(Street[9], 1082);
	AddVehicleComponent(Street[9], 1149);
	AddVehicleComponent(Street[9], 1171);
	AddVehicleComponent(Street[9], 1067);
	AddVehicleComponent(Street[9], 1159);
	AddVehicleComponent(Street[9], 1160);
	AddVehicleComponent(Street[9], 1158);

	//---------------Yranus------------------
	ChangeVehiclePaintjob(Street[6], 2);
	AddVehicleComponent(Street[6], 1088);
	AddVehicleComponent(Street[6], 1089);
	AddVehicleComponent(Street[6], 1090);
	AddVehicleComponent(Street[6], 1010); //Закись азота
	AddVehicleComponent(Street[6], 1163);
	AddVehicleComponent(Street[6], 1165);
	AddVehicleComponent(Street[6], 1084);
	AddVehicleComponent(Street[6], 1167);

	ChangeVehiclePaintjob(Street[7], 1);
	AddVehicleComponent(Street[7], 1089);
	AddVehicleComponent(Street[7], 1090);
	AddVehicleComponent(Street[7], 1091);
	AddVehicleComponent(Street[7], 1081);
	AddVehicleComponent(Street[7], 1010); //Закись азота
	AddVehicleComponent(Street[7], 1164);
	AddVehicleComponent(Street[7], 1166);
	AddVehicleComponent(Street[7], 1168);

	ChangeVehiclePaintjob(Street[8], 0);
	AddVehicleComponent(Street[8], 1088);
	AddVehicleComponent(Street[8], 1089);
	AddVehicleComponent(Street[8], 1090);
	AddVehicleComponent(Street[8], 1010); //Закись азота
	AddVehicleComponent(Street[8], 1163);
	AddVehicleComponent(Street[8], 1165);
	AddVehicleComponent(Street[8], 1084);
	AddVehicleComponent(Street[8], 1167);

	AddStaticVehicleEx(525, -1914.4410, 305.2249, 40.7902, 178.5627, 1, 1, 300); // MEXАНЬКО ---------------------------------------
	AddStaticVehicleEx(525, -1934.3958, 256.6778, 40.7903, 272.2288, 1, 1, 300); // MEXАНЬКО ---------------------------------------
	AddStaticVehicleEx(525, -1935.0892, 262.4083, 40.7902, 275.2245, 1, 1, 300); // MEXАНЬКО ---------------------------------------
	AddStaticVehicleEx(525, -1916.6123, 255.5192, 40.9203, 0.0980, 1, 1, 300);
	AddStaticVehicleEx(525, -1928.3384, 273.3940, 40.9237, 179.6367, 1, 1, 300);
	AddStaticVehicleEx(525, -1935.2673, 269.5776, 40.9236, 274.1251, 1, 1, 300);
	AddStaticVehicleEx(525, -1922.7992, 243.3373, 40.9255, 358.5219, 1, 1, 300);
	AddStaticVehicleEx(525, -1920.6392, 304.9603, 40.7901, 181.3944, 1, 1, 600);

	Instruc[0] = AddStaticVehicleEx(426, -2020.2783, -94.2018, 35.6280, 90.1748, 46, 46, 400);
	AddStaticVehicleEx(426, -2030.0892, -87.4376, 35.6269, 180.4134, 46, 46, 400);
	AddStaticVehicleEx(426, -2036.5526, -87.4422, 35.6292, 179.6703, 46, 46, 400);
	AddStaticVehicleEx(426, -2042.9564, -87.4947, 35.6233, 179.9443, 46, 46, 400);
	AddStaticVehicleEx(426, -2049.2705, -87.4750, 35.6285, 179.5720, 46, 46, 400);
	AddStaticVehicleEx(426, -2055.7153, -87.4565, 35.6288, 179.2945, 46, 46, 400);
	AddStaticVehicleEx(426, -2062.1067, -87.5038, 35.6400, 181.4848, 46, 46, 400);
	AddStaticVehicleEx(426, -2068.4680, -87.4161, 35.6286, 179.4523, 46, 46, 400);
	Instruc[1] = AddStaticVehicleEx(426, -2092.6816, -98.4454, 35.6210, 269.5468, 46, 46, 400);
	M4C[0] = AddStaticVehicleEx(416, -2638.3411, 586.7634, 14.6036, 0.7280, 1, 3, 900); // МЧС фургон
	AddStaticVehicleEx(416, -2705.9285, 623.5914, 14.6034, 178.8139, 1, 3, 900); //         МЧС фургон
	AddStaticVehicleEx(416, -2640.6465, 608.7252, 14.6025, 181.3149, 1, 3, 900); //         МЧС фургон
	AddStaticVehicleEx(416, -2706.6138, 589.9547, 14.6025, 266.3940, 1, 3, 900); //         МЧС фургон
	AddStaticVehicleEx(563, -2726.6775, 598.9080, 34.0023, 1.9837, 1, 3, 900); //         МЧС Вертолёт
	AddStaticVehicleEx(416, -2669.8337, 609.5032, 14.6137, 179.5912, 1, 3, 900); //         МЧС фургон
	AddStaticVehicleEx(415, -2697.6150, 608.5897, 14.6867, 176.4231, 3, 1, 900); //Гепарды медики
	AddStaticVehicleEx(415, -2693.1843, 608.5897, 14.6877, 177.7290, 3, 1, 900); //Гепарды медики
	AddStaticVehicleEx(415, -2685.2971, 608.5897, 14.2256, 177.0186, 3, 1, 900);
	AddStaticVehicleEx(415, -2677.9248, 608.5897, 14.2257, 177.7388, 3, 1, 900);
	AddStaticVehicleEx(609, -2707.1736, 595.2089, 14.2236, 270.3797, 3, 3, 900);
	AddStaticVehicleEx(609, -2707.7346, 602.8040, 14.2242, 268.7805, 3, 3, 900);
	M4C[1] = AddStaticVehicleEx(416, -2646.3025, 586.6199, 14.6025, 1.3585, 1, 3, 900); // МЧС фургон
	Groov[0] = AddStaticVehicleEx(492, 2473.1091, -1693.5739, 13.2967, 358.3529, 86, 86, 900); // Grove Street Gang -----------------
	AddStaticVehicleEx(482, 2505.3611, -1694.1339, 13.6749, 359.0538, 86, 86, 900); //     Grove Street Gang ------------------------
	AddStaticVehicleEx(492, 2510.2700, -1687.6451, 13.3393, 50.5034, 86, 86, 900); //    Grove Street Gang ------------------------
	AddStaticVehicleEx(534, 2498.9854, -1651.0857, 13.2316, 165.4529, 86, 86, 900); //    Grove Street Gang ------------------------
	AddStaticVehicleEx(535, 2504.9570, -1652.8077, 13.3133, 150.8386, 86, 86, 900); //    Grove Street Gang ------------------------
	AddStaticVehicleEx(567, 2481.9978, -1692.5370, 13.2249, 355.1308, 86, 86, 900); //    Grove Street Gang ------------------------
	AddStaticVehicleEx(567, 2507.7644, -1667.1017, 13.2636, 11.2308, 86, 86, 900); //     Grove Street Gang ------------------------
	AddStaticVehicleEx(536, 2484.4934, -1651.5065, 13.2120, 88.3069, 86, 86, 900);
	AddStaticVehicleEx(536, 2472.6980, -1651.7489, 13.2071, 90.6958, 86, 86, 900);
	Groov[1] = AddStaticVehicleEx(567, 2505.7063, -1676.0760, 13.2456, 326.9925, 86, 86, 900); // Grove Street Gang ----------------
	LKN[0] = AddStaticVehicleEx(487, 1116.9788, -2021.3130, 74.5684, 183.9530, 0, 0, 900); // LCN вертолёт -----------------------
	AddStaticVehicleEx(409, 1261.4736, -2012.4209, 59.1753, 180.6290, 0, 0, 900); // LCN  лимузин ----------------------
	AddStaticVehicleEx(560, 1246.3229, -2040.6078, 59.5225, 270.6992, 0, 0, 900); // LCN султан  ---------------------------------
	AddStaticVehicleEx(560, 1246.4088, -2011.6581, 59.5150, 269.9107, 0, 0, 900); // LCN султан  ---------------------------------
	AddStaticVehicleEx(560, 1246.1803, -2027.5382, 59.5271, 270.4315, 0, 0, 900); // LCN султан у дома -----------------
	AddStaticVehicleEx(533, 1276.3042, -2011.6254, 58.6604, 89.6014, 0, 0, 900);
	AddStaticVehicleEx(533, 1276.4741, -2026.9012, 58.6868, 91.5107, 0, 0, 900);
	LKN[1] = AddStaticVehicleEx(533, 1276.7037, -2040.4103, 58.7363, 90.6770, 0, 0, 900);
	Yakudza[0] = AddStaticVehicleEx(409, -2174.2668, 705.9076, 53.6905, 181.8948, 0, 0, 900); // ЯКУДЗА лимузин ------------------------------
	AddStaticVehicleEx(560, -2176.6797, 635.9197, 49.1426, 51.6964, 0, 0, 900); // ЯКУДЗА султан ----------------------------
	AddStaticVehicleEx(560, -2181.7764, 646.2629, 49.1424, 90.8759, 0, 0, 900); // ЯКУДЗА султан ----------------------------
	AddStaticVehicleEx(487, -2191.8511, 656.2933, 74.0127, 87.9716, 0, 0, 900); // ЯКУДЗА вертолёт -----------------------------
	AddStaticVehicleEx(560, -2213.5923, 638.1583, 49.1547, 271.7797, 0, 0, 900); //   ЯКУДЗА султан ---------------------------------
	AddStaticVehicleEx(507, -2178.8594, 715.2338, 53.7169, 179.3407, 0, 0, 900);
	AddStaticVehicleEx(507, -2184.3994, 714.9557, 53.7219, 179.0538, 0, 0, 900);
	Yakudza[1] = AddStaticVehicleEx(560, -2207.0881, 632.4547, 49.0086, 0.0624, 0, 0, 900); //ЯКУДЗА вирго -----------------------
	Taxi[0] = AddStaticVehicleEx(438, -1702.7164, 1011.9161, 17.6438, 270.7443, 6, 6, 900);
	AddStaticVehicleEx(438, -1702.6383, 1003.6492, 17.6406, 268.9789, 6, 6, 900);
	AddStaticVehicleEx(438, -1702.7065, 1024.2166, 17.6405, 270.1539, 6, 6, 900);
	AddStaticVehicleEx(438, -1702.8143, 1032.5734, 17.6428, 271.4232, 6, 6, 900);
	AddStaticVehicleEx(579, -1734.9384, 1007.9759, 17.5167, 271.2485, 6, 6, 900);
	AddStaticVehicleEx(579, -1734.7959, 1024.8219, 17.4800, 268.0387, 6, 6, 900);
	AddStaticVehicleEx(579, -1734.5052, 1016.1552, 17.2910, 268.4641, 6, 6, 900);
	AddStaticVehicleEx(560, -1720.4913, 1024.4169, 17.2927, 93.7957, 6, 6, 900);
	AddStaticVehicleEx(560, -1720.0944, 1012.1600, 17.2914, 88.5257, 6, 6, 900);
	AddStaticVehicleEx(560, -1720.7181, 1028.2944, 17.2912, 90.9459, 6, 6, 900);
	AddStaticVehicleEx(560, -1720.0579, 1008.0293, 17.2912, 91.7361, 6, 6, 900);
	AddStaticVehicleEx(420, -1688.0786, 999.6130, 17.3667, 90.0722, 6, 6, 900);
	AddStaticVehicleEx(420, -1687.9735, 1003.8098, 17.3655, 90.6417, 6, 6, 900);
	AddStaticVehicleEx(420, -1687.9990, 1007.8484, 17.3657, 88.3756, 6, 6, 900);
	AddStaticVehicleEx(420, -1687.8751, 1012.0521, 17.3667, 91.2906, 6, 6, 900);
	AddStaticVehicleEx(420, -1687.7727, 1016.2585, 17.3638, 87.1446, 6, 6, 900);
	AddStaticVehicleEx(420, -1687.7158, 1020.0754, 17.3653, 91.4141, 6, 6, 900);
	AddStaticVehicleEx(409, -1713.5836, 998.5845, 17.7141, 179.5061, 1, 1, 900);
	Taxi[1] = AddStaticVehicleEx(409, -1710.3057, 998.6193, 17.7009, 178.6692, 0, 0, 900);
	//=============================[Репортеры вертолет]=============================
	Report2 = AddStaticVehicleEx(488, 741.9671, -1368.7783, 25.8694, 314.2643, -1, -1, 900);
	//--------------------------------[РЕПОРТЁРЫ]-----------------------------------
	Report[0] = AddStaticVehicleEx(582, 762.6199, -1377.8403, 13.6757, 268.4924, 77, 1, 900); //   newsvan
	AddStaticVehicleEx(582, 762.7374, -1371.1536, 13.5858, 269.7543, 77, 1, 900); // newsvan
	AddStaticVehicleEx(582, 762.9130, -1364.8353, 13.5765, 270.3379, 77, 1, 900);
	AddStaticVehicleEx(582, 762.8632, -1358.2122, 13.5804, 269.7573, 77, 1, 900);
	AddStaticVehicleEx(585, 759.7320, -1333.8406, 13.1280, 180.7411, 77, 77, 900);
	AddStaticVehicleEx(585, 753.8488, -1333.8054, 13.1279, 181.3865, 77, 77, 900);
	AddStaticVehicleEx(585, 748.0480, -1333.8330, 13.1281, 180.8133, 77, 77, 900);
	Report[1] = AddStaticVehicleEx(585, 742.2719, -1333.9988, 13.1277, 180.0177, 77, 77, 900);
	//---------------------------------[ХИТМАНЫ]------------------------------------
	Hit[0] = AddStaticVehicleEx(487, -1146.1799, -1040.2810, 129.3954, 30.8842, 0, 0, 900);
	AddStaticVehicleEx(560, -1108.8740, -1041.4104, 128.9178, 359.5188, 0, 0, 900);
	AddStaticVehicleEx(560, -1095.5991, -1041.2925, 128.9177, 355.7986, 0, 0, 900);
	AddStaticVehicleEx(560, -1085.2266, -1032.4696, 128.9255, 64.7755, 0, 0, 900);
	AddStaticVehicleEx(560, -1084.9138, -1025.5720, 128.9246, 66.4451, 0, 0, 900);
	AddStaticVehicleEx(560, -1085.1167, -994.3525, 128.9468, 122.6466, 0, 0, 900);
	AddStaticVehicleEx(560, -1085.5128, -985.9437, 128.9089, 122.8418, 0, 0, 900);
	AddStaticVehicleEx(560, -1085.8280, -978.5054, 128.9413, 128.3845, 0, 0, 900);
	AddStaticVehicleEx(522, -1097.5392, -976.4625, 128.7871, 151.6506, 0, 0, 900);
	AddStaticVehicleEx(522, -1103.2748, -974.3704, 128.7865, 155.4165, 0, 0, 900);
	AddStaticVehicleEx(522, -1108.9985, -971.7581, 128.7798, 148.2605, 0, 0, 900);
	AddStaticVehicleEx(522, -1119.7751, -998.4826, 128.9200, 181.4883, 0, 0, 900);
	Hit[1] = AddStaticVehicleEx(522, -1119.4960, -1022.5143, 128.9267, 179.0880, 0, 0, 900);
	Balla[0] = AddStaticVehicleEx(566, 2012.2290, -1110.7532, 25.9549, 139.9010, 85, 0, 900);
	AddStaticVehicleEx(566, 2000.0647, -1143.5834, 25.2177, 269.2925, 85, 0, 900);
	AddStaticVehicleEx(517, 2019.3447, -1128.2896, 24.8203, 88.5800, 85, 0, 900);
	AddStaticVehicleEx(517, 1977.0548, -1149.2836, 25.8650, 359.3073, 85, 0, 900);
	AddStaticVehicleEx(412, 1978.9445, -1122.1824, 25.7784, 354.4846, 85, 0, 900);
	Balla[1] = AddStaticVehicleEx(421, 1989.7024, -1119.7772, 26.6602, 268.7370, 85, 0, 900);
	//=========================[Транспорт квартирных домов]=========================
	kvartiraLS[0] = AddStaticVehicleEx(475, 295.3195, -1540.8015, 24.3208, 54.3092, 1, 1, 600);
	AddStaticVehicleEx(479, 284.6301, -1526.8899, 24.3208, 233.9487, 2, 2, 600);
	AddStaticVehicleEx(489, 303.3848, -1486.1676, 24.3208, 234.4010, 3, 3, 600);
	AddStaticVehicleEx(401, 300.8416, -1504.4786, 24.3243, 235.2083, 4, 4, 600);
	kvartiraLS[1] = AddStaticVehicleEx(439, 294.8539, -1513.8403, 24.3208, 233.9993, 5, 5, 600);

	kvartiraLS2[0] = AddStaticVehicleEx(560, 1371.6128, -1081.0801, 24.9310, 345.8666, 6, 6, 600);
	AddStaticVehicleEx(404, 1373.9590, -1068.6989, 26.0189, 352.1714, 7, 7, 600);
	AddStaticVehicleEx(445, 1367.2810, -1102.6448, 23.7783, 349.9983, 8, 8, 600);
	AddStaticVehicleEx(458, 1365.6808, -1112.7860, 23.6484, 353.8803, 9, 9, 600);
	kvartiraLS2[1] = AddStaticVehicleEx(402, 1364.9398, -1123.9639, 23.5921, 356.6639, 10, 10, 600);

	kvartiraSF[0] = AddStaticVehicleEx(562, -1976.8186, 430.1886, 24.9941, 359.2623, 11, 11, 600);
	AddStaticVehicleEx(400, -1981.8829, 467.2496, 28.7730, 359.2365, 12, 12, 600);
	AddStaticVehicleEx(558, -1955.7188, 459.4841, 34.9762, 2.0320, 13, 13, 600);
	AddStaticVehicleEx(585, -1928.7947, 459.5515, 34.9763, 358.6559, 14, 14, 600);
	kvartiraSF[1] = AddStaticVehicleEx(405, -1900.0426, 474.0867, 34.9749, 90.4343, 15, 15, 600);
	RusMaf[0] = AddStaticVehicleEx(579, -2536.5706, 2367.0774, 4.9357, 196.2585, 0, 0, 900);
	AddStaticVehicleEx(579, -2542.0623, 2366.4958, 4.9222, 192.4822, 0, 0, 900);
	AddStaticVehicleEx(580, -2516.4978, 2367.0195, 4.7917, 204.8624, 0, 0, 900);
	AddStaticVehicleEx(560, -2546.5730, 2355.5532, 4.6904, 330.7680, 0, 0, 900);
	AddStaticVehicleEx(560, -2540.3708, 2355.3445, 4.6892, 332.8611, 0, 0, 900);
	AddStaticVehicleEx(507, -2523.2856, 2366.9619, 4.8131, 201.8255, 0, 0, 900);
	AddStaticVehicleEx(507, -2529.9800, 2366.7751, 4.8316, 195.1953, 0, 0, 900);
	AddStaticVehicleEx(409, -2515.6748, 2355.5032, 4.7842, 270.7273, 0, 0, 900);
	RusMaf[1] = AddStaticVehicleEx(487, -2528.9722, 2346.0010, 13.4057, 269.2085, 0, 0, 900);
	Rifa[0] = AddStaticVehicleEx(445, -2459.6221, -94.9366, 25.8355, 90.9837, 93, 93, 900); // RIFA Султан ----------------------
	AddStaticVehicleEx(482, -2466.7896, -118.5653, 25.7870, 179.1900, 93, 93, 900); //  RIFA Автобусик --------------------------
	AddStaticVehicleEx(445, -2475.4705, -134.0442, 25.4922, 272.3264, 93, 93, 900); //   RIFA 4х дверка -----------------------------
	AddStaticVehicleEx(445, -2475.1111, -124.7216, 25.4923, 91.7269, 93, 93, 900); //   RIFA 4х дверка -----------------------------
	AddStaticVehicleEx(536, -2449.6030, -125.5900, 25.8851, 70.4271, 93, 93, 900); // RIFA  --------------------------------------
	AddStaticVehicleEx(536, -2449.5554, -119.9733, 25.8670, 110.6545, 93, 93, 900); // RIFA  --------------------------------------
	AddStaticVehicleEx(576, -2457.1521, -153.2213, 25.6558, 359.2295, 93, 93, 900); // RIFA  --------------------------------------
	Rifa[1] = AddStaticVehicleEx(576, -2461.5327, -153.1616, 25.3887, 359.5588, 93, 93, 900); // RIFA  ----------------------------
	//============================[дальнобоии]==============================================
	dalnoboishikauto[0] = AddStaticVehicleEx(403, -0.91034698, -300.83352661, 6.12285185, 88.00000000, -1, -1, 600); //Linerunner
	AddStaticVehicleEx(403, -1.35488129, -315.24334717, 6.12968779, 90.00000000, -1, -1, 600); //Linerunner
	AddStaticVehicleEx(403, -1.38738251, -325.85815430, 6.12968779, 90.00000000, -1, -1, 600); //Linerunner
	AddStaticVehicleEx(514, -30.18618393, -286.73107910, 6.12936258, 269.99963379, -1, -1, 600); //Tanker
	AddStaticVehicleEx(514, -31.11621094, -296.66210938, 6.12936258, 269.00000000, -1, -1, 600); //Tanker
	AddStaticVehicleEx(514, -29.89273834, -276.74765015, 6.12936258, 269.99963379, -1, -1, 600); //Tanker
	AddStaticVehicleEx(515, -1.51181030, -353.85433960, 6.58340836, 90.00000000, -1, -1, 600); //Roadtrain
	AddStaticVehicleEx(515, -0.96191406, -339.88085938, 6.58340836, 90.00000000, -1, -1, 600); //Roadtrain
	AddStaticVehicleEx(515, -1.19726562, -346.93652344, 6.58340836, 90.00000000, -1, -1, 600); //Roadtrain
	dalnoboishikauto[1] = AddStaticVehicleEx(515, -1.36523438, -361.15039062, 6.58340836, 90.00000000, -1, -1, 600); //Roadtrain
	//===================================ЛС нубы===========================================
	AddStaticVehicleEx(462, 825.9998, -1345.4810, 13.1291, 88.8686, 10, 10, 600); // LSSSSS CARRSSSS
	AddStaticVehicleEx(462, 825.8162, -1347.2656, 13.1263, 88.8540, 13, 13, 600);
	AddStaticVehicleEx(462, 825.8953, -1348.9767, 13.1291, 88.9828, 1, 2, 600);
	AddStaticVehicleEx(462, 825.8489, -1350.9532, 13.1311, 89.6165, 1, 3, 600);
	AddStaticVehicleEx(462, 821.9857, -1355.2749, 13.1393, 358.7020, 10, 10, 600);
	AddStaticVehicleEx(462, 820.0739, -1355.2245, 13.1401, 2.1668, 13, 13, 600);
	AddStaticVehicleEx(462, 818.2985, -1355.1820, 13.1394, 359.2921, 1, 2, 600);
	AddStaticVehicleEx(462, 816.4154, -1355.0900, 13.1400, 1.9159, 1, 3, 600);
	AddStaticVehicleEx(492, 836.8270, -1315.3625, 13.2387, 89.5031, 24, 55, 600); // END LSSSS CARRS
	//===================================СФ нубы===========================================
	AddStaticVehicleEx(462, -1981.9546, 165.0476, 27.2862, 106.2455, 13, 13, 600); // SFFFFFFF CARRRSSSSSSS
	AddStaticVehicleEx(462, -1982.1451, 162.5379, 27.2873, 105.3298, 1, 2, 600);
	AddStaticVehicleEx(462, -1982.2272, 160.3802, 27.2874, 100.8896, 1, 3, 600);
	AddStaticVehicleEx(462, -1982.2668, 158.3040, 27.2859, 99.9099, 10, 10, 600);
	AddStaticVehicleEx(462, -1982.3590, 156.0713, 27.2862, 100.5883, 13, 13, 600);
	AddStaticVehicleEx(462, -1982.3381, 153.8458, 27.2872, 98.2976, 1, 2, 600);
	AddStaticVehicleEx(507, -2027.3184, 103.3375, 27.8810, 268.5125, 53, 53, 600);
	AddStaticVehicleEx(462, -1981.7577, 130.2937, 27.2868, 100.3799, 3, 1, 600);
	AddStaticVehicleEx(462, -1981.7904, 128.0339, 27.2862, 100.6963, 12, 12, 600);
	AddStaticVehicleEx(462, -1981.9045, 125.9427, 27.2861, 96.6069, 14, 14, 600);
	AddStaticVehicleEx(462, -1982.1202, 123.7120, 27.2872, 96.8036, 2, 1, 600);
	AddStaticVehicleEx(462, -1982.2122, 121.3794, 27.2864, 95.6455, 3, 1, 600);
	AddStaticVehicleEx(462, -1982.3198, 119.1780, 27.2796, 94.8795, 12, 12, 600); // ENDDD SFFFFF CARRRRRSSS
	//===================================ЛВ нубы===========================================
	AddStaticVehicleEx(436, 2805.1436, 1332.5701, 10.5260, 270.2810, 95, 1, 600);
	AddStaticVehicleEx(445, 2810.2339, 1374.8018, 10.6250, 179.8135, 39, 39, 600);
	AddStaticVehicleEx(458, 2853.2991, 1361.3514, 10.6888, 89.1116, 113, 1, 600);
	AddStaticVehicleEx(467, 2781.8953, 1295.0095, 10.4900, 179.6949, 2, 1, 600);
	AddStaticVehicleEx(426, 2765.6438, 1272.0359, 10.4933, 269.9665, 7, 7, 600);
	AddStaticVehicleEx(462, 2815.0022, 1306.9070, 10.3499, 113.7781, 1, 3, 600);
	AddStaticVehicleEx(462, 2815.0325, 1303.3121, 10.3489, 115.6427, 10, 10, 600);
	AddStaticVehicleEx(462, 2815.1946, 1300.2065, 10.3550, 119.3115, 13, 13, 600);
	AddStaticVehicleEx(462, 2815.0977, 1297.0571, 10.3481, 111.7523, 1, 2, 600);
	AddStaticVehicleEx(462, 2815.0183, 1293.9839, 10.3498, 112.2389, 1, 3, 600);
	AddStaticVehicleEx(462, 2815.1294, 1291.0408, 10.3491, 114.3487, 10, 10, 600);
	AddStaticVehicleEx(462, 2815.0049, 1288.2744, 10.3497, 112.1169, 13, 13, 600);
	AddStaticVehicleEx(462, 2815.0652, 1285.6174, 10.3531, 109.8913, 1, 2, 600);
	AddStaticVehicleEx(462, 2815.1694, 1283.0048, 10.3536, 116.6928, 1, 3, 600);
	AddStaticVehicleEx(462, 2815.0459, 1280.2860, 10.3497, 116.5030, 10, 10, 600);
	AddStaticVehicleEx(462, 2815.0610, 1277.5355, 10.3482, 111.6510, 13, 13, 600);
	AddStaticVehicleEx(462, 2815.0286, 1274.6405, 10.3486, 109.5109, 1, 2, 600); // END LVVVV CARS
	AddStaticVehicleEx(439, 1107.5176, -306.4810, 73.8879, 91.3718, 40, 40, 600);
	AddStaticVehicleEx(439, 1059.3320, -342.6186, 73.8882, 91.5555, 40, 40, 600);
	AddStaticVehicleEx(453, -2968.2708, 496.3456, 0.2806, 357.7631, -1, -1, 600);
	AddStaticVehicleEx(560, -2498.3018, -602.6840, 132.2669, 358.5695, -1, -1, 600);
	AddStaticVehicleEx(404, -2337.6492, -126.2056, 35.0456, 2.0038, -1, -1, 600);
	AddStaticVehicleEx(445, 2151.6057, 1818.4509, 10.6953, 64.1825, -1, -1, 600);
	AddStaticVehicleEx(401, -1897.8558, -846.5352, 31.8031, 270.0366, -1, -1, 600); //   Авто СФ  ---------------------------------
	AddStaticVehicleEx(400, -263.1647, -2219.1448, 28.7358, 111.0151, -1, -1, 600);
	AddStaticVehicleEx(510, -1897.8243, -877.5616, 31.6310, 90.2963, 2, 2, 600);
	AddStaticVehicleEx(510, -1871.6204, -960.5840, 31.6291, 93.3921, 1, 1, 600);
	AddStaticVehicleEx(462, -1898.7106, -918.7181, 31.6198, 88.4094, 3, 3, 600);
	AddStaticVehicleEx(462, -1885.9866, -777.8161, 31.6192, 271.8154, 0, 0, 600);
	AddStaticVehicleEx(458, 2145.4512, 1409.1614, 10.5257, 359.1257, -1, -1, 600); //      Авто ЛВ ------------------------------
	AddStaticVehicleEx(560, 2217.6045, 1517.1034, 10.5253, 92.0260, -1, -1, 600); //       Авто ЛВ ------------------------------
	AddStaticVehicleEx(452, 720.1, -1694.0, -0.4, 179.4, -1, -1, 600); //Fishboat/*Speeder*/
	AddStaticVehicleEx(452, 721.2, -1629.4, -0.4, 180.9, -1, -1, 600); //Fishboat/*Speeder*/
	AddStaticVehicleEx(452, -1474.4949, 693.0169, 0.1996, 0.0751, -1, -1, 600); //Fishboat SF/*Speeder*/
	AddStaticVehicleEx(452, -1720.0717, 1439.6177, -0.4913, 357.6789, -1, -1, 600); //Fishboat SF/*Speeder*/
	AddStaticVehicleEx(405, 29.2282, -2636.3044, 40.2897, 95.2178, -1, -1, 600);
	AddStaticVehicleEx(445, -2266.3359, 200.7529, 35.0389, 268.3788, -1, -1, 600);
	AddStaticVehicleEx(560, 1265.2557, -1802.1469, 13.1118, 150.4491, -1, -1, 600);
	AddStaticVehicleEx(452, 2113.6138, -103.9571, -0.4819, 131.1217, -1, -1, 600);
	AddStaticVehicleEx(452, 2114.7671, -87.2741, -0.2426, 122.2977, -1, -1, 600);
	AddStaticVehicleEx(405, 2449.4817, 111.2742, 26.3538, 268.8032, -1, -1, 600);
	AddStaticVehicleEx(592, 1397.3390, 1337.2651, 12.0301, 360.0000, -1, -1, 600); //  транспорт аэро СФ ---------------------------
	AddStaticVehicleEx(593, 1286.9884, 1324.5450, 11.2808, 266.9478, -1, -1, 600); //  транспорт аэро СФ ---------------------------
	AddStaticVehicleEx(593, 1289.8994, 1361.8674, 11.2841, 266.8304, -1, -1, 600); //  транспорт аэро СФ ---------------------------
	AddStaticVehicleEx(593, -1429.2843, -505.8203, 13.7824, 205.7709, -1, -1, 600); // Airport SF ----------------------------------
	AddStaticVehicleEx(593, -1462.4779, -524.2803, 13.7832, 204.8137, -1, -1, 600); // Airport SF ----------------------------------
	AddStaticVehicleEx(593, 1907.7614, -2624.4097, 13.5416, 53.1810, -1, -1, 600); //  Airport LS ----------------------------------
	AddStaticVehicleEx(593, 1887.0736, -2627.6543, 13.5394, 52.6116, -1, -1, 600); //  Airport LS ----------------------------------
	AddStaticVehicleEx(513, -1354.3270, -466.5467, 13.7827, 162.0134, -1, -1, 600); // Airport SF ----------------------------------
	AddStaticVehicleEx(513, -1390.3510, -482.7985, 13.7883, 250.3124, -1, -1, 600); // Airport SF ----------------------------------
	AddStaticVehicleEx(513, 1835.3215, -2624.1938, 13.5405, 56.0569, -1, -1, 600); //  Airport LS ----------------------------------
	AddStaticVehicleEx(513, 1813.2893, -2625.6296, 13.5394, 53.2858, -1, -1, 600); //  Airport LS ----------------------------------
	AddStaticVehicleEx(402, 2180.1489, 1878.6643, 10.6520, 0.9398, -1, -1, 600);
	AddStaticVehicleEx(439, 2246.0574, 1788.3158, 10.5907, 181.6367, -1, -1, 600);
	AddStaticVehicleEx(439, 2172.5813, 1981.3502, 10.7163, 90.8902, -1, -1, 600);
	AddStaticVehicleEx(439, 2076.9407, 2160.4753, 10.7161, 296.1867, -1, -1, 600);
	AddStaticVehicleEx(592, 395.4486, 2502.9504, 17.6794, 90.0938, 1, 1, 600);
	AddStaticVehicleEx(519, -1366.2584, -216.6863, 15.0673, 345.8361, 1, 1, 600);
	AddStaticVehicleEx(562, 2216.9907, -1157.2010, 25.3913, 269.5313, -1, -1, 300); // ЛС
	AddStaticVehicleEx(562, 1280.0585, -1830.1501, 13.0431, 89.4245, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(560, 2148.4001, -1175.8213, 23.5253, 89.7123, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(400, 2681.8569, -1672.9548, 9.1305, 358.4684, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(475, 2797.6819, -1875.6138, 9.5749, 179.0939, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(558, 2442.3689, -2483.3706, 13.3435, 45.9849, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(562, 2678.2305, -2532.4202, 13.0546, 358.3061, -1, -1, 300); // ЛС
	AddStaticVehicleEx(585, 2262.6575, -2136.1860, 13.2511, 308.6302, -1, -1, 300); // ЛС
	AddStaticVehicleEx(405, 1924.8665, -1790.9403, 13.0881, 269.6193, -1, -1, 300); // ЛС
	AddStaticVehicleEx(410, 2053.9458, -1766.0284, 13.2590, 0.9052, -1, -1, 300); //   ЛС
	AddStaticVehicleEx(421, 2251.3518, -1725.3730, 13.2518, 89.4934, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(436, 2496.1152, -1751.3265, 13.1721, 359.0775, -1, -1, 300); // ЛС
	AddStaticVehicleEx(458, 2445.2168, -1764.9115, 13.2912, 180.5466, -1, -1, 300); // ЛС 30
	AddStaticVehicleEx(475, 2466.3442, -1895.3921, 13.2522, 40.9229, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(478, 2373.6589, -1927.2775, 13.0876, 179.2593, -1, -1, 300); // ЛС
	AddStaticVehicleEx(479, 2386.3772, -1927.1438, 13.0875, 181.5407, -1, -1, 300); // ЛС
	AddStaticVehicleEx(516, 2501.9700, -1953.4828, 13.1308, 359.9080, -1, -1, 300); // ЛС
	AddStaticVehicleEx(585, 1838.0275, -1871.0221, 13.0951, 358.9739, -1, -1, 300); // ЛС 40
	AddStaticVehicleEx(400, 1633.9976, -1905.4419, 13.2556, 342.3857, -1, -1, 300); // ЛС
	AddStaticVehicleEx(404, 1387.4513, -1897.8461, 13.2038, 91.2086, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(405, 1555.2979, -1718.5148, 13.2541, 90.0710, -1, -1, 300); //  ЛС
	AddStaticVehicleEx(421, 1422.2740, -1548.9465, 13.2476, 179.5020, -1, -1, 300); // ЛС
	AddStaticVehicleEx(560, -1658.4651, -580.9396, 13.8538, 107.7015, -1, -1, 300); // СФ
	AddStaticVehicleEx(405, -2146.7776, -407.2939, 35.0484, 320.4085, -1, -1, 300);
	AddStaticVehicleEx(475, -2629.9714, -54.6395, 4.0410, 178.5938, -1, -1, 300);
	AddStaticVehicleEx(516, -2681.7148, 268.2626, 4.0414, 359.3069, -1, -1, 300);
	AddStaticVehicleEx(542, -2408.0967, 740.9853, 34.7204, 0.0745, -1, -1, 300);
	AddStaticVehicleEx(559, -2460.5471, 741.0335, 34.7209, 358.7899, -1, -1, 300);
	AddStaticVehicleEx(562, -2782.0347, 766.2728, 50.3610, 95.4734, -1, -1, 300);
	AddStaticVehicleEx(560, -2618.5564, 1375.6062, 6.8240, 358.9253, -1, -1, 300);
	AddStaticVehicleEx(401, -2437.3748, 1032.5120, 50.0961, 358.9574, -1, -1, 300);
	AddStaticVehicleEx(402, -2429.3184, 952.6487, 45.0016, 271.3651, -1, -1, 300);
	AddStaticVehicleEx(603, -2318.6650, 1029.5175, 50.5333, 178.3063, -1, -1, 300);
	AddStaticVehicleEx(589, -2222.0376, 724.2926, 49.1195, 271.9971, -1, -1, 300);
	AddStaticVehicleEx(561, -2156.9431, 649.9692, 52.0726, 271.0413, -1, -1, 300);
	AddStaticVehicleEx(565, -2125.7397, 656.1635, 52.0726, 132.7387, -1, -1, 300);
	AddStaticVehicleEx(560, -2152.1714, 378.3821, 34.9491, 177.8394, -1, -1, 300);
	AddStaticVehicleEx(554, -2077.6887, 265.6211, 35.1270, 268.2577, -1, -1, 300);
	AddStaticVehicleEx(549, -2032.5751, 179.6017, 28.5450, 274.4774, -1, -1, 300);
	AddStaticVehicleEx(402, -2019.0425, 375.7849, 34.8771, 0.4389, -1, -1, 300);
	AddStaticVehicleEx(404, -1956.2375, 585.5790, 34.8197, 0.8650, -1, -1, 300);
	AddStaticVehicleEx(458, -1932.3971, 585.1214, 34.8301, 359.4680, -1, -1, 300);
	AddStaticVehicleEx(479, -1498.5226, 844.7313, 6.8929, 89.4470, -1, -1, 300);
	AddStaticVehicleEx(603, -1702.6222, 409.7613, 6.8840, 171.8205, -1, -1, 300);
	AddStaticVehicleEx(561, -2215.9805, -87.0894, 35.0258, 358.7682, -1, -1, 300);
	AddStaticVehicleEx(405, -2183.4822, 42.5413, 35.0257, 267.7889, -1, -1, 300);
	AddStaticVehicleEx(562, -2235.3293, 305.6320, 34.8218, 1.4678, -1, -1, 300);
	AddStaticVehicleEx(585, -2289.2754, 1101.2231, 79.8405, 266.8818, -1, -1, 300);
	AddStaticVehicleEx(400, -2178.5273, 1223.8784, 33.6353, 2.7000, -1, -1, 300);
	AddStaticVehicleEx(505, -2511.8704, 1205.2421, 37.1264, 87.9047, -1, -1, 300);
	AddStaticVehicleEx(505, -2529.7844, 1229.0474, 37.1327, 32.4456, -1, -1, 300);
	AddStaticVehicleEx(480, -2443.9214, 2242.1860, 4.5346, 359.6313, -1, -1, 300);
	AddStaticVehicleEx(560, -2476.5769, 2225.2368, 4.5447, 178.7871, -1, -1, 300); // СФ
	AddStaticVehicleEx(421, 1783.6021, -1025.8364, 23.8434, 333.6516, -1, -1, 300);
	AddStaticVehicleEx(479, 1426.8616, -1056.6398, 22.9586, 0.6264, -1, -1, 300);
	AddStaticVehicleEx(516, 1314.6045, -871.0888, 39.4121, 269.5345, -1, -1, 300);
	AddStaticVehicleEx(529, 1181.8198, -926.1049, 42.8522, 278.7087, -1, -1, 300);
	AddStaticVehicleEx(559, 986.9466, -905.8787, 41.8607, 181.6934, -1, -1, 300);
	AddStaticVehicleEx(558, 763.0032, -1026.2504, 23.6292, 171.5150, -1, -1, 300);
	AddStaticVehicleEx(562, 700.9086, -1199.9783, 14.9371, 328.9723, -1, -1, 300);
	AddStaticVehicleEx(585, 408.4361, -1318.6412, 14.4831, 209.2215, -1, -1, 300);
	AddStaticVehicleEx(401, 343.0909, -1346.9855, 14.2875, 119.3574, -1, -1, 300);
	AddStaticVehicleEx(400, 209.1800, -1422.1796, 13.3417, 314.5993, -1, -1, 300);
	AddStaticVehicleEx(405, 489.1241, -1498.8655, 20.2361, 353.4773, -1, -1, 300);
	AddStaticVehicleEx(421, 353.7181, -1808.7424, 4.4291, 179.5624, -1, -1, 300);
	AddStaticVehicleEx(436, 311.7828, -1789.2671, 4.3428, 358.3995, -1, -1, 300);
	AddStaticVehicleEx(516, 783.2449, -1634.1703, 13.2150, 90.9759, -1, -1, 300);
	AddStaticVehicleEx(529, 1098.1848, -1772.6263, 12.9791, 269.3724, -1, -1, 300);
	AddStaticVehicleEx(542, 1062.4709, -1754.9944, 13.1744, 88.5668, -1, -1, 300);
	AddStaticVehicleEx(542, 1098.2307, -1754.7957, 13.0972, 268.7991, -1, -1, 300);
	AddStaticVehicleEx(549, 1297.0128, -2490.4551, 10.5500, 54.3155, -1, -1, 300);
	AddStaticVehicleEx(480, 1804.6260, -2307.5337, -2.8226, 1.0666, -1, -1, 300);
	AddStaticVehicleEx(401, 1434.5120, -2707.5645, 13.3185, 37.4264, -1, -1, 300);
	AddStaticVehicleEx(400, 2200.0889, -2521.6675, 13.6393, 2.6994, -1, -1, 300);
	AddStaticVehicleEx(443, 2158.2427, -2294.3262, 14.0919, 224.4564, -1, -1, 300);
	AddStaticVehicleEx(481, 1946.1908, -1380.5582, 18.0967, 90.4587, -1, -1, 300);
	AddStaticVehicleEx(481, 1945.8822, -1379.0096, 18.0950, 88.4418, -1, -1, 300);
	AddStaticVehicleEx(481, 1945.4143, -1365.0471, 18.0913, 88.5227, -1, -1, 300);
	AddStaticVehicleEx(481, 1944.9277, -1368.0684, 18.0882, 90.1624, -1, -1, 300);
	AddStaticVehicleEx(558, 2391.5427, -1487.6722, 23.4578, 89.0039, -1, -1, 300);
	AddStaticVehicleEx(585, 2612.5200, -1397.1954, 34.5700, 182.3753, -1, -1, 300);
	AddStaticVehicleEx(505, 2434.8005, -1224.7297, 25.2898, 140.1047, -1, -1, 300);
	AddStaticVehicleEx(473, 2488.8076, -2267.5596, -0.1202, 90.0908, -1, -1, 300);
	AddStaticVehicleEx(473, 2356.7249, -2505.8188, -0.3044, 0.6139, -1, -1, 300);
	AddStaticVehicleEx(492, -1964.0983, 175.7521, 27.1444, 90.0283, 81, 27, 300);
	//----------------------------вертушки в аэро--------------------------------------------------
	AddStaticVehicleEx(487, 1679.6703, -2626.8630, 13.7241, 25.5493, 0, 0, 300);
	AddStaticVehicleEx(487, 1698.1920, -2622.4810, 13.7246, 29.6896, 1, 1, 300);
	AddStaticVehicleEx(469, -1220.4818, -10.8919, 14.1603, 135.5109, 1, 0, 300);
	AddStaticVehicleEx(469, -1183.2186, 26.2471, 14.1610, 136.7316, 1, 0, 300);
	AddStaticVehicleEx(487, -1173.7252, -449.8770, 14.3245, 57.5242, 1, 1, 300);
	AddStaticVehicleEx(487, -1164.5161, -421.7247, 14.3255, 64.9601, 0, 0, 300);
	AddStaticVehicleEx(571, 2286.2141, -2354.5000, 12.8306, 225.8705, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(571, 2279.9412, -2348.4141, 12.8312, 225.8585, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(571, 2291.7932, -2345.5356, 12.8305, 227.3060, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(571, 2287.5615, -2341.6433, 12.8306, 226.5350, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(571, 2299.6785, -2338.3186, 12.8307, 224.3563, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(571, 2295.3887, -2334.9448, 12.8307, 227.9102, -1, -1, 160); //     Картинг в доках
	AddStaticVehicleEx(410, -1927.5238, 2361.3521, 48.7863, 110.9599, -1, -1, 600); //  транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(405, -1940.3041, 2393.3438, 49.3672, 113.0318, -1, -1, 600); //  транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(400, -1813.0715, 2038.4827, 9.0303, 297.1578, -1, -1, 600); //   транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(473, -1846.9857, 2081.2278, -0.0926, 109.5605, -1, -1, 600); //  транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(404, -1201.4520, 1816.0881, 41.4507, 220.0642, -1, -1, 600); //  транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(400, -1043.0024, 1561.0319, 33.4135, 221.5326, -1, -1, 600); //  транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(405, -906.4223, 1546.9949, 25.7713, 275.1131, -1, -1, 600); //   транспорт сёл ЛВ --------------------------
	AddStaticVehicleEx(506, -865.5940, 1547.3992, 22.9259, 89.2237, -1, -1, 600); //    транспорт сёл ЛВ --------------------------
	//==========================Милиция============================================
	copcar[0] = AddStaticVehicleEx(415, 1602.5720, -1704.3496, 5.6643, 90.1128, 79, 79, 900); // Милиция
	AddStaticVehicleEx(415, 1602.5693, -1700.1198, 5.6643, 90.0205, 79, 79, 900);
	AddStaticVehicleEx(415, 1602.5072, -1696.1161, 5.6643, 90.1182, 79, 79, 900);
	AddStaticVehicleEx(415, 1602.4255, -1692.0356, 5.6643, 90.7346, 79, 79, 900);
	AddStaticVehicleEx(415, 1602.5214, -1688.0435, 5.6642, 89.3209, 79, 79, 900);
	AddStaticVehicleEx(523, 1538.9541, -1645.3267, 5.4545, 179.7493, 1, 1, 900);
	AddStaticVehicleEx(523, 1534.5938, -1645.2668, 5.4572, 181.5467, 1, 1, 900);
	AddStaticVehicleEx(523, 1530.6656, -1645.3198, 5.4532, 182.9257, 1, 1, 900);
	AddStaticVehicleEx(523, 1526.7952, -1645.4211, 5.4623, 180.6268, 0, 0, 900);
	AddStaticVehicleEx(490, 1545.1165, -1650.9420, 6.0180, 90.4736, 0, 0, 900);
	AddStaticVehicleEx(490, 1545.2371, -1659.1180, 6.0193, 90.3042, 0, 0, 900);
	AddStaticVehicleEx(596, 1544.5679, -1668.1284, 5.6080, 88.1794, 53, 1, 900);
	AddStaticVehicleEx(596, 1544.5021, -1672.2939, 5.6131, 87.0515, 53, 1, 900);
	AddStaticVehicleEx(596, 1544.5006, -1676.1885, 5.6076, 87.4025, 53, 1, 900);
	AddStaticVehicleEx(596, 1544.5443, -1680.1318, 5.5840, 93.5059, 53, 1, 900);
	AddStaticVehicleEx(596, 1544.5735, -1684.3894, 5.6082, 90.7358, 53, 1, 900);
	AddStaticVehicleEx(599, 1578.4407, -1710.4963, 6.1231, 359.7231, 0, 1, 900);
	AddStaticVehicleEx(599, 1570.1849, -1710.6830, 6.1230, 359.9185, 0, 1, 900);
	AddStaticVehicleEx(427, 1558.9153, -1710.7469, 6.0374, 359.9720, 0, 1, 900);
	copcar[1] = AddStaticVehicleEx(497, 1549.4149, -1609.2180, 13.5854, 90.4477, 0, 1, 900); // Вертолет ЛСПД
	//===================АРМИЯ==========================
	armycar[0] = AddStaticVehicleEx(497, -1309.4657, 494.1862, 18.4122, 6.1163, 16, 16, 900);
	AddStaticVehicleEx(497, -1270.0748, 497.7913, 18.4036, 319.7002, 16, 16, 900);
	AddStaticVehicleEx(430, -1438.5708, 506.9269, -0.1900, 94.5669, 16, 16, 900);
	AddStaticVehicleEx(430, -1449.8566, 496.2770, -0.1655, 98.7484, 16, 16, 900);
	AddStaticVehicleEx(425, -1321.4579, 449.2822, 10.2016, 358.7920, 43, 0, 900);
	AddStaticVehicleEx(520, -1411.3811, 517.2366, 18.9660, 87.2426, 44, 86, 900);
	AddStaticVehicleEx(520, -1453.4697, 502.3450, 18.9868, 273.4987, 44, 86, 900);
	AddStaticVehicleEx(415, -1235.6252, 459.0164, 6.9394, 87.4754, 86, 86, 900);
	AddStaticVehicleEx(415, -1235.6858, 438.6565, 6.9165, 358.5375, 86, 86, 900);
	AddStaticVehicleEx(415, -1243.4373, 438.7376, 6.9332, 0.0290, 86, 86, 900);
	AddStaticVehicleEx(415, -1249.8519, 438.7154, 6.9068, 2.9524, 86, 86, 900);
	AddStaticVehicleEx(415, -1256.1256, 438.7581, 6.9030, 3.1448, 86, 86, 900);
	AddStaticVehicleEx(415, -1256.6406, 459.0638, 6.9104, 271.1389, 86, 86, 900);
	AddStaticVehicleEx(597, -1350.8578, 455.6987, 6.9548, 359.0216, 86, 86, 900);
	AddStaticVehicleEx(597, -1357.1709, 455.7314, 6.9568, 359.9191, 86, 86, 900);
	AddStaticVehicleEx(597, -1362.6379, 455.7625, 6.9574, 359.9046, 86, 86, 900);
	AddStaticVehicleEx(597, -1369.0449, 455.8953, 6.9566, 359.8089, 86, 86, 900);
	AddStaticVehicleEx(470, -1263.6368, 438.8710, 7.1748, 359.1517, 86, 86, 900);
	AddStaticVehicleEx(470, -1270.0016, 438.9914, 7.1785, 359.5744, 86, 86, 900);
	AddStaticVehicleEx(470, -1276.8778, 439.0779, 7.1743, 359.2513, 86, 86, 900);
	armycar[1] = AddStaticVehicleEx(470, -1284.4529, 438.9701, 7.1585, 1.8553, 86, 86, 900);
	//-------------------------------ФБР--------------------------------------------
	fbicar[0] = AddStaticVehicleEx(415, -1599.9465, 692.9821, -5.4742, 178.8045, 0, 0, 900);
	AddStaticVehicleEx(415, -1604.1709, 692.9595, -5.4792, 177.0607, 0, 0, 900);
	AddStaticVehicleEx(415, -1608.3766, 693.3263, -5.4711, 180.4542, 0, 0, 900);
	AddStaticVehicleEx(415, -1612.7426, 692.7325, -5.4757, 179.3282, 0, 0, 900);
	AddStaticVehicleEx(415, -1616.7330, 692.7235, -5.4779, 180.1576, 0, 0, 900);
	AddStaticVehicleEx(415, -1620.9653, 692.6471, -5.4867, 179.9194, 0, 0, 900);
	AddStaticVehicleEx(415, -1624.8040, 692.7762, -5.4801, 178.8144, 0, 0, 900);
	AddStaticVehicleEx(490, -1640.1177, 682.3457, -5.1234, 270.1901, 0, 0, 900);
	AddStaticVehicleEx(490, -1640.1504, 677.9055, -5.1238, 269.6599, 0, 0, 900);
	AddStaticVehicleEx(490, -1640.0879, 674.0535, -5.1227, 271.1219, 0, 0, 900);
	AddStaticVehicleEx(601, -1639.0095, 657.7919, -5.4545, 269.8890, 0, 0, 900);
	AddStaticVehicleEx(599, -1573.4387, 709.9295, -5.0746, 90.9033, 0, 0, 900);
	AddStaticVehicleEx(599, -1573.5674, 718.1451, -5.0766, 90.0847, 0, 0, 900);
	AddStaticVehicleEx(597, -1573.1168, 742.3653, -5.5145, 270.6827, 0, 0, 900);
	AddStaticVehicleEx(597, -1584.0233, 748.7179, -5.5640, 180.7421, 0, 0, 900);
	AddStaticVehicleEx(597, -1588.4471, 748.7737, -5.5653, 179.7640, 0, 0, 900);
	fbicar[1] = AddStaticVehicleEx(497, -1680.0774, 706.8117, 30.7778, 90.2516, 0, 1, 900);
	AddStaticVehicle(593, 326.5935, 2536.1567, 17.2636, 178.2292, -1, -1); //  Самолёт пустыня -------------------------------------185
	AddStaticVehicle(462, 667.1559, -546.0300, 15.9357, 88.8480, 3, 3); //     Скутер в селе ---------------------------------------186
	AddStaticVehicle(462, 667.0647, -543.2286, 15.9352, 89.1490, 3, 3); //     Скутер в селе ---------------------------------------187
	AddStaticVehicle(429, 1413.3777, 784.7541, 10.5000, 89.1568, -1, -1); //    170
	AddStaticVehicle(402, 1544.6826, 786.4494, 10.6518, 359.2574, -1, -1); //   172
	AddStaticVehicle(459, 1682.5525, 1307.0559, 10.5474, 180.4112, -1, -1); //  173
	AddStaticVehicle(546, 1663.1832, 1297.5321, 10.5928, 0.8936, -1, -1); //    174
	AddStaticVehicle(439, 2031.6134, 1046.3953, 10.5633, 180.8536, -1, -1); //  175
	AddStaticVehicle(477, 2188.8799, 988.2082, 10.5742, 185.7033, -1, -1); //   180
	AddStaticVehicle(506, 2132.4265, 1025.8695, 10.5247, 272.3096, -1, -1); //  181
	AddStaticVehicle(507, 1940.4701, 1325.0149, 9.0828, 180.9865, -1, -1); //   182
	AddStaticVehicle(507, 2162.6128, 1668.9492, 10.6440, 160.1780, -1, -1); //  183
	AddStaticVehicle(452, -2421.5891, 2304.9146, -0.4247, 267.5196, -1, -1); // 185
	AddStaticVehicle(460, -2318.7019, 2322.7354, 1.7984, 175.2421, -1, -1); //  186
	AddStaticVehicle(454, -2215.6401, 2406.8159, 0.0798, 46.3882, -1, -1); //   187
	AddStaticVehicle(402, 1529.3295, 1021.2076, 10.6519, 359.3333, -1, -1); //  188
	AddStaticVehicle(455, 1677.8246, 987.4510, 10.5912, 180.0458, -1, -1); //   190
	AddStaticVehicle(551, 1655.4950, 1039.5271, 10.5000, 2.2135, -1, -1); //    191
	AddStaticVehicle(453, 1629.2123, 571.8710, -0.2208, 91.7802, -1, -1); //    192
	AddStaticVehicle(454, 2296.3987, 517.2043, 0.0592, 89.5719, -1, -1); //     193
	AddStaticVehicle(493, 2359.4954, 518.5249, -0.2946, 90.8976, -1, -1); //    194
	AddStaticVehicle(506, 2646.7217, 747.8921, 10.5246, 92.8071, -1, -1); //    195
	AddStaticVehicle(507, 2546.9712, 747.4104, 10.6460, 270.4416, -1, -1); //   196
	AddStaticVehicle(535, 2807.6980, 926.7094, 10.5143, 179.7339, -1, -1); //   197
	AddStaticVehicle(402, 2833.3865, 940.4627, 10.5818, 358.7564, -1, -1); //   198
	AddStaticVehicle(439, 2848.6436, 1234.3975, 10.7162, 90.7529, -1, -1); //   204
	AddStaticVehicle(477, 2672.0613, 1974.0912, 10.5779, 272.0173, -1, -1); //  205
	AddStaticVehicle(506, 2643.5708, 2008.0364, 10.5239, 179.4540, -1, -1); //  206
	AddStaticVehicle(535, 2563.3430, 2059.8176, 10.5830, 182.5232, -1, -1); //  208
	AddStaticVehicle(402, 2633.5701, 2178.2666, 10.6518, 1.6881, -1, -1); //    209
	AddStaticVehicle(551, 2603.2273, 2153.1575, 10.5474, 270.1544, -1, -1); //  210
	AddStaticVehicle(558, 2613.9053, 2086.8186, 10.4987, 2.3628, -1, -1); //    211
	AddStaticVehicle(439, 2799.2903, 2166.0317, 10.7162, 29.6244, -1, -1); //   212
	AddStaticVehicle(410, 1674.0032, 1792.6821, 10.4752, 87.7761, -1, -1); //   215
	AddStaticVehicle(405, 1590.8468, 1849.9763, 10.6953, 1.1242, -1, -1); //    216
	AddStaticVehicle(400, 1432.4889, 1999.5563, 10.9124, 271.3439, -1, -1); //  218
	AddStaticVehicle(445, 1117.6208, 2111.2009, 10.6914, 225.0404, -1, -1); //  220
	AddStaticVehicle(410, 1023.8070, 2115.8066, 10.4760, 0.8170, -1, -1); //    221
	AddStaticVehicle(405, 884.0099, 2002.2644, 10.6953, 263.2517, -1, -1); //   222
	AddStaticVehicle(405, 889.0182, 1895.2166, 10.6952, 271.5473, -1, -1); //   223
	AddStaticVehicle(400, 782.8831, 1891.0220, 5.1132, 267.6222, -1, -1); //    224
	AddStaticVehicle(445, 681.5436, 1944.9957, 5.4138, 359.0340, -1, -1); //    225
	AddStaticVehicle(484, -493.1218, 615.1981, 0.1835, 2.8396, 1, 1); // водный транспорт
	AddStaticVehicle(473, -792.7775, 943.1886, -0.4438, 102.3197, 1, 1); //  водный транспорт
	AddStaticVehicle(473, -2026.3375, 2327.3901, -0.2820, 89.8646, 1, 1); // водный транспорт
	AddStaticVehicle(484, -2251.1204, 2432.8679, 0.3027, 229.0226, 1, 1); // водный транспорт
	AddStaticVehicle(493, -1510.4563, -2330.0530, -0.1144, 3.7504, 1, 1); // водный транспорт
	//====================================3Dtext====================================
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 1381.9602, 462.6776, 20.9054, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -2029.4852, 156.4265, 29.8359, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -2406.0986, 976.8326, 46.2969, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -1675.9276, 413.9869, 8.1797, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 1005.5187, -939.6584, 43.1797, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 1944.3627, -1773.0619, 14.3906, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 2115.7927, 921.1973, 11.8203, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 1594.8954, 2198.7017, 11.8203, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -1328.9003, 2677.1355, 51.0625, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, 2202.1008, 2475.4858, 11.8203, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -91.2990, -1170.5698, 3.3950, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -1605.9832, -2714.3477, 49.5335, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте клавишу {00C0FF}H{FFFFFF},чтобы заправить транспорт.", COLOR_YELLOW, -2243.9092, -2560.1267, 32.9219, 10, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -544.59997558594, -506.89999389648, 26.39999961853, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 1466.99609375, -1749.8603515625, 16.34700012207, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 395.90900000, -1806.81000000, 8.74000000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 585.87300000, -1250.88900000, 18.94200000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 2233.48600000, -1161.42100000, 26.79300000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 1955.48700000, -2179.65700000, 14.44900000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -78.94400000, -1172.45100000, 3.03100000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -2028.6999511719, -98.300003051758, 36.75, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -2445.53000000, 511.26800000, 30.74800000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -1737.28000000, 963.40600000, 25.79300000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -1496.23600000, 925.62200000, 8.09000000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -2633.31400000, 1400.33400000, 8.00200000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -2483.07200000, 2408.32100000, 18.01200000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -1389.34400000, 2631.44000000, 56.88700000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -865.68500000, 1536.47400000, 23.48900000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, -312.75600000, 1306.88400000, 54.49100000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 1672.54600000, 1444.96500000, 11.69000000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 2023.11300000, 1017.64600000, 11.72200000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 2197.01500000, 1670.10400000, 13.26900000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 2299.68700000, 2432.50300000, 11.72200000, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 1920.2998046875, 1026.5, 568.5, 5, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}Alt{FFFFFF},чтобы начать работу с банкоматом.", COLOR_YELLOW, 1567.61, -1326.32, 16.35, 5, 0);
	Create3DTextLabel("Значок Police\n Взять его - /Duty.", 0x0100F6AA, 255.1955, 78.3186, 1003.6406, 6, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, -2352.6719, -153.5959, 35.3203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, -2345.1042, 1024.0560, 50.6953, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, -1719.1241, 1352.8751, 7.1787, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, -1217.2108, 1822.3807, 41.7244, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2096.5129, -1800.3693, 13.3828, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 801.1453, -1629.5795, 13.3828, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2376.4570, -1908.8212, 13.3828, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2488.2764, 2021.6671, 10.8203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2075.9104, 2225.9553, 10.8203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2631.0522, 1852.3870, 10.8203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 1857.3275, 2083.3960, 10.8203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 1094.3778, 2143.3965, 10.8203, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 2409.9331, -1486.7938, 23.3997, 30.0, 0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}ALT{FFFFFF}, чтобы покушать.", COLOR_YELLOW, 1214.6238, -905.0850, 42.9205, 30.0, 0);
	//==============================[Казино]========================================
	CreateObject(14777, 1915.19921875, 1015.5, 566.20001220703, 0, 0, 0);
	CreateObject(1515, 1923.0999755859, 1016.6000366211, 566.20001220703, 0, 0, 180);
	CreateObject(1515, 1924.3000488281, 1015.5, 566.20001220703, 0, 0, 90);
	CreateObject(1515, 1923.1999511719, 1014.3999633789, 566.20001220703, 0, 0, 0);
	CreateObject(1515, 1922.0999755859, 1015.5, 566.20001220703, 0, 0, 270);
	CreateObject(1515, 1929.099609375, 1018.9899902344, 566.20001220703, 0, 0, 0);
	CreateObject(1515, 1929, 1011.9998168945, 566.20001220703, 0, 0, 179.99450683594);
	CreateObject(1515, 1930.6497802734, 1013.7998046875, 566.20001220703, 0, 0, 270);
	CreateObject(1515, 1930.6497802734, 1016.9794921875, 566.20001220703, 0, 0, 270);
	CreateObject(1515, 1907.69921875, 1001.999206543, 566.20001220703, 0, 0, 179.99450683594);
	CreateObject(1515, 1905.009765625, 1003.8994140625, 566.20001220703, 0, 0, 90);
	CreateObject(1515, 1913.2998046875, 1014.399597168, 566.20001220703, 0, 0, 0);
	CreateObject(1515, 1912.0993652344, 1015.5, 566.20001220703, 0, 0, 270);
	CreateObject(1515, 1913.19921875, 1016.5994262695, 566.20001220703, 0, 0, 179.99450683594);
	CreateObject(1515, 1914.3493652344, 1015.4996337891, 566.20001220703, 0, 0, 90);
	CreateObject(2754, 1920.3000488281, 1026.5, 568.5, 0, 0, 180);
	//============================[ТТТранспорт]=====================================
	Truck[0] = AddStaticVehicleEx(456, 2783.8899, -2417.8884, 13.8047, 90.5777, 102, 65, 260); // компоненты
	Truck[1] = AddStaticVehicleEx(456, 2795.2092, -2417.7813, 13.8025, 90.1732, 91, 63, 260); //  компоненты
	Truck[2] = AddStaticVehicleEx(440, 2794.1167, -2455.8999, 13.7615, 90.7997, 32, 32, 260); //  компоненты
	Truck[3] = AddStaticVehicleEx(440, 2782.8945, -2455.6013, 13.7318, 90.5770, 20, 20, 260); //  компоненты
	//============================[проды сф]==============================================
	Truck[4] = AddStaticVehicleEx(456, -1746.0516, 163.3023, 3.6693, 181.0513, 48, 48, 260);
	Truck[5] = AddStaticVehicleEx(456, -1732.9021, 168.2202, 3.6718, 88.1721, 48, 48, 260);
	Truck[6] = AddStaticVehicleEx(440, -1750.2487, 147.2129, 3.7255, 180.7961, 102, 65, 260);
	Truck[7] = AddStaticVehicleEx(440, -1733.2081, 150.9614, 3.7275, 180.4637, 102, 65, 260);
	//============================[проды лв]==============================================
	Truck[8] = AddStaticVehicleEx(456, 2347.3926, 2780.0039, 10.9939, 270.6921, 91, 63, 600);
	Truck[9] = AddStaticVehicleEx(456, 2347.5164, 2763.9763, 10.9952, 269.6917, 91, 63, 600);
	Truck[10] = AddStaticVehicleEx(440, 2344.6313, 2754.5930, 10.9436, 270.0906, 48, 48, 600);
	Truck[11] = AddStaticVehicleEx(440, 2368.1482, 2756.6794, 10.9382, 181.2001, 48, 48, 600);
	PlayerHaul[Truck[0]][pCapasity] = 100;
	PlayerHaul[Truck[1]][pCapasity] = 100;
	PlayerHaul[Truck[2]][pCapasity] = 50;
	PlayerHaul[Truck[3]][pCapasity] = 50;
	PlayerHaul[Truck[4]][pCapasity] = 100;
	PlayerHaul[Truck[5]][pCapasity] = 100;
	PlayerHaul[Truck[6]][pCapasity] = 50;
	PlayerHaul[Truck[7]][pCapasity] = 50;
	PlayerHaul[Truck[8]][pCapasity] = 100;
	PlayerHaul[Truck[9]][pCapasity] = 100;
	PlayerHaul[Truck[10]][pCapasity] = 50;
	PlayerHaul[Truck[11]][pCapasity] = 50;
	AddStaticVehicleEx(574, -2513.1873, 763.1990, 34.8970, 266.5857, 1, 1, 15); //Tug 1
	AddStaticVehicleEx(574, -2513.0789, 773.6850, 34.8982, 269.9322, 1, 1, 15); //Tug 2
	AddStaticVehicleEx(574, -2494.5940, 784.0894, 34.8893, 269.7961, 1, 1, 15); //Tug 3
	AddStaticVehicleEx(574, -2494.1096, 794.9677, 34.8979, 180.3557, 1, 1, 15); //Tug 4
	AddStaticVehicleEx(574, -2486.9268, 795.1442, 34.8981, 182.0503, 1, 1, 15); //Tug 5
	AddStaticVehicleEx(574, -2459.0286, 793.4220, 34.8963, 87.3689, 1, 1, 15); //Tug 6
	AddStaticVehicleEx(574, -2459.0684, 786.6382, 34.8980, 87.9702, 1, 1, 15); //Tug 7
	AddStaticVehicleEx(574, -2459.1719, 779.6375, 34.8980, 89.9101, 1, 1, 15); //Tug 8
	for (new f = 0; f < sizeof(FlatsInfo); f++) {
		new text[600];
		if (FlatsInfo[f][fOwned] == 0) {
			format(text, sizeof(text), "{00C0FF}Квартира{FFFFFF}\nНомер: {00C0FF}%d{FFFFFF}\nСтоимость: {00C0FF}%d{FFFFFF}\nУровень: {00C0FF}%d{FFFFFF}\nКупить квартиру - {00C0FF}/buyflat{FFFFFF}", f, FlatsInfo[f][fValue], FlatsInfo[f][fLevel]);
			Flat3D[f] = Create3DTextLabel(text, 0xFFFFFFFF, FlatsInfo[f][fEntrancex], FlatsInfo[f][fEntrancey], FlatsInfo[f][fEntrancez] + 1, 10, FlatsInfo[f][fVirtWorld], 1);
			FlatPickup[f] = CreatePickup(1272, 23, FlatsInfo[f][fEntrancex], FlatsInfo[f][fEntrancey], FlatsInfo[f][fEntrancez], FlatsInfo[f][fVirtWorld]);
		} else if (FlatsInfo[f][fOwned] == 1) {
			format(text, sizeof(text), "{00C0FF}Квартира{FFFFFF}\nНомер: {00C0FF}%d{FFFFFF}\nВладелец: {00C0FF}%s", f, FlatsInfo[f][fOwner]);
			Flat3D[f] = Create3DTextLabel(text, 0xFFFFFFFF, FlatsInfo[f][fEntrancex], FlatsInfo[f][fEntrancey], FlatsInfo[f][fEntrancez] + 1, 10, FlatsInfo[f][fVirtWorld], 1);
			FlatPickup[f] = CreatePickup(1272, 23, FlatsInfo[f][fEntrancex], FlatsInfo[f][fEntrancey], FlatsInfo[f][fEntrancez], FlatsInfo[f][fVirtWorld]);
		}
	}
	//------------------------------------------------------------Create3DTextLabel------------------
	for (new i = 0; i < sizeof(HouseInfo); i++) {
		new text[600];
		if (HouseInfo[i][hOwned] == 0) {
			format(text, sizeof(text), "{FFFFFF}Дом доступен для покупки\n{FFFFFF}Номер дома: {00C0FF}%d\n{FFFFFF}Стоимость дома: {00C0FF}%d$\n{FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buyhouse", i, HouseInfo[i][hValue], HouseInfo[i][hLevel]);
			HouseInfo[i][hPickup] = CreatePickup(1273, 23, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], -1);
			HouseInfo[i][hMIcon] = CreateDynamicMapIcon(HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 400.0);
		} else if (HouseInfo[i][hOwned] == 1) {
			format(text, sizeof(text), "{FFFFFF}Номер дома: {00C0FF}%d\n{FFFFFF}Владелец дома: {00C0FF}%s\n{FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Стоимость дома: {00C0FF}%d$", i, HouseInfo[i][hOwner], HouseInfo[i][hLevel], HouseInfo[i][hValue]);
			HouseInfo[i][hMIcon] = CreateDynamicMapIcon(HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 400.0);
			HouseInfo[i][hPickup] = CreatePickup(1272, 23, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez], -1);
		}
		HouseInfo[i][hLabel] = Create3DTextLabel(text, 0x33CCFFAA, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez] + 1.0, 13.0, 0, 1);
	}
	for (new h = 0; h < sizeof(BizzInfo); h++) {
		new biz[64];
		if (BizzInfo[h][bMafia] == 0) biz = "None";
		if (BizzInfo[h][bMafia] == 5) biz = "La Cosa Nostra";
		if (BizzInfo[h][bMafia] == 6) biz = "Yakuza";
		if (BizzInfo[h][bMafia] == 13) biz = "Grove Street";
		if (BizzInfo[h][bMafia] == 14) biz = "El Coronos";
		if (BizzInfo[h][bMafia] == 15) biz = "Los Santos Vagos";
		if (BizzInfo[h][bMafia] == 16) biz = "East Side Ballas";
		if (BizzInfo[h][bMafia] == 18) biz = "Triads Mafia";
		if (BizzInfo[h][bMafia] == 19) biz = "The Rifa Gang";
		if (BizzInfo[h][bMafia] == 20) biz = "Russian Mafia";
		if (BizzInfo[h][bOwned] == 0) {
			AddStaticPickup(1274, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			new temp[MAX_STRING];
			format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса: {00C0FF}%s\n {FFFFFF}Стоимость: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buybiz\n{FFFFFF}Крыша:{00C0FF} %s", h, BizzInfo[h][bMessage], BizzInfo[h][bBuyPrice], BizzInfo[h][bLevelNeeded], biz);
			BizzInfo[h][bLabel] = Create3DTextLabel(temp, 0x75DDB5FF, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 15.0, 0);
		}
		if (BizzInfo[h][bOwned] == 1) {
			AddStaticPickup(1239, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			new temp[MAX_STRING];
			format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Владелец: {00C0FF}%s\n{FFFFFF}Стоимость входа: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Крыша:{00C0FF} %s", h, BizzInfo[h][bMessage], BizzInfo[h][bOwner], BizzInfo[h][bEntranceCost], BizzInfo[h][bLevelNeeded], biz);
			BizzInfo[h][bLabel] = Create3DTextLabel(temp, 0xE4FF61FF, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ], 15.0, 0);
		}
	}
	for (new h = 0; h < sizeof(SBizzInfo); h++) {
		new sbiz[64];
		if (SBizzInfo[h][sbMafia] == 0) sbiz = "None";
		if (SBizzInfo[h][sbMafia] == 5) sbiz = "La Cosa Nostra";
		if (SBizzInfo[h][sbMafia] == 6) sbiz = "Yakuza";
		if (SBizzInfo[h][sbMafia] == 13) sbiz = "Grove Street";
		if (SBizzInfo[h][sbMafia] == 14) sbiz = "El Coronos";
		if (SBizzInfo[h][sbMafia] == 15) sbiz = "Los Santos Vagos";
		if (SBizzInfo[h][sbMafia] == 16) sbiz = "East Side Ballas";
		if (SBizzInfo[h][sbMafia] == 18) sbiz = "Triads Mafia";
		if (SBizzInfo[h][sbMafia] == 19) sbiz = "The Rifa Gang";
		if (SBizzInfo[h][sbMafia] == 20) sbiz = "Russian Mafia";
		if (SBizzInfo[h][sbOwned] == 0) {
			AddStaticPickup(1274, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			new temp[MAX_STRING];
			format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Стоимость: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buybiz\n{FFFFFF}Крыша: {00C0FF}%s", h, SBizzInfo[h][sbMessage], SBizzInfo[h][sbBuyPrice], SBizzInfo[h][sbLevelNeeded], sbiz);
			SBizzInfo[h][sbLabel] = Create3DTextLabel(temp, 0x75DDB5FF, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 15.0, 0);
		}
		if (SBizzInfo[h][sbOwned] == 1) {
			AddStaticPickup(1239, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			new temp[MAX_STRING];
			format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Владелец: {00C0FF}%s\n {FFFFFF}Уровень: {00C0FF}%d\n {FFFFFF}Крыша: {00C0FF}%s", h, SBizzInfo[h][sbMessage], SBizzInfo[h][sbOwner], SBizzInfo[h][sbLevelNeeded], sbiz);
			SBizzInfo[h][sbLabel] = Create3DTextLabel(temp, 0xE4FF61FF, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ], 15.0, 0);
		}
	}
	AddStaticPickup(1240, 2, 262.7590, 75.9649, 1001.0391);
	AddStaticPickup(1240, 2, 263.2374, 80.8925, 1001.0391);
	AddStaticPickup(1240, 2, 263.4776, 85.6087, 1001.0391);
	AddStaticPickup(1318, 23, -2183.6543, 652.6331, 73.8359);
	AddStaticPickup(1318, 23, -2200.7607, 647.4109, 49.4375);
	AddStaticPickup(1239, 23, 1173.2563, -1323.3102, 15.3943);
	AddStaticPickup(1239, 23, 2029.5945, -1404.6426, 17.2512);
	AddStaticPickup(1239, 23, 766.0804, 14.5133, 1000.7004);
	AddStaticPickup(1239, 23, 2814.4006, 2587.2817, 9.9087);
	AddStaticPickup(371, 23, 1544.2, -1353.4, 329.4);
	AddStaticPickup(371, 23, 1536.0, -1360.0, 1150.0);
	AddStaticPickup(1242, 23, 1527.5, -12.1, 1002.0);
	AddStaticPickup(1318, 23, 627.2987, -12.1183, 1000.9219);
	AddStaticPickup(1318, 23, 1058.1563, 1280.5029, 10.8203);
	AddStaticPickup(1318, 23, 1554.9537, -1675.6584, 16.1953);
	AddStaticPickup(1318, 23, 2244.3423, -1665.5542, 15.4766);
	AddStaticPickup(1318, 23, 206.9357, -140.3760, 1003.5078);
	AddStaticPickup(1318, 23, 501.8708, -67.5820, 998.7578);
	AddStaticPickup(1318, 23, -794.9695, 489.7307, 1376.1953);
	AddStaticPickup(1318, 23, 460.3203, -88.7751, 999.5547);
	AddStaticPickup(1318, 23, 2169.2507, 1618.7080, 999.9766);
	AddStaticPickup(1318, 23, -2636.7124, 1402.6130, 906.4609);
	AddStaticPickup(1318, 23, 235.1664, 1187.0242, 1080.2578);
	AddStaticPickup(1318, 23, 140.3679, 1367.8837, 1083.8621);
	AddStaticPickup(1318, 23, 295.0916, 1472.4698, 1080.2578);
	AddStaticPickup(1318, 23, 225.7132, 1021.7196, 1084.0170);
	AddStaticPickup(1318, 23, 234.1282, 1064.0005, 1084.2119);
	AddStaticPickup(1318, 23, 226.1766, 1239.9509, 1082.1406);
	AddStaticPickup(1318, 23, -2240.4385, 128.5326, 1035.4210);
	AddStaticPickup(1318, 23, -42.6642, 1406.3314, 1084.4297);
	AddStaticPickup(1318, 23, 2365.2444, -1135.1753, 1050.8750);
	AddStaticPickup(1318, 23, 2268.3899, -1210.4500, 1047.7491);
	AddStaticPickup(1318, 23, 224.2880, 1289.1907, 1082.1406);
	AddStaticPickup(1318, 23, 2317.8274, -1026.4672, 1050.2178);
	AddStaticPickup(1318, 23, 226.4666, 1114.3007, 1080.9938);
	AddStaticPickup(1318, 23, 1122.7500, -2036.9438, 69.8942);
	AddStaticPickup(1318, 23, 1260.8934, -785.3745, 1091.9063, 1);
	AddStaticPickup(1318, 23, -2158.5740, 642.8942, 1052.3750, 2);
	AddStaticPickup(1318, 23, 2000.0607, -1114.1948, 27.1250);
	AddStaticPickup(1318, 23, -2022.0596, -100.0749, 35.8995);
	AddStaticPickup(1318, 23, -2158.5740, 642.8942, 1052.3750, 4);
	AddStaticPickup(1318, 23, -2192.5847, 647.4197, 49.4375);
	AddStaticPickup(1318, 24, 2496.0, -1693.7, 1014.7, 1);
	AddStaticPickup(1318, 24, -2455.8096, -135.8703, 26.1197);
	AddStaticPickup(1318, 24, 1752.9000, -1894.0280, 13.5573);
	AddStaticPickup(1318, 24, 2548.9490, -1294.7399, 1060.9844, 10);
	AddStaticPickup(1318, 24, -1606.3191, 672.0635, -4.9063);
	AddStaticPickup(1318, 24, 1524.4836, -1677.7958, 6.2188);
	AddStaticPickup(1318, 24, 246.3302, 87.0413, 1003.6406);
	AddStaticPickup(1318, 24, 1548.6154, -1364.0365, 326.2183);
	AddStaticPickup(1318, 24, 1570.7421, -1337.0516, 16.4844);
	AddStaticPickup(1318, 24, 773.8041, -78.4731, 1000.6622);
	AddStaticPickup(1318, 24, 1968.7987, 2295.3284, 16.4559);
	AddStaticPickup(1239, 23, 256.0822, 64.3362, 1003.6406);
	AddStaticPickup(1239, 23, 231.33, 161.44, 1003.02, 1);
	AddStaticPickup(1239, 23, 253.9280, 69.6094, 1003.6406);
	AddStaticPickup(1318, 23, 2226.8743, 1840.1384, 10.8203);
	AddStaticPickup(1318, 23, 1915.42, 1029.03, 567.213);
	AddStaticPickup(1239, 23, 255.1955, 78.3186, 1003.6406);
	CreatePickup(1239, 23, 323.0342, 1118.5804, 1083.8828);
	CreatePickup(1318, 24, 318.5768, 1114.6155, 1083.8828);
	CreatePickup(1318, 24, -27.3780, -58.1551, 1003.5469, -1);
	CreatePickup(1318, 24, -2178.0469, -42.1986, 35.3259);
	CreatePickup(1318, 24, 6.1786, -31.3730, 1003.5494);
	CreatePickup(1318, 24, 1614.8717, 1816.1160, 10.8203);
	CreatePickup(1318, 24, 345.6104, 158.4754, 1014.1875, 3);
	CreatePickup(1318, 24, 238.6255, 138.8083, 1003.0234);
	CreatePickup(1318, 23, -2026.8177, -104.0077, 1035.1719);
	CreatePickup(1254, 23, 1529.5117, -1683.8053, 5.8906);
	CreatePickup(1318, 23, -2716.6489, 626.8209, 33.2969);
	CreatePickup(1318, 23, -2695.6084, 640.1595, 14.4531);
	CreatePickup(1210, 23, 362.6015, 173.5510, 1008.3828, 1);
	CreatePickup(1318, 23, 2495.9744, -1692.0842, 1014.7422, 2);
	CreatePickup(1318, 23, 2495.3000, -1690.2000, 14.7656);
	CreatePickup(1318, 23, 2549.2764, -1294.7787, 1060.9844, 4);
	CreatePickup(1318, 23, -2492.1416, 2363.2239, 10.2768);
	CreatePickup(1318, 23, 2549.2764, -1294.7787, 1060.9844, 1);
	CreatePickup(1318, 23, 2808.1963, -1190.1615, 25.3398);
	CreatePickup(1318, 23, 1727.0577, -1638.9784, 20.2235, 2);
	CreatePickup(1318, 23, 690.9224, -1275.9976, 13.5603);
	CreatePickup(1254, 23, -1596.1489, 676.8752, -5.2422);
	CreatePickup(1254, 23, -1521.9950, 479.5473, 7.1875);
	CreatePickup(1239, 23, -557.4368, -503.6903, 24.7450);
	CreatePickup(1239, 23, 761.1445, 11.0298, 1001.1639);
	CreatePickup(1239, 23, 768.7869, -36.7466, 1000.6865);
	CreatePickup(1239, 23, -2119.6433, -178.2938, 35.3203);
	CreatePickup(1239, 23, -2022.4332, -116.7212, 1035.1719);
	CreatePickup(1239, 23, -2026.8765, -114.6630, 1035.1719);
	CreatePickup(1239, 23, 1631.0933, 1819.6515, 10.8280);
	CreatePickup(1239, 23, 414.1195, 2536.9023, 10.0000);
	CreatePickup(1318, 23, -2532.4351, 52.8043, 8.6172);
	CreatePickup(1239, 23, 2276.6072, -2358.8628, 13.5469);
	CreatePickup(1318, 23, -1962.0586, 434.1953, 35.1719, 0);
	CreatePickup(1318, 23, 975.1188, -8.6426, 1001.1484, 1);
	CreatePickup(1318, 23, 328.1443, -1512.3280, 36.0325, 0);
	CreatePickup(1318, 23, 975.1188, -8.6426, 1001.1484, 2);
	CreatePickup(1318, 23, 1382.1489, -1088.8043, 28.2124, 0);
	CreatePickup(1318, 23, 975.1188, -8.6426, 1001.1484, 3);
	CreatePickup(1318, 24, 206.9357, -140.3760, 1003.5078, 1); //Binco выход
	CreatePickup(1318, 24, 206.9357, -140.3760, 1003.5078, 2); // Binco выход
	CreatePickup(1318, 24, 2102.1362, 2257.3604, 11.0234); // Binco вход LV
	CreatePickup(1318, 24, 206.9357, -140.3760, 1003.5078, 3); //Binco выход
	CreatePickup(1318, 24, -2374.2480, 910.1654, 45.4453); // Binco вход SF
	CreatePickup(1318, 24, 1976.0017, -2036.6216, 13.5469); // зип ЛС вход
	CreatePickup(1318, 24, 461.0589, -1500.9823, 31.0581); // виктим ЛС вход
	CreatePickup(1318, 24, -1882.6859, 866.1516, 35.1719); // зип СФ вход
	CreatePickup(1318, 24, -1694.9639, 951.4175, 24.8906); //виктим СФ вход
	CreatePickup(1318, 24, 2802.5417, 2430.2510, 11.0625); // виктим ЛВ вход
	CreatePickup(1318, 24, 2090.5525, 2224.0918, 11.0234); //зип ЛВ вход
	CreatePickup(1318, 24, 161.3525, -96.6903, 1001.8047, 1); // выход зип
	CreatePickup(1318, 24, 227.3475, -8.2765, 1002.2109); // выход виктим
	CreatePickup(1318, 24, 161.3525, -96.6903, 1001.8047, 2); // выход зип
	CreatePickup(1318, 24, 227.3475, -8.2765, 1002.2109, 2); // выход виктим
	CreatePickup(1318, 24, 161.3525, -96.6903, 1001.8047, 3); // выход зип
	CreatePickup(1318, 24, 227.3475, -8.2765, 1002.2109, 3); // выход виктим
	CreatePickup(1582, 355, 1214.6238, -905.0850, 42.9205, -1);
	CreatePickup(1582, 355, -2352.6719, -153.5959, 35.3203, -1);
	CreatePickup(1582, 355, -2345.1042, 1024.0560, 50.6953, -1);
	CreatePickup(1582, 355, -1719.1241, 1352.8751, 7.1787, -1);
	CreatePickup(1582, 355, -1217.2108, 1822.3807, 41.7244, -1);
	CreatePickup(1582, 355, 2096.5129, -1800.3693, 13.3828, -1);
	CreatePickup(1582, 355, 801.1453, -1629.5795, 13.3828, -1);
	CreatePickup(1582, 355, 2376.4570, -1908.8212, 13.3828, -1);
	CreatePickup(1582, 355, 2488.2764, 2021.6671, 10.8203, -1);
	CreatePickup(1582, 355, 2075.7856, 2226.2383, 10.8203, -1);
	CreatePickup(1582, 355, 2631.0522, 1852.3870, 10.8203, -1);
	CreatePickup(1582, 355, 1857.3275, 2083.3960, 10.8203, -1);
	CreatePickup(1582, 355, 1094.3778, 2143.3965, 10.8203, -1);
	CreatePickup(1582, 355, 2409.9331, -1486.7938, 23.3997, -1);
	CreatePickup(1239, 23, 1580.40, -1636.75, 13.56);
	CreatePickup(1239, 23, -1614.71, 680.93, 7.19);
	CreatePickup(1239, 23, -1519.48, 479.52, 7.18);
	CreatePickup(1239, 23, 1580.3419, -1634.6920, 13.5615);
	CreatePickup(1239, 23, -1616.4886, 685.6258, 7.1875);
	CreatePickup(1239, 23, -1515.2664, 479.2319, 7.1903);
	CreatePickup(1239, 23, 1017.6431, -916.8083, 42.2262);
	CreatePickup(1314, 23, -2111.11, -448.05, 38.73);
	CreatePickup(1650, 23, -2029.4852, 156.4265, 28.8359, 0);
	CreatePickup(1650, 23, -2406.0986, 976.8326, 45.2969, 0);
	CreatePickup(1650, 23, -1675.9276, 413.9869, 7.1797, 0);
	CreatePickup(1650, 23, 1005.5187, -939.6584, 42.1797, 0);
	CreatePickup(1650, 23, 1944.3627, -1773.0619, 13.3906, 0);
	CreatePickup(1650, 23, 2115.7927, 921.1973, 10.8203, 0);
	CreatePickup(1650, 23, 1594.8954, 2198.7017, 10.8203, 0);
	CreatePickup(1650, 23, -1328.9003, 2677.1355, 50.0625, 0);
	CreatePickup(1650, 23, 2202.1008, 2475.4858, 10.8203, 0);
	CreatePickup(1650, 23, -91.2990, -1170.5698, 2.3950, 0);
	CreatePickup(1650, 23, -1605.9832, -2714.3477, 48.5335, 0);
	CreatePickup(1650, 23, -2243.9092, -2560.1267, 31.9219, 0);
	CreatePickup(1650, 23, 1381.9602, 462.6776, 19.9054, 0);
	CreatePickup(1239, 23, -2483.7781, 781.8073, 35.1719, -1);
	CreatePickup(1239, 15, -1854.7827, -1560.7799, 21.7500);
	CreatePickup(1318, 24, 2229.8191, -1721.2977, 13.5616); // вход Спортзал ЛС
	CreatePickup(1318, 24, 772.2761, -5.5116, 1000.7284); //   выход Спортзал ЛС
	CreatePickup(1318, 24, 2165.9390, -1671.2850, 15.0733); // вход в здание Наркодиллеров
	CreatePickup(1318, 24, -590.9767, 1991.9634, 9.2500); //   вход в гидро-станцию
	CreatePickup(1318, 24, -959.6515, 1956.4625, 9.0000); //   выход из гидро-станции
	CreatePickup(1318, 24, -2270.2188, -155.8912, 35.3203); // вход спортзал СФ
	CreatePickup(1318, 24, 774.1519, -50.2971, 1000.5859); //  выход спортзал СФ
	CreatePickup(1318, 24, -1989.8215, 1117.7977, 54.4688); //  Церковь СФ вход
	CreatePickup(1318, 24, -2017, 1119.2, 26.0531); //  Церковь СФ выход
	//================================[Общаки]======================================
	CreatePickup(1239, 23, 2546.8777, -1281.8262, 1060.9844, 4);
	CreatePickup(1239, 23, 2498.2224, -1710.7615, 1014.7422, 1);
	CreatePickup(1239, 23, -2165.1587, 646.3699, 1057.5938, 2);
	CreatePickup(1239, 23, 2546.7993, -1281.6243, 1060.9844, 10);
	CreatePickup(1239, 23, 2498.2224, -1710.7615, 1014.7422, 2);
	CreatePickup(1239, 23, 2546.8777, -1281.8262, 1060.9844, 1);
	CreatePickup(1239, 23, 1267.3802, -787.2311, 1091.9063, 1);
	CreatePickup(1239, 23, -2165.1587, 646.3699, 1057.5938, 4);
	CreatePickup(1239, 23, 1733.2671, -1639.8517, 20.2299, 2);
	CreatePickup(1239, 23, 2546.8000, -1281.8187, 1060.9844, 5);
	//==============================================================================
	exitsf = CreatePickup(1318, 24, -1978.9326, 137.8527, 27.6875); //Sf noob resp
	entersf = CreatePickup(1318, 24, -1981.3171, 138.0744, 27.6875); //Sf noob resp
	recept[0] = CreatePickup(1314, 2, 830.2521, -1363.8726, -0.5015);
	recept[1] = CreatePickup(1314, 2, -1973.1696, 118.0815, 27.6875);
	recept[2] = CreatePickup(1314, 2, 2846.1631, 1287.4299, 11.3906);
	ugonshik = CreatePickup(2894, 2, -1939.99, -1087.81, 30.78);
	buyclother1 = CreatePickup(1275, 1, 207.4748, -130.3195, 1003.5078, 1);
	buyclother2 = CreatePickup(1275, 1, 207.4748, -130.3195, 1003.5078, 2);
	buyclother3 = CreatePickup(1275, 1, 207.4748, -130.3195, 1003.5078, 3);
	buyclother4 = CreatePickup(1275, 1, 206.5649, -7.0926, 1001.2109, 1);
	buyclother5 = CreatePickup(1275, 1, 206.5649, -7.0926, 1001.2109, 2);
	buyclother6 = CreatePickup(1275, 1, 206.5649, -7.0926, 1001.2109, 3);
	buyclother7 = CreatePickup(1275, 1, 161.2924, -83.7728, 1001.8047, 1);
	buyclother8 = CreatePickup(1275, 1, 161.2924, -83.7728, 1001.8047, 2);
	buyclother9 = CreatePickup(1275, 1, 161.2924, -83.7728, 1001.8047, 3);
	gmedicines = CreatePickup(1241, 23, -2710.2380, 639.2195, 14.4531);
	gryz1 = CreatePickup(1239, 23, 2137.8227539063, -2282.4379882813, 20.671875, -1);
	gryz2 = CreatePickup(1239, 23, 2127.6430664063, -2275.4113769531, 20.671875, -1);
	lcnkamera = CreatePickup(1239, 2, 1178.20, -2036.85, 69.01, -1);
	russiankamera = CreatePickup(1239, 2, -2490.33, 2357.72, 10.27, -1);
	triadkamera = CreatePickup(1239, 2, 656.64, -1312.85, 13.63, -1);
	yakuzakamera = CreatePickup(1239, 2, -2244.51, 649.89, 49.45, -1);
	ballaskamera = CreatePickup(1239, 2, 1995.75, -1115.87, 26.77, -1);
	grovekamera = CreatePickup(1239, 2, 2498.78, -1686.37, 13.47, -1);
	koronoskamera = CreatePickup(1239, 2, 1753.66, -1885.92, 13.56, -1);
	vagoskamera = CreatePickup(1239, 2, 2803.71, -1187.71, 25.47, -1);
	streetkamera = CreatePickup(1239, 2, 1059.43, 1364.56, 10.82, -1);
	rifakamera = CreatePickup(1239, 2, -2491.75, -133.28, 25.62, -1);
	keys = CreatePickup(1210, 22, 1400.03, -1012.85, 0.67);
	picjob = CreatePickup(1275, 23, -1830.2748, -1639.3976, 22.2496, 0);
	entermer = CreatePickup(1318, 24, 2412.88, 1123.84, 10.82);
	exitmer = CreatePickup(1318, 24, 389.8942, 173.7533, 1008.3828, 1);
	bombb = CreatePickup(2057, 2, -1398.15, 502.72, 11.30);
	//===========================[рестораны-пикапы]=================================
	menu = CreatePickup(1239, 23, -785.4265, 500.1190, 1371.7422, 2);
	menulcn = CreatePickup(1239, 23, -785.4265, 500.1190, 1371.7422, 18);
	//=========================[pickupammo]=========================================
	buygunsf = CreatePickup(355, 2, 313.8810, -133.4959, 999.6016, 1);
	buygunlv = CreatePickup(355, 2, 313.8810, -133.4959, 999.6016, 10);
	buygunlv2 = CreatePickup(355, 2, 312.4890, -165.8029, 999.6010, 12);
	buygunRM = CreatePickup(355, 2, 312.2445, -165.7696, 999.6010, 14);
	buygunkarer2 = CreatePickup(355, 2, 313.8282, -133.5131, 999.6016, 3);
	buygungroove = CreatePickup(355, 2, 295.4529, -38.2389, 1001.5156, 9);
	buygunkarer = CreatePickup(355, 2, 312.2361, -165.7489, 999.6010, 11);
	buyguncentr = CreatePickup(355, 2, 295.7959, -80.5145, 1001.5156, 0);
	buygunmeri = CreatePickup(355, 2, 296.0017, -80.6184, 1001.5156, 8);
	buygunDB1 = CreatePickup(355, 2, 295.8069, -80.5265, 1001.5156, 15);
	buygunkolhoz = CreatePickup(355, 2, 295.2408, -38.1390, 1001.5156, 13);
	gunhit = CreatePickup(1239, 1, -1119.3185, -975.6393, 129.2188);
	enter4 = CreatePickup(1318, 24, 1554.9537, -1675.6584, 16.1953); //   LSPD вход
	enter5 = CreatePickup(1318, 24, 246.5325, 62.4251, 1003.6406); //     LSPD выход
	//-----------------------------[Бургеры и т.д.]---------------------------------
	enter14 = CreatePickup(1318, 24, 2420.1318, -1509.0405, 24.0000);
	enter15 = CreatePickup(1318, 24, 2397.8152, -1899.1594, 13.5469);
	enter17 = CreatePickup(1318, 24, 1199.2064, -918.1880, 43.1232);
	enter18 = CreatePickup(1318, 24, 928.5836, -1352.9325, 13.3438);
	enter19 = CreatePickup(1318, 24, 810.6829, -1616.2004, 13.5469);
	enter20 = CreatePickup(1318, 24, 203.4428, -202.3332, 1.5781);
	enter21 = CreatePickup(1318, 24, 1367.4484, 248.3696, 19.5669);
	enter23 = CreatePickup(1318, 24, -2155.0996, -2460.2549, 30.8516);
	enter24 = CreatePickup(1318, 24, -2336.8450, -166.8184, 35.5547);
	enter25 = CreatePickup(1318, 24, -1816.5510, 618.1129, 35.1719);
	enter26 = CreatePickup(1318, 24, -1912.2028, 828.1974, 35.2152);
	enter27 = CreatePickup(1318, 24, -1808.4329, 945.7468, 24.8906);
	enter28 = CreatePickup(1318, 24, -2672.2537, 258.1948, 4.6328);
	enter29 = CreatePickup(1318, 24, -2356.1184, 1008.0376, 50.8984);
	enter30 = CreatePickup(1318, 24, -1721.3676, 1359.7679, 7.1853);
	enter31 = CreatePickup(1318, 24, 172.7811, 1177.0140, 14.7578);
	enter32 = CreatePickup(1318, 24, 662.4005, 1717.1302, 7.1875);
	enter33 = CreatePickup(1318, 24, -78.7535, -1169.8174, 2.1447);
	enter34 = CreatePickup(1318, 24, 1872.5948, 2071.8145, 11.0625);
	enter35 = CreatePickup(1318, 24, 1158.2521, 2072.0667, 11.0625);
	enter36 = CreatePickup(1318, 24, 2169.9758, 2795.5613, 10.8203);
	enter37 = CreatePickup(1318, 24, -2479.0073, 2318.2717, 4.9844);
	enter76 = CreatePickup(1318, 24, -1566.8878, -2730.0781, 48.7435);
	enter77 = CreatePickup(1318, 24, 2351.7627, 2533.1938, 10.8203);
	enter78 = CreatePickup(1318, 24, 2756.6277, 2477.1726, 11.0625);
	enter79 = CreatePickup(1318, 24, 2838.3479, 2407.5732, 11.0690);
	enter80 = CreatePickup(1318, 24, 2638.3545, 1849.7996, 11.0234);
	enter81 = CreatePickup(1318, 24, 2638.2405, 1671.8802, 11.0234);
	enter82 = CreatePickup(1318, 24, 2472.5903, 2034.2532, 11.0625);
	enter83 = CreatePickup(1318, 24, -1213.3663, 1830.9479, 41.9297);
	enter84 = CreatePickup(1318, 24, -857.6808, 1535.8795, 22.5870);
	enter41 = CreatePickup(1318, 24, 2306.2217, -1636.5061, -3.3887); //  БАР Зелёные бутылки выход
	enter46 = CreatePickup(1318, 24, -2441.9995, 755.3438, 35.1719); //   24/7 вход
	enter47 = CreatePickup(1318, 24, -25.8395, -141.3743, 1003.5469); //  24/7 выход
	enter48 = CreatePickup(1318, 24, 2117.4353, 896.7814, 11.1797); //    24/7 вход
	enter49 = CreatePickup(1318, 24, -25.8746, -187.9468, 1003.5469); //  24/7 выход
	enter85 = CreatePickup(1318, 24, 1000.2590, -919.9160, 42.3281); //  24/7 вход
	enter86 = CreatePickup(1318, 24, 2194.9395, 1990.9404, 12.2969); //  24/7 вход
	enter87 = CreatePickup(1318, 24, 1315.5619, -898.4269, 39.5781); //  24/7 вход
	enter88 = CreatePickup(1318, 24, 1352.2966, -1758.6101, 13.5078); //  24/7 вход
	enter89 = CreatePickup(1318, 24, 2452.4731, 2064.9563, 10.8203); //  24/7 вход
	enter90 = CreatePickup(1318, 24, 2546.5510, 1972.2891, 10.8203); //  24/7 вход
	enter91 = CreatePickup(1318, 24, 2884.6150, 2454.0466, 11.0690); //  24/7 вход
	enter98 = CreatePickup(1318, 24, 2247.7087, 2396.2324, 10.8203); //  24/7
	enter99 = CreatePickup(1318, 24, 1833.2655, -1842.6333, 13.5781); //  24/7
	CreateDynamic3DTextLabel("{FFFFFF}Место работы: Покупка пакетов\n Используйте {00C0FF}/materials get{FFFFFF}", COLOR_WHITE, 2814.4006, 2587.2817, 9.9087, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте: {00C0FF}/job{FFFFFF} для просмотра списка работ.", COLOR_WHITE, 362.6015, 173.5510, 1008.3828, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	Create3DTextLabel(" {FFFFFF}Дом Los Santos Vagos ", COLOR_CGREEN3d, 2808.1963, -1190.1615, 25.3398, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом The Triads Mafia ", COLOR_CGREEN3d, 690.9224, -1275.9976, 13.5603, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом Street Racer ", COLOR_CGREEN3d, 1058.1563, 1280.5029, 10.8203, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом The Grove Street ", COLOR_CGREEN3d, 2495.3000, -1690.2000, 14.7656, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом Русской Мафии ", COLOR_CGREEN3d, -2492.1416, 2363.2239, 10.2768, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом La Cosa Nostra ", COLOR_CGREEN3d, 1122.7500, -2036.9438, 69.8942, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом The Ballas Gang ", COLOR_CGREEN3d, 2000.1041, -1114.1420, 27.1250, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом El Coronos ", COLOR_CGREEN3d, 1752.9000, -1894.0280, 13.5573, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом The Rifa Gang ", COLOR_CGREEN3d, -2455.8096, -135.8703, 26.1197, 20.0, 0, 1);
	Create3DTextLabel(" {FFFFFF}Дом Yakuza ", COLOR_CGREEN3d, -2192.5847, 647.4197, 49.4375, 20.0, 0, 1);
	CreatePickup(1239, 23, 2548.9758, -1294.6970, 1060.9844, 5);
	Create3DTextLabel(" {FFFFFF}Лифт на крышу\n ALT ", 0x008080FF, -2200.7607, 647.4109, 49.4375, 25, 0);
	Create3DTextLabel(" {FFFFFF}Лифт с крыши\n ALT ", 0x008080FF, -2183.6543, 652.6331, 73.8359, 25, 0);
	Create3DTextLabel("{FFFFFF}Лифт на крышу\n ALT", 0xDBBEA3AA, -2695.6084, 640.1595, 14.4531, 35, 0);
	Create3DTextLabel("{FFFFFF}Лифт с крыши\n ALT", 0xDBBEA3AA, -2716.6489, 626.8209, 33.2969, 35, 0);
	Create3DTextLabel("{FFFFFF}Место Задержания\nИспользуй\n {00C0FF}/arrest ", 0xDBBEA3AA, 1529.5117, -1683.8053, 5.8906, 5, 0);
	Create3DTextLabel("{FFFFFF}Место Задержания\nИспользуй\n {00C0FF}/arrest", 0xDBBEA3AA, -1596.1489, 676.8752, -5.2422, 5, 0);
	Create3DTextLabel("{FFFFFF}Место Задержания\nИспользуй\n {00C0FF}/arrest", 0xDBBEA3AA, -1521.9950, 479.5473, 7.1875, 5, 0);
	Create3DTextLabel("{FFFFFF}Чтобы положить/забрать\nМатериалы и Наркотики\nИспользуйте:{00C0FF}/hide,/takeout ", 0xDBBEA3AA, -557.4368, -503.6903, 24.7450, 20, 0);
	Create3DTextLabel("{FFFFFF}Изучи стили\nБоя с помощью\n {00C0FF}/fg", COLOR_WHITE, 761.1445, 11.0298, 1001.1639, 20, 0);
	Create3DTextLabel("{FFFFFF}Изучи стили\nБоя с помощью\n {00C0FF}/fg", COLOR_WHITE, 768.7869, -36.7466, 1000.6865, 20, 0);
	Create3DTextLabel("{FFFFFF}Завод материалов используй:\n {00C0FF}/materials deliver ", COLOR_WHITE, -2119.6433, -178.2938, 35.3203, 10, 0);
	Create3DTextLabel("{FFFFFF}Очистка розыска {00C0FF}/clear ", COLOR_WHITE, 253.9280, 69.6094, 1003.6406, 6, 0);
	Create3DTextLabel("{FFFFFF}Очистка розыска {00C0FF}/bribe ", COLOR_WHITE, 256.0822, 64.3362, 1003.6406, 6, 0);
	CreateDynamic3DTextLabel("{FFFFFF}Очистка розыска {00C0FF}/clear ", COLOR_WHITE, 231.33, 161.44, 1003.02, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	Create3DTextLabel("{FFFFFF}Используйте {00C0FF}/exchange{FFFFFF} для продажи баночки", COLOR_WHITE, 1631.0933, 1819.6515, 10.8280, 5, 0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте {00C0FF}/searchoff{FFFFFF} для снятия розыска", COLOR_WHITE, 414.1195, 2536.9023, 10.0000, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте {00C0FF}/buylic{FFFFFF} для просмотра списка платных лицензий", COLOR_WHITE, -2022.4332, -116.7212, 1035.1719, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте {00C0FF}/buyticket{FFFFFF} чтобы использовать картинг", COLOR_WHITE, 2276.6072, -2358.8628, 13.5469, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте {00C0FF}/taketest{FFFFFF} чтобы пройти тест", COLOR_WHITE, -2026.8765, -114.6630, 1035.1719, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	Create3DTextLabel("{ffdb58}Смена жительства ", 0x6053F3FF, 830.2521, -1363.8726, -0.5015, 20.0, 0, 1);
	Create3DTextLabel("{ffdb58}Смена жительства ", 0x6053F3FF, -1973.1696, 118.0815, 27.6875, 20.0, 0, 1);
	Create3DTextLabel("{ffdb58}Смена жительства ", 0x6053F3FF, 2846.1631, 1287.4299, 11.3906, 20.0, 0, 1);
	new randa = random(sizeof(RandCars));
	randa = random(sizeof(RandCars));
	carselect[0] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[1] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[2] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[3] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[4] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[5] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[6] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[7] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[8] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[9] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[10] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[11] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[12] = RandCars[randa][0];
	randa = random(sizeof(RandCars));
	carselect[13] = RandCars[randa][0];
	randa = random(sizeof(RandLCars));
	carselect[14] = RandLCars[randa][0];
	//===================================[RentLodka]================================
	RentLodki[0] = AddStaticVehicleEx(452, -2263.6758, 2418.5078, -0.5823, 225.8612, -1, -1, 30000);
	AddStaticVehicleEx(452, -2231.3257, 2386.7502, -0.4870, 45.8941, -1, -1, 30000);
	AddStaticVehicleEx(452, 3601, 2440.1274, -0.2808, 228.1936, -1, -1, 30000);
	AddStaticVehicleEx(493, -2199.7021, 2420.8384, -0.2366, 45.7418, -1, -1, 30000);
	RentLodki[1] = AddStaticVehicleEx(493, -2233.3281, 2453.7505, -0.0250, 230.0433, -1, -1, 30000);
	//=================================[RentCarLS]==================================
	Rent[0] = AddStaticVehicleEx(415, 550.5428, -1290.5056, 17.2212, 358.5132, -1, -1, 30000);
	AddStaticVehicleEx(415, 546.1774, -1290.4194, 17.2119, 357.7491, -1, -1, 30000);
	AddStaticVehicleEx(451, 544.5369, -1268.5332, 17.0208, 215.6491, -1, -1, 30000);
	AddStaticVehicleEx(451, 537.6042, -1274.1761, 17.0144, 217.8465, -1, -1, 30000);
	AddStaticVehicleEx(411, 541.9272, -1290.2600, 17.0533, 356.7829, -1, -1, 30000);
	AddStaticVehicleEx(411, 538.0511, -1289.9673, 17.0532, 354.8557, -1, -1, 30000);
	AddStaticVehicleEx(429, 531.6306, -1278.6847, 16.9259, 251.8167, -1, -1, 30000);
	Rent[1] = AddStaticVehicleEx(429, 529.7039, -1286.0100, 16.9267, 285.3842, -1, -1, 30000);
	//=================================[RentCarSF]==========================================
	RentSF[0] = AddStaticVehicleEx(477, -1969.7463, 242.7101, 34.9339, 359.7188, 94, 1, 30000);
	AddStaticVehicleEx(429, -1977.8518, 242.2038, 34.8544, 1.6316, 13, 13, 30000);
	AddStaticVehicleEx(402, -1992.7938, 242.1826, 35.0044, 266.8620, 13, 13, 30000);
	AddStaticVehicleEx(451, -1991.0858, 255.2521, 34.8700, 259.2797, 125, 125, 30000);
	AddStaticVehicleEx(506, -1990.0814, 268.9274, 34.8793, 267.1713, 6, 6, 30000);
	AddStaticVehicleEx(562, -1984.4646, 275.2286, 34.8391, 178.5163, 35, 1, 30000);
	AddStaticVehicleEx(411, -1987.0736, 304.4549, 34.9038, 269.2108, 64, 1, 30000);
	AddStaticVehicleEx(506, -1946.6042, 273.3972, 35.1783, 126.9609, 3, 3, 30000); // RENTTT SFFFFFFF
	AddStaticVehicleEx(541, -1955.2990, 303.4136, 35.0936, 134.3704, 68, 8, 30000);
	AddStaticVehicleEx(558, -1946.4192, 264.6456, 35.1016, 89.4539, 30, 1, 30000);
	AddStaticVehicleEx(559, -1947.5764, 257.1290, 35.1251, 46.8382, 13, 8, 30000);
	AddStaticVehicleEx(560, -1958.4509, 257.1102, 35.1736, 359.3237, 21, 1, 30000);
	AddStaticVehicleEx(411, -1955.0824, 302.2404, 40.7742, 179.2677, 112, 1, 30000);
	AddStaticVehicleEx(411, -1946.3317, 273.9201, 40.7773, 124.8102, 112, 1, 30000);
	AddStaticVehicleEx(415, -1954.9531, 257.2287, 40.8185, 357.6235, 62, 1, 30000); // END RENTTTT SFFFF
	RentSF[1] = AddStaticVehicleEx(415, -1971.2850, 306.2487, 34.9440, 179.2231, 25, 1, 30000);
	//=================================[RentMoto]===========================================
	RentMoto[0] = AddStaticVehicleEx(522, -1888.3154, -152.2872, 11.4682, 98.9656, 13, 13, 30000);
	AddStaticVehicleEx(522, -1888.2272, -148.3036, 11.4582, 100.8078, 12, 12, 30000);
	AddStaticVehicleEx(522, -1887.7982, -144.2545, 11.4596, 107.9652, 11, 11, 30000);
	AddStaticVehicleEx(461, -1871.8335, -144.1123, 11.4527, 203.4326, 43, 1, 30000);
	AddStaticVehicleEx(522, -1867.0698, -143.6613, 11.4391, 209.6152, 3, 3, 30000);
	AddStaticVehicleEx(461, -1859.4500, -144.1288, 11.4832, 217.8385, 37, 1, 30000);
	AddStaticVehicleEx(521, -1854.3693, -144.1648, 11.4650, 205.6531, 6, 6, 30000);
	AddStaticVehicleEx(471, -1849.7581, -142.6122, 11.3802, 245.5927, 7, 7, 30000);
	AddStaticVehicleEx(471, -1849.5597, -139.5052, 11.3796, 246.6373, 8, 8, 30000);
	AddStaticVehicleEx(471, -1849.3716, -136.0860, 11.3793, 241.4050, 9, 9, 30000);
	AddStaticVehicleEx(461, -1849.5042, -132.4625, 11.4404, 251.2005, 10, 10, 30000);
	AddStaticVehicleEx(468, -1850.4312, -129.1663, 11.4294, 332.2503, 2, 2, 30000);
	AddStaticVehicleEx(461, -1854.1107, -128.8028, 11.4834, 335.2760, 1, 1, 30000);
	AddStaticVehicleEx(468, -1858.5803, -128.5085, 11.5714, 324.5590, 0, 0, 30000);
	AddStaticVehicleEx(468, -1862.6467, -128.1196, 11.5682, 330.1745, 1, 1, 30000);
	RentMoto[1] = AddStaticVehicleEx(521, -1866.9001, -127.6036, 11.4636, 339.2358, 4, 4, 30000);
	//===============================[Мусоровозки]=============================================
	dvr[0] = AddStaticVehicleEx(408, -1916.3066, -1681.4327, 23.5693, 268.5903, 26, 26, 600);
	dvr[1] = AddStaticVehicleEx(408, -1916.7106, -1663.5057, 23.5693, 271.1588, 26, 26, 600);
	dvr[2] = AddStaticVehicleEx(408, -1894.4188, -1701.9205, 22.3003, 183.8416, 26, 26, 600);
	dvr[3] = AddStaticVehicleEx(408, -1902.4734, -1702.3284, 22.3023, 182.8224, 26, 26, 600);
	dvr[4] = AddStaticVehicleEx(408, -1910.7340, -1702.7501, 22.2939, 182.4346, 26, 26, 600);
	dvr[5] = AddStaticVehicleEx(408, -1919.4362, -1703.2611, 22.3008, 181.2190, 26, 26, 600);
	dvr[6] = AddStaticVehicleEx(408, -1901.7836, -1590.2365, 22.3019, 270.1158, 26, 26, 600);
	dvr[7] = AddStaticVehicleEx(408, -1902.3043, -1573.5619, 22.2980, 269.0064, 26, 26, 600);
	Create3DTextLabel("{FFFFFF}Мусоровозчик\nДля начала Работы введите {00C0FF}/musor", COLOR_YELLOW, -1855.0131, -1560.7467, 21.7500, 80.0, 0, 0);
	CreateDynamic3DTextLabel("{FFFFFF}Используйте {00C0FF}/get drugs{FFFFFF} для покупки наркотиков", COLOR_WHITE, 323.0750, 1118.3474, 1083.8828, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 100.0);
	//================================[Иконки на карте]=============================
	CreateMapIcon(51, 1, -49.8368, -270.3154, 6.6332); //дальнобойщик
	CreateMapIcon(42, 2, -1718.0671, 1018.1241, 17.5859); //такси
	CreateMapIcon(54, 3, -2270.4441, -155.9506, 35.3203); //спортзал
	CreateMapIcon(54, 4, 2229.0020, -1720.1697, 13.5518); //спортзал
	CreateMapIcon(18, 5, -543.9360, -519.3865, 25.5234); //склад
	CreateMapIcon(55, 6, -2026.6974, -101.5865, 35.1641); //аш
	CreateMapIcon(51, 7, -1739.2467, 160.9892, 3.5547); //проды
	CreateMapIcon(51, 8, 2354.5122, 2757.1345, 10.8203); //проды
	CreateMapIcon(51, 9, 2782.5205, -2438.2402, 13.6350); //проды
	CreateMapIcon(30, 10, 1552.2612, -1675.2318, 16.1953); //ПОЛИЦИЯ ЛС
	CreateMapIcon(30, 11, -1602.1743, 714.5024, 48.9375); // ФБР
	CreateMapIcon(21, 12, -2006.2268, 1117.8527, 70.3468); //Церковь
	CreateMapIcon(22, 13, -2668.8115, 645.7192, 66.0938); // МЧС
	CreateMapIcon(59, 14, 2000.0607, -1114.1948, 27.1250); //The Ballas Gang
	CreateMapIcon(58, 15, 1753.9695, -1893.9972, 13.5570); //El Coronos
	CreateMapIcon(60, 16, 2812.5186, -1183.0350, 25.2734); //Los Santos Vagos
	CreateMapIcon(62, 17, 2507.9468, -1708.9611, 13.4910); //Грув
	CreateMapIcon(43, 18, 711.9614, -1275.5101, 18.3220); //Триада
	CreateMapIcon(44, 19, -2203.0732, 643.6162, 49.6162); //якудза
	CreateMapIcon(23, 20, 1122.7075, -2036.9648, 1); //LCN
	CreateMapIcon(53, 21, 1058.1563, 1280.5029, 1); //Стриты
	CreateMapIcon(61, 22, -2455.8096, -135.8703, 1); //SF Rifa
	CreateMapIcon(34, 23, -2492.0303, 2363.1060, 1); //RM
	CreateMapIcon(45, 24, 2244.2461, -1665.4950, 15.4766); //одежда
	CreateMapIcon(55, 25, -91.6858, -1170.7310, 2.1534); //заправки
	CreateMapIcon(55, 26, 1003.0466, -940.9360, 41.8884); //заправки
	CreateMapIcon(55, 27, 1944.2188, -1771.4443, 13.1603); //заправки
	CreateMapIcon(55, 28, 2116.6047, 920.8490, 10.589); //заправки
	CreateMapIcon(55, 29, 2203.2920, 2472.2551, 10.5891); //заправки
	CreateMapIcon(55, 30, 2148.4260, 2748.2634, 10.5886); //заправки
	CreateMapIcon(55, 31, 653.4924, -564.9418, 15.9107); //заправки
	CreateMapIcon(55, 32, 2639.6692, 1105.8273, 10.3866); //заправки
	CreateMapIcon(55, 33, 1596.1639, 2199.1121, 10.3899); //заправки
	CreateMapIcon(55, 34, 611.9130, 1695.1809, 6.5572); //заправки
	CreateMapIcon(55, 35, 69.9592, 1218.3286, 18.3773); //заправки
	CreateMapIcon(55, 36, -1471.6088, 1863.8280, 32.2046); //заправки
	CreateMapIcon(55, 37, -1328.3551, 2677.5037, 49.6253); //заправки
	CreateMapIcon(55, 38, -1606.2151, -2714.1814, 48.0974); //заправки
	CreateMapIcon(55, 39, -1673.9740, 413.8260, 6.9491); //заправки
	CreateMapIcon(55, 40, -2029.0822, 155.0882, 28.6041); //заправки
	CreateMapIcon(14, 41, 2420.1318, -1509.0405, 24.0000); //Клакин-Белл (кфц)
	CreateMapIcon(14, 42, 2397.8152, -1899.1594, 13.5469); //Клакин-Белл (кфц)
	CreateMapIcon(14, 43, 928.5836, -1352.9325, 13.3438); //Клакин-Белл (кфц)
	CreateMapIcon(14, 44, -2155.0996, -2460.2549, 30.8516); //Клакин-Белл (кфц)
	CreateMapIcon(14, 45, -1816.5510, 618.1129, 35.1719); //Клакин-Белл (кфц)
	CreateMapIcon(14, 46, -2672.2537, 258.1948, 4.6328); //Клакин-Белл (кфц)
	CreateMapIcon(14, 47, 172.7811, 1177.0140, 14.7578); //Клакин-Белл (кфц)
	CreateMapIcon(14, 48, 662.4005, 1717.1302, 7.1875); //Клакин-Белл (кфц)
	CreateMapIcon(14, 49, 2838.3479, 2407.5732, 11.0690); //Клакин-Белл (кфц)
	CreateMapIcon(14, 50, -1213.3663, 1830.9479, 41.9297); //Клакин-Белл (кфц)
	CreateMapIcon(14, 51, 2638.2405, 1671.8802, 11.0234); //Клакин-Белл (кфц)
	CreateMapIcon(10, 52, 1199.2064, -918.1880, 43.1232); //Бургер Шот (кфц)
	CreateMapIcon(10, 53, 810.6829, -1616.2004, 13.5469); //Бургер Шот (кфц)
	CreateMapIcon(10, 54, 1872.5948, 2071.8145, 11.0625); //Бургер Шот (кфц)
	CreateMapIcon(10, 55, 1158.2521, 2072.0667, 11.0625); //Бургер Шот (кфц)
	CreateMapIcon(10, 56, 2169.9758, 2795.5613, 10.8203); //Бургер Шот (кфц)
	CreateMapIcon(10, 57, -1912.2028, 828.1974, 35.2152); //Бургер Шот (кфц)
	CreateMapIcon(10, 58, -2356.1184, 1008.0376, 50.8984); //Бургер Шот (кфц)
	CreateMapIcon(10, 59, 2472.5903, 2034.2532, 11.0625); //Бургер Шот (кфц)
	CreateMapIcon(10, 60, -857.6808, 1535.8795, 22.5870); //Бургер Шот (кфц)
	CreateMapIcon(10, 61, -2336.8450, -166.8184, 35.5547); //Бургер Шот (кфц)
	CreateMapIcon(29, 62, 203.4428, -202.3332, 1.5781); //Пиццерия (кфц)
	CreateMapIcon(29, 63, -1808.4329, 945.7468, 24.8906); //Пиццерия (кфц)
	CreateMapIcon(29, 64, 2331.9521, 75.0613, 26.6210); //Пиццерия (кфц)
	CreateMapIcon(29, 65, 1367.4484, 248.3696, 19.5669); //Пиццерия (кфц)
	CreateMapIcon(29, 66, -1721.3676, 1359.7679, 7.1853); //Пиццерия (кфц)
	CreateMapIcon(29, 67, -78.7535, -1169.8174, 2.1447); //Пиццерия (кфц)
	CreateMapIcon(29, 68, -2479.0073, 2318.2717, 4.9844); //Пиццерия (кфц)
	CreateMapIcon(29, 69, -1566.8878, -2730.0781, 48.7435); //Пиццерия (кфц)
	CreateMapIcon(29, 70, 2351.7627, 2533.1938, 10.8203); //Пиццерия (кфц)
	CreateMapIcon(29, 71, 2756.6277, 2477.1726, 11.0625); //Пиццерия (кфц)
	CreateMapIcon(29, 72, 2638.3545, 1849.7996, 11.0234); //Пиццерия (кфц)
	CreateMapIcon(29, 73, 2105.3608, -1806.6322, 13.5547); //Пиццерия (кфц)
	CreateMapIcon(56, 74, -2178.0469, -42.1986, 35.3259); //24/7
	CreateMapIcon(56, 75, -2441.9995, 755.3438, 35.1719); //24/7
	CreateMapIcon(56, 76, 2117.4353, 896.7814, 11.1797); //24/7
	CreateMapIcon(56, 77, 1000.2590, -919.9160, 42.3281); //24/7
	CreateMapIcon(56, 78, 2194.9395, 1990.9404, 12.2969); //24/7
	CreateMapIcon(56, 79, 1315.5619, -898.4269, 39.5781); //24/7
	CreateMapIcon(56, 80, 1352.2966, -1758.6101, 13.5078); //24/7
	CreateMapIcon(24, 81, 328.1443, -1512.3280, 36.0325); //квартирный дом
	CreateMapIcon(56, 82, 2546.5510, 1972.2891, 10.8203); //24/7
	CreateMapIcon(56, 83, 2884.6150, 2454.0466, 11.0690); //24/7
	CreateMapIcon(56, 84, 2247.7087, 2396.2324, 10.8203); //24/7
	CreateMapIcon(56, 85, 1833.2655, -1842.6333, 13.5781); //24/7
	CreateMapIcon(18, 86, -2119.8010, -177.7931, 35.3203); // здача матов
	CreateMapIcon(18, 87, 2814.4006, 2587.2817, 9.9087); // покупка матов
	CreateMapIcon(5, 88, -1349.3800, 467.3407, 7.1875); //армия
	CreateMapIcon(27, 89, 1017.6431, -916.8083, 42.2262); //Мэрия
	CreateMapIcon(45, 90, 2102.2998, 2257.5190, 11.0234); //одежда
	CreateMapIcon(45, 91, -2374.2480, 910.1654, 45.4453); //одежда
	CreateMapIcon(45, 93, 1976.0017, -2036.6216, 13.5469); //одежда
	CreateMapIcon(45, 94, 461.0589, -1500.9823, 31.0581); //одежда
	CreateMapIcon(45, 95, -1882.6859, 866.1516, 35.1719); //одежда
	CreateMapIcon(45, 96, -1694.9639, 951.4175, 24.8906); //одежда
	CreateMapIcon(45, 97, 2802.5417, 2430.2510, 11.0625); //одежда
	CreateMapIcon(45, 98, 2090.5525, 2224.0918, 11.0234); //одежда
	CreateMapIcon(24, 99, -1962.0586, 434.1953, 35.1719); //Квартиры
	CreateMapIcon(24, 100, 1382.1489, -1088.8043, 28.2124); //квартиры
	CreateMapIcon(63, 101, 1024.7561, -1029.7184, 32.1016); //спрей
	CreateMapIcon(63, 102, 2071.5681, -1831.6206, 13.5469); //спрей
	CreateMapIcon(63, 103, 488.5596, -1734.7551, 11.1527); //спрей
	CreateMapIcon(63, 104, -1904.5273, 277.7359, 41.0469); //спрей
	CreateMapIcon(63, 105, -1420.2592, 2591.1560, 55.8433); //спрей
	CreateMapIcon(63, 106, 1968.3977, 2162.1819, 10.8203); //спрей
	CreateMapIcon(55, 107, 1381.9602, 462.6776, 29.9054); //заправки
	if (realtime) {
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
	stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
	new tveh = CreateVehicle(400, 0.0, 0.0, 0.0, 0.0, -1, -1, -1);
	DestroyVehicle(tveh);
	for (new i; i < tveh; i++) {
		GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(i, false, lights, alarm, doors, bonnet, boot, objective);
	}
	CarInit();
	SetTimer("Timer", 600000, 1);
	return true;
}

forward Timer();
public Timer() {
	SendClientMessageToAll(COLOR_WHITE, "{F5DEB3}Если вы увидели игрока, который нарушает правила сервера, сообщите об этом администрации в {FFFFFF}/report [id нарушителя] [Нарушение]");
	SendClientMessageToAll(COLOR_WHITE, "{F5DEB3}Все интересующие вас вопросы, касающиеся нашего сервера, вы можете задать на нашем форуме - {FFFFFF}www.YourGame.su");
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			SavePlayer(i);
		}
	}
}

forward SyncUp();
public SyncUp() {
	SyncTime();
	DollahScoreUpdate();
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (mutetime[i] > 0) mutetime[i]--;
			if (mutetime[i] == 0) swear[i] = 0;
		}
	}
}

SyncTime() {
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23)) {
		ghour = tmphour;
		PayDay();
		new WEATHER[] = { 18, 14 };
		new rand = random(sizeof(WEATHER));
		SetWeather(WEATHER[rand]);
		if (realtime) {
			SetWorldTime(tmphour);
		}
	}
}

GetClosestPlayer(p1) {
	new x, Float:dis, Float:dis2, player;
	player = -1;
	dis = 99999.99;
	for (x = 0; x < GetMaxPlayers(); x++) {
		if (IsPlayerConnected(x)) {
			if (x != p1) {
				dis2 = GetDistanceBetweenPlayers(x, p1);
				if (dis2 < dis && dis2 != -1.00) {
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

forward Production();
public Production() {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pFishes] >= 5) { if (FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
			if (PlayerDrunk[i] > 0) {
				PlayerDrunk[i] = 0;
				PlayerDrunkTime[i] = 0;
				GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1);
			}
			if (PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; }
		}
	}
}

PayDay() {
	new string[128];
	new account, interest;
	new workpay;
	new tmpintrate;
	new rent = 0;
	LottoStart = 60;
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (MoneyMessage[i] == 1) {
				if (PlayerInfo[i][pWanted] > 0) {
					SendClientMessage(i, COLOR_LIGHTRED, "Вы были не в состоянии оплатить свой долг, отправляйтесь в тюрьму.");
					GameTextForPlayer(i, "~r~Busted.", 2000, 1);
					SetPlayerInterior(i, 6);
					new rand = random(sizeof(LSPDSpawns));
					SetPlayerPos(i, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
					PlayerInfo[i][pJailed] = 1;
					SetPlayerSkin(i, 268);
					SafeResetPlayerWeapons(i);
					PlayerInfo[i][pWanted] = 0;
					PlayerInfo[i][pJailTime] = (PlayerInfo[i][pWanted] * 300);
					SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
					format(string, sizeof(string), "Вас посадили в КПЗ на %d секунд. Выплата: Невозможна.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				} else {
					SendClientMessage(i, COLOR_LIGHTRED, "Вы были не в состоянии оплатить свой долг, отправляйтесь в тюрьму.");
					GameTextForPlayer(i, "~r~Busted.", 2000, 1);
					SetPlayerInterior(i, 6);
					new rand = random(sizeof(LSPDSpawns));
					SetPlayerPos(i, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
					PlayerInfo[i][pJailed] = 1;
					SafeResetPlayerWeapons(i);
					SetPlayerSkin(i, 268);
					PlayerInfo[i][pWanted] = 0;
					PlayerInfo[i][pJailTime] = 240;
					SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
					format(string, sizeof(string), "Вас посадили в КПЗ на %d секунд. Выплата: Невозможна.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
				}
			}
			new playername2[MAX_PLAYER_NAME];
			GetPlayerName(i, playername2, sizeof(playername2));
			account = PlayerInfo[i][pAccount];
			new key = PlayerInfo[i][pPhousekey];
			if (key != 0) {
				rent = HouseInfo[key][hRent];
				if (strcmp(playername2, HouseInfo[key][hOwner], true) == 0) {
					rent = 0;
				} else if (rent > GetPlayerBablo(i)) {
					PlayerInfo[i][pPhousekey] = 0;
					SendClientMessage(i, COLOR_WHITE, "Вы не можете оплатить арендную плату, потому Вы выселены.");
					rent = 0;
				}
				HouseInfo[key][hTakings] = HouseInfo[key][hTakings] + rent;
			}
			if (PlayerInfo[i][pMember] == 1) {
				workpay = CopSal * PlayerInfo[i][pRank];
				new Taxx = workpay * Tax / 80;
				PlayerInfo[i][pAccount] -= Taxx;
				Treasury += Taxx;
				Treasury -= workpay;
			} else if (PlayerInfo[i][pMember] == 2) {
				workpay = FbiSal * PlayerInfo[i][pRank];
				new Taxx = workpay * Tax / 60;
				PlayerInfo[i][pAccount] -= Taxx;
				Treasury += Taxx;
				Treasury -= workpay;
			} else if (PlayerInfo[i][pMember] == 3) {
				workpay = NGSal * PlayerInfo[i][pRank];
				new Taxx = workpay * Tax / 50;
				PlayerInfo[i][pAccount] -= Taxx;
				Treasury += Taxx;
				Treasury -= workpay;
			} else if (PlayerInfo[i][pMember] == 4) {
				workpay = MedSal * PlayerInfo[i][pRank];
				new Taxx = workpay * Tax / 50;
				PlayerInfo[i][pAccount] -= Taxx;
				Treasury += Taxx;
				Treasury -= workpay;

			} else if (PlayerInfo[i][pMember] == 9) {
				workpay = ReportSal * PlayerInfo[i][pRank];
				new Taxx = workpay * Tax / 50;
				PlayerInfo[i][pAccount] -= Taxx;
				Treasury += Taxx;
				Treasury -= workpay;
			}
			if (PlayerInfo[i][pPayDay] >= 5) {
				printf("playerid = %i pPayDay >= 5 val = %i", i, PlayerInfo[i][pPayDay]);
				Tax += TaxValue;
				PlayerInfo[i][pAccount] -= TaxValue;
				new checks = PlayerInfo[i][pPayCheck];
				new ebill = (PlayerInfo[i][pAccount] / 1000000) * (PlayerInfo[i][pLevel]);
				ConsumingMoney[i] = 1;
				GivePlayerBablo(i, checks);
				PlayerInfo[i][pExp]++;
				new exp = PlayerInfo[i][pExp];
				new nxtlevel = PlayerInfo[i][pLevel] + 1;
				new expamount = nxtlevel * levelexp;
				if (PlayerInfo[i][pAccount] > 0) {
					PlayerInfo[i][pAccount] -= ebill;
					if (SBizzInfo[4][sbMafia] > 0) {
						SBizzInfo[4][sbTill] += (ebill / 10 * 9);
						ObwyakInfo[SBizzInfo[4][sbMafia]][oGangMoney] += (ebill / 10 * 1);
					} else { SBizzInfo[4][sbTill] += ebill; }
				} else {
					ebill = 0;
				}
				PlayerInfo[i][pAccount] += workpay;
				PlayerInfo[i][pAccount] -= Tax;
				interest = (PlayerInfo[i][pAccount] / 10000) * (tmpintrate);
				PlayerPlayMusic(i);
				PlayerInfo[i][pAccount] = account + interest;
				SendClientMessage(i, COLOR_WHITE, " ");
				SendClientMessage(i, COLOR_WHITE, "{00C0FF}Зарплата: ");
				format(string, sizeof(string), "{00C0FF}>{FFFFFF} Банковский процент: {00C0FF}%d${ffffff}. Налоги: {00C0FF}-%d${ffffff}. Текущие расходы: {00C0FF}-%d${ffffff}.", interest, Tax, TaxValue);
				SendClientMessage(i, COLOR_WHITE, string);
				if (PlayerInfo[i][pPhousekey] != 0 || PlayerInfo[i][pPbiskey] != 255) {
					format(string, sizeof(string), "{00C0FF}>{FFFFFF} Плата за электричество: {00C0FF}-%d${ffffff}.", ebill);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				format(string, sizeof(string), "{00C0FF}>{FFFFFF} Cумма в банке: {00C0FF}%d${ffffff}. Полученная зарплата: {00C0FF}%d${ffffff}.", PlayerInfo[i][pAccount], checks);
				SendClientMessage(i, COLOR_WHITE, string);
				new hour, minute, year, month, day;
				gettime(hour, minute);
				getdate(year, month, day);
				SendClientMessage(i, COLOR_WHITE, "");
				format(string, sizeof(string), "Точное время - {00C0FF}%02d:%02d{ffffff}. Точная дата - {00C0FF}%d день{ffffff}, {00C0FF}%d{ffffff} месяц, {00C0FF}%d{ffffff} год.", hour, minute, day, month, year);
				SendClientMessage(i, COLOR_WHITE, string);
				if (exp >= expamount) {
					SendClientMessage(i, COLOR_WHITE, "Вы заработали достаточно респектов, для того чтобы перейти на следущий уровень.");
					SendClientMessage(i, COLOR_WHITE, "Чтобы перейти на следущий уровень, введите команду - {33aa33}/buylevel{ffffff}.");
				}
				if (!IsVehicleOccupied(i)) {
					SetVehicleToRespawn(i);
					Gas[i] = GasMax;
					GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(i, false, lights, alarm, doors, bonnet, boot, objective);
					CarEngine[i] = 0;
				}
				GameTextForPlayer(i, "~y~PayDay~n~~w~Paycheck", 7000, 1);
				rent = 0;
				PlayerInfo[i][pPayDay] = 0;
				PlayerInfo[i][pPayCheck] = 0;
				PlayerInfo[i][pConnectTime] += 1;
				if (PlayerInfo[i][pNeSdal] == 1) {
					PlayerInfo[i][pNeSdal] = 0;
				}
				if (PlayerInfo[i][pDonateRank] > 0) {
					PlayerInfo[i][pPayDayHad] += 1;
					if (PlayerInfo[i][pPayDayHad] >= 5) {
						PlayerInfo[i][pExp]++;
						PlayerInfo[i][pPayDayHad] = 0;
					}
				}
			} else {
				SendClientMessage(i, COLOR_WHITE, "{00C0FF}YourWorld{ffffff} : Из-за малого времени пребывания на сервере, вы не получили зарплату.");
			}
		}
		SavePlayer(i);
	}
	return true;
}

OnPlayerRegister(playerid, const password[]) {
	new string[64]; // Масив с путём для файла
	new playername[MAX_PLAYER_NAME]; // Масив для получения имени игрока
	GetPlayerName(playerid, playername, sizeof(playername)); // Получаем Имя игрока
	format(string, sizeof(string), "players/%s.ini", playername); // Добавляем имя игрока, в путь для сохранения
	new iniFile = ini_createFile(string); // Создаём файл с именем игрока в папке players
	if (iniFile < 0) // Если Файла нет
	{
		iniFile = ini_openFile(string); // Открываем
	}
	if (iniFile >= 0) // Если файл есть
	{
		strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255); // Присваиваем масиву pPass, значение password[]
		ini_setString(iniFile, "Key", PlayerInfo[playerid][pKey]); // Записываем пароль игрока в файл
		ini_closeFile(iniFile); // Закрываем файл

	}
	if (IsPlayerConnected(playerid)) {
		PlayerInfo[playerid][pFMember] = 255;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pChar] = 23;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = 806.0165;
		PlayerInfo[playerid][pPos_y] = -1343.5483;
		PlayerInfo[playerid][pPos_z] = -0.5078;
		SetPlayerFacingAngle(playerid, 139.2263);
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pRadio] = 1;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pCash] = 15000;
		PlayerInfo[playerid][pFlatKey] = 0;
		PlayerInfo[playerid][pPhousekey] = 0;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pAccount] = 50000;
		PlayerInfo[playerid][pReg] = 1;
		SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
		strmid(PlayerInfo[playerid][pMail], "None", 0, strlen("None"), 32);
		strmid(PlayerInfo[playerid][pOtherPass], "None", 0, strlen("None"), 32);
		SavePlayer(playerid);
	}
	return 1;
}

SavePlayer(playerid) {
	new string[64]; // Масив с путём для файла
	new playername[MAX_PLAYER_NAME]; // Масив для получения имени игрока
	GetPlayerName(playerid, playername, sizeof(playername)); // Получаем Имя игрока
	format(string, sizeof(string), "players/%s.ini", playername); // Добавляем имя игрока, в путь для сохранения
	new File = ini_openFile(string); // Открываем файл по тому пути который указали.
	ini_setString(File, "Key", PlayerInfo[playerid][pKey]); // Записываем пароль игрока в файл
	ini_setInteger(File, "pLevel", PlayerInfo[playerid][pLevel]);
	ini_setInteger(File, "pBlockeds", PlayerInfo[playerid][pBlockeds]);
	ini_setInteger(File, "pWarns", PlayerInfo[playerid][pWarns]);
	ini_setInteger(File, "pAdmin", PlayerInfo[playerid][pAdmin]);
	ini_setInteger(File, "pWanted", PlayerInfo[playerid][pWanted]);
	ini_setInteger(File, "pVirWorld", PlayerInfo[playerid][pVirWorld]);
	ini_setInteger(File, "pFlatKey", PlayerInfo[playerid][pFlatKey]);
	ini_setInteger(File, "pForce", PlayerInfo[playerid][pForce]);
	ini_setInteger(File, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
	ini_setInteger(File, "gPupgrade", PlayerInfo[playerid][gPupgrade]);
	ini_setInteger(File, "pConnectTime", PlayerInfo[playerid][pConnectTime]);
	ini_setInteger(File, "pReg", PlayerInfo[playerid][pReg]);
	ini_setInteger(File, "pSex", PlayerInfo[playerid][pSex]);
	ini_setInteger(File, "pAge", PlayerInfo[playerid][pAge]);
	ini_setInteger(File, "pOrigin", PlayerInfo[playerid][pOrigin]);
	ini_setInteger(File, "pNarcoZavisimost", PlayerInfo[playerid][pNarcoZavisimost]);
	ini_setInteger(File, "pNarcoLomka", PlayerInfo[playerid][pNarcoLomka]);
	ini_setInteger(File, "pCK", PlayerInfo[playerid][pCK]);
	ini_setInteger(File, "pPbiskey", PlayerInfo[playerid][pPbiskey]);
	ini_setInteger(File, "pMuted", PlayerInfo[playerid][pMuted]);
	ini_setInteger(File, "pExp", PlayerInfo[playerid][pExp]);
	ini_setInteger(File, "pCash", PlayerInfo[playerid][pCash]);
	ini_setInteger(File, "pAccount", PlayerInfo[playerid][pAccount]);
	ini_setInteger(File, "pCrimes", PlayerInfo[playerid][pCrimes]);
	ini_setInteger(File, "pKills", PlayerInfo[playerid][pKills]);
	ini_setInteger(File, "pDeaths", PlayerInfo[playerid][pDeaths]);
	ini_setInteger(File, "pWantedDeaths", PlayerInfo[playerid][pWantedDeaths]);
	ini_setInteger(File, "pLottoNr", PlayerInfo[playerid][pLottoNr]);
	ini_setInteger(File, "pFishes", PlayerInfo[playerid][pFishes]);
	ini_setInteger(File, "pBiggestFish", PlayerInfo[playerid][pBiggestFish]);
	ini_setInteger(File, "pJob", PlayerInfo[playerid][pJob]);
	ini_setInteger(File, "pPayCheck", PlayerInfo[playerid][pPayCheck]);
	ini_setInteger(File, "pHeadValue", PlayerInfo[playerid][pHeadValue]);
	ini_setInteger(File, "pJailed", PlayerInfo[playerid][pJailed]);
	ini_setInteger(File, "pZapret", PlayerInfo[playerid][pZapret]);
	ini_setInteger(File, "pJailTime", PlayerInfo[playerid][pJailTime]);
	ini_setInteger(File, "pVorSkill", PlayerInfo[playerid][pVorSkill]);
	ini_setInteger(File, "pMats", PlayerInfo[playerid][pMats]);
	ini_setInteger(File, "pDrugs", PlayerInfo[playerid][pDrugs]);
	ini_setInteger(File, "ptMoney", PlayerInfo[playerid][ptMoney]);
	ini_setInteger(File, "ptDrugs", PlayerInfo[playerid][ptDrugs]);
	ini_setInteger(File, "ptMats", PlayerInfo[playerid][ptMats]);
	ini_setInteger(File, "pLeader", PlayerInfo[playerid][pLeader]);
	ini_setInteger(File, "pMember", PlayerInfo[playerid][pMember]);
	ini_setInteger(File, "pFMember", PlayerInfo[playerid][pFMember]);
	ini_setInteger(File, "pRank", PlayerInfo[playerid][pRank]);
	ini_setInteger(File, "pChar", PlayerInfo[playerid][pChar]);
	ini_setInteger(File, "pContractTime", PlayerInfo[playerid][pContractTime]);
	ini_setInteger(File, "pDetSkill", PlayerInfo[playerid][pDetSkill]);
	ini_setInteger(File, "pDrochSkill", PlayerInfo[playerid][pDrochSkill]);
	ini_setInteger(File, "pLawSkill", PlayerInfo[playerid][pLawSkill]);
	ini_setInteger(File, "pMechSkill", PlayerInfo[playerid][pMechSkill]);
	ini_setInteger(File, "pGunSkill", PlayerInfo[playerid][pGunSkill]);
	ini_setInteger(File, "pDalnoboiSkill", PlayerInfo[playerid][pDalnoboiSkill]);
	ini_setInteger(File, "pJackSkill", PlayerInfo[playerid][pJackSkill]);
	ini_setInteger(File, "pCarSkill", PlayerInfo[playerid][pCarSkill]);
	ini_setInteger(File, "pNewsSkill", PlayerInfo[playerid][pNewsSkill]);
	ini_setInteger(File, "pDrugsSkill", PlayerInfo[playerid][pDrugsSkill]);
	ini_setInteger(File, "pCookSkill", PlayerInfo[playerid][pCookSkill]);
	ini_setInteger(File, "pFishSkill", PlayerInfo[playerid][pFishSkill]);
	ini_setFloat(File, "pSHealth", PlayerInfo[playerid][pSHealth]);
	ini_setFloat(File, "pHealth", PlayerInfo[playerid][pHealth]);
	ini_setInteger(File, "pInt", PlayerInfo[playerid][pInt]);
	ini_setInteger(File, "pLocal", PlayerInfo[playerid][pLocal]);
	ini_setInteger(File, "pTeam", PlayerInfo[playerid][pTeam]);
	ini_setInteger(File, "pPhousekey", PlayerInfo[playerid][pPhousekey]);
	ini_setInteger(File, "pPbiskey", PlayerInfo[playerid][pPbiskey]);
	ini_setFloat(File, "pPos_x", PlayerInfo[playerid][pPos_x]);
	ini_setFloat(File, "pPos_y", PlayerInfo[playerid][pPos_y]);
	ini_setFloat(File, "pPos_z", PlayerInfo[playerid][pPos_z]);
	ini_setInteger(File, "pCarLic", PlayerInfo[playerid][pCarLic]);
	ini_setInteger(File, "pMotoLic", PlayerInfo[playerid][pMotoLic]);
	ini_setInteger(File, "pCar", PlayerInfo[playerid][pCar]);
	ini_setInteger(File, "pBancka", PlayerInfo[playerid][pBancka]);
	ini_setInteger(File, "pFBancka", PlayerInfo[playerid][pFBancka]);
	ini_setInteger(File, "pFlyLic", PlayerInfo[playerid][pFlyLic]);
	ini_setInteger(File, "pBoatLic", PlayerInfo[playerid][pBoatLic]);
	ini_setInteger(File, "pFishLic", PlayerInfo[playerid][pFishLic]);
	ini_setInteger(File, "pGunLic", PlayerInfo[playerid][pGunLic]);
	ini_setInteger(File, "pCarTime", PlayerInfo[playerid][pCarTime]);
	ini_setInteger(File, "pMusorTime", PlayerInfo[playerid][pMusorTime]);
	ini_setInteger(File, "pCleanTime", PlayerInfo[playerid][pCleanTime]);
	ini_setInteger(File, "pTruckTime", PlayerInfo[playerid][pTruckTime]);
	ini_setInteger(File, "pPayDayHad", PlayerInfo[playerid][pPayDay]);
	ini_setInteger(File, "pPayDayHad", PlayerInfo[playerid][pPayDayHad]);
	ini_setInteger(File, "pLoses", PlayerInfo[playerid][pLoses]);
	ini_setInteger(File, "pAlcoholPerk", PlayerInfo[playerid][pAlcoholPerk]);
	ini_setInteger(File, "pAlcoholPerk", PlayerInfo[playerid][pAlcoholPerk]);
	ini_setInteger(File, "pDrugPerk", PlayerInfo[playerid][pDrugPerk]);
	ini_setInteger(File, "pMiserPerk", PlayerInfo[playerid][pMiserPerk]);
	ini_setInteger(File, "pPainPerk", PlayerInfo[playerid][pPainPerk]);
	ini_setInteger(File, "pTraderPerk", PlayerInfo[playerid][pTraderPerk]);
	ini_setInteger(File, "pTut", PlayerInfo[playerid][pTut]);
	ini_setInteger(File, "pAdjustable", PlayerInfo[playerid][pAdjustable]);
	ini_setInteger(File, "pFuel", PlayerInfo[playerid][pFuel]);
	ini_setInteger(File, "pMarried", PlayerInfo[playerid][pMarried]);
	ini_setInteger(File, "pMarriedTo", PlayerInfo[playerid][pMarriedTo]);
	ini_setInteger(File, "pCard", PlayerInfo[playerid][pCard]);
	ini_setInteger(File, "pClock", PlayerInfo[playerid][pClock]);
	ini_setInteger(File, "pDice", PlayerInfo[playerid][pDice]);
	ini_setInteger(File, "pMutedTime", PlayerInfo[playerid][pMutedTime]);
	ini_setInteger(File, "pRadio", PlayerInfo[playerid][pRadio]);
	ini_setInteger(File, "pRope", PlayerInfo[playerid][pRope]);
	ini_setInteger(File, "pNeSdal", PlayerInfo[playerid][pNeSdal]);
	ini_setInteger(File, "pHelper", PlayerInfo[playerid][pHelper]);
	ini_setInteger(File, "pRobTime", PlayerInfo[playerid][pRobTime]);
	ini_setInteger(File, "pHmed", PlayerInfo[playerid][pHmed]);
	ini_setInteger(File, "pVipTime", PlayerInfo[playerid][pVipTime]);
	ini_setInteger(File, "pRefMoney", PlayerInfo[playerid][pRefMoney]);
	ini_setInteger(File, "pReferal", PlayerInfo[playerid][pReferal]);
	ini_setInteger(File, "pRefText", PlayerInfo[playerid][pRefText]);
	ini_setInteger(File, "pTkMats", PlayerInfo[playerid][pTkMats]);
	ini_setInteger(File, "pTkMats", PlayerInfo[playerid][pTkMats]);
	ini_setInteger(File, "pTkDrugs", PlayerInfo[playerid][pTkDrugs]);
	ini_setInteger(File, "pGromilaSkill", PlayerInfo[playerid][pGromilaSkill]);
	ini_setInteger(File, "pRobKey", PlayerInfo[playerid][pRobKey]);
	ini_setInteger(File, "pMail", PlayerInfo[playerid][pMail]);
	ini_setInteger(File, "pIP", PlayerInfo[playerid][pIP]);
	ini_setString(File, "pOtherPass", PlayerInfo[playerid][pOtherPass]);
	ini_setInteger(File, "pFs", PlayerInfo[playerid][pFs]);
	ini_closeFile(File); // Закрываем файл
}

OnPlayerLogin(playerid, password[]) {
	if (IsPlayerNPC(playerid)) return 1; // Подключение Ботов
	new string[64]; // Масив с путём для файла
	new pass[32]; // Масив с паролем
	new playername[MAX_PLAYER_NAME]; // Масив для получения имени игрока
	GetPlayerName(playerid, playername, sizeof(playername)); // Получаем Имя игрока
	format(string, sizeof(string), "players/%s.ini", playername); // Добавляем имя игрока, в путь для загрузки
	new File = ini_openFile(string); // Открываем файл
	ini_getString(File, "Key", pass, 32); // Загружаем пароль
	if (!strcmp(pass, password, true)) {
		WrongPassword[playerid]++;
		SendClientMessage(playerid, COLOR_WHITE, "{ffdb58}Пароль неверен! После третьей попытки вы будете кикнуты.");
		if (WrongPassword[playerid] == 3) return SendClientMessage(playerid, COLOR_WHITE, "{ffdb58}Вы были кикнуты. Причина:{ffffff} Не правильный ввод пароля с 3-го раза."), Kick(playerid);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Авторизация на YourWorld", "{ffdb58}Авторизируйтесь, введите свой пароль", " Далее ", " Отмена ");
		return true;
	} else {
		ini_getInteger(File, "pLevel", PlayerInfo[playerid][pLevel]);
		ini_getInteger(File, "pBlockeds", PlayerInfo[playerid][pBlockeds]);
		ini_getInteger(File, "pWarns", PlayerInfo[playerid][pWarns]);
		ini_getInteger(File, "pAdmin", PlayerInfo[playerid][pAdmin]);
		ini_getInteger(File, "pWanted", PlayerInfo[playerid][pWanted]);
		ini_getInteger(File, "pVirWorld", PlayerInfo[playerid][pVirWorld]);
		ini_getInteger(File, "pFlatKey", PlayerInfo[playerid][pFlatKey]);
		ini_getInteger(File, "pForce", PlayerInfo[playerid][pForce]);
		ini_getInteger(File, "pDonateRank", PlayerInfo[playerid][pDonateRank]);
		ini_getInteger(File, "gPupgrade", PlayerInfo[playerid][gPupgrade]);
		ini_getInteger(File, "pConnectTime", PlayerInfo[playerid][pConnectTime]);
		ini_getInteger(File, "pReg", PlayerInfo[playerid][pReg]);
		ini_getInteger(File, "pSex", PlayerInfo[playerid][pSex]);
		ini_getInteger(File, "pAge", PlayerInfo[playerid][pAge]);
		ini_getInteger(File, "pOrigin", PlayerInfo[playerid][pOrigin]);
		ini_getInteger(File, "pNarcoZavisimost", PlayerInfo[playerid][pNarcoZavisimost]);
		ini_getInteger(File, "pNarcoLomka", PlayerInfo[playerid][pNarcoLomka]);
		ini_getInteger(File, "pCK", PlayerInfo[playerid][pCK]);
		ini_getInteger(File, "Bizz", PlayerInfo[playerid][pPbiskey]);
		ini_getInteger(File, "AdminLevel", PlayerInfo[playerid][pAdmin]);
		ini_getInteger(File, "pMuted", PlayerInfo[playerid][pMuted]);
		ini_getInteger(File, "pExp", PlayerInfo[playerid][pExp]);
		ini_getInteger(File, "pCash", PlayerInfo[playerid][pCash]);
		ini_getInteger(File, "pAccount", PlayerInfo[playerid][pAccount]);
		ini_getInteger(File, "pCrimes", PlayerInfo[playerid][pCrimes]);
		ini_getInteger(File, "pKills", PlayerInfo[playerid][pKills]);
		ini_getInteger(File, "pDeaths", PlayerInfo[playerid][pDeaths]);
		ini_getInteger(File, "pWantedDeaths", PlayerInfo[playerid][pWantedDeaths]);
		ini_getInteger(File, "pLottoNr", PlayerInfo[playerid][pLottoNr]);
		ini_getInteger(File, "pFishes", PlayerInfo[playerid][pFishes]);
		ini_getInteger(File, "pBiggestFish", PlayerInfo[playerid][pBiggestFish]);
		ini_getInteger(File, "pJob", PlayerInfo[playerid][pJob]);
		ini_getInteger(File, "pPayCheck", PlayerInfo[playerid][pPayCheck]);
		ini_getInteger(File, "pHeadValue", PlayerInfo[playerid][pHeadValue]);
		ini_getInteger(File, "pJailed", PlayerInfo[playerid][pJailed]);
		ini_getInteger(File, "pZapret", PlayerInfo[playerid][pZapret]);
		ini_getInteger(File, "pJailTime", PlayerInfo[playerid][pJailTime]);
		ini_getInteger(File, "pVorSkill", PlayerInfo[playerid][pVorSkill]);
		ini_getInteger(File, "pMats", PlayerInfo[playerid][pMats]);
		ini_getInteger(File, "pDrugs", PlayerInfo[playerid][pDrugs]);
		ini_getInteger(File, "ptMoney", PlayerInfo[playerid][ptMoney]);
		ini_getInteger(File, "ptDrugs", PlayerInfo[playerid][ptDrugs]);
		ini_getInteger(File, "ptMats", PlayerInfo[playerid][ptMats]);
		ini_getInteger(File, "pLeader", PlayerInfo[playerid][pLeader]);
		ini_getInteger(File, "pMember", PlayerInfo[playerid][pMember]);
		ini_getInteger(File, "pFMember", PlayerInfo[playerid][pFMember]);
		ini_getInteger(File, "pRank", PlayerInfo[playerid][pRank]);
		ini_getInteger(File, "pChar", PlayerInfo[playerid][pChar]);
		ini_getInteger(File, "pContractTime", PlayerInfo[playerid][pContractTime]);
		ini_getInteger(File, "pDetSkill", PlayerInfo[playerid][pDetSkill]);
		ini_getInteger(File, "pDrochSkill", PlayerInfo[playerid][pDrochSkill]);
		ini_getInteger(File, "pLawSkill", PlayerInfo[playerid][pLawSkill]);
		ini_getInteger(File, "pMechSkill", PlayerInfo[playerid][pMechSkill]);
		ini_getInteger(File, "pGunSkill", PlayerInfo[playerid][pGunSkill]);
		ini_getInteger(File, "pDalnoboiSkill", PlayerInfo[playerid][pDalnoboiSkill]);
		ini_getInteger(File, "pJackSkill", PlayerInfo[playerid][pJackSkill]);
		ini_getInteger(File, "pCarSkill", PlayerInfo[playerid][pCarSkill]);
		ini_getInteger(File, "pNewsSkill", PlayerInfo[playerid][pNewsSkill]);
		ini_getInteger(File, "pDrugsSkill", PlayerInfo[playerid][pDrugsSkill]);
		ini_getInteger(File, "pCookSkill", PlayerInfo[playerid][pCookSkill]);
		ini_getInteger(File, "pFishSkill", PlayerInfo[playerid][pFishSkill]);
		ini_getFloat(File, "pSHealth", PlayerInfo[playerid][pSHealth]);
		ini_getFloat(File, "pHealth", PlayerInfo[playerid][pHealth]);
		ini_getInteger(File, "pInt", PlayerInfo[playerid][pInt]);
		ini_getInteger(File, "pLocal", PlayerInfo[playerid][pLocal]);
		ini_getInteger(File, "pTeam", PlayerInfo[playerid][pTeam]);
		ini_getInteger(File, "pPhousekey", PlayerInfo[playerid][pPhousekey]);
		ini_getInteger(File, "pPbiskey", PlayerInfo[playerid][pPbiskey]);
		ini_getFloat(File, "pPos_x", PlayerInfo[playerid][pPos_x]);
		ini_getFloat(File, "pPos_y", PlayerInfo[playerid][pPos_y]);
		ini_getFloat(File, "pPos_z", PlayerInfo[playerid][pPos_z]);
		ini_getInteger(File, "pCarLic", PlayerInfo[playerid][pCarLic]);
		ini_getInteger(File, "pMotoLic", PlayerInfo[playerid][pMotoLic]);
		ini_getInteger(File, "pCar", PlayerInfo[playerid][pCar]);
		ini_getInteger(File, "pBancka", PlayerInfo[playerid][pBancka]);
		ini_getInteger(File, "pFBancka", PlayerInfo[playerid][pFBancka]);
		ini_getInteger(File, "pFlyLic", PlayerInfo[playerid][pFlyLic]);
		ini_getInteger(File, "pBoatLic", PlayerInfo[playerid][pBoatLic]);
		ini_getInteger(File, "pFishLic", PlayerInfo[playerid][pFishLic]);
		ini_getInteger(File, "pGunLic", PlayerInfo[playerid][pGunLic]);
		ini_getInteger(File, "pCarTime", PlayerInfo[playerid][pCarTime]);
		ini_getInteger(File, "pMusorTime", PlayerInfo[playerid][pMusorTime]);
		ini_getInteger(File, "pCleanTime", PlayerInfo[playerid][pCleanTime]);
		ini_getInteger(File, "pTruckTime", PlayerInfo[playerid][pTruckTime]);
		ini_getInteger(File, "pPayDay", PlayerInfo[playerid][pPayDay]);
		ini_getInteger(File, "pPayDayHad", PlayerInfo[playerid][pPayDayHad]);
		ini_getInteger(File, "pLoses", PlayerInfo[playerid][pLoses]);
		ini_getInteger(File, "pAlcoholPerk", PlayerInfo[playerid][pAlcoholPerk]);
		ini_getInteger(File, "pDrugPerk", PlayerInfo[playerid][pDrugPerk]);
		ini_getInteger(File, "pMiserPerk", PlayerInfo[playerid][pMiserPerk]);
		ini_getInteger(File, "pPainPerk", PlayerInfo[playerid][pPainPerk]);
		ini_getInteger(File, "pTraderPerk", PlayerInfo[playerid][pTraderPerk]);
		ini_getInteger(File, "pTut", PlayerInfo[playerid][pTut]);
		ini_getInteger(File, "pAdjustable", PlayerInfo[playerid][pAdjustable]);
		ini_getInteger(File, "pFuel", PlayerInfo[playerid][pFuel]);
		ini_getInteger(File, "pMarried", PlayerInfo[playerid][pMarried]);
		ini_getInteger(File, "pMarriedTo", PlayerInfo[playerid][pMarriedTo]);
		ini_getInteger(File, "pCard", PlayerInfo[playerid][pCard]);
		ini_getInteger(File, "pClock", PlayerInfo[playerid][pClock]);
		ini_getInteger(File, "pDice", PlayerInfo[playerid][pDice]);
		ini_getInteger(File, "pMutedTime", PlayerInfo[playerid][pMutedTime]);
		ini_getInteger(File, "pRadio", PlayerInfo[playerid][pRadio]);
		ini_getInteger(File, "pRope", PlayerInfo[playerid][pRope]);
		ini_getInteger(File, "pNeSdal", PlayerInfo[playerid][pNeSdal]);
		ini_getInteger(File, "pHelper", PlayerInfo[playerid][pHelper]);
		ini_getInteger(File, "pRobTime", PlayerInfo[playerid][pRobTime]);
		ini_getInteger(File, "pHmed", PlayerInfo[playerid][pHmed]);
		ini_getInteger(File, "pVipTime", PlayerInfo[playerid][pVipTime]);
		ini_getInteger(File, "pRefMoney", PlayerInfo[playerid][pRefMoney]);
		ini_getInteger(File, "pReferal", PlayerInfo[playerid][pReferal]);
		ini_getInteger(File, "pRefText", PlayerInfo[playerid][pRefText]);
		ini_getInteger(File, "pTkMats", PlayerInfo[playerid][pTkMats]);
		ini_getInteger(File, "pTkDrugs", PlayerInfo[playerid][pTkDrugs]);
		ini_getInteger(File, "pGromilaSkill", PlayerInfo[playerid][pGromilaSkill]);
		ini_getInteger(File, "pRobKey", PlayerInfo[playerid][pRobKey]);
		ini_getInteger(File, "pMail", PlayerInfo[playerid][pMail]);
		ini_getInteger(File, "pIP", PlayerInfo[playerid][pIP]);
		ini_getString(File, "pOtherPass", PlayerInfo[playerid][pOtherPass], 32);
		ini_getInteger(File, "pFs", PlayerInfo[playerid][pFs]);
		if (!strcmp(PlayerInfo[playerid][pOtherPass], "None", true)) {
			new playername2[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername2, sizeof(playername2));
			PlayerInfo[playerid][pAdjustable] = 0;
			ConsumingMoney[playerid] = 1;
			CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
			PlayerInfo[playerid][pReg] = 1;
			if (PlayerInfo[playerid][pBlockeds] >= 3) {
				SendClientMessage(playerid, COLOR_WHITE, "Ваш аккаунт {ff0000}заблокирован{ffffff}. Так как уже у вас 3 блокировки.");
				Kick(playerid);
				return 0;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Добро пожаловать на сервер {ffdb58}YourWorld [RPG].{ffffff} Приятной вам игры!");
			printf("%s has logged in.", playername2);
			new string2[60], tmp2[50];
			if (PlayerInfo[playerid][pDonateRank] == 1) SendClientMessage(playerid, COLOR_WHITE, "У тебя {F5DEB3}VIP Аккаунт 1 уровня{FFFFFF}");
			if (PlayerInfo[playerid][pDonateRank] == 2) SendClientMessage(playerid, COLOR_WHITE, "У тебя {F5DEB3}VIP Аккаунт 2 уровня{FFFFFF}");
			if (PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] > 0) {
				if (PlayerInfo[playerid][pHelper] >= 1) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Хелпер %d-го уровня.", PlayerInfo[playerid][pHelper]);
				if (PlayerInfo[playerid][pAdmin] == 1) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня.", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 2) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня.", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 3) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор %d-го уровня.", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 4) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Модератор 4-го уровня.", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 5) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Гл.Модератор.", PlayerInfo[playerid][pAdmin]);
				if (PlayerInfo[playerid][pAdmin] == 6) format(string2, sizeof(string2), "Вы вошли как {F5DEB3}Гл. Администратор.", PlayerInfo[playerid][pAdmin]);
				SendClientMessage(playerid, COLOR_WHITE, string2);
			}
			gPlayerLogged[playerid] = 1;
			SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pChar], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
			if (gTeam[playerid] == 0) gTeam[playerid] = 3;
			else gTeam[playerid] = PlayerInfo[playerid][pTeam];
			format(tmp2, sizeof(tmp2), "~w~ѓO—PO ЊO„A‡O‹A¦’ ~n~~y~   %s", playername2);
			GameTextForPlayer(playerid, tmp2, 5000, 1);
			for (new i = GetMaxPlayers() - 1; i != -1; i--) {
				if (!IsPlayerConnected(i)) continue;
				if (PlayerInfo[i][pMask] == 1) ShowPlayerNameTagForPlayer(playerid, i, 0);
			}
			Spawned[playerid] = 1;
			SpawnPlayer(playerid);
			SetCameraBehindPlayer(playerid);
		} else ShowPlayerDialog(playerid, 351, 1, "Безопасность", "{ffdb58}Введите ваш дополнительный пароль:", "Принять", "Отмена");
		for (new i = 0; i < sizeof(HouseInfo); i++) {
			AddVehicleComponent(hCar[i], HouseInfo[i][hKoleso]);
			AddVehicleComponent(hCar[i], HouseInfo[i][hBamper]);
			AddVehicleComponent(hCar[i], HouseInfo[i][hBamper2]);
			ChangeVehiclePaintjob(hCar[i], HouseInfo[i][hPaintjob]);
			AddVehicleComponent(hCar[i], HouseInfo[i][hNitro]);
			AddVehicleComponent(hCar[i], HouseInfo[i][hGidravlika]);
		}
	}
	return true;
}

OnPropUpdate() {
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo)) {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
			HouseInfo[idx][hEntrancex],
			HouseInfo[idx][hEntrancey],
			HouseInfo[idx][hEntrancez],
			HouseInfo[idx][hExitx],
			HouseInfo[idx][hExity],
			HouseInfo[idx][hExitz],
			HouseInfo[idx][hHealthx],
			HouseInfo[idx][hHealthy],
			HouseInfo[idx][hHealthz],
			HouseInfo[idx][hArmourx],
			HouseInfo[idx][hArmoury],
			HouseInfo[idx][hArmourz],
			HouseInfo[idx][hOwner],
			HouseInfo[idx][hValue],
			HouseInfo[idx][hHel],
			HouseInfo[idx][hArm],
			HouseInfo[idx][hInt],
			HouseInfo[idx][hLock],
			HouseInfo[idx][hOwned],
			HouseInfo[idx][hRooms],
			HouseInfo[idx][hRent],
			HouseInfo[idx][hRentabil],
			HouseInfo[idx][hTakings],
			HouseInfo[idx][hVec],
			HouseInfo[idx][hVcol1],
			HouseInfo[idx][hVcol2],
			HouseInfo[idx][hDate],
			HouseInfo[idx][hId],
			HouseInfo[idx][hLevel],
			HouseInfo[idx][hKoleso],
			HouseInfo[idx][hSpoiler],
			HouseInfo[idx][hBamper],
			HouseInfo[idx][hBamper2],
			HouseInfo[idx][hPaintjob],
			HouseInfo[idx][hNitro],
			HouseInfo[idx][hGidravlika]);
		if (idx == 0) {
			file2 = fopen("House/property.cfg", io_write);
		} else {
			file2 = fopen("House/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo)) {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d \n",
			BizzInfo[idx][bOwned],
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bMessage],
			BizzInfo[idx][bEntranceX],
			BizzInfo[idx][bEntranceY],
			BizzInfo[idx][bEntranceZ],
			BizzInfo[idx][bExitX],
			BizzInfo[idx][bExitY],
			BizzInfo[idx][bExitZ],
			BizzInfo[idx][bLevelNeeded],
			BizzInfo[idx][bBuyPrice],
			BizzInfo[idx][bEntranceCost],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bLocked],
			BizzInfo[idx][bInterior],
			BizzInfo[idx][bProducts],
			BizzInfo[idx][bMaxProducts],
			BizzInfo[idx][bPriceProd],
			BizzInfo[idx][bWorld],
			BizzInfo[idx][bMafia]);
		BizzInfo[idx][bWorld] = idx;
		if (idx == 0) { file2 = fopen("[bizz]/bizz.cfg", io_write); } else { file2 = fopen("[bizz]/bizz.cfg", io_append); }
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(ObwyakInfo)) {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%d|%d\n",
			ObwyakInfo[idx][oGangMoney],
			ObwyakInfo[idx][oGangDrugs],
			ObwyakInfo[idx][oGangMats]);
		if (idx == 0) { file2 = fopen("obw/obwyak.cfg", io_write); } else { file2 = fopen("obw/obwyak.cfg", io_append); }
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo)) {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
			SBizzInfo[idx][sbOwned],
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbEntranceX],
			SBizzInfo[idx][sbEntranceY],
			SBizzInfo[idx][sbEntranceZ],
			SBizzInfo[idx][sbLevelNeeded],
			SBizzInfo[idx][sbBuyPrice],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbLocked],
			SBizzInfo[idx][sbInterior],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbPriceProd],
			SBizzInfo[idx][sbMafia]);
		if (idx == 0) {
			file2 = fopen("[sbizz]/sbizz.cfg", io_write);
		} else {
			file2 = fopen("[sbizz]/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(FlatsInfo)) {
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%s,%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
			FlatsInfo[idx][fOwned],
			FlatsInfo[idx][fOwner],
			FlatsInfo[idx][fEntrancex],
			FlatsInfo[idx][fEntrancey],
			FlatsInfo[idx][fEntrancez],
			FlatsInfo[idx][fExitx],
			FlatsInfo[idx][fExity],
			FlatsInfo[idx][fExitz],
			FlatsInfo[idx][fInt],
			FlatsInfo[idx][fVirtWorld],
			FlatsInfo[idx][fValue],
			FlatsInfo[idx][fLock],
			FlatsInfo[idx][fRent],
			FlatsInfo[idx][fRentabil],
			FlatsInfo[idx][fTakings],
			FlatsInfo[idx][fDate],
			FlatsInfo[idx][fLevel],
			FlatsInfo[idx][fID]);
		if (idx == 0) {
			file2 = fopen("flats.cfg", io_write);
		} else {
			file2 = fopen("flats.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}

BroadCast(color, const string[]) {
	SendClientMessageToAll(color, string);
	return true;
}

ABroadCast(color, const string[], level) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pAdmin] >= level) {
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return true;
}
split(const strsrc[], strdest[][], delimiter = '|') {
	new i, li, aNum, len, srclen = strlen(strsrc);
	while (i <= srclen) {
		if (strsrc[i] == delimiter || i == srclen) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i + 1;
			aNum++;
		}
		i++;
	}
}

OOCOff(color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (!gOoc[i]) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

OOCNews(color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (!gNews[i]) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

SendTeamMessage(team, color, string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (gTeam[i] == team) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

SendRadioMessage(member, color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member) {
				if (gFam[i] == 0) {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

SendJobMessage(job, color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pJob] == job) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

SendEnemyMessage(color, string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (gTeam[i] >= 3) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

SendAdminMessage(color, string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pAdmin] >= 1) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

PlayerPlayMusic(playerid) {
	if (IsPlayerConnected(playerid)) {
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

forward StopMusic();
public StopMusic() {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

forward UpdateDoors();
public UpdateDoors() {
	if (lift) MoveObject(downgate, -1899.099609375, -1633.1999511719, -59.400001525879, 5);
	else MoveObject(upgate, -1899.0999755859, -1633.0, 25.700000762939, 5);
	exitp = true;
	SetTimer("UpdateExit", 5000, false);
	vputi = false;
	return 1;
}

forward UpdateExit();
public UpdateExit() {
	exitp = false;
	return 1;
}

SetPlayerFree(playerid, declare, const reason[]) {
	if (IsPlayerConnected(playerid)) {
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255) {
			format(turner, sizeof(turner), "911");
		} else {
			if (IsPlayerConnected(declare)) {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), " %s больше не преступник причина: %s. Отправитель: YourWorld.", turned, reason);
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (IsPlayerConnected(i)) {
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
					format(crbjstore, sizeof(crbjstore), "Депортамент: Внимание!Всем постам  %s закончено назначение", turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "Депортамент: Игрок %s был обработан(убит), %s", turned, reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}

public OnPlayerCommandText(playerid, cmdtext[]) {
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new moneys, idx;
	new animationplayed;
	new giveplayerid;
	new specplayerid;
	cmd = strtok(cmdtext, idx);
	if (!strcmp("/expalll", cmdtext, true)) {
		if (PlayerInfo[playerid][pAdmin] >= 6) {
			for (new i; i < GetMaxPlayers(); i++) {
				if (!IsPlayerConnected(i)) continue;
				if (!gPlayerLogged[i]) continue;
				PlayerInfo[i][pExp]++;
				SendClientMessage(i, 0x33ccffff, "Вы получили 1 респект от администрации.");
				SavePlayer(i);
			}
		}
		return true;
	}
	if (!strcmp("/lift", cmdtext, true)) {
		if (!PlayerOnJob[playerid]) return SendClientMessage(playerid, -1, "Вы не устроились на работу шахтёра.");
		if (exitp) return SendClientMessage(playerid, -1, "Пожалуйста подождите.");
		if (!IsPlayerInRangeOfPoint(playerid, 5, -1899.0999755859, -1636.5999755859, 25.700000762939) &&
			!IsPlayerInRangeOfPoint(playerid, 5, -1899.0996093750, -1636.5996093750, -59.40000152587)) return SendClientMessage(playerid, -1, "Вы не у лифта.");
		if (vputi) return SendClientMessage(playerid, -1, "Лифт уже в пути.");
		if (!lift) {
			SetTimer("UpdateDoors", 17500, false);
			MoveObject(floorlift[0], -1900.1999511719, -1638.9000244141, -61.0, 5);
			MoveObject(floorlift[1], -1901.4000244141, -1638.9000244141, -61.0, 5);
			MoveObject(floorlift[2], -1902.0999755859, -1638.9000244141, -61.0, 5);
			MoveObject(upgate, -1899.0999755859, -1636.5999755859, 25.700000762939, 5);
			vputi = true;
			lift = true;
		} else {
			SetTimer("UpdateDoors", 17500, false);
			MoveObject(floorlift[0], -1900.1999511719, -1638.9000244141, 23.89999961853, 5);
			MoveObject(floorlift[1], -1901.4000244141, -1638.9000244141, 23.89999961853, 5);
			MoveObject(floorlift[2], -1902.0999755859, -1638.9000244141, 23.89999961853, 5);
			MoveObject(downgate, -1899.099609375, -1636.599609375, -59.400001525879, 5);
			vputi = true;
			lift = false;
		}
		return 1;
	}
	//===================================[/drop]====================================
	if (strcmp("/drop", cmdtext, true, 10) == 0) {
		ShowPlayerDialog(playerid, 1129, DIALOG_STYLE_LIST, "Меню:", "{ffdb58}Наркотические вещества\n{ffdb58}Оружие\n{ffdb58}Материалы", "Выбросить", "Отмена");
		return true;
	}
	//===========================[Работа Уборщика улиц]=============================
	if (strcmp(cmdtext, "/clean", true) == 0) {
		if (checkk[playerid] > 0) return false;
		if (PlayerInfo[playerid][pCleanTime] != 0) return error(playerid, "  Вы уже убрали все улицы. В данный момент мы не нуждаемся в вашей помощи.");
		if (!IsPlayerInRangeOfPoint(playerid, 1.5, -2483.7781, 781.8073, 35.1719)) return true;
		SetPlayerCheckpoint(playerid, -2451.8760, 805.5258, 35.0313, 2.0);
		checkk[playerid] = 1;
		SendClientMessage(playerid, 0xADFF2FAA, "Возьмите автомобиль и отправляйтесь работать.");
		return true;
	}
	//==============================[Работа мусоровозчика]==========================
	if (strcmp(cmdtext, "/musor", true) == 0) {
		if (PlayerInfo[playerid][pMusorTime] != 0) return error(playerid, " Вы слишком устали от этой работы, приходите позже.");
		if (!IsPlayerInRangeOfPoint(playerid, 1.5, -1855.0131, -1560.7467, 21.7500)) return true;
		new rad = random(sizeof(RandomMusor));
		SetPlayerCheckpoint(playerid, RandomMusor[rad][0], RandomMusor[rad][1], RandomMusor[rad][2], 2.0);
		che[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, " Возьмите автомобиль и отправляйтесь работать.");
		return true;
	}
	if (strcmp(cmd, "/czona", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Вы не в праве использовать данную команду.");
		tmp = strtok(cmdtext, idx);
		new tmpzona = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new tmpgun = strval(tmp);
		tmp = strtok(cmdtext, idx);
		new tmpplayers = strval(tmp);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /czona [id зоны] [id оружия] [макс.количество игроков]");
		new tmpzonaname[128], tmpgunname[64];
		zona = tmpzona;
		maxplayerss = tmpplayers;
		zgun = tmpgun;
		switch (zona) {
			case 1 : tmpzonaname = "RC Battlefield";
			case 2 : tmpzonaname = "KickStart";
			case 3 : tmpzonaname = "MadZona";
			case 4 : tmpzonaname = "Bloodbowl";
			case 5 : tmpzonaname = "Roof";
			case 6 : tmpzonaname = "WareHouse";
		}
		switch (tmpgun) {
			case 4 : tmpgunname = "Knife";
			case 9 : tmpgunname = "Chainsaw";
			case 10 : tmpgunname = "Dildo";
			case 16 : tmpgunname = "Grenade";
			case 18 : tmpgunname = "Molotov Cocktail";
			case 23 : tmpgunname = "Silenced 9mm";
			case 24 : tmpgunname = "Desert Eagle";
			case 25 : tmpgunname = "Shotgun";
			case 26 : tmpgunname = "Sawnoff Shotgun";
			case 27 : tmpgunname = "Combat Shotgun";
			case 28 : tmpgunname = "Micro Uzi";
			case 29 : tmpgunname = "MP5";
			case 30 : tmpgunname = "AK-47";
			case 31 : tmpgunname = "M4";
			case 32 : tmpgunname = "Tec-9";
			case 33 : tmpgunname = "Rifle";
			case 34 : tmpgunname = "Sniper Rifle";
			case 35 : tmpgunname = "RPG";
			case 36 : tmpgunname = "HS Rocket";
			case 37 : tmpgunname = "Flamethrower";
			case 38 : tmpgunname = "Minigun";
		}
		format(string, 256, "| %s открыл(а) зону : %s | Оружие : %s | Макc. кол-во игроков : %d | Команда для входа : /jzona |", PlayerName(playerid), tmpzonaname, tmpgunname, tmpplayers);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (!IsPlayerConnected(i)) continue;
			DmZona[i] = 10;
		}
		return true;
	}
	if (strcmp(cmd, "/jzona", true) == 0) // Войти на зону
	{
		if (GetPVarInt(playerid, "Jzona") > gettime()) return error(playerid, " Команда доступна раз в 5 секунд");
		if (PlayerInfo[playerid][pWanted] > 0) return error(playerid, " Вы находитесь в розыске");
		if (PlayerInfo[playerid][pJailed] > 0) return error(playerid, " Не доступно, вы находитесь в заключении");
		if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вам необходимо иметь 1 уровень, для участия на ДМ зоне.");
		if (GetPlayerVirtualWorld(playerid) != 0) return error(playerid, " Не доступно в интерьере.");
		if (DmZona[playerid] == 0) return error(playerid, " Зона не создана");
		if (players == maxplayerss) return error(playerid, " Зона заполнена");
		players++;
		Nazone[playerid] = 1;
		if (zona == 1) {
			if (players % 1 == 0) {
				new rad = random(sizeof(RandomBattlefield));
				SetPlayerPos(playerid, RandomBattlefield[rad][0], RandomBattlefield[rad][1], RandomBattlefield[rad][2]);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerArmour(playerid, 0);
			}
		}
		if (zona == 2) {
			if (players % 1 == 0) {
				new rad = random(sizeof(RandomKickStar));
				SetPlayerPos(playerid, RandomKickStar[rad][0], RandomKickStar[rad][1], RandomKickStar[rad][2]);
				SetPlayerInterior(playerid, 14);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
			}
		}

		if (zona == 3) {
			if (players % 1 == 0) {
				new rad = random(sizeof(Randombum));
				SetPlayerPos(playerid, Randombum[rad][0], Randombum[rad][1], Randombum[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
			}
		}

		if (zona == 4) {
			if (players % 1 == 0) {
				new rad = random(sizeof(RandomBloodbowl));
				SetPlayerPos(playerid, RandomBloodbowl[rad][0], RandomBloodbowl[rad][1], RandomBloodbowl[rad][2]);
				SetPlayerInterior(playerid, 15);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
			}
		}
		if (zona == 5) {
			if (players % 1 == 0) {
				new rad = random(sizeof(RandomRoof));
				SetPlayerPos(playerid, RandomRoof[rad][0], RandomRoof[rad][1], RandomRoof[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
			}
		}
		if (zona == 6) {
			if (players % 1 == 0) {
				new rad = random(sizeof(RandomRoof));
				SetPlayerPos(playerid, RandomWareHouse[rad][0], RandomWareHouse[rad][1], RandomWareHouse[rad][2]);
				SetPlayerInterior(playerid, 18);
				SetPlayerColor(playerid, 0xDC143CFF);
				SetPlayerHealth(playerid, 120);
				ZonaKill[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
			}
		}
		SafeResetPlayerWeapons(playerid);
		ServerGivePlayerWeapons(playerid, zgun, 9999);
		SetPVarInt(playerid, "Jzona", gettime() + 10);
		SendClientMessage(playerid, COLOR_GREY, "Вы вошли в зону");
		return true;
	}
	//=====================================[/flat]==================================
	if (strcmp(cmd, "/flat", true) == 0) {
		GetPlayerName(playerid, playername, sizeof(playername));
		if (PlayerInfo[playerid][pFlatKey] != 0 && strcmp(playername, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fOwner], true) == 0) ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Квартира", " - Открыть/Закрыть\n - Продать", "Далее", "Выход");
		else return error(playerid, " У вас нет квартиры.");
	}
	if (strcmp(cmd, "/sellflat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pFlatKey] == 0) return error(playerid, " У вас нет квартиры.");
			if (PlayerInfo[playerid][pFlatKey] != 0 && strcmp(playername, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fOwner], true) == 0) {
				new flat = PlayerInfo[playerid][pFlatKey];
				FlatsInfo[flat][fLock] = 1;
				FlatsInfo[flat][fOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(FlatsInfo[flat][fOwner], "-", 0, strlen("-"), 255);
				GivePlayerBablo(playerid, FlatsInfo[flat][fValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", FlatsInfo[flat][fValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pFlatKey] = 0;
				UpdateFlat(flat);
				return true;
			} else {
				error(playerid, " У вас нет квартиры.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/buyflat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for (new h = 0; h < sizeof(FlatsInfo); h++) {
				if (IsPlayerInRangeOfPoint(playerid, 2.0, FlatsInfo[h][fEntrancex], FlatsInfo[h][fEntrancey], FlatsInfo[h][fEntrancez]) && FlatsInfo[h][fOwned] == 0 && GetPlayerVirtualWorld(playerid) == FlatsInfo[h][fVirtWorld]) {
					if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вам нужен 1 уровень, чтобы купить эту квартиру.");
					if ((PlayerInfo[playerid][pPhousekey] != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) || (PlayerInfo[playerid][pFlatKey] != 255 && strcmp(playername, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fOwner], true) == 0)) {
						error(playerid, " У вас уже есть дом / квартира.");
						return true;
					}
					if (GetPlayerBablo(playerid) < FlatsInfo[h][fValue]) return error(playerid, " У вас не хватает денег.");
					PlayerInfo[playerid][pFlatKey] = h;
					FlatsInfo[h][fOwned] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(FlatsInfo[h][fOwner], sendername, 0, strlen(sendername), 255);
					GivePlayerBablo(playerid, -FlatsInfo[h][fValue]);
					PlayerPlayMusic(playerid);
					SetPlayerInterior(playerid, FlatsInfo[h][fInt]);
					SetPlayerVirtualWorld(playerid, h + 9999);
					SetPlayerPos(playerid, FlatsInfo[h][fExitx], FlatsInfo[h][fExity], FlatsInfo[h][fExitz]);
					GameTextForPlayer(playerid, "~w~Welcome Flat~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
					PlayerInfo[playerid][pInt] = FlatsInfo[h][fInt];
					SendClientMessage(playerid, COLOR_WHITE, "Поздравляем!Вы купили квартиру.");
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /flat-управления квартирой.");
					UpdateFlat(h);
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/gocs", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Вы не в праве использовать данную команду.");
		if (CSzona == 0) return error(playerid, " Зона еще не создана.");
		CSzona = 0;
		CSPlayers = 0;
		for (new c = 0; c < GetMaxPlayers(); c++) {
			if (!IsPlayerConnected(c)) continue;
			if (NaCS[c] > 0) {
				GameTextForPlayer(c, "~r~GO GO GO", 5000, 1);
				TogglePlayerControllable(c, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/ccs", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Вы не в праве использовать данную команду.");
		tmp = strtok(cmdtext, idx);
		new tmpzona = strval(tmp);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /ccs [id зоны]");
		new tmpzonaname[20];
		CSzona = tmpzona;
		switch (CSzona) {
			case 1 : tmpzonaname = "RC Battlefield";
			case 2 : tmpzonaname = "KickStart";
			case 3 : tmpzonaname = "Office";
			case 4 : tmpzonaname = "Ship";
			case 5 : tmpzonaname = "Opposition";
			case 6 : tmpzonaname = "Electro Station";
		}
		format(string, 256, "| %s открыл(а) CS зону | Карта : %s | Команда для входа : /cs |", PlayerName(playerid), tmpzonaname);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		return true;
	}
	if (strcmp(cmd, "/cs", true) == 0) {
		if (NaCS[playerid] == 1) return error(playerid, " Вы уже принимаете участвие.");
		if (CSzona == 0) return error(playerid, " Раунд был запущен,подождите следующей CS-зоны.");
		if (PlayerInfo[playerid][pWanted] > 0) return error(playerid, " Вы находитесь в розыске.");
		if (GetPlayerVirtualWorld(playerid) != 0) return error(playerid, " Не доступно в интерьере.");
		if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вам необходимо иметь как минимум 1 уровень.");
		if (PlayerInfo[playerid][pJailed] > 0) return error(playerid, " Не доступно, вы находитесь в заключении");
		if (CSzona == 1) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS1Team1));
				SetPlayerPos(playerid, CS1Team1[rad][0], CS1Team1[rad][1], CS1Team1[rad][2]);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerArmour(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				TogglePlayerControllable(playerid, 0);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS1Team2));
				SetPlayerPos(playerid, CS1Team2[rad][0], CS1Team2[rad][1], CS1Team2[rad][2]);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		if (CSzona == 2) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 19 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS2Team1));
				SetPlayerPos(playerid, CS2Team1[rad][0], CS2Team1[rad][1], CS2Team1[rad][2]);
				SetPlayerInterior(playerid, 14);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS2Team2));
				SetPlayerPos(playerid, CS2Team2[rad][0], CS2Team2[rad][1], CS2Team2[rad][2]);
				SetPlayerInterior(playerid, 14);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		if (CSzona == 3) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 19 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS3Team1));
				SetPlayerPos(playerid, CS3Team1[rad][0], CS3Team1[rad][1], CS3Team1[rad][2]);
				SetPlayerInterior(playerid, 3);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 5);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS3Team2));
				SetPlayerPos(playerid, CS3Team2[rad][0], CS3Team2[rad][1], CS3Team2[rad][2]);
				SetPlayerInterior(playerid, 3);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 5);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		if (CSzona == 4) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 19 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS4Team1));
				SetPlayerPos(playerid, CS4Team1[rad][0], CS4Team1[rad][1], CS4Team1[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 10);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS4Team2));
				SetPlayerPos(playerid, CS4Team2[rad][0], CS4Team2[rad][1], CS4Team2[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 10);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		if (CSzona == 5) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 19 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS5Team1));
				SetPlayerPos(playerid, CS5Team1[rad][0], CS5Team1[rad][1], CS5Team1[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 8);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS5Team2));
				SetPlayerPos(playerid, CS5Team2[rad][0], CS5Team2[rad][1], CS5Team2[rad][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 8);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		if (CSzona == 6) {
			if (CSPlayers == 0 || CSPlayers == 2 || CSPlayers == 4 || CSPlayers == 6 || CSPlayers == 8 || CSPlayers == 10 || CSPlayers == 12 || CSPlayers == 14 || CSPlayers == 16 || CSPlayers == 18 || CSPlayers == 19 || CSPlayers == 20 || CSPlayers == 22 ||
				CSPlayers == 24 || CSPlayers == 26 || CSPlayers == 28 || CSPlayers == 30 || CSPlayers == 32 || CSPlayers == 34) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF} Вы вошли на CS зону как Counter Terrorist.");
				new rad = random(sizeof(CS6Team1));
				SetPlayerPos(playerid, CS6Team1[rad][0], CS6Team1[rad][1], CS6Team1[rad][2]);
				SetPlayerColor(playerid, 0xFF1493FF);
				SetPlayerInterior(playerid, 17);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS1[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 2);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 31, 9999);
				SetPlayerSkin(playerid, 285);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{FF0000} Вы вошли на CS зону как Terrorist.");
				new rad = random(sizeof(CS5Team2));
				SetPlayerPos(playerid, CS6Team2[rad][0], CS6Team2[rad][1], CS6Team2[rad][2]);
				SetPlayerColor(playerid, 0x05D1CDFF);
				SetPlayerHealth(playerid, 120);
				NaCS[playerid] = 1;
				CSPlayers += 1;
				TeamCS2[playerid] = 1;
				SetPlayerVirtualWorld(playerid, 2);
				SetPlayerArmour(playerid, 0);
				SetPlayerInterior(playerid, 17);
				TogglePlayerControllable(playerid, 0);
				SafeResetPlayerWeapons(playerid);
				ServerGivePlayerWeapons(playerid, 30, 9999);
				SetPlayerSkin(playerid, 293);
			}
		}
		ServerGivePlayerWeapons(playerid, 25, 9999);
		ServerGivePlayerWeapons(playerid, 33, 9999);
		ServerGivePlayerWeapons(playerid, 24, 9999);
		return true;
	}
	if (strcmp(cmd, "/fixveh", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) return error(playerid, " Вы не уполномочены использовать эту команду.");
			if (IsPlayerInAnyVehicle(playerid)) {
				RepairVehicle(GetPlayerVehicleID(playerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Транспорт был починен.");
			}
		}
		return true;
	}
	if (strcmp("/buylic", cmd, true) == 0) {
		if (!IsPlayerInRangeOfPoint(playerid, 1.5, -2022.4332, -116.7212, 1035.1719)) return true;
		ShowPlayerDialog(playerid, 436, DIALOG_STYLE_LIST, "Лицензии", "{00820F}1\t{FFFFFF}Лицензия на управление воздушным транспортом(30000$)\n{00820F}2\t{FFFFFF}Лицензия на ловлю рыбы(10000$)\n{00820F}3\t{FFFFFF}Лицензия на управление водным транспортом(30000$)\n{00820F}4\t{FFFFFF}Лицензия на ношение оружия(100000$)\n{00820F}5\t{FFFFFF}Лицензия на управление мото транспортом(40000$)", "Купить", "Отмена");
	}
	if (strcmp("/buyticket", cmd, true) == 0) {
		if (!IsPlayerInRangeOfPoint(playerid, 1.5, 2276.6072, -2358.8628, 13.5469)) return true;
		KartingCar[playerid] = 1;
		new mon = SBizzInfo[10][sbEntranceCost];
		GivePlayerBablo(playerid, -mon);
		if (SBizzInfo[10][sbMafia] > 0) {
			BizzInfo[10][bTill] += (mon / 10 * 9);
			BizzInfo[10][bProducts]--;
			ObwyakInfo[SBizzInfo[10][sbMafia]][oGangMoney] += (mon / 10 * 9);
		} else {
			SBizzInfo[10][sbTill] += mon;
			SBizzInfo[10][sbProducts]--;
		}
		SendClientMessage(playerid, COLOR_WHITE, "Теперь вы можете кататься на картинге");
		return true;
	}
	if (strcmp("/taketest", cmd, true) == 0) {
		if (!IsPlayerInRangeOfPoint(playerid, 1.5, -2026.8765, -114.6630, 1035.1719)) return true;
		if (PlayerInfo[playerid][pCarLic] == 1) return error(playerid, " У Вас уже есть права.");
		SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}>Сдача на Водительское Удостоверение Экстерном");
		SendClientMessage(playerid, COLOR_WHITE, ">Вам будет задано 10 вопросов, если ответите на все то получите права.");
		SendClientMessage(playerid, COLOR_WHITE, ">У вас есть право на 1 ошибку.");
		ShowPlayerDialog(playerid, 36, DIALOG_STYLE_LIST, " YourWorld: Pdd Test ", "\
				Вопрос №1\
				\nВас обгоняет автомобиль.Ваши действия?\
				\nа) Увеличить скорость и не допустить обгона\
				\nб) Перекрыть дорогу обгоняющему\
				\nв) Не препятствовать обгону\
				\nг) Совершить умышленное столкновение", "Далее", "Отмена");
		Question1[playerid] = 1;
	}
	if (strcmp(cmd, "/ghangs", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /ghangs [1-9]");
		animationplayed = strval(tmp);
		if (animationplayed < 1 || animationplayed > 9) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :/ghangs [1-9]");
		if (animationplayed == 1) ApplyAnimation(playerid, "GANGS", "drnkbr_prtl", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 2) ApplyAnimation(playerid, "GANGS", "drnkbr_prtl_F", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 3) ApplyAnimation(playerid, "GANGS", "DRUGS_BUY", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 4) ApplyAnimation(playerid, "GANGS", "hndshkaa", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 5) ApplyAnimation(playerid, "GANGS", "hndshkba", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 6) ApplyAnimation(playerid, "GANGS", "hndshkca", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 7) ApplyAnimation(playerid, "GANGS", "hndshkcb", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 8) ApplyAnimation(playerid, "GANGS", "hndshkda", 4.1, 0, 1, 1, 1, 1);
		else if (animationplayed == 9) ApplyAnimation(playerid, "GANGS", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1);
		return true;
	}
	if (strcmp(cmd, "/spec", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return true;
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "/spec [id]");
			giveplayerid = ReturnUser(tmp);
			if (GetPlayerState(giveplayerid) == 1) {
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectatePlayer(playerid, giveplayerid);
				PlayerSpectateID[playerid] = giveplayerid;
				PlayerSpec[giveplayerid] = playerid;
				SpecHATimer[playerid] = SetTimerEx("S", 500, true, "ff", playerid, specplayerid); //запускаем таймер с TextDraw
				TextDrawShowForPlayer(playerid, SM_HA[playerid]); //высвечиваем TextDraw
			} else if (GetPlayerState(giveplayerid) == 2) {
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
				new idid = GetPlayerVehicleID(giveplayerid);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, idid);
				PlayerSpectateID[playerid] = giveplayerid;
				PlayerSpec[giveplayerid] = playerid;
				SpecHATimer[playerid] = SetTimerEx("S", 500, true, "ff", playerid, specplayerid); //запускаем таймер с TextDraw
				TextDrawShowForPlayer(playerid, SM_HA[playerid]); //высвечиваем TextDraw
			} else if (GetPlayerState(giveplayerid) == 3) {
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
				new idid = GetPlayerVehicleID(giveplayerid);
				TogglePlayerSpectating(playerid, 1);
				PlayerSpectateVehicle(playerid, idid);
				PlayerSpectateID[playerid] = giveplayerid;
				PlayerSpec[giveplayerid] = playerid;
				SpecHATimer[playerid] = SetTimerEx("S", 500, true, "ff", playerid, specplayerid); //запускаем таймер с TextDraw
				TextDrawShowForPlayer(playerid, SM_HA[playerid]); //высвечиваем TextDraw
			} else {
				SendClientMessage(playerid, COLOR_YELLOW, "Ошибка");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/specoff", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return true;
		TogglePlayerSpectating(playerid, 0);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, COLOR_YELLOW, "Слежка окончена.");
		PlayerSpec[PlayerSpectateID[playerid]] = -1;
		PlayerSpectateID[playerid] = -1;
		TextDrawHideForPlayer(playerid, SM_HA[playerid]); //Спрячем TextDraw
		KillTimer(SpecHATimer[playerid]); //Остановим таймер
		return true;
	}
	if (strcmp(cmd, "/admins", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pLevel] < 7) return error(playerid, " Нет прав на использование данной команды.");
			SendClientMessage(playerid, COLOR_GRAD1, "Администрация онлайн:");
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerInfo[i][pAdmin] == 1) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Модератор 1-го уровня: %s[%d]", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if (PlayerInfo[i][pAdmin] == 3) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Модератор 3-го уровня: %s[%d]", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if (PlayerInfo[i][pAdmin] == 2) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Модератор 2-го уровня: %s[%d]", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if (PlayerInfo[i][pAdmin] == 4) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Модератор 4-го уровня: %s[%d]", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if (PlayerInfo[i][pAdmin] == 5) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Гл.Модератор: %s[%d]", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if (PlayerInfo[i][pAdmin] == 6) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Главный Администратор: %s", sendername);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return true;
	} else if (strcmp(cmd, "/members", true) == 0) {
		new teamnumber;
		if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
		else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
		else return error(playerid, "Вы нигде не состоите.");
		SendClientMessage(playerid, COLOR_WHITE, " {00C0FF}Члены организации онлайн:");
		for (new i = 0; i < MAX_PLAYERS; i++) {
			if (IsPlayerConnected(i)) {
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "");
				if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s[%d] Ранг: Лидер", sendername, i);
				else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s[%d] Ранг: %d", sendername, i, PlayerInfo[i][pRank]);
				if (strlen(string) > 1) SendClientMessage(playerid, COLOR_YELLOW2, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/pobeg", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new ranpobeg[MAX_PLAYERS];
			if (PlayerInfo[playerid][pJailed] != 1) return error(playerid, " Вы не находитесь в заключении.");
			if (PlayerInfo[playerid][pJailTime] <= 0) return error(playerid, " Вы не находитесь в заключении.");
			if (otmuchka[playerid] == 0) return error(playerid, " У вас нет отмычки для совершения побега. Приобрести ее можно в одном из магазинов 24/7.");
			ranpobeg[playerid] = 1 + random(9);
			GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
			if (ranpobeg[playerid] == 3 || ranpobeg[playerid] == 8 || ranpobeg[playerid] == 1) {
				SetPlayerPos(playerid, 246.44, 85.83, 1003.9);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 6);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				PlayerInfo[playerid][pJailTime] = 0;
				PlayerInfo[playerid][pJailed] = 0;
				otmuchka[playerid] = 0;
				WantLawyer[playerid] = 0;
				format(string, sizeof(string), "Дежурный: Внимание! Преступнику %s[%d] удалось сбежать из КПЗ, приймите меры.", giveplayer, playerid);
				SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				SendClientMessage(playerid, COLOR_WHITE, "Вам удалось взломать рёшетку, и выбраться с камеры.");
			} else {
				PlayerInfo[playerid][pJailTime] += 900;
				otmuchka[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Вы были пойманы при попытке к бегству. Ваш срок заключения был продлен на 10 минут.");
			}
		}
	}
	if (strcmp(cmd, "/robkey", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /robkey [id]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pRobKey] > 0) return error(playerid, " У вас уже есть ключ.");
			if (GetPVarInt(playerid, "poput") > gettime()) return error(playerid, " Вы были замечены при попытке кражи, подождите пока все забудеться.");
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (!ProxDetectorS(3.0, playerid, giveplayerid)) return error(playerid, " Вы нахоидитесь далеко от законника.");
					if (!IsACop(giveplayerid)) return error(playerid, " Этот игрок не являеться законником.");
					if (playerid == giveplayerid) return error(playerid, " Зачем воровать у самого себя?");
					new rankey[MAX_PLAYERS];
					rankey[playerid] = 1 + random(9);
					GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					if (rankey[playerid] == 9 || rankey[playerid] == 4 || rankey[playerid] == 1 || rankey[playerid] == 5) {
						PlayerInfo[playerid][pRobKey] = 1;
						format(string, sizeof(string), "Вы украли ключи от двери КПЗ, у законника %s[%d].", sendername, giveplayerid);
						SendClientMessage(playerid, COLOR_WHITE, string);
					} else {
						format(string, sizeof(string), "Вы попытались украсть ключ у законника %s[%d], но были замечены.", sendername, giveplayerid);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s[%d] пытается украсть у вас ключ от двери участка LSPD.", giveplayer, playerid);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
					}
					SetPVarInt(playerid, "poput", gettime() + 1200);
				}
			}
		}
	}
	if (strcmp(cmd, "/leaders", true) == 0) {
		string[0] = 0;
		for (new i = 0; i < GetMaxPlayers(); i++) {
			new ttext[300];
			if (!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
			if (PlayerInfo[i][pLeader] <= 0) continue; {
				if (PlayerInfo[i][pLeader] == 1) { ttext = "Лидер Полиции LS"; } else if (PlayerInfo[i][pLeader] == 2) { ttext = "Лидер ФБР"; } else if (PlayerInfo[i][pLeader] == 3) { ttext = "Лидер Армии"; } else if (PlayerInfo[i][pLeader] == 4) { ttext = "Лидер Медиков"; } else if (PlayerInfo[i][pLeader] == 5) { ttext = "Лидер La Cosa Nostra"; } else if (PlayerInfo[i][pLeader] == 6) { ttext = "Лидер Yakuza"; } else if (PlayerInfo[i][pLeader] == 8) { ttext = "Лидер Наёмных Убийц"; } else if (PlayerInfo[i][pLeader] == 9) { ttext = "Лидер Репортёров"; } else if (PlayerInfo[i][pLeader] == 10) { ttext = "Лидер Такси"; } else if (PlayerInfo[i][pLeader] == 11) { ttext = "Лидер Адвокатов"; } else if (PlayerInfo[i][pLeader] == 12) { ttext = "Лидер Street Racers"; } else if (PlayerInfo[i][pLeader] == 13) { ttext = "Лидер Grove Street"; } else if (PlayerInfo[i][pLeader] == 14) { ttext = "Лидер El Coronos"; } else if (PlayerInfo[i][pLeader] == 15) { ttext = "Лидер Los Santos Vagos"; } else if (PlayerInfo[i][pLeader] == 16) { ttext = "Лидер Ballas Gang"; } else if (PlayerInfo[i][pLeader] == 18) { ttext = "Лидер Triads Mafia"; } else if (PlayerInfo[i][pLeader] == 19) { ttext = "Лидер San Fierro Rifa"; } else if (PlayerInfo[i][pLeader] == 20) { ttext = "Лидер Русской мафии"; }
			}
			GetPlayerName(i, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s%s: %s [%d]\n", string, ttext, sendername, i);
			ShowPlayerDialog(playerid, 1311, DIALOG_STYLE_MSGBOX, "Лидеры Онлайн:", string, "Принять", "Отмена");
		}
		if (strlen(string) < 1) strcat(string, "В данный момент на сервере нет лидеров");
		ShowPlayerDialog(playerid, 1199, DIALOG_STYLE_MSGBOX, "{999999}Лидеры онлайн", string, "ENTER", "");
		return true;
	}
	if (strcmp(cmd, "/tpcor", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 6) return error(playerid, " Вы не администритор.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Помощь: /tpcor координаты по [x] [y] [z]");
			new coorx;
			coorx = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Помощь: /tpcor координаты по [x] [y] [z]");
			new coory;
			coory = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Помощь: /tpcor координаты по [x] [y] [z]");
			new coorz;
			coorz = strval(tmp);
			SetPlayerPos(playerid, coorx, coory, coorz);
			SendClientMessage(playerid, COLOR_WHITE, "Вы были телепортированы на заданную вами точку");
		}
		return true;
	}
	if (strcmp(cmd, "/rob", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new twosoldiers = 0;
			for (new ssoldier = 0; ssoldier < GetMaxPlayers(); ssoldier++) {
				if (IsPlayerConnected(ssoldier)) {
					if (IsASoldiers(ssoldier)) {
						twosoldiers += 1;
					}
				}
			}
			if (GetPlayerVirtualWorld(playerid) < 1) return error(playerid, " Вы не в банке.");
			if (IsACop(playerid)) return error(playerid, " Запрещено для законников.");
			if (!IsPlayerInRangeOfPoint(playerid, 10.0, 2309.9678, -13.2528, 26.7422)) return error(playerid, " Вы не в банке.");
			if (PlayerInfo[playerid][pRobTime] != 0) return error(playerid, " Вы уже грабили банк, подождите пока все утихнет.");
			if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вы должны иметь как минимум 2 уровень, для ограбления банка.");
			GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
			PlayerInfo[playerid][pWanted] = 6;
			PlayerInfo[playerid][pRobTime] = 7200;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
			new lala;
			lala = random(5000) * PlayerInfo[playerid][pLevel];
			GivePlayerBablo(playerid, lala);
			SetPlayerCriminal(playerid, 255, "Ограбление банка");
			format(string, sizeof(string), "Дежурный(рация): Внимание! Был ограблен банк преступником %s[%d].", giveplayer, playerid);
			SendRadioMessage(1, TEAM_RADIO_COLOR, string);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (Masked[playerid] == 1) format(string, sizeof(string), "Неизвестный украл из сейфа %d$", lala);
			else format(string, sizeof(string), "%s украл(а) из сейфа %d$.", sendername, lala);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			return true;
		}
	}
	if (strcmp(cmd, "/togpm", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLevel] < 5 && PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pLeader] == 0) return error(playerid, " Вы не можете закрывать ПМ.");
			if (!HidePM[playerid]) {
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Личные сообщения отключены.");
			} else if (HidePM[playerid]) {
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Личные сообщения включены.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fwarn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /fwarn [id] [причина]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1) {
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid == INVALID_PLAYER_ID) return true;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new Member;
					new Leader;
					Leader = PlayerInfo[playerid][pLeader];
					Member = PlayerInfo[giveplayerid][pMember];

					if (Leader == Member) {
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /fwarn [id] [причина]");
						PlayerInfo[giveplayerid][pFWarns] += 1;
						if (PlayerInfo[giveplayerid][pFWarns] >= 3) {
							new year, month, day;
							getdate(year, month, day);
							format(string, sizeof(string), "%s был(a) уволен(a) лидером %s (3 выговора).Причина: %s", giveplayer, sendername, (result));
							SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
							PlayerInfo[giveplayerid][pFWarns] = 0;
							gTeam[giveplayerid] = 3;
							PlayerInfo[giveplayerid][pTeam] = 3;
							PlayerInfo[giveplayerid][pMember] = 0;
							PlayerInfo[giveplayerid][pRank] = 0;
							PlayerInfo[giveplayerid][pFWarns] = 0;
							PlayerInfo[giveplayerid][pJob] = 0;
							PlayerInfo[giveplayerid][pChar] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(giveplayerid, gTeam[giveplayerid], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
							PlayerInfo[giveplayerid][pChar] = CIV[rand];
							MedicBill[giveplayerid] = 0;
							SpawnPlayer(giveplayerid);
							SetCameraBehindPlayer(giveplayerid);
							return true;
						}
						format(string, sizeof(string), "Лидер %s дал(а) выговор %s.Причина выговора: %s(%d/3)", sendername, giveplayer, (result), PlayerInfo[giveplayerid][pFWarns]);
						SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
						return true;
					}

				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/res", true) == 0 || strcmp(cmd, "/respawncars", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				for (new i = 0; i < MAX_VEHICLES; i++)
					if (!IsVehicleOccupied(i)) {
						SetVehicleToRespawn(i);
						Gas[i] = GasMax;
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(i, false, lights, alarm, doors, bonnet, boot, objective);
						CarEngine[i] = 0;
					}
				BroadCast(COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Автомобили были расставленны по местам Администрацией.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/funwarn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /funwarn [id] [причина]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] < 1) return error(playerid, " Нет прав на использование команды.");
			if (!IsPlayerConnected(giveplayerid)) return true;
			if (giveplayerid == INVALID_PLAYER_ID) return true;
			if (PlayerInfo[giveplayerid][pFWarns] < 1) return SendClientMessage(playerid, COLOR_WHITE, "У этого игрока нет выговоров");
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (PlayerInfo[playerid][pLeader] != PlayerInfo[giveplayerid][pMember]) return error(playerid, " Этот игрок не состоит в вашей фракции.");
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /funwarn [id] [причина]");
			PlayerInfo[giveplayerid][pFWarns] -= 1;
			format(string, sizeof(string), "Лидер %s снял(a) один выговор с %s. Причина: %s(%d/3).", sendername, giveplayer, (result), PlayerInfo[giveplayerid][pFWarns]);
			SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/fg", true) == 0) {
		if (!IsPlayerInRangeOfPoint(playerid, 5.0, 761.1445, 11.0298, 1001.1639) && !IsPlayerInRangeOfPoint(playerid, 5.0, 768.7869, -36.7466, 1000.6865)) return error(playerid, " Вы не можете изучить новый стиль боя здесь,отправляйтесь в спорт зал.");
		new listitems[] = "{ffdb58}Normal\n{ffdb58}Boxing\n{ffdb58}Kungfu\n{ffdb58}Keenhead\n{ffdb58}Grabkick\n{ffdb58}Elbow";
		ShowPlayerDialog(playerid, 434, DIALOG_STYLE_LIST, "Меню:", listitems, "Изучить", " Отмена");
		return true;
	}
	if (strcmp(cmd, "/buytune", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new house = PlayerInfo[playerid][pPhousekey];
			if (!IsPlayerInRangeOfPoint(playerid, 4.0, 1017.6431, -916.8083, 42.2262)) return error(playerid, " Вы не у СТО города ЛС.");
			if (!IsPlayerInVehicle(playerid, hCar[house]) || GetPlayerState(playerid) != 2) return error(playerid, " Вы не в домашнем авто.");
			format(string, sizeof(string), "{D1DBD0}[1] Установка колёс\n[2] Установка бампера\n[3] Цветовые работы\n[4] Закись азота\n[5] Гидравлика"); //[2] Установка спойлера[Времено не доступно]
			ShowPlayerDialog(playerid, 9594, 2, "Установка тюнинга", string, "Выбор", "Отмена");
			return true;
		}
	}
	if (strcmp(cmdtext, "/opendoor", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pRobKey] > 0) {
			if (PlayerToPoint(3, playerid, 247.8804, 71.6580, 1003.6406))
				if (PlayerToPoint(3, playerid, 245.63941955566, 72.5, 1002.5999755859)) {
					if (PlayerInfo[playerid][pRobKey] > 0) {
						PlayerInfo[playerid][pRobKey] = 0;
						SendClientMessage(playerid, -1, "Вы открыли дверь, но сломали ключ.");
					}
					MoveDynamicObject(LSGate, 244.12998962402, 72.5, 1002.5999755859, 2.00);
					SetTimer("LSGateClose", 6000, 0);
					MoveDynamicObject(LS2Gate, 247.13941955566, 72.5, 1002.5999755859, 2.00);
					SetTimer("LS2GateClose", 6000, 0);
				}
		}
		return 1;
	}
	//============================[Gate]============================================
	if (strcmp(cmdtext, "/opengate", true) == 0) {
		if (IsPlayerInRangeOfPoint(playerid, 10.0, -2083.3994140625, -80.58984375, 35.5)) {
			if (GetPlayerVehicleID(playerid) >= Instruc[0] && GetPlayerVehicleID(playerid) <= Instruc[1]) {
				SetDynamicObjectRot(LizBar, 0, 0, 0);
				SetTimer("LizClose", 6000, 0);
			}
		} else if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -1631.516235, 688.098999, 13.727282)) // открытое положение
			{
				MoveDynamicObject(FBIGate, -1631.516235, 688.098999, 13.727282, 2.00); // открытое положение
				SetTimer("FBIGateClose", 6000, 0);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, -1529.9065, 482.1588, 7.1875)) {
				MoveDynamicObject(VoyakGate, -1540.1605, 482.3972, 7.1797, 2.0);
				SetTimer("VoyakGateClose", 6000, 0);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, -1464.323, 501.525, 1.443)) {
				MoveDynamicObject(Voyak2Gate, -1463.979, 501.150, 10.147, 2.0);
				SetTimer("Voyak2GateClose", 6000, 0);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, 1588.514, -1638.078, 19.330)) {
				MoveDynamicObject(LSPDGate, 1588.514, -1638.078, 19.330, 2.00);
				SetTimer("LSPDGateClose", 6000, 0);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, 1544.684692, -1630.881592, 13.004568)) {
				SetDynamicObjectRot(LSBar, 0.0000, 0.0000, 90.0000);
				SetTimer("LSClose", 6000, 0);
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, -1572.1889648438, 658.85864257813, 6.8781251907349)) //открытое положение
			{
				SetDynamicObjectRot(FBI1Gate, 0, 0, 90); // открытое положение
				SetTimer("FBI1GateClose", 6000, 0);
			} else if (IsPlayerInRangeOfPoint(playerid, 15.0, -1701.4367675781, 687.59826660156, 24.582813262939)) //открытое положение
			{
				SetDynamicObjectRot(FBI2Gate, 0, 0, 92); // открытое положение
				SetTimer("FBI2GateClose", 6000, 0);
			}
		} else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -2657.8596191406, 579.09484863281, 15.253124237061)) {
				if (med == false) {
					MoveDynamicObject(MedicGate, -2675.7937011719, 579.01361083984, 15.253124237061, 2.0);
					MoveDynamicObject(Medic2Gate, -2657.8596191406, 579.09484863281, 15.253124237061, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					med = true;
				} else {
					MoveDynamicObject(MedicGate, -2670.7937011719, 579.01361083984, 15.253124237061, 2.0);
					MoveDynamicObject(Medic2Gate, -2662.8596191406, 579.09484863281, 15.253124237061, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					med = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, 1057.9665527344, 1362.5650634766, 13.373456954956)) {
				if (strit == false) {
					MoveDynamicObject(StritGate, 1076.8283691406, 1362.5655517578, 11.673456954956, 2.0);
					MoveDynamicObject(Strit2Gate, 1057.9665527344, 1362.5650634766, 11.673456954956, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					strit = true;
				} else {
					MoveDynamicObject(StritGate, 1071.8283691406, 1362.5655517578, 11.673456954956, 2.0);
					MoveDynamicObject(Strit2Gate, 1062.9665527344, 1362.5650634766, 11.673456954956, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					strit = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, 783.97717285156, -1330.2136230469, 12.552271842957)) {
				if (news == false) {
					MoveDynamicObject(News2Gate, 783.97717285156, -1330.2136230469, 12.552271842957, 2.0);
					MoveDynamicObject(NewsGate, 771.87744140625, -1330.0141601563, 12.552271842957, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					news = true;
				} else {
					MoveDynamicObject(News2Gate, 780.77716064453, -1330.1136474609, 12.552271842957, 2.0);
					MoveDynamicObject(NewsGate, 775.37744140625, -1330.0141601563, 12.552271842957, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					news = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -2489.1108398438, -130.96127319336, 25.636631011963)) {
				if (rifa == false) {
					MoveDynamicObject(RifaGate, -2489.1108398438, -130.96127319336, 25.636631011963, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					rifa = true;
				} else {
					MoveDynamicObject(RifaGate, -2489.1108398438, -125.36126708984, 25.636631011963, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					rifa = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -1750.182, 985.112, 25.637)) {
				if (taxi == false) {
					MoveDynamicObject(TAXIGate, -1749.9000244141, 974.29998779297, 20.299999237061, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					taxi = true;
				} else {
					MoveDynamicObject(TAXIGate, -1749.9000244141, 984.29998779297, 20.299999237061, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					taxi = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -2502.723389, 2342.036377, 4.149887)) {
				if (rm == false) {
					MoveDynamicObject(RussMgate, -2502.723389, 2342.036377, 4.149887, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					rm = true;
				} else {
					MoveDynamicObject(RussMgate, -2511.474854, 2342.051270, 4.145635, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					rm = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -2241.450, 641.532, 50.159)) {
				if (yak == false) {
					MoveDynamicObject(gateYak, -2241.470, 637.081, 50.147, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					yak = true;
				} else {
					MoveDynamicObject(gateYak, -2241.450, 641.532, 50.159, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					yak = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, -1121.6000976563, -1033.1999511719, 133.80000305176)) {
				if (killers == false) {
					MoveDynamicObject(KillersGate, -1121.6000976563, -1033.1999511719, 133.80000305176, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					killers = true;
				} else {
					MoveDynamicObject(KillersGate, -1121.6000976563, -1033.1999511719, 130.10000610352, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					killers = false;
				}
			}
		} else if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {
			if (IsPlayerInRangeOfPoint(playerid, 15.0, 664.973938, -1309.604858, 20.864033)) //открытое положение
			{
				if (triad2 == false) {
					MoveDynamicObject(TR2Gate, 664.973938, -1309.604858, 20.864033, 2.0); // открытое положение
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					triad2 = true;
				} else {
					MoveDynamicObject(TR2Gate, 664.973938, -1309.604858, 15.234329, 2.0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0); //Звук открывания ворот
					triad2 = false;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/givebomb", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPVarInt(playerid, "Bomba") == 0) return SendClientMessage(playerid, -1, "У тебя нет бомбы.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[Используйте]{FFFFFF} : /givebomb [id] [количество]");
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (playerid == giveplayerid) return error(playerid, "Нет смысла передавать бомбу самому себе.");
					if (!ProxDetectorS(5.0, playerid, giveplayerid)) return error(playerid, " Вы слишком далеко.");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SetPVarInt(giveplayerid, "Bomba", 1);
					SetPVarInt(playerid, "Bomba", 0);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Вы передали бомбу %s.", giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Вы получили бомбу от %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/pay", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLevel] < 1) return error(playerid, " Вы должны иметь как минимум 1 уровень, чтобы передавать деньги.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[Используйте]{FFFFFF} : /pay [id] [количество]");
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[Используйте]{FFFFFF} : /pay [id] [количество]");
			moneys = strval(tmp);
			if (moneys < 1 || moneys > 50000) return error(playerid, " Нельзя передать меньше 1$ или больше 50000$.");
			if (GetPlayerBablo(playerid) < moneys) return SendClientMessage(playerid, COLOR_WHITE, "У вас недостаточно средств.");
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (playerid == giveplayerid) return error(playerid, "Нет смысла передавать деньги самому себе.");
					if (!ProxDetectorS(5.0, playerid, giveplayerid)) return error(playerid, " Вы слишком далеко.");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername)); {
						ConsumingMoney[giveplayerid] = 1;
						GivePlayerBablo(playerid, (0 - moneys));
						GivePlayerBablo(giveplayerid, moneys);
						format(string, sizeof(string), "Вы передали %s(ID: %d), %d$.", giveplayer, giveplayerid, moneys);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "Вы получили %d$ от %s(ID: %d).", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s получил %d$ от %s", sendername, moneys, giveplayer);
						PayLog(string);
						if (moneys >= 1000000) {
							ABroadCast(COLOR_YELLOW, string, 1);
						}
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "%s передал(а) немного наличных для %s.", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					} {}
				}
			} else {
				format(string, sizeof(string), "%d не активый игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/charity", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[Используйте]{FFFFFF} : /charity [количество]");
			if (PlayerInfo[playerid][pLocal] == 106) return error(playerid, " Команда запрещена в данной локации");
			moneys = strval(tmp);
			if (moneys < 0) return error(playerid, " Недостаточно денег.");
			if (GetPlayerBablo(playerid) < moneys) return error(playerid, " У вас нет столько денег.");
			GivePlayerBablo(playerid, -moneys);
			Treasury += moneys;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s спасибо за донаторсво, %d$.", sendername, moneys);
			printf("%s", string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PayLog(string);
		}
		return true;
	}
	if (strcmp(cmd, "/resetgun", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}[Используйте]{FFFFFF} : /resetgun [id]");
			new intid;
			intid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] < 3) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			SafeResetPlayerWeapons(intid);
			GetPlayerName(intid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "Вы отобрали оружие у (%d)%s", intid, giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return true;
	}
	//===========================================Чистый чат=========================
	if (strcmp(cmdtext, "/cc", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 2) return error(playerid, " Вы должны быть, как минимум 2-го уровня модерирования.");
		new chatclean;
		while (chatclean++ < 98) {
			SendClientMessageToAll(COLOR_WHITE, "");
		}
		SendClientMessageToAll(COLOR_LIGHTRED, "{00C0FF}YourWorld{FFFFFF} : Чат был очищен Администрацией сервера.");
		return true;
	}
	if (strcmp(cmd, "/payday", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 6) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
		PayDay();
		return true;
	}
	if (strcmp(cmd, "/tow", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 7) return error(playerid, " Вам нужно работать механиком.");
			if (!IsPlayerInAnyVehicle(playerid)) return error(playerid, " Вам нужно быть в автомобиле.");
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return error(playerid, " Вам нужно быть в эвакуаторе.");
			if (GetPlayerState(playerid) != 2) return error(playerid, " Вам нужно быть за рулем.");
			new Float:pX, Float:pY, Float:pZ;
			GetPlayerPos(playerid, pX, pY, pZ);
			new Float:vX, Float:vY, Float:vZ;
			new Found = 0;
			new vid = 0;
			while ((vid < MAX_VEHICLES) && (!Found)) {
				vid++;
				GetVehiclePos(vid, vX, vY, vZ);
				if ((floatabs(pX - vX) < 7.0) && (floatabs(pY - vY) < 7.0) && (floatabs(pZ - vZ) < 7.0) && (vid != GetPlayerVehicleID(playerid))) {
					Found = 1;
					if (IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) {
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					} else {
						AttachTrailerToVehicle(vid, GetPlayerVehicleID(playerid));
					}
				}
			}
			if (!Found) {
				error(playerid, " Рядом нет автомобиля.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/check", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /check [id]");
			giveplayerid = ReturnUser(tmp);
			if (!IsPlayerConnected(giveplayerid)) return error(playerid, " Вы ввели не правильный ид игрока.");
			if (giveplayerid != INVALID_PLAYER_ID) {
				ShowStats(playerid, giveplayerid);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/carcolor", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /carcolor [1-2] [id]");
				new colornum = strval(tmp);
				if (colornum > 2 || colornum < 1) return SendClientMessage(playerid, COLOR_RED, "Выберите 1 или 2");
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /carcolor [1-2] [id]");
				}
				new color = strval(tmp);
				if (color > 126) return error(playerid, " Максимум 126");
				if (GetPlayerBablo(playerid) < 5000) {
					error(playerid, " У вас нет данной суммы ");
				}
				if (colornum == 1) {
					HouseInfo[house][hVcol1] = color;
					format(string, sizeof(string), "Первостепенный цвет установлен %d -5000$", color);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				} else {
					HouseInfo[house][hVcol2] = color;
					format(string, sizeof(string), "Второстепенный цвет установлен %d -5000$", color);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				GivePlayerBablo(playerid, -5000);
				if (SBizzInfo[5][sbMafia] > 0) {
					SBizzInfo[5][sbTill] += 4500;
					SBizzInfo[5][sbProducts]--;
					ObwyakInfo[SBizzInfo[5][sbMafia]][oGangMoney] += 500;
				} else {
					SBizzInfo[5][sbTill] += 5000;
					SBizzInfo[5][sbProducts]--;
				}
				PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
				OnPropUpdate();
				DestroyVehicle(hCar[house]);
				hCar[house] = AddStaticVehicleEx(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
			} else {
				error(playerid, " Вы не владеете домом");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/carupgrade", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new house = PlayerInfo[playerid][pPhousekey], PlName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, PlName, sizeof(PlName));
			if (house != 255 && strcmp(PlName, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
				if (PlayerInfo[playerid][pLevel] >= 2) {
					ShowPlayerDialog(playerid, 671, DIALOG_STYLE_LIST, "КПК", "{ffdb58}Автомобили A класса[ Бесплатно ]\n{ffdb58}Автомобили E класса[ 70.000$ ]\n{ffdb58}Автомобили H класса[ 100.000$ ]\n{ffdb58}Автомобили GF класса[ Админ Машины ]", "Выбор", "Отмена");
				} else return error(playerid, " Вы должны иметь как минимум 2 уровень, чтобы использовать эту команду.");
			} else return error(playerid, " У вас нет Дома.");
		}
		return true;
	}
	if (strcmp(cmd, "/resetupgrades", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerBablo(playerid) < 100000) return SendClientMessage(playerid, COLOR_GRAD1, "Это стоит 100000$.");
			if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вы должны иметь как минимум 2 уровень, для использования это команды.");
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel] - 1) * 2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GivePlayerBablo(playerid, -100000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 256, " Вы имеете %d очков улучшений.", PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return true;
	}
	if (strcmp(cmd, "/cvet", true) == 0) {
		GetPlayerName(playerid, playername, sizeof(playername));
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cvet [0-100]");
		if (ZonaKill[playerid] > 0) return error(playerid, " Нельзя сменить цвет, вы находитесь на зоне.");
		if (NaCS[playerid] > 0) return error(playerid, " Нельзя сменить цвет, вы находитесь на CS-зоне.");
		if (strval(tmp) < 0 || strval(tmp) > 100) return SendClientMessage(playerid, COLOR_RED, "{00C0FF}Используйте{FFFFFF} : /cvet [0-100]");
		if (strval(tmp) == 101) {
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
				SetPlayerColor(playerid, playerColors[strval(tmp)]);
				SendClientMessage(playerid, playerColors[strval(tmp)], "Вы изменили цвет.");
				return true;
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "Вы не Наёмный убийца ");
				return true;
			}
		}
		if (strval(tmp) > 100 || strval(tmp) < 0) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cvet [0-100]");
		else {
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			SetPlayerColor(playerid, playerColors[strval(tmp)]);
			SendClientMessage(playerid, playerColors[strval(tmp)], "Вы изменили цвет.");
			return true;
		}
	}
	if (strcmp(cmd, "/hide", true) == 0) // Командой класть вещи в тайник
	{
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) return error(playerid, " Не доступно для законников.");
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hide [Название] [Кол-во]");
				SendClientMessage(playerid, COLOR_WHITE, "Доступно: drugs, mats");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hide [Название] [Кол-во]");
			new kolvo = strval(tmp);
			if (IsPlayerInRangeOfPoint(playerid, 5.0, -557.4368, -503.6903, 24.7450)) {
				if (strcmp(x_job, "drugs", true) == 0) {
					if (kolvo > PlayerInfo[playerid][pDrugs]) return error(playerid, " У вас нет данного количества наркотиков.");
					if (strval(tmp) < 1) return error(playerid, " Минимальный количество должно быть не меньше 1.");
					format(string, sizeof(string), "Вы положили %d грамм(ов) наркотиков на склад.", kolvo);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][ptDrugs] += kolvo;
					PlayerInfo[playerid][pDrugs] -= kolvo;
				} else if (strcmp(x_job, "mats", true) == 0) {
					if (kolvo > PlayerInfo[playerid][pMats]) return error(playerid, " У вас нет данного количества материалов.");
					if (strval(tmp) < 1) return error(playerid, " Минимальный количество должно быть не меньше 1.");
					format(string, sizeof(string), "Вы положили %d материал(а) на склад.", kolvo);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][ptMats] += kolvo;
					PlayerInfo[playerid][pMats] -= kolvo;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/takeout", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) return error(playerid, " Не доступно для законников.");
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /takeout [Название] [Кол-во]");
				SendClientMessage(playerid, COLOR_WHITE, "Доступно: drugs, mats");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take [Название] [Кол-во]");
			new kolvo = strval(tmp);
			if (IsPlayerInRangeOfPoint(playerid, 5.0, -557.4368, -503.6903, 24.7450)) {
				if (strcmp(x_job, "drugs", true) == 0) {
					if (kolvo > PlayerInfo[playerid][ptDrugs]) return error(playerid, " У вас на складе нет столько наркотиков.");
					if (strval(tmp) < 1) return error(playerid, " Минимальный количество должно быть не меньше 1.");
					format(string, sizeof(string), "Вы взяли %d грам(а) наркотиков со склада.", kolvo);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][ptDrugs] -= kolvo;
					PlayerInfo[playerid][pDrugs] += kolvo;
				} else if (strcmp(x_job, "mats", true) == 0) {
					if (kolvo > PlayerInfo[playerid][ptMats]) return error(playerid, " У вас на складе нет столько материалов.");
					if (strval(tmp) < 1) return error(playerid, " Минимальный количество должно быть не меньше 1.");
					format(string, sizeof(string), "Вы взяли %d материал(а)(ов) со склада.", kolvo);
					SendClientMessage(playerid, COLOR_WHITE, string);
					PlayerInfo[playerid][ptMats] -= kolvo;
					PlayerInfo[playerid][pMats] += kolvo;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/usedrugs", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new xx_job[256];
			xx_job = strtok(cmdtext, idx);
			if (!strlen(xx_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /usedrugs [Название]");
				SendClientMessage(playerid, COLOR_WHITE, "Доступно: cocaine, pot");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /usedrugs [Название]");
			if (strcmp(xx_job, "cocaine", true) == 0) {
				if (PlayerInfo[playerid][pDrugs] < 2) return error(playerid, " У тебя недостаточно наркотиков.");
				if (GetPlayerDrunkLevel(playerid) >= 50000) return error(playerid, " Ты не можешь использовать больше наркотиков.");
				if (GetPVarInt(playerid, "Kruzut") > gettime()) return error(playerid, " Наркотики можно использовать раз в 2 минуты.");
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 140) return error(playerid, " Вы здоровы.");
				format(string, sizeof(string), "%s насыпал белого порошка в 100$ купюру, завернул в трубочку и начал нюхать.", sendername);
				SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 25000);
				SetTimerEx("UnDrink", 30000, false, "i", playerid);
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, health + 15.0);
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), " %s насыпал белого порошка в 100$ купюру, завернул в трубочку и начал нюхать.", giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ты использовал 2 грамма наркотиков.");
				PlayerInfo[playerid][pDrugs] -= 2;
				SetPVarInt(playerid, "Kruzut", gettime() + 120);
			} else if (strcmp(xx_job, "pot", true) == 0) {
				if (PlayerInfo[playerid][pDrugs] < 4) return error(playerid, " У тебя недостаточно наркотиков.");
				if (GetPlayerDrunkLevel(playerid) >= 50000) return error(playerid, " Ты не можешь использовать больше наркотиков.");
				if (GetPVarInt(playerid, "Kruzut") > gettime()) return error(playerid, " Наркотики можно использовать раз в 2 минуты.");
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health > 140) return error(playerid, " Вы здоровы.");
				format(string, sizeof(string), "%s взял(а) косяк и начал(а) его курить.", sendername);
				SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 25000);
				SetTimerEx("UnDrink", 30000, false, "i", playerid);
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, health + 18.0);
				GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s взял(а) косяк и начал(а) его курить.", giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ты использовал 6 грамм наркотиков.");
				PlayerInfo[playerid][pDrugs] -= 4;
				SetPVarInt(playerid, "Kruzut", gettime() + 120);
			}
		}
		return true;
	}
	//=================================[KFC]========================================
	if (strcmp(cmd, "/kfcc", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInRangeOfPoint(playerid, 5.0, -2352.6719, -153.5959, 35.3203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, -2345.1042, 1024.0560, 50.6953) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, -1719.1241, 1352.8751, 7.1787) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, -1217.2108, 1822.3807, 41.7244) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2096.5129, -1800.3693, 13.3828) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 801.1453, -1629.5795, 13.3828) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2376.4570, -1908.8212, 13.3828) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2488.2764, 2021.6671, 10.8203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2075.7856, 2226.2383, 10.8203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2631.0522, 1852.3870, 10.8203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 1857.3275, 2083.3960, 10.8203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 1094.3778, 2143.3965, 10.8203) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 1214.6238, -905.0850, 42.9205) ||
				IsPlayerInRangeOfPoint(playerid, 5.0, 2409.9331, -1486.7938, 23.3997)) {
				GameTextForPlayer(playerid, "~b~ALT~w~", 7000, 1);
				ShowPlayerDialog(playerid, 9991, DIALOG_STYLE_LIST, "Kitchen Fast Cooken(KFC)", "{ffdb58}Содовая(15$)\n{ffdb58}Пицца(25$)\n{ffdb58}Бургер(35$)\n{ffdb58}Гамбургер(45$)", "Купить", "Отмена");
			}
			return true;
		}
	}
	if (strcmp(cmd, "/buygunsf", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 315.580993, -143.19459, 999.601623)) return error(playerid, "Вы не в Ammo SF");
		if (GetPlayerVirtualWorld(playerid) != 1) return error(playerid, " Вы не в Ammo SF1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Магазин оружия SF: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunlv", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 315.580993, -143.19459, 999.601623)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 10) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Магазин оружия LV: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunkarer", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 312.4138, -165.8688, 999.6010)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 11) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Магазин оружия LV: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygungroove", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 295.6072, -38.2654, 1001.5156)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 9) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 138, DIALOG_STYLE_LIST, "Магазин оружия Groove Streete: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunmeri", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 296.0143, -80.5361, 1001.5156)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 8) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Магазин оружия meriya: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunRM", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 312.4138, -165.8688, 999.6010)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 14) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "Магазин оружия Russian Mafia: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunkarer2", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 315.580993, -143.19459, 999.601623)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 3) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 16, DIALOG_STYLE_LIST, "Магазин оружия: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunlv2", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 312.4138, -165.8688, 999.6010)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 12) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Магазин оружия LV: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buyguncentr", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 296.0143, -80.5361, 1001.5156)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 0) return error(playerid, "Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 18, DIALOG_STYLE_LIST, "Магазин оружия LS: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunkolhoz", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 295.6072, -38.2654, 1001.5156)) return error(playerid, "Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 13) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Магазин оружия kolhoz: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	if (strcmp(cmd, "/buygunDB1", true) == 0) {
		if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас нет данной суммы.");
		if (!IsPlayerInRangeOfPoint(playerid, 40.0, 296.0143, -80.5361, 1001.5156)) return error(playerid, " Вы не в Ammo LV");
		if (GetPlayerVirtualWorld(playerid) != 15) return error(playerid, " Вы не в Ammo LV1");
		if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
		ShowPlayerDialog(playerid, 22, DIALOG_STYLE_LIST, "Магазин оружия SF: меню ", "{ffdb58}Deagle 35 патронов - 2000$\n{ffdb58}Shotgun 35 патронов - 5000$\n{ffdb58}Rifle 30 патронов - 5000$\n{ffdb58}AK-47 250 патронов - 5000$\n{ffdb58}M-4 300 патронов - 6000$\n{ffdb58}MP-5 200 патронов - 3000$\n{ffdb58}Shovel - 1000$\n{ffdb58}Dildo - 1000$\n{ffdb58}Golf Club - 7500$\n{ffdb58}Sdpistol 100 патронов - 2000$", "Купить", "Отмена");
		return true;
	}
	//==============================[/copgun]=======================================
	if (strcmp(cmd, "/copgun", true) == 0) {
		if (!IsACop(playerid)) return true;
		if (IsAGunCop(playerid)) {
			if (OnWeapon[playerid] == 1) return error(playerid, " Вы уже брали набор");
			new s[512];
			format(s, sizeof(s), "{ffdb58}Deagle 50 патронов - 1000$ \n{ffdb58}Shotgun 50 патронов - 1500$ \n{ffdb58}M-4 250 патронов - 3000$ \n{ffdb58}MP-5 200 патронов - 2500$\n{ffdb58}Spray - 3000$ \n{ffdb58}Дымовая шашка 20 штук - 3000$ \n{ffdb58}Бронежилет\n{ffdb58}Зарядить тазер.");
			ShowPlayerDialog(playerid, 255, DIALOG_STYLE_LIST, "Магазин оружия: меню ", s, "Купить", "Отмена");
		}
		return true;
	}
	if (strcmp(cmdtext, "/menulcn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerBablo(playerid) < 30) return error(playerid, " У вас нет данной суммы.");
			if (!IsPlayerInRangeOfPoint(playerid, 5.0, -785.4265, 500.1190, 1371.7422)) return error(playerid, " Вы не в ресторане");
			if (GetPlayerVirtualWorld(playerid) != 18) return error(playerid, " Вы не в ресторане");
			new res[512];
			format(res, sizeof(res), "{ffdb58}Cалат \n{ffdb58}Отбивная\n{ffdb58}Картошка \n{ffdb58}Коктейль\n{ffdb58}Устрици");
			ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
		}
		return true;
	}
	if (strcmp(cmdtext, "/menu", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerBablo(playerid) < 30) return error(playerid, " У вас нет данной суммы.");
			if (!IsPlayerInRangeOfPoint(playerid, 5.0, -785.4265, 500.1190, 1371.7422)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не в ресторане");
			if (GetPlayerVirtualWorld(playerid) != 2) return error(playerid, " Вы не в ресторане");
			new res[512];
			format(res, sizeof(res), "{ffdb58}Cалат \n{ffdb58}Отбивная\n{ffdb58}Картошка \n{ffdb58}Коктейль\n{ffdb58}Устрици");
			ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Ресторан: Меню ", res, "Купить", "Отмена");
		}
		return true;
	}
	if (strcmp(cmd, "/upgrade", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new gunid[16];
			new infostring[145];
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				format(string, sizeof(string), "{00C0FF}Используйте{FFFFFF} : /upgrade [название обновления] (У Вас %d очков обновления)", PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				if (PlayerInfo[playerid][pLevel] >= 2) SendClientMessage(playerid, COLOR_GRAD3, "Доступное улучшение: health (Здоровье при респавне)");
				if (PlayerInfo[playerid][pLevel] >= 2) SendClientMessage(playerid, COLOR_GRAD3, "Доступное улучшение: miser (Снижение затраты материалов на оружие)");
				if (PlayerInfo[playerid][pLevel] >= 2) SendClientMessage(playerid, COLOR_GRAD3, "Доступное улучшение: trader (Навык купли и продажи)");
				if (PlayerInfo[playerid][pLevel] >= 2) SendClientMessage(playerid, COLOR_GRAD3, "Доступное улучшение: painkillers (Количество здоровья при лечении)");
				return 1;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "health", true, strlen(gunid)) == 0) && PlayerInfo[playerid][gPupgrade] >= 2) {
				if (PlayerInfo[playerid][pSHealth] < 50) {
					PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth] + 5.0;
					format(infostring, 256, "Улучшение аккаунта: Теперь уровень здоровья при спавне у Вас будет %.2f. (+5)", PlayerInfo[playerid][pSHealth] + 50);
					PlayerInfo[playerid][gPupgrade] -= 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
				} else {
					error(playerid, " У вас максимальное количество жизней при рождении.");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "miser", true, strlen(gunid)) == 0) && PlayerInfo[playerid][gPupgrade] >= 3) {
				if (PlayerInfo[playerid][pMiserPerk] < 3) {
					PlayerInfo[playerid][pMiserPerk] += 1;
					format(infostring, 256, "Новое улучшение: Ваша экономность уже %d уровня .", PlayerInfo[playerid][pMiserPerk]);
					PlayerInfo[playerid][gPupgrade] -= 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
				} else {
					SendClientMessage(playerid, COLOR_RED, "У Вас максимально развит этот навык.");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "trader", true, strlen(gunid)) == 0)) {
				if (PlayerInfo[playerid][pTraderPerk] < 3) {
					PlayerInfo[playerid][pTraderPerk] += 1;
					format(infostring, 256, "Новое улучшение: Ваш навык торговли %d уровня.", PlayerInfo[playerid][pTraderPerk] && PlayerInfo[playerid][gPupgrade] >= 3);
					PlayerInfo[playerid][gPupgrade] -= 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
				} else {
					SendClientMessage(playerid, COLOR_RED, "У Вас максимально развит этот навык.");
					return 1;
				}
			}
			else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0) && PlayerInfo[playerid][gPupgrade] >= 3) {
				if (PlayerInfo[playerid][pPainPerk] < 3) {
					PlayerInfo[playerid][pPainPerk] += 1;
					format(infostring, 256, "Новое улучшение: Ваш навык -painkillers- теперь %d уровня.", PlayerInfo[playerid][pPainPerk]);
					PlayerInfo[playerid][gPupgrade] -= 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
				} else {
					SendClientMessage(playerid, COLOR_RED, "У Вас максимально развит этот навык.");
					return 1;
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/buylevel", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (gPlayerLogged[playerid] != 0) {
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				if (PlayerInfo[playerid][pLevel] >= 0) {
					new nxtlevel = PlayerInfo[playerid][pLevel] + 1;
					new costlevel = nxtlevel * levelcost; //10k for testing purposes
					new expamount = nxtlevel * levelexp;
					new infostring[256];
					if (GetPlayerMoney(playerid) < costlevel) {
						format(infostring, 256, " У вас нет денег для покупки уровня. ($%d)", costlevel);
						error(playerid, infostring);
						return 1;
					} else if (PlayerInfo[playerid][pExp] < expamount) {
						format(infostring, 256, "Вам нужно %d очков уважения, у вас только - %d.", expamount, PlayerInfo[playerid][pExp]);
						error(playerid, infostring);
						return 1;
					} else {
						format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						GivePlayerMoney(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						if (PlayerInfo[playerid][pDonateRank] > 0) {
							PlayerInfo[playerid][pExp] -= expamount;
							new total = PlayerInfo[playerid][pExp];
							if (total > 0) {
								PlayerInfo[playerid][pExp] = total;
							} else {
								PlayerInfo[playerid][pExp] = 0;
							}
						} else {
							PlayerInfo[playerid][pExp] = 0;
						}
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade] + 2;
						GameTextForPlayer(playerid, string, 5000, 1);
						format(infostring, 256, "Вы купили %d уровень для ($%d) введите /upgrade.", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
						format(infostring, 256, "Вы имеете %d очков улучшения.", PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, infostring);
					}
				}
				return 1;
			} else {
				SendClientMessage(playerid, COLOR_RED, "** Вы не вошли!");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/o", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) {
				format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вам запрещено общаться в течении %d секунд.", PlayerInfo[playerid][pMutedTime]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			if (PlayerInfo[playerid][pJailed] == 1 || PlayerInfo[playerid][pJailed] == 4) return error(playerid, " Вы не можете разговаривать, вы в КПЗ..");
			new is1 = 0; // Вот антирекл
			new r = 0;
			while (strlen(cmdtext[is1])) {
				if ('0' <= cmdtext[is1] <= '9') {
					new is2 = is1 + 1;
					new p = 0;
					while (p == 0) {
						if ('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
						else {
							strmid(strR[r], cmdtext, is1, is2, 255);
							if (strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			if (r >= 4) {
				new strMy[255];
				new STRname[255];
				GetPlayerName(playerid, STRname, 255);
				format(strMy, sizeof(strMy), "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", STRname, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, strMy, 1);
				for (new z = 0; z < r; z++) {
					new pr2;
					while ((pr2 = strfind(cmdtext, strR[z], true)) != -1)
						for (new i = pr2, j = pr2 + strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
				}
				return 1;
			} // Вот антирекл
			if (OOCChat[playerid] > 0 && PlayerInfo[playerid][pAdmin] < 1) {
				format(string, sizeof(string), "Анти-Флуд Система: Ты сможешь использовать эту команду через %d секунд(ы).", OOCChat[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			if ((noooc) && PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Общий чат отключён Администрацией.");
			if (PlayerInfo[playerid][pLevel] < 1 && !IsPlayerAdmin(playerid) && !PlayerInfo[playerid][pAdmin]) return error(playerid, " Чтобы писать в общий чат, необходимо иметь как минимум 1 уровень.");
			if (PlayerInfo[playerid][pMuted] == 1) {}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new arank[64];
			if (PlayerInfo[playerid][pAdmin] == 6) { arank = "{000000}(A){FFFFFF}"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "{FF6347}(Гл.М){FFFFFF}"; } else if (PlayerInfo[playerid][pAdmin] >= 1) { arank = "{FF6347}(М){FFFFFF}"; } else if (PlayerInfo[playerid][pHelper] >= 1) { arank = "{66CC66}(H){FFFFFF}"; } else if (PlayerInfo[playerid][pDonateRank] >= 1) { arank = "{008000}(V){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 1) { arank = "{0000FF}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 2) { arank = "{000099}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 3) { arank = "{009900}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 4) { arank = "{FF0000}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 5) { arank = "{6699FF}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 6) { arank = "{FFFF33}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 8) { arank = "{000000}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 9) { arank = "{00CCCC}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 10) { arank = "{FFFF00}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 11) { arank = "{FF9900}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 12) { arank = "{99CC33}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 13) { arank = "{33FF00}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 14) { arank = "{33CCCC}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 15) { arank = "{CCCC00}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 16) { arank = "{9933FF}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 18) { arank = "{CC33CC}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 19) { arank = "{33FFCC}(L){ffffff}"; } else if (PlayerInfo[playerid][pLeader] == 20) { arank = "{666666}(L){ffffff}"; } else { arank = ""; }
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[90];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /o [текст]");
			if (Rekl[playerid] == 1 && strfind(cmdtext, "www", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru", true) != -1 // Вот антирекл
				||
				Rekl[playerid] == 1 && strfind(cmdtext, ".net", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com", true) != -1 ||
				Rekl[playerid] == 1 && strfind(cmdtext, "http", true) != -1) {
				format(string, 128, "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, string, 1);
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] > 0) {
				format(string, sizeof(string), "%s %s[%d]: %s", arank, sendername, playerid, result);
				vseokm(string);
			} else {
				format(string, sizeof(string), "%s %s[%d]: %s", arank, sendername, playerid, result);
				vseok(string);
			}
			OOCChat[playerid] = 120;
		}
		return true;
	}
	if (strcmp(cmd, "/noooc", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1 && (!noooc)) {
				noooc = 1;
				BroadCast(COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Общий чат был отключен Администрацией сервера.");
			} else if (PlayerInfo[playerid][pAdmin] >= 1 && (noooc)) {
				noooc = 0;
				BroadCast(COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Общий чат был включен Администрацией сервера.");
			} else {
				error(playerid, " Вы не авторизованны для этой команды.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fuel", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (gGas[playerid] == 0) {
				gGas[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Fuel Info on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			} else if (gGas[playerid] == 1) {
				gGas[playerid] = 0;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Fuel Info off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/ad", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			if (PlayerInfo[playerid][pLevel] < 3) {
				SendClientMessage(playerid, COLOR_WHITE, "Для подачи рекламы, вам необходимо иметь {33aa33}3{ffffff} уровень.");
				format(string, sizeof(string), "Сейчас: {33aa33}%s{ffffff} уровень.", PlayerInfo[playerid][pLevel]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if (PlayerInfo[playerid][pJailed] >= 1) return error(playerid, " Нельзя дать рекламу находять в заключении");
			new is1 = 0;
			new r = 0;
			while (strlen(cmdtext[is1])) {
				if ('0' <= cmdtext[is1] <= '9') {
					new is2 = is1 + 1;
					new p = 0;
					while (p == 0) {
						if ('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
						else {
							strmid(strR[r], cmdtext, is1, is2, 255);
							if (strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			if (r >= 4) {
				new strMy[255];
				new STRname[255];
				GetPlayerName(playerid, STRname, 255);
				format(strMy, sizeof(strMy), "Подозрение на рекламу в /ad %s[%d]: %s", STRname, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, strMy, 1);
				error(playerid, " Найдены запрещенные символы! Сообщение не отправлено.");
				for (new z = 0; z < r; z++) {
					new pr2;
					while ((pr2 = strfind(cmdtext, strR[z], true)) != -1)
						for (new i = pr2, j = pr2 + strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
				}
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : (/ad)vertise [текст]");
			if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1)) {
				format(string, sizeof(string), "Анти-Флуд Система: Ты сможешь использовать эту команду через %d секунд.", (addtimer / 1000));
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;

			}
			new payout = idx * 25;
			if (GetPlayerBablo(playerid) < payout) return error(playerid, " У вас недостаточно денег.");
			if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 ||
				strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
				format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, string, 1);
				return true;
			}
			GivePlayerBablo(playerid, -payout);
			SBizzInfo[7][sbTill] += payout;
			if (SBizzInfo[7][sbMafia] > 0) {
				SBizzInfo[7][sbTill] += (payout / 10 * 9);
				ObwyakInfo[SBizzInfo[7][sbMafia]][oGangMoney] += (payout / 10 * 1);
			} else { SBizzInfo[7][sbTill] += payout; }
			format(string, sizeof(string), "{33AA33}[Реклама]:{FFFFFF} %s. {33AA33}[Контакты]:{FFFFFF} %s{ffdb58} [ID: %d]", result, sendername, playerid);
			OOCNews(COLOR_WHITE, string);
			format(string, sizeof(string), "~r~Paid %d$~n~~w~Message contained: %d Characters", payout, idx);
			if (PlayerInfo[playerid][pAdmin] < 1) {
				SetTimer("AddsOn", addtimer, 0);
				adds = 0;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/frwanted", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (i == INVALID_PLAYER_ID) continue;
					if (PlayerInfo[i][pFs] == 0) continue;
					if (PlayerInfo[i][pFs] > 0) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s%s [id: %d]\n", string, sendername, i);
						ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_MSGBOX, "{00C0FF}Розыскивается", string, "Ok", "");
					}
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fr", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /fr [id]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] != 2) return error(playerid, " Команда доступна только для лидера FBI.");
			if (!IsPlayerConnected(giveplayerid)) return error(playerid, " Этот игрок не авторизирован.");
			if (giveplayerid == INVALID_PLAYER_ID) return error(playerid, " Этот игрок не авторизирован.");
			if (PlayerInfo[giveplayerid][pFs] > 0) return error(playerid, " Этот игрок уже занесен в федеральный розыск.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			PlayerInfo[giveplayerid][pFs] = 1;
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 ||
				PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Государственные новости ___________|");
				format(string, sizeof(string), "%s был занесён в Федеральный Розыск Закона. Занёс: %s. Причина: %s.", giveplayer, sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
				format(string, sizeof(string), "Ты занесён в Федеральный Розыск Закона. Занёс: %s. Причина: %s.", giveplayer, sendername, result);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s занесён в Федеральный Розыск Закона.", giveplayerid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/unfr", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /unfr [id]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] != 2) return error(playerid, " Команда доступна только для лидера FBI.");
			if (!IsPlayerConnected(giveplayerid)) return error(playerid, " Этот игрок не авторизирован.");
			if (giveplayerid == INVALID_PLAYER_ID) return error(playerid, " Этот игрок не авторизирован.");
			if (PlayerInfo[giveplayerid][pFs] == 0) return error(playerid, " Этот игрок не занесен в федеральный розыск.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			PlayerInfo[giveplayerid][pFs] = 0;
			SendClientMessageToAll(COLOR_WHITE, "|___________ Государственные новости ___________|");
			format(string, sizeof(string), "%s был вычеркнут из списка Федерального Розыска Закона. Вычеркнул: %s. Причина: %s.", giveplayer, sendername, result);
			SendClientMessageToAll(COLOR_DBLUE, string);
			format(string, sizeof(string), "Ты больше не состоишь в Федеральном Розыске Закона.", giveplayer, sendername, result);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s больше не состоит в Федеральном Розыске Закона.", giveplayerid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return true;
	}
	//----------------------------------[government]-----------------------------------------------
	if (strcmp(cmd, "/gov", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) {
				PlayerMuteMessage(playerid);
				return true;
			}
			if (!IsACop(playerid) && !IsAnTaxi(playerid) && PlayerInfo[playerid][pMember] != 4 && PlayerInfo[playerid][pMember] != 8 && PlayerInfo[playerid][pLeader] != 4 &&
				PlayerInfo[playerid][pLeader] != 8) return error(playerid, " Вы не Законник!.");
			if (PlayerInfo[playerid][pRank] < 4 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pLeader] != 2 &&
				PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 4 && PlayerInfo[playerid][pLeader] != 10 && PlayerInfo[playerid][pLeader] != 8) return error(playerid, " Вы должны быть 4 рангом, чтобы быть использовать городские новости.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (IsIP(cmdtext) || CheckString(cmdtext)) {
				if (PlayerInfo[playerid][pAdmin] == 0) {
					new ip[15];
					PlayerInfo[playerid][pMuted] = 1;
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s[%d]: %s ", sendername, playerid, cmdtext);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					format(string, sizeof(string), "[Security] Au iieo?eee aai ?aoa ia 3 ?ana /mm - ?aii?o");
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					return true;
				}
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : [/gov] [text]");
			if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 ||
				strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
				format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, string, 1);
				return true;
			}
			if (GetPVarInt(playerid, "FloodGov") > gettime()) {
				error(playerid, " Cообщить новости штату можно раз в 4 минуты");
				return true;
			} else {
				SetPVarInt(playerid, "FloodGov", gettime() + 240);
			}
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости LSPD ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			} else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости FBI ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			} else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости Армии ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			} else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости Министерства Здравоохранения ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			} else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости Таксопарка ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			} else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) {
				SendClientMessageToAll(COLOR_WHITE, "|___________ Новости Авто Школы ___________|");
				format(string, sizeof(string), "Новости от %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/togooc", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!gOoc[playerid]) {
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "OOC чат выключен.");
			} else if (gOoc[playerid]) {
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "OOC чат включен.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/tognews", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!gNews[playerid]) {
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат новостей отключен.");
			} else if (gNews[playerid]) {
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат новостей включен.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/togdep", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (togdep[playerid] == 0) {
				togdep[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат депортамента отключен.");
			} else if (togdep[playerid] == 1) {
				togdep[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат депортамента включен.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/togfam", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!gFam[playerid]) {
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат семьи отключен.");
			} else if (gFam[playerid]) {
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чат семьи включен.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/me", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPVarInt(playerid, "me") > gettime()) return error(playerid, " Не флуди.");
			if (PlayerInfo[playerid][pMuted] == 1) {
				PlayerMuteMessage(playerid);
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /me [действие]");
			if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 ||
				strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
				format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, string, 1);
				return true;
			}
			format(string, sizeof(string), "%s %s", sendername, result);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			printf("%s", string);
			SetPVarInt(playerid, "me", gettime() + 3);
		}
		return true;
	}
	if (strcmp(cmd, "/c", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPVarInt(playerid, "cc") > gettime()) return error(playerid, " Не флуди.");
			if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			GetInitials(playerid);
			new is1 = 0; // Вот антирекл
			new r = 0;
			while (strlen(cmdtext[is1])) {
				if ('0' <= cmdtext[is1] <= '9') {
					new is2 = is1 + 1;
					new p = 0;
					while (p == 0) {
						if ('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
						else {
							strmid(strR[r], cmdtext, is1, is2, 255);
							if (strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			if (r >= 4) {
				new strMy[255];
				new STRname[255];
				GetPlayerName(playerid, STRname, 255);
				format(strMy, sizeof(strMy), "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", STRname, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, strMy, 1);
				for (new z = 0; z < r; z++) {
					new pr2;
					while ((pr2 = strfind(cmdtext, strR[z], true)) != -1)
						for (new i = pr2, j = pr2 + strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
				}
				return 1;
			} // Вот антирекл
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /c [текст]");
			if (Rekl[playerid] == 1 && strfind(cmdtext, "www", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru", true) != -1 // Вот антирекл
				||
				Rekl[playerid] == 1 && strfind(cmdtext, ".net", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com", true) != -1 ||
				Rekl[playerid] == 1 && strfind(cmdtext, "http", true) != -1) {
				format(string, 128, "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, string, 1);
				return 1;
			} // Вот антирекл
			if (Masked[playerid] == 1) {
				format(string, sizeof(string), "{33FF00}Неизвестный говорит: %s.", result);
				SetPlayerChatBubble(playerid, result, COLOR_WHITE, 50.0, 10000);
				ProxDetector(3.0, playerid, string, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			} else {
				format(string, sizeof(string), "{33FF00}%s[%d] говорит: %s.", sendername, playerid, result);
				SetPlayerChatBubble(playerid, result, COLOR_WHITE, 50.0, 10000);
				ProxDetector(3.0, playerid, string, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			}
			SetPVarInt(playerid, "cc", gettime() + 3);
			printf("%s", string);
		}
		return true;
	}
	if (strcmp(cmd, "/s", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetInitials(playerid);
			if (GetPVarInt(playerid, "JustShout") > gettime()) return SendClientMessage(playerid, COLOR_WHITE, "Анти-Флуд Система: Не флудите пожалуйста.");
			if (PlayerInfo[playerid][pMuted] == 1) {
				PlayerMuteMessage(playerid);
				return true;
			}
			new is1 = 0; // Вот антирекл
			new r = 0;
			while (strlen(cmdtext[is1])) {
				if ('0' <= cmdtext[is1] <= '9') {
					new is2 = is1 + 1;
					new p = 0;
					while (p == 0) {
						if ('0' <= cmdtext[is2] <= '9' && strlen(cmdtext[is2])) is2++;
						else {
							strmid(strR[r], cmdtext, is1, is2, 255);
							if (strval(strR[r]) < 255) r++;
							is1 = is2;
							p = 1;
						}
					}
				}
				is1++;
			}
			if (r >= 4) {
				new strMy[255];
				new STRname[255];
				GetPlayerName(playerid, STRname, 255);
				format(strMy, sizeof(strMy), "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", STRname, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, strMy, 1);
				for (new z = 0; z < r; z++) {
					new pr2;
					while ((pr2 = strfind(cmdtext, strR[z], true)) != -1)
						for (new i = pr2, j = pr2 + strlen(strR[z]); i < j; i++) cmdtext[i] = '*';
				}
				return 1;
			} // Вот антирекл
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /s [текст]");
			if (Rekl[playerid] == 1 && strfind(cmdtext, "www", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".ru", true) != -1 // Вот антирекл
				||
				Rekl[playerid] == 1 && strfind(cmdtext, ".net", true) != -1 || Rekl[playerid] == 1 && strfind(cmdtext, ".com", true) != -1 ||
				Rekl[playerid] == 1 && strfind(cmdtext, "http", true) != -1) {
				format(string, 128, "{EBF619}Подозрение на рекламу в общий чат %s[%d]: %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_YELLOW, string, 1);
				return 1;
			} // Вот антирекл
			if (Masked[playerid] == 1) {
				format(string, sizeof(string), "Неизвестный кричит: %s!", result);
				SetPlayerChatBubble(playerid, result, COLOR_WHITE, 50.0, 10000);
				ProxDetector(34.0, playerid, string, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE);
				SetPVarInt(playerid, "JustShout", gettime() + 2);
			} else {
				format(string, sizeof(string), "%s[%d] кричит: %s!", sendername, playerid, result);
				SetPlayerChatBubble(playerid, result, COLOR_WHITE, 50.0, 10000);
				ProxDetector(34.0, playerid, string, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE);
				SetPVarInt(playerid, "JustShout", gettime() + 2);
			}
			printf("%s", string);
		}
		return true;
	}
	if (strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /m [megaphone chat]");
			if (gTeam[playerid] == 2 || IsACop(playerid)) {
				new newcar = GetPlayerVehicleID(playerid);
				if (!IsACopCar(newcar)) return error(playerid, " Вы не в служебном транспорте.");
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
					if (PlayerInfo[playerid][pSex] == 1) {
						format(string, sizeof(string), "[Полицейский %s: %s]", sendername, result);
						ProxDetector(70.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
					} else if (PlayerInfo[playerid][pSex] == 2) {
						format(string, sizeof(string), "[Полицейская %s: %s]", sendername, result);
						ProxDetector(70.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
					}
				}
				if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
					new currank[64];
					if (PlayerInfo[playerid][pRank] == 1) { currank = "Стажёр"; } else if (PlayerInfo[playerid][pRank] == 2) { currank = "Агент"; } else if (PlayerInfo[playerid][pRank] == 3) { currank = "Спец. Агент"; } else if (PlayerInfo[playerid][pRank] == 4) { currank = "Командир"; } else if (PlayerInfo[playerid][pRank] == 5) { currank = "Зам.Директора"; } else if (PlayerInfo[playerid][pRank] == 6) { currank = "Директор"; } else { currank = "Стажёр"; }
					format(string, sizeof(string), "[%s %s: %s]", currank, sendername, result);
					ProxDetector(75.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
				}
				if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
					new currank[64];
					if (PlayerInfo[playerid][pRank] == 1) { currank = "Рядовой"; } else if (PlayerInfo[playerid][pRank] == 2) { currank = "Сержант"; } else if (PlayerInfo[playerid][pRank] == 3) { currank = "Лейтинант"; } else if (PlayerInfo[playerid][pRank] == 4) { currank = "Капитан"; } else if (PlayerInfo[playerid][pRank] == 5) { currank = "Майор"; } else if (PlayerInfo[playerid][pRank] == 6) { currank = "Генерал"; } else { currank = "Рядовой"; }
					format(string, sizeof(string), "[%s %s: %s]", currank, sendername, result);
					ProxDetector(75.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
				}
				printf("%s", string);
			} else {
				error(playerid, " Вы не законник.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/meg", true) == 0 || strcmp(cmd, "/e", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /e [megaphone chat]");
				return true;
			}
			if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				new newcar = GetPlayerVehicleID(playerid);
				if (!IsAnAmbulance(newcar)) {
					error(playerid, " Вы не в служебном транспорте.");
					return true;
				}
				if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
					if (PlayerInfo[playerid][pSex] == 1) {
						format(string, sizeof(string), "[Медик %s:o< %s]", sendername, result);
						ProxDetector(60.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
					} else if (PlayerInfo[playerid][pSex] == 2) {
						format(string, sizeof(string), "[Мед.Сестра %s:o< %s]", sendername, result);
						ProxDetector(60.0, playerid, string, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
					}
				}
				printf("%s", string);
			} else {
				error(playerid, " Вы не медик.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/r", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /r [текст] ");
			if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 ||
				strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
				format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, string, 1);
				return true;
			}
			if (MuteFamily[playerid] > 0) return error(playerid, " Вы заткнуты лидером.");
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 1) { format(string, sizeof(string), " Шериф %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Комиссар %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " Инспектор %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " Офицер %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " Патрульный %s[%d](рация): %s, приём. **", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " Кадет %s[%d](рация): %s, приём.", sendername, playerid, result); } else {
					format(string, sizeof(string), " Кадет %s(%d)(рация): %s, прием.", sendername, playerid, result);
				}
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 2) { format(string, sizeof(string), " Директор FBI %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Зам. директора %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " Спец. агент %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " Старший агент %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " Агент %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " Стажер %s[%d](рация): %s, приём.", sendername, playerid, result); } else {
					format(string, sizeof(string), " Агент %s(%d)(рация): %s, приём.", sendername, playerid, result);
				}
				SendRadioMessage(2, TEAM_BLUE_COLOR, string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 3) { format(string, sizeof(string), " Генерал %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Майор %s[%d](рация){33AA33}: %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " Лейтенант %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " Капитан %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " Сержант %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " Рядовой %s[%d](рация): %s, приём.", sendername, playerid, result); } else {
					format(string, sizeof(string), " Рядовой %s(%d)(рация): %s, приём.", sendername, playerid, result);
				}
				SendRadioMessage(3, TEAM_BLUE_COLOR, string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7) {
				if (PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), " Мэр штата %s[%d]: %s конец связи", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Зам. мэра %s[%d]: %s конец связи **", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " Депутат %s[%d]: %s конец связи **", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " Судья %s[%d]: %s конец связи **", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " Адвокат %s[%d]: %s конец связи **", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " Охранник %s[%d]: %s конец связи **", sendername, playerid, result); } else {
					format(string, sizeof(string), " Охранник %s(%d): %s конец связи", sendername, playerid, result);
				}
				SendRadioMessage(7, TEAM_BLUE_COLOR, string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 4) { format(string, sizeof(string), " Министр здравоохранения %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " Глав. врач %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " Хирург %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " Спасатель %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " Реаниматор %s[%d](рация): %s, приём.", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " Фельдшер %s[%d](рация): %s, приём.", sendername, playerid, result); } else {
					format(string, sizeof(string), " Фельдшер %s(%d)(рация): %s, приём.", sendername, playerid, result);
				}
				SendRadioMessage(4, TEAM_BLUE_COLOR, string);
				return true;
			}
			else {
				error(playerid, " Вы не можете использовать эту команду.");
				return true;
			}
		}
		return true;
	}
	//----------------------------------[offduty]-----------------------------------------------
	if (strcmp(cmd, "/duty", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
				if (IsPlayerInRangeOfPoint(playerid, 3, 255.3, 77.4, 1003.6) || IsPlayerInRangeOfPoint(playerid, 3, -1616.1294, 681.1594, 7.1875)) {
					if (GetPVarInt(playerid, "CopTime") < gettime()) {
						if (OnDuty[playerid] == 0) {
							format(string, sizeof(string), "Офицер %s взял(а) значок и оружие из своего шкафчика.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							ServerGivePlayerWeapons(playerid, 24, 70);
							ServerGivePlayerWeapons(playerid, 31, 270);
							ServerGivePlayerWeapons(playerid, 29, 431);
							ServerGivePlayerWeapons(playerid, 25, 110);
							tazer[playerid] = 20;
							SetPlayerHealth(playerid, 100.0);
							SetPlayerArmour(playerid, 100.0);
							OnDuty[playerid] = 1;
							SetPVarInt(playerid, "CopTime", gettime() + 180);
						} else if (OnDuty[playerid] == 1) {
							format(string, sizeof(string), "Офицер %s положил(а) свой Значок и Оружие в свой шкафчик.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							ServerGivePlayerWeapons(playerid, 0, 0);
							ServerGivePlayerWeapons(playerid, 3, 0);
							OnDuty[playerid] = 0;
							SetPVarInt(playerid, "CopTime", gettime() + 180);
						}
					}
				}
			}
			else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				if (GetPVarInt(playerid, "MedicTime") > gettime()) return error(playerid, " Сменить статус можно раз в 3 минуты.");
				if (JobDuty[playerid] == 1) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы ушли с дежурства");
					JobDuty[playerid] = 0;
					Medics -= 1;
				} else {
					format(string, sizeof(string), "[Новости МЧС] Медик %s на службе.(Вызвать /service medic).", sendername);
					OOCNews(0xE19898AA, string);
					JobDuty[playerid] = 1;
					Medics += 1;
				}
				SetPVarInt(playerid, "MedicTime", gettime() + 180);
			}
			else if (PlayerInfo[playerid][pJob] == 7) {
				if (GetPVarInt(playerid, "MehTime") > gettime()) return error(playerid, " Сменить статус можно раз в 3 минуты.");
				if (JobDuty[playerid] == 1) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Теперь вы временно не работаете механиком и не принимаете звонки от  нуждающихся.");
					JobDuty[playerid] = 0;
					Mechanics -= 1;
				} else {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вышли на дежурство.Ожидайте звонков от людей, нуждающихся в помощи.");
					JobDuty[playerid] = 1;
					Mechanics += 1;
				}
				SetPVarInt(playerid, "MehTime", gettime() + 180);
			} else {
				error(playerid, " Вы не можете использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMuted] == 1) {
				format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы не можете говорить, у вас бан чата %d секунд.", PlayerInfo[playerid][pMutedTime]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /d [текст]");
			if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 ||
				strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
				format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
				ABroadCast(COLOR_AOCHAT, string, 1);
				return true;
			}
			if (MuteFamily[playerid] > 0) return error(playerid, " Вы заткнуты лидером.");
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 1) { format(string, sizeof(string), "Шериф %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Комиссар %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Инспектор %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Офицер %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Патрульный %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Кадет %s[%d]: %s", sendername, playerid, result); } else {
					format(string, sizeof(string), "Кадет %s[%d]: %s", sendername, playerid, result);
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (togdep[playerid] != 0) continue;
					if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pMember] == 4) {
						SendClientMessage(i, 0xCD6090ff, string);
					}
				}
				printf("%s", string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 2) { format(string, sizeof(string), "Директор ФБР %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Зам.Директора %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Спец. Агент %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Старший агент %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Агент %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Стажер %s[%d]: %s", sendername, playerid, result); } else {
					format(string, sizeof(string), "Стажер %s[%d]: %s", sendername, playerid, result);
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (togdep[playerid] != 0) continue;
					if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pMember] == 4) {
						SendClientMessage(i, 0xCD6090ff, string);
					}
				}
				printf("%s", string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
				if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Рядовой %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Сержант %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Лейтенант  %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Капитан %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Майор %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 3) { format(string, sizeof(string), "Генерал %s: %s", sendername, result); } else {
					format(string, sizeof(string), "Рядовой %s[%d]: %s", sendername, playerid, result);
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (togdep[playerid] != 0) continue;
					if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pMember] == 4) {
						SendClientMessage(i, 0xCD6090ff, string);
					}
				}
				printf("%s", string);
				return true;
			}
			else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
				if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 4) { format(string, sizeof(string), "Министр здравоохранения %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Зам.Министра здравоохранения %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Глав.врач %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Спасатель %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Реаниматор %s[%d]: %s", sendername, playerid, result); } else if (PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Фельдшер %s[%d]: %s", sendername, playerid, result); } else {
					format(string, sizeof(string), "Фельдшер %s[%d]: %s", sendername, playerid, result);
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (togdep[playerid] != 0) continue;
					if (PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3 || PlayerInfo[i][pLeader] == 4 || PlayerInfo[i][pMember] == 4) {
						SendClientMessage(i, 0xCD6090ff, string);
					}
				}
				printf("%s", string);
				return true;
			}
			else {
				error(playerid, " Вам не доступна эта команда.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "YourWorld: (/su)spect [id/nickname] [состав преступления]");
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) return error(playerid, "  Игрока нет на сервере.");
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "YourWorld: (/su)spect [playerid/PartOfName] [crime]");
				if (PlayerInfo[giveplayerid][pLevel] < 1) return error(playerid, " Нельяз дать розыск игроку у которого нету 1 уровень.");
				if (PlayerInfo[giveplayerid][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "YourWorld: Игрок уже находится в заключении.");
				if (IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, " Вы не можете обвинить законника");
				if (PlayerInfo[giveplayerid][pWanted] >= 6) return error(playerid, " Этот игрок уже в максимально высоком розыске.");
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3) {
					PlayerInfo[giveplayerid][pWanted] += 1;
					format(string, sizeof(string), "Текущий уровень розыска: %d.Повышен законником:%s[%d].Причина: %s.", PlayerInfo[giveplayerid][pWanted], sendername, playerid, result);
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "Вы повысили уровень розыска игрока %s. Причина: %s.", giveplayer, result);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Текущий уровень розыска %s: %d.", giveplayer, PlayerInfo[giveplayerid][pWanted]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "%s", (result));
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWanted]);
				} else {
					error(playerid, "  Вы не законник.");
					return true;
				}
			}
		}
		return true;
	}
	//----------------------------------[LOCK]-----------------------------------------------
	if (strcmp(cmd, "/lock", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new carid;
			if (PlayerInfo[playerid][pPhousekey] == 0) {
				if (HireCar[playerid] == 299) return error(playerid, " У вас нет автомобиля.");
			}
			carid = PlayerInfo[playerid][pPhousekey] + 1;
			if (HireCar[playerid] != 299 && !SwitchKey[playerid]) {
				carid = HireCar[playerid];
			}
			new lockstatus = gCarLock[carid];
			new Float:cx, Float:cy, Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus) {
				case 0 :  {
					if (HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 0) return error(playerid, " У вас нет автомобиля");
					if (HireCar[playerid] == carid && !SwitchKey[playerid]) {
						GameTextForPlayer(playerid, "~w~CЏOPOмм•• –AЋ…мA ~r~€AKP‘ЏA", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCarHome(carid);
					} else if (PlayerInfo[playerid][pPhousekey] == carid - 1) {
						GameTextForPlayer(playerid, "~w~ѓO–AЋм•• –AЋ…мA ~r~€AKP‘ЏA", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCarHome(carid);
						return true;
					}
				}
				case 1 :  {
					if (HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255) return error(playerid, " У вас нет автомобиля");
					if (HireCar[playerid] == carid && !SwitchKey[playerid]) {
						GameTextForPlayer(playerid, "~w~CЏOPOмм•• –AЋ…мA ~g~OЏKP‘ЏA", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCarHome(carid);
					}
					if (PlayerInfo[playerid][pPhousekey] == carid - 1) {
						GameTextForPlayer(playerid, "~w~ѓO–AЋм•• –AЋ…мA ~g~OЏKP‘ЏA", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCarHome(carid);
						return true;
					}
				}
				default:  {
					SendClientMessage(playerid, COLOR_GRAD2, "Ошибка");
				}
			}
			if (carid == 256) {
				error(playerid, " У вас нет автомобиля.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/open", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) {
					if (PlayerInfo[playerid][pPhousekey] == i) {
						if (HouseInfo[i][hLock] == 1) {
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~DOOR ~g~OPEN", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if (HouseInfo[i][hLock] == 0) {
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~DOOR ~r~CLOSED", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					} else {
						GameTextForPlayer(playerid, "~r~Y BAC NET KLY4A", 5000, 6);
						return true;
					}
				}
			}
			for (new i = 0; i < sizeof(BizzInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ])) {
					if (PlayerInfo[playerid][pPbiskey] == i) {
						if (BizzInfo[i][bLocked] == 1) {
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~DOOR BIZ ~g~OPEN", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if (BizzInfo[i][bLocked] == 0) {
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~DOOR BIZ ~r~CLOSED", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					} else {
						GameTextForPlayer(playerid, "~r~Y TEBA NET KLY4A", 5000, 6);
						return true;
					}
				}
			}
			for (new i = 0; i < sizeof(SBizzInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) {
					if (PlayerInfo[playerid][pPbiskey] == i + 100) {
						if (SBizzInfo[i][sbLocked] == 1) {
							SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~g~OPEN", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if (SBizzInfo[i][sbLocked] == 0) {
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~r~CLOSED", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					} else {
						GameTextForPlayer(playerid, "~r~Y TEBA NET KLY4A", 5000, 6);
						return true;
					}
				}
			}
		}

		return true;
	}
	//=====================================[Bank System]============================
	if (strcmp(cmd, "/withdraw", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 3.0, 2309.0405, -13.8050, 26.7422)) return error(playerid, " Вы не находитесь в банке");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /withdraw [сумма]");
				format(string, sizeof(string), "* У вас %d$ на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return true;
			}
			new cashdeposit = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /withdraw [сумма]");
				format(string, sizeof(string), " У вас %d$ на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return true;
			}
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1) return SendClientMessage(playerid, COLOR_RED, "У вас нет столько денег.");
			ConsumingMoney[playerid] = 1;
			GivePlayerBablo(playerid, cashdeposit);
			PlayerInfo[playerid][pAccount] = PlayerInfo[playerid][pAccount] - cashdeposit;
			format(string, sizeof(string), " Вы сняли %d$ с вашего счета в банке, остаток: %d$ ", cashdeposit, PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/bank", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 20.0, 2309.0405, -13.8050, 26.7422)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в банке.");
			ShowPlayerDialog(playerid, BANK_SYSTEM, DIALOG_STYLE_LIST, "{FFFFFF}Меню банка", "Положить деньги на счет\nСнять деньги со счета\nБаланс\nПеревести деньги", "Выбрать", "Отмена");
			return true;
		}
	}
	if (strcmp(cmd, "/banks", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 20.0, 2309.0405, -13.8050, 26.7422)) return error(playerid, " Вы не находитесь в банке");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bank [сумма]");
				format(string, sizeof(string), "Вы имеете %d$ на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return true;
			}
			new cashdeposit = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bank [сумма]");
				format(string, sizeof(string), "Вы имеете %d$ на счету.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return true;
			}
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 0) return error(playerid, " У Вас нет данной суммы денег");
			GivePlayerBablo(playerid, -cashdeposit);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount] = cashdeposit + PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___________ Статистика счета ___________|");
			format(string, sizeof(string), "Старый баланс: {00C0FF}%d$", curfunds);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Депозит: {00C0FF}%d$", cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			format(string, sizeof(string), "Новый баланс: {00C0FF}%d$", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/balance", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 3.0, 2309.0405, -13.8050, 26.7422)) return SendClientMessage(playerid, COLOR_WHITE, "Вы не находитесь в банке");
			format(string, sizeof(string), "Вы имеете %d$ на счету.", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return true;
	}
	if (strcmp(cmd, "/dice", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new dice = random(6) + 1;
			if (PlayerInfo[playerid][pDice] == 1) {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " %s бросил игральные кости. Выпало %d", sendername, dice);
				ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR, TEAM_GREEN_COLOR, TEAM_GREEN_COLOR, TEAM_GREEN_COLOR, TEAM_GREEN_COLOR);
			} else {
				error(playerid, " У вас нет костей");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/transf", true) == 0 || strcmp(cmd, "/wiretransf", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вам нужен как минимум 2 уровень для использования терминала.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /transfer [id] [сумма]");
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /transfer [id] [сумма]");
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername)); {
						if (moneys > PlayerInfo[playerid][pAccount]) return error(playerid, " У вас нету данного количества денежных средств."); //обновить
						if (strval(tmp) < 1) return error(playerid, " Минимальная сумма должна быть не меньше 1."); //обновить
						PlayerInfo[playerid][pAccount] -= moneys;
						PlayerInfo[giveplayerid][pAccount] += moneys;
						format(string, sizeof(string), "Вы перевели %d$ на счет %s's ", moneys, giveplayer, giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "Вы получили %d$  на свой счет от %s", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						printf("%s", string);
						PayLog(string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
				}
			} else {
				format(string, sizeof(string), "%d неактивен.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/drace", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 3) {
			if (EndingderbiRound == 0) return SendClientMessage(playerid, COLOR_WHITE, " Дерби Гонка уже начата!");
			format(string, sizeof(string), "::: Внимание! Дерби гонки начнуться через 5 минут.Регистрация у стадиона Сан Фиеро. :::");
			OOCOff(COLOR_YELLOW2, string);
			EndingderbiRound = 0;
			DerbiStartGonkatwo = 180;
		}
		return 1;
	}
	if (strcmp(cmdtext, "/radio", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			ShowPlayerDialog(playerid, 2112, DIALOG_STYLE_LIST, "Радиоприёмник", "YourWorld-FM\nZaycev-FM [R'n'B]\nZaycev-FM [Club]\nZaycev-FM [Pop]\nRecord\nПиратская Станция\nClub-FM\nDubStep-FM\nGop-FM \nВыключить радиоприёмник", "Выбрать", "Закрыть");
		}
		return true;
	}
	if (strcmp(cmdtext, "/takemoney", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 3.0, 421.9963, 2536.3813, 10.0000)) return error(playerid, " Вы должны находиться в убежище карманников.");
			if (keyss[playerid] != 1) return true;
			new rand = random(100000);
			rand += 200000;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			error(playerid, "Временно не доступно,идет доработка");
			keyss[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			format(string, sizeof(string), "%s получил %d за ограбление банка", sendername, rand);
			print(string);
		}
		return true;
	}
	if (strcmp(cmdtext, "/unleader", true) == 0) {
		if (!IsPlayerConnected(playerid)) return true;
		if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Нет прав на использование команды.");
		ShowPlayerDialog(playerid, 531, 1, "UnLeader", "Введите ник игрока для снятия его с поста лидера:", "Принять", "Отмена");
	}
	if (strcmp(cmdtext, "/pass", true) == 0) {
		if (!IsPlayerConnected(playerid)) return true;
		if (!IsPlayerInRangeOfPoint(playerid, 2.0, 1413.71, -1013.96, 0.78)) return error(playerid, " Вы не у камеры хранения.");
		if (banksistem == 0) return error(playerid, " Нужно выключить систему електропитания,для подборки пароля.");
		SendClientMessage(playerid, COLOR_GREEN, "Вы начали подбирать пароль,не отходите от двери.");
		vzlomvopros[playerid] = 1000;
		return true;
	}
	if (strcmp(cmdtext, "/electro", true) == 0) {
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1419.66, -1012.16, 8.0611)) {
			if (kusachki[playerid] != 1) return error(playerid, " У вас нет електронабора.");
			if (banksistem == 0) {
				banksistem = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Система защиты от влома хранилища отключена!");
				ApplyAnimation(playerid, "CAR_CHAT", "car_talkm_out", 4.1, 0, 1, 1, 1, 1);
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/buy", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInRangeOfPoint(playerid, 100, -30.875, -88.9609, 1004.53) || IsPlayerInRangeOfPoint(playerid, 100, 6.3856, -28.9698, 1003.5494) || IsPlayerInRangeOfPoint(playerid, 100, -23.4665, -55.6314, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 100, -22.0598, -138.6276, 1003.5469) || IsPlayerInRangeOfPoint(playerid, 100, 1.9338, -29.0129, 1003.5494)) {
				new stringZ[1000];
				format(stringZ, sizeof(stringZ), "\
			\n{ffdb58}Наручные Часы 180$\
			\n{ffdb58}Верёвка 100$\
			\n{ffdb58}Банковская Карта 300$\
			\n{ffdb58}Канистра Топлива 260$\
			\n{ffdb58}Игральные Кости 65$\
			\n{ffdb58}Фотоаппарат 550$\
			\n{ffdb58}Рыболовный Набор 500$\
			\n{ffdb58}Курица 10$\
			\n{ffdb58}Гамбургер 10$\
			\n{ffdb58}Пицца 10$\
			\n{ffdb58}Баночка 100$\
			\n{ffdb58}Отмычка 500$\
			\n{ffdb58}Електроприбор 3000$\
			\n{ffdb58}Набор для подбора паролей 5000$\
			");
				ShowPlayerDialog(playerid, 24, DIALOG_STYLE_LIST, "Магазин: 24/7", stringZ, "Ок", "Отмена");
			} else {
				error(playerid, " Вы не в супермаркете/магазине.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/sell", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 100, -30.875, -88.9609, 1004.53) || !IsPlayerInRangeOfPoint(playerid, 100, 6.3856, -28.9698, 1003.5494)) {
				error(playerid, " Вы не в супермаркете/магазине.");
				return true;
			}
			ShowPlayerDialog(playerid, 25, DIALOG_STYLE_LIST, "Продажа", "\
		\nРыба\
		", "Ок", "Отмена");
		}
		return true;
	}
	if (strcmp(cmd, "/buyhouse", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) && HouseInfo[i][hOwned] == 0) {
					if (PlayerInfo[playerid][pLevel] < HouseInfo[i][hLevel]) {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы должны быть как минимум %d уровня, чтобы купить это.", HouseInfo[i][hLevel]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					if (PlayerInfo[playerid][pPhousekey] != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) return error(playerid, " У вас есть дом.");
					if (GetPlayerBablo(playerid) > HouseInfo[i][hValue]) {
						PlayerInfo[playerid][pPhousekey] = i;
						HouseInfo[i][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[i][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerBablo(playerid, -HouseInfo[i][hValue]);
						PlayerPlayMusic(playerid);
						SetPlayerVirtualWorld(playerid, i + 250);
						SetPlayerInterior(playerid, HouseInfo[i][hInt]);
						SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
						PlayerInfo[playerid][pVirWorld] = i;
						GameTextForPlayer(playerid, "~w~Welcome to new Home", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Поздравляем с покупкой.");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Введите {FFFFFF}/help {FFFFFF}для помощи с командами дома.");
						UpdateHouse(i);
						OnPropUpdate();
						SavePlayer(playerid);
						return true;
					} else {
						error(playerid, " У Вас недостаточно денег для покупки этого дома.");
						return true;
					}
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/rentlodka", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerVehicleID(playerid) >= RentLodki[0] && GetPlayerVehicleID(playerid) <= RentLodki[1]) {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (SBizzInfo[14][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				if (GetPlayerBablo(playerid) < SBizzInfo[13][sbEntranceCost]) return error(playerid, " У вас недостаточно денег");
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованный транспорт.");
					return true;
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (HireCar[i] == GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Someone already rents this car.");
				}
				GivePlayerBablo(playerid, -SBizzInfo[14][sbEntranceCost]);
				if (SBizzInfo[14][sbMafia] > 0) {
					SBizzInfo[14][sbTill] += (SBizzInfo[14][sbEntranceCost] / 10 * 9);
					SBizzInfo[14][sbProducts]--;
					ObwyakInfo[SBizzInfo[14][sbMafia]][oGangMoney] += (SBizzInfo[14][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[14][sbTill] += SBizzInfo[14][sbEntranceCost];
					SBizzInfo[14][sbProducts]--;
				}
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Don't forget to ~r~/unrent~n~~g~/lock ~w~to lock your car.", hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/rentmoto", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerVehicleID(playerid) >= RentMoto[0] && GetPlayerVehicleID(playerid) <= RentMoto[1]) {
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (SBizzInfo[13][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				if (GetPlayerBablo(playerid) < SBizzInfo[13][sbEntranceCost]) return error(playerid, " У вас недостаточно денег");
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованный транспорт.");
					return true;
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (HireCar[i] == GetPlayerVehicleID(playerid)) return error(playerid, " Кто-то уже арендует этот автомобиль.");
				}
				GivePlayerBablo(playerid, -SBizzInfo[13][sbEntranceCost]);
				if (SBizzInfo[13][sbMafia] > 0) {
					SBizzInfo[13][sbTill] += (SBizzInfo[13][sbEntranceCost] / 10 * 9);
					SBizzInfo[13][sbProducts]--;
					ObwyakInfo[SBizzInfo[13][sbMafia]][oGangMoney] += (SBizzInfo[13][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[13][sbTill] += SBizzInfo[13][sbEntranceCost];
					SBizzInfo[13][sbProducts]--;
				}
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Don't forget to ~r~/unrent~n~~g~/lock ~w~to lock your car.", hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/rentcar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerVehicleID(playerid) >= Rent[0] && GetPlayerVehicleID(playerid) <= RentSF[1] && GetPlayerVehicleID(playerid) >= Rent[0] && GetPlayerVehicleID(playerid) <= Rent[1]) //все рент тачи
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (SBizzInfo[0][sbProducts] == 0) {
					RemovePlayerFromVehicle(playerid);
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				if (GetPlayerBablo(playerid) < SBizzInfo[0][sbEntranceCost]) return error(playerid, " У вас недостаточно денег");
				if (HireCar[playerid] != 299) {
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					RemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
					error(playerid, " У вас уже есть арендованный транспорт.");
					return true;
				}
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (!IsPlayerConnected(i)) continue;
					if (HireCar[i] == GetPlayerVehicleID(playerid)) return error(playerid, " Кто-то уже арендует этот автомобиль.");
				}
				GivePlayerBablo(playerid, -SBizzInfo[0][sbEntranceCost]);
				if (SBizzInfo[0][sbMafia] > 0) {
					SBizzInfo[0][sbTill] += (SBizzInfo[0][sbEntranceCost] / 10 * 9);
					SBizzInfo[0][sbProducts]--;
					ObwyakInfo[SBizzInfo[0][sbMafia]][oGangMoney] += (SBizzInfo[0][sbEntranceCost] / 10 * 1);
				} else {
					SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];
					SBizzInfo[0][sbProducts]--;
				}
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Don't forget to ~r~/unrent~n~~g~/lock ~w~to lock your car.", hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/hirecar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hirecar [key id]");
					return true;
				}
				new car = strval(tmp);
				HireCar[playerid] = car;
				format(string, sizeof(string), "Слепок ключа сделан можно закрыть автомобиль %d.", car);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /lock ");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/give", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if (!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give [название] [id игрока] [кол-во]");
				SendClientMessage(playerid, COLOR_GREY, "{33AA33}[Использование]{FFFFFF}: mats, drugs ");
				return true;
			}
			if (strcmp(x_nr, "drugs", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if (PlayerInfo[playerid][pJob] == 4) return error(playerid, " Не доступно.Вы можете продать наркотики командой /selldrugs..");
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give drugs [id игрока] [кол-во]");
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (IsACop(giveplayerid)) return error(playerid, " Нельзя передать законнику наркотические вещества.");
					if (giveplayerid != INVALID_PLAYER_ID) {
						new Float:x, Float:y, Float:z;
						GetPlayerPos(giveplayerid, x, y, z);
						if (!IsPlayerInRangeOfPoint(playerid, 5, x, y, z)) return error(playerid, " Этот игрок находится далеко от Вас.");
						tmp = strtok(cmdtext, idx);
						if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give наркотики [id игрока] [кол-во]");
						if (strval(tmp) < 0 || strval(tmp) > 999) return SendClientMessage(playerid, COLOR_RED, "Минимальное кол-во  0, Максимальное 999.");
						new dammount;
						dammount = strval(tmp);
						if (dammount > PlayerInfo[playerid][pDrugs]) { error(playerid, "  У вас нет столько наркотиков "); return true; }
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						PlayerInfo[playerid][pDrugs] -= dammount;
						PlayerInfo[giveplayerid][pDrugs] += dammount;
						if (PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s достал(a) что-то и передал(a) %s.", sendername, giveplayer); } else { format(string, sizeof(string), "%s достал(а) что-то и передал(а) %s.", sendername, giveplayer); }
						ProxDetector(10.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
				} else {
					error(playerid, " Этого человека нет в игре ");
					return true;
				}
			} else if (strcmp(x_nr, "mats", true) == 0) {
				new money;
				new para1;
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give mats [ид игрока] [кол-во]");
				money = strval(strtok(cmdtext, idx));
				if (!money) return SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give mats [ид игрока] [кол-во]");
				if (money > PlayerInfo[playerid][pMats]) return error(playerid, " У тебя нету столько материалов.");
				para1 = ReturnUser(tmp);
				if (IsPlayerConnected(para1)) {
					if (para1 == INVALID_PLAYER_ID) return true;
					if (IsACop(para1)) return error(playerid, " Нельзя передать законнику материалы.");
					new Float:x, Float:y, Float:z;
					GetPlayerPos(para1, x, y, z);
					if (!IsPlayerInRangeOfPoint(playerid, 5, x, y, z)) return error(playerid, " Этот игрок находится далеко от Вас.");
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats] - money;
					PlayerInfo[para1][pMats] = PlayerInfo[para1][pMats] + money;
					format(string, sizeof(string), "%s достал(а) что-то и передал(а) %s.", sendername, giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					format(string, sizeof(string), "%s передал(а) тебе %d материалов.", sendername, money);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
				}
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{33AA33}[Использование]{FFFFFF}: /give [название] [id игрока] [кол-во]");
				SendClientMessage(playerid, COLOR_GREY, "{33AA33}[Использование]{FFFFFF}: mats, drugs.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/givekey", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			new car;
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givekey [id]");
			giveplayerid = ReturnUser(tmp);
			if (HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 0) return error(playerid, " Вы не можете передать ключ,у вас его нет");
			else {
				if (HireCar[playerid] != 299 && SwitchKey[playerid] == 0) {
					car = HireCar[playerid];
					gCarLock[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				} else {
					car = PlayerInfo[playerid][pPhousekey] + 1;
				}
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (ProxDetectorS(5.0, playerid, giveplayerid)) {
						if (HireCar[giveplayerid] != 299) {
							gCarLock[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вы получили набор ключей от %s", sendername);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s передал вам ключи от автомобиля", giveplayer);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s вынимает набор ключей и передает их %s.", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					}
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/unrent", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (HireCar[playerid] != 299) {
				new idcar = GetPlayerVehicleID(playerid);
				if (idcar == HireCar[playerid]) {
					TogglePlayerControllable(playerid, 1);
				}
				SetVehicleToRespawn(HireCar[playerid]);
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				GameTextForPlayer(playerid, "~w~You no longer rent a car", 5000, 3);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/asellbiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /asellbiz [id бизнеса]");
			new h = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				BizzInfo[h][bLocked] = 1;
				BizzInfo[h][bOwned] = 0;
				strmid(BizzInfo[h][bOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~You have sold the Business", 10000, 3);
				UpdateBizz(h);
				OnPropUpdate();
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/asellsbiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /asellsbiz [id]");
			new h = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				SBizzInfo[h][sbLocked] = 1;
				SBizzInfo[h][sbOwned] = 0;
				strmid(SBizzInfo[h][sbOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~You have sold the Business", 10000, 3);
				UpdateSBizz(h);
				OnPropUpdate();
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/asellhouse", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /asellhouse [id]");
			new house = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4) {
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 479;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, "~w~You have sold this property", 10000, 3);
				UpdateHouse(house);
				OnPropUpdate();
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/sellhome", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				GetPlayerName(playerid, playername, sizeof(playername));
				if (PlayerInfo[playerid][pPhousekey] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Вам не принадлежит дом.");
				if (PlayerInfo[playerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "   Вы женаты и поэтому не можете продать свой дом.");
				if (PlayerInfo[playerid][pPhousekey] != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellhome [id] [сумма]");
					giveplayerid = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellhome [id] [сумма]");
					new money = strval(tmp);
					if (!IsPlayerConnected(giveplayerid)) return error(playerid, " Нет такого игрока");
					if (GetPlayerBablo(giveplayerid) < money) return error(playerid, " У него нет столько денег");
					if (PlayerInfo[giveplayerid][pPhousekey] != 0 || PlayerInfo[giveplayerid][pFlatKey] != 0) return error(playerid, " У этого игрока уже есть дом");
					if (HouseInfo[playerid][hLevel] > PlayerInfo[giveplayerid][pLevel]) return error(playerid, " Уровень игрока не позволяет ему купить ваш дом.");
					if (money < HouseInfo[i][hValue]) return error(playerid, " Минимальная цена, должна составлять цену вашего свободного дома.");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					prodid[giveplayerid] = playerid;
					prodhouse[giveplayerid] = PlayerInfo[playerid][pPhousekey];
					prodmoney[giveplayerid] = money;
					format(string, sizeof(string), "Вы предложили купить дом %s за %d$", giveplayer, money);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s предложил вам купить его дом за %d$ (/accept house)", sendername, money);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					return 1;
				} else {
					error(playerid, " Вы бомж.");
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/sellflat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			for (new i = 0; i < sizeof(FlatsInfo); i++) {
				GetPlayerName(playerid, playername, sizeof(playername));
				if (PlayerInfo[playerid][pFlatKey] == 0) return error(playerid, " Вам не принадлежит квартира.");
				if (PlayerInfo[playerid][pMarried] > 0) return error(playerid, " Вы женаты и поэтому не можете продать свою квартиру.");
				if (PlayerInfo[playerid][pFlatKey] != 0 && strcmp(playername, FlatsInfo[PlayerInfo[playerid][pFlatKey]][fOwner], true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellflat[id] [сумма]");
					giveplayerid = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellflat [id] [сумма]");
					new moneyss = strval(tmp);
					if (!IsPlayerConnected(giveplayerid)) return error(playerid, "Нет такого игрока");
					if (GetPlayerBablo(giveplayerid) < moneyss) return error(playerid, "У него нет столько денег");
					if (PlayerInfo[giveplayerid][pPhousekey] != 0 || PlayerInfo[giveplayerid][pFlatKey] != 0) return error(playerid, " У этого игрока уже есть дом/квартира");
					if (FlatsInfo[playerid][fLevel] > PlayerInfo[giveplayerid][pLevel]) return error(playerid, " Уровень игрока не позволяет ему купить вашe квартиру.");
					if (moneyss < FlatsInfo[i][fValue]) return error(playerid, " Минимальная цена, должна составлять цену вашей свободной квартиры.");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					prodidf[giveplayerid] = playerid;
					prodhousef[giveplayerid] = PlayerInfo[playerid][pFlatKey];
					prodmoneyf[giveplayerid] = moneyss;
					format(string, sizeof(string), "Вы предложили купить квартиру %s за %d$", giveplayer, moneyss);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), " %s предложил вам купить его квартиру за %d$ (/accept flat)", sendername, moneyss);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					return 1;
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "Вы бомж.");
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/asellflat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /asellflat [id]");
			new flat = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] == 6) {
				FlatsInfo[flat][fLock] = 1;
				FlatsInfo[flat][fOwned] = 0;
				strmid(FlatsInfo[flat][fOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				UpdateFlat(flat);
				OnPropUpdate();
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/sellhouse", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pPhousekey] == 0) return error(playerid, " Вы не владелец дома.");
			if (PlayerInfo[playerid][pMarried] > 0) return error(playerid, " Вы женаты и не можете продать дом.");
			if (PlayerInfo[playerid][pPhousekey] != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
				new house = PlayerInfo[playerid][pPhousekey];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 479;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				HouseInfo[house][hKoleso] = 0;
				HouseInfo[house][hBamper] = 0;
				HouseInfo[house][hBamper2] = 0;
				HouseInfo[house][hNitro] = 0;
				HouseInfo[house][hGidravlika] = 0;
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerBablo(playerid, HouseInfo[house][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = 0;
				if (PlayerInfo[playerid][pLocal] == house) {
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				OnPropUpdate();
				UpdateHouse(house);
				SavePlayer(playerid);
				return true;
			} else {
				error(playerid, " Вы не владелец дома.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/houseupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /houseupgrade [номер предмета]");
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}1: Аптечка 50000$");
					SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}2: Броня 6000$");
					return true;
				}
				new item = strval(tmp);
				switch (item) {
					case 1 :  {
						if (HouseInfo[house][hHel] == 1) return error(playerid, " В вашем доме установленна аптечка.");
						if (SBizzInfo[6][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
						if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вам нужен как минимум 2 уровень, чтобы купить это.");
						if (GetPlayerBablo(playerid) < 10000) return error(playerid, " У вас нету данной суммы денег, чтобы купить это");
						HouseInfo[house][hHel] = 1;
						GivePlayerBablo(playerid, -5000);
						if (SBizzInfo[6][sbMafia] > 0) {
							SBizzInfo[6][sbTill] += 4500;
							SBizzInfo[6][sbProducts]--;
							ObwyakInfo[SBizzInfo[6][sbMafia]][oGangMoney] += 500;
						} else {
							SBizzInfo[6][sbTill] += 5000;
							SBizzInfo[6][sbProducts]--;
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Теперь вы можете лечить себя в доме, введите /heal.");
					}
					case 2 :  {
						if (HouseInfo[house][hArm] == 1) return error(playerid, " В вашем доме установленна броня.");
						if (!IsACop(playerid)) return error(playerid, " Вы не законник.");
						if (SBizzInfo[6][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
						if (PlayerInfo[playerid][pLevel] < 2) return error(playerid, " Вам нужен как минимум 2 уровень, чтобы купить это ");
						if (GetPlayerBablo(playerid) < 10000) return error(playerid, " У вас не хватит денег чтобы купить это");
						HouseInfo[house][hArm] = 1;
						GivePlayerBablo(playerid, -6000);
						if (SBizzInfo[6][sbMafia] > 0) {
							SBizzInfo[6][sbTill] += 5400;
							SBizzInfo[6][sbProducts]--;
							ObwyakInfo[SBizzInfo[6][sbMafia]][oGangMoney] += 600;
						} else {
							SBizzInfo[6][sbTill] += 6000;
							SBizzInfo[6][sbProducts]--;
						}
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_WHITE, " Вы можете взять бронежилет в доме, введите /heal.");
					}
				}
				OnPropUpdate();
				return true;
			} else {
				error(playerid, " Вы не владелец дома.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/maskeds", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 2) {
				SendClientMessage(playerid, COLOR_YELLOW, "Замаскированные игроки онлайн:");
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i)) {
						if (PlayerInfo[i][pMask] == 1) {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "** ID: %d ** %s", i, sendername);
							SendClientMessage(playerid, COLOR_GRAD2, string);
						}
					}
				}
			}
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/masked", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new member = PlayerInfo[playerid][pMember];
			new leader = PlayerInfo[playerid][pLeader];
			if (member == 8 || leader == 8) {
				ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Hitman Mask, кликните повторно чтобы снять.", "Переодется под Медика\nПереодется под члена FBI\nПереодется под члена Police\nПереодется под члена Nation Guard\nПереодется под члена Grov Street\nПереодется под члена Russian Mafia\nПереодется под члена Yakuza\nПереодется под члена El Coronos\nПереодется под члена Ballas Gang\nПереодется под члена San Fierro Rifa\nПереодется под гражданского\n", "ENTER", "CANCEL");
				return true;
			}
		}
	}
	if (strcmp(cmd, "/mask", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, " Подсказка: /mask [id]");
				giveplayerid = ReturnUser(tmp);
				if (Masked[playerid] == 1) {
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) continue;
						ShowPlayerNameTagForPlayer(i, playerid, 1);
					}
					Masked[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, " Вы снимаете маскировочный костюм");
					return true;
				} else if (Masked[playerid] == 0) {
					if (ProxDetectorS(30.0, playerid, giveplayerid)) {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), " Bы использовали маск-костюм и стали выглядеть на 99.9% как %s", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						new mask = GetPlayerSkin(giveplayerid);
						SetPlayerSkin(playerid, mask);
						for (new i = 0; i < GetMaxPlayers(); i++) {
							if (!IsPlayerConnected(i)) continue;
							ShowPlayerNameTagForPlayer(i, playerid, 0);
						}
						Masked[playerid] = 1;
						return true;
					} else {
						error(playerid, " Вы слишком далеко чтобы разглядеть детали одежды");
						return true;
					}
				}
			} else {
				error(playerid, " У вас нет маскировочного костюма");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmdtext, "/kpk", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			ShowPlayerDialog(playerid, 3000, DIALOG_STYLE_LIST, "КПК", "{ffdb58}Управление Аккаунтом\n{ffdb58}Онлайн\n{ffdb58}Навигация\n{ffdb58}Информация\n{ffdb58}Сменить пароль\n{ffdb58}Безопасность \n{ffdb58}Информация для новичков", "Выбор", "Отмена");
			format(string, sizeof(string), "%s достал(а) свой карманный компьютер.(/kpk)", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			return true;
		}
		return true;
	}
	if (strcmp(cmdtext, "/donat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			ShowPlayerDialog(playerid, 32350, DIALOG_STYLE_MSGBOX, "Платные Услуги", "{ffdb58}Донат на сервере временно {ff3300}отключён{ffdb58}!\n{ffdb58}Система будет активна при онлайне {ffffff}70+{ffdb58}.", "Понятно", "");
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/stats", true) == 0) {
		SendClientMessage(playerid, COLOR_WHITE, "{ffffff}Неизвестная команда. Возможно вы имели виду - {33aa33}/kpk{ffffff}.");
		return 1;
	}
	if (strcmp(cmd, "/donate", true) == 0) {
		SendClientMessage(playerid, COLOR_WHITE, "{ffffff}Неизвестная команда. Возможно вы имели виду - {33aa33}/donat{ffffff}.");
		return 1;
	}
	if (strcmp(cmd, "/mm", true) == 0) {
		SendClientMessage(playerid, COLOR_WHITE, "{ffffff}Неизвестная команда. Возможно вы имели виду - {33aa33}/kpk{ffffff}.");
		return 1;
	}
	if (strcmp(cmd, "/ooc", true) == 0) {
		SendClientMessage(playerid, COLOR_WHITE, "{ffffff}Неизвестная команда. Возможно вы имели виду - {33aa33}/o{ffffff}.");
		return 1;
	}
	if (strcmp(cmd, "/showpm", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) return error(playerid, " Нет прав на использование этой команды.");
			if (!AdminPm[playerid]) {
				AdminPm[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "Вы проссматриваете личные сообщения");
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "Спек ПМ: %s проссматривает личные сообщения.", adminname);
				ABroadCast(COLOR_YELLOW, string, 1);
			} else if (AdminPm[playerid]) {
				AdminPm[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "Вы прекратили проссмотр личных сообщений");
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "Спек ПМ: %s прекратил просмотр личных сообщений.", adminname);
				ABroadCast(COLOR_YELLOW, string, 1);
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/pm", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!IsPlayerConnected(playerid)) return true;
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /pm [id/player name] [text]");
		new tmpp = ReturnUser(tmp);
		if (!IsPlayerConnected(tmpp)) return error(playerid, " Данный игрок отсутствует на сервере.");
		if (tmpp == INVALID_PLAYER_ID) return error(playerid, " Данный игрок отсутствует на сервере.");
		if (PlayerInfo[playerid][pAdmin] < 1 && HidePM[tmpp] >= 1) return error(playerid, " У этого игрока заблокировано ПМ.");
		if (tmpp == playerid) return error(playerid, " Нельзя написать личное сообщение самому себе.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /pm [id/player name] [text]");
		if (PlayerInfo[playerid][pLeader] < 1 && PlayerInfo[playerid][pAdmin] < 1 && (GetPVarInt(playerid, "FloodPm") > gettime())) return error(playerid, " Писать личное сообщение можно раз в 10 секунд.");
		if (PlayerInfo[playerid][pLevel] < 1) {
			SendClientMessage(playerid, COLOR_WHITE, "Для отправки личного сообщения, вам необходимо иметь {33aa33}4{ffffff} респектов.");
			format(string, sizeof(string), "Сейчас: {33aa33}%s{ffffff} респектов.", PlayerInfo[playerid][pExp]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if (PlayerInfo[playerid][pMuted] == 1) return PlayerMuteMessage(playerid);
		new sendername2[255];
		GetPlayerName(tmpp, sendername2, sizeof(sendername2));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Спек ПМ: %s к %s: %s", sendername, sendername2, result);
		SendPmMessage(COLOR_YELLOW, string);
		format(string, sizeof(string), "< ПМ от %s[%d]: %s ", sendername, playerid, result);
		SendClientMessage(tmpp, COLOR_YELLOW, string);
		format(string, sizeof(string), "> ПМ к %s[%d]: %s ", sendername2, tmpp, result);
		SendClientMessage(playerid, 0xFFBB00AA, string);
		PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		PlayerPlaySound(tmpp, 1084, 0.0, 0.0, 0.0);
		GivePlayerBablo(playerid, -30);
		if (SBizzInfo[2][sbMafia] > 0) {
			SBizzInfo[2][sbTill] += 27;
			ObwyakInfo[SBizzInfo[2][sbMafia]][oGangMoney] += 3;
		} else { SBizzInfo[2][sbTill] += 30; }
		SetPVarInt(playerid, "FloodPm", gettime() + 10);
		printf("PM от %s к %s:", sendername, sendername2, result);
		return true;
	}
	if (strcmp(cmd, "/time", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pClock] < 1) return error(playerid, " У вас нет наручных часов. Вы можете приобрести их в магазинах 24/7");
			if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
				ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 0, 0, 0, 0, 0);
			}
			new mtext[20];
			new year, month, day;
			getdate(year, month, day);
			if (month == 1) { mtext = "Jan"; } else if (month == 2) { mtext = "Feb"; } else if (month == 3) { mtext = "Mar"; } else if (month == 4) { mtext = "Apr"; } else if (month == 5) { mtext = "May"; } else if (month == 6) { mtext = "Jun"; } else if (month == 7) { mtext = "Jul"; } else if (month == 8) { mtext = "Aug"; } else if (month == 9) { mtext = "Sep"; } else if (month == 10) { mtext = "Oct"; } else if (month == 11) { mtext = "Nov"; } else if (month == 12) { mtext = "Dec"; }
			new hour, minuite, second;
			gettime(hour, minuite, second);
			FixHour(hour);
			hour = shifthour;
			if (minuite < 10) {
				if (PlayerInfo[playerid][pJailTime] > 0) {
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime] - 10);
				} else {
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
				}
			} else {
				if (PlayerInfo[playerid][pJailTime] > 0) {
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime] - 10);
				} else {
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return 1;
	}
	if (strcmp(cmd, "/house", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 4) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /house [номер дома]");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid, HouseInfo[housenum][hInt]);
				SetPlayerPos(playerid, HouseInfo[housenum][hExitx], HouseInfo[housenum][hExity], HouseInfo[housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInt];
				PlayerInfo[playerid][pLocal] = housenum;
				PlayerInfo[playerid][pVirWorld] = housenum;
				SetPlayerVirtualWorld(playerid, 250 + housenum);
				HouseEntered[playerid] = housenum;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/tphouse", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 5) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /tphouse [номер дома]");
				new housenum = strval(tmp);
				SetPlayerPos(playerid, HouseInfo[housenum][hEntrancex], HouseInfo[housenum][hEntrancey], HouseInfo[housenum][hEntrancez]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/tpbiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /tpbiz [номер бизнеса]");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, BizzInfo[housenum][bEntranceX], BizzInfo[housenum][bEntranceY], BizzInfo[housenum][bEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/tpsbiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sbiz [номер бизнеса]");
				new housenum = strval(tmp);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, SBizzInfo[housenum][sbEntranceX], SBizzInfo[housenum][sbEntranceY], SBizzInfo[housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/edithousecar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /edithousecar [id]");
			new proplev = strval(tmp);
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) {
					HouseInfo[i][hVec] = proplev;
					format(string, sizeof(string), "Домашний автомобиль: %d теперь %d", i, HouseInfo[i][hVec]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
			OnPropUpdate();
		}
		return true;
	}
	if (strcmp(cmd, "/edit", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /edit [название] [значение] (использовать для домов и бизнесов)");
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Доступные названия: level , price , funds , products");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /edit [ник] [значение]");
			new proplev = strval(tmp);
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) {
					format(string, sizeof(string), "Дом: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if (proplev > 0) {
						if (strcmp(x_job, "level", true) == 0) {
							HouseInfo[i][hLevel] = proplev;
							OnPropUpdate();
							UpdateHouse(i);
						} else if (strcmp(x_job, "price", true) == 0) {
							HouseInfo[i][hValue] = proplev;
							OnPropUpdate();
							UpdateHouse(i);
						}
					}
				}
			}
			for (new i = 0; i < sizeof(BizzInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])) {
					format(string, sizeof(string), "Biz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if (proplev > 0) {
						if (strcmp(x_job, "level", true) == 0) {
							BizzInfo[i][bLevelNeeded] = proplev;
						} else if (strcmp(x_job, "price", true) == 0) {
							BizzInfo[i][bBuyPrice] = proplev;
						} else if (strcmp(x_job, "funds", true) == 0) {
							BizzInfo[i][bTill] = proplev;
						} else if (strcmp(x_job, "products", true) == 0) {
							BizzInfo[i][bProducts] = proplev;
						}
					}
				}
			}
			for (new i = 0; i < sizeof(SBizzInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 3, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) {
					format(string, sizeof(string), "Бизнес: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if (proplev > 0) {
						if (strcmp(x_job, "level", true) == 0) {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						} else if (strcmp(x_job, "price", true) == 0) {
							SBizzInfo[i][sbBuyPrice] = proplev;
						} else if (strcmp(x_job, "funds", true) == 0) {
							SBizzInfo[i][sbTill] = proplev;
						} else if (strcmp(x_job, "products", true) == 0) {
							SBizzInfo[i][sbProducts] = proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "Вы приспособились: %s.", x_job);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			OnPropUpdate();
		}
		return true;
	}
	if (strcmp(cmd, "/load", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInAnyVehicle(playerid)) {
				new tmpcar = GetPlayerVehicleID(playerid);
				if (IsATruck(tmpcar)) {
					format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				} else {
					GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
					return true;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/buyprods", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new tmpcar = GetPlayerVehicleID(playerid);
			new compcost = 50;
			if (!IsPlayerInAnyVehicle(playerid)) return error(playerid, " Вы не в автомобиле ");
			if (IsPlayerInRangeOfPoint(playerid, 60.0, 2787.8, -2436.3, 13.7) || IsPlayerInRangeOfPoint(playerid, 60.0, -1740.3734, 163.6082, 3.5547) || IsPlayerInRangeOfPoint(playerid, 60.0, 2348.0955, 2767.8113, 10.8203)) {
				if (IsATruck(tmpcar)) {
					if (PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity]) {
						new amount;
						tmp = strtok(cmdtext, idx);
						if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /buyprods [значение]");
						amount = strval(tmp);
						if (amount < 1 || amount > 100) { error(playerid, "Нельзя купить менее одного компонента и не более 100."); return true; }
						new check = PlayerHaul[tmpcar][pLoad] + amount;
						if (check > PlayerHaul[tmpcar][pCapasity]) {
							format(string, sizeof(string), "{FFFFFF}Лимит груза компонентов для грузовика %d, вы перегружены %d.", PlayerHaul[tmpcar][pCapasity], PlayerHaul[tmpcar][pLoad]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							return true;
						}
						new cost = amount * compcost;
						if (GetPlayerBablo(playerid) >= cost) {
							PlayerHaul[tmpcar][pLoad] += amount;
							format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{FFFFFF}Вы купили %d единиц продукции за %d$.", amount, cost);
							SendClientMessage(playerid, COLOR_WHITE, string);
							GivePlayerBablo(playerid, -cost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return true;
						} else {
							format(string, sizeof(string), "{FFFFFF}Вы предоставляете %d единиц продукции на цену %d$.", amount, cost);
							SendClientMessage(playerid, COLOR_WHITE, string);
							return true;
						}
					} else {
						format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
				} else {
					error(playerid, " Этот транспорт не может перевозить продукты.");
					return true;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/sellprods", true) == 0) {
		new cashmade;
		new tmpcar;
		if (IsPlayerConnected(playerid)) {
			tmpcar = GetPlayerVehicleID(playerid);
			if (!IsATruck(tmpcar)) return GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
			if (PlayerHaul[tmpcar][pLoad] == 0) {
				GameTextForPlayer(playerid, "~r~Truck is empty, return to the house", 5000, 1);
				format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			for (new i = 0; i < sizeof(BizzInfo); i++) {
				if (IsPlayerInRangeOfPoint(playerid, 10, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])) {
					for (new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--) {
						if (BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts]) {
							GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
							format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return true;
						}
						if (BizzInfo[i][bPriceProd] > BizzInfo[i][bTill]) {
							GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
							format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return true;
						}
						PlayerHaul[tmpcar][pLoad]--;
						BizzInfo[i][bProducts]++;
						cashmade = ((PlayerHaul[tmpcar][pCapasity]) - (PlayerHaul[tmpcar][pLoad])) * BizzInfo[i][bPriceProd];
						ConsumingMoney[playerid] = 1;
						BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
						if (PlayerHaul[tmpcar][pLoad] == 0) {
							GameTextForPlayer(playerid, "~r~Truck is empty, return to the house", 5000, 1);
							format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
							GivePlayerBablo(playerid, cashmade);
							SendClientMessage(playerid, COLOR_WHITE, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return true;
						}
					}
					OnPropUpdate();
					return true;
				}
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 10, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) {
				for (new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--) {
					if (SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts]) {
						GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
						format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					if (SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill]) {
						GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
						format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					PlayerHaul[tmpcar][pLoad]--;
					SBizzInfo[i][sbProducts]++;
					cashmade = (PlayerHaul[tmpcar][pCapasity] - PlayerHaul[tmpcar][pLoad]) * SBizzInfo[i][sbPriceProd];
					ConsumingMoney[playerid] = 1;
					SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
					if (PlayerHaul[tmpcar][pLoad] == 0) {
						GameTextForPlayer(playerid, "~r~Truck is empty, return to the house", 5000, 1);
						format(string, sizeof(string), "{FFFFFF}Прибыль %d$", cashmade);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{00C0FF}Продукты: %d/%d", PlayerHaul[tmpcar][pLoad], PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						GivePlayerBablo(playerid, SBizzInfo[i][sbPriceProd]);
						return true;
					}
				}
				OnPropUpdate();
				return true;
			}
		}
		GameTextForPlayer(playerid, "~r~To Far From A Business", 5000, 1);
		return true;
	}
	if (strcmp(cmd, "/home", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pPhousekey] != 0) {
				if (CP[playerid] > 0 || che[playerid] > 0 || checkk[playerid] > 0 || ChekPoint[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Не доступно в данный момент");
				SetPlayerCheckpoint(playerid, HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~w~Waypoint set ~r~Home", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			} else {
				GameTextForPlayer(playerid, "~w~You are homeless", 5000, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fixcar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (GetPlayerBablo(playerid) < 1000) return error(playerid, " У вас недостаточно денег.");
			if (house != 0 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0) {
				if (SBizzInfo[8][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				if (CarRespawn(house + 1)) {
					GameTextForPlayer(playerid, "~w~Car~n~~g~Repaired~n~~r~-1000$", 5000, 1);
					GivePlayerBablo(playerid, -1000);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					if (SBizzInfo[8][sbMafia] > 0) {
						SBizzInfo[8][sbTill] += 900;
						SBizzInfo[8][sbProducts]--;
						ObwyakInfo[SBizzInfo[8][sbMafia]][oGangMoney] += 100;
					} else {
						SBizzInfo[8][sbTill] += 1000;
						SBizzInfo[8][sbProducts]--;
					}
				} else {
					GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				}
			} else {
				GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/buybiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if (PlayerInfo[playerid][pPbiskey] != 255) return error(playerid, " Вы уже владеете бизнесом, введите /sellbiz если захотите купить другой.");
			for (new h = 0; h < sizeof(SBizzInfo); h++) {
				if (IsPlayerInRangeOfPoint(playerid, 2.0, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]) && SBizzInfo[h][sbOwned] == 0) {
					if (PlayerInfo[playerid][pLevel] < SBizzInfo[h][sbLevelNeeded]) {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы должны быть, как минимум %d уровня, чтобы купить этот бизнес", SBizzInfo[h][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					if (GetPlayerBablo(playerid) > SBizzInfo[h][sbBuyPrice]) {
						PlayerInfo[playerid][pPbiskey] = h + 100;
						SBizzInfo[h][sbOwned] = 1;
						SBizzInfo[h][sbTill] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[h][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerBablo(playerid, -SBizzInfo[h][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Поздравляем с новой покупкой.");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Вводите {00C0FF}/help {FFFFFF}чтобы посмотреть справку по бизнесу.");
						OnPropUpdate();
						SBizzInfo[h][sbTill] = 0;
						UpdateSBizz(h);
						return true;
					} else {
						error(playerid, " У Вас нету данной суммы денег для покупки");
						return true;
					}
				}
			}
			for (new h = 0; h < sizeof(BizzInfo); h++) {
				if (IsPlayerInRangeOfPoint(playerid, 2.0, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && BizzInfo[h][bOwned] == 0) {
					if (PlayerInfo[playerid][pLevel] < BizzInfo[h][bLevelNeeded]) {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы должны быть, как минимум %d уровня, чтобы купить этот бизнес", BizzInfo[h][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					if (GetPlayerBablo(playerid) > BizzInfo[h][bBuyPrice]) {
						PlayerInfo[playerid][pPbiskey] = h;
						BizzInfo[h][bOwned] = 1;
						BizzInfo[h][bTill] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[h][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerBablo(playerid, -BizzInfo[h][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerVirtualWorld(playerid, BizzInfo[h][bWorld]);
						SetPlayerInterior(playerid, BizzInfo[h][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[h][bInterior];
						SetPlayerPos(playerid, BizzInfo[h][bExitX], BizzInfo[h][bExitY], BizzInfo[h][bExitZ]);
						GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and typing ~r~'ALT'", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[h][bInterior];
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Поздравляем с новой покупкой.");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}Введите {00C0FF}/help {FFFFFF}чтобы посмотреть справку по бизнесу.");
						OnPropUpdate();
						UpdateBizz(h);
						return true;
					} else {
						error(playerid, " У Вас не хватает денег для этого");
						return true;
					}
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/sellbiz", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pPbiskey] == 255) return error(playerid, " Вы не владеете бизнесом.");
			if (PlayerInfo[playerid][pMarried] > 0) return error(playerid, " Вы женаты и не можете продать biz.");
			if (PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey] - 100][sbOwner], true) == 0) {
				new h = PlayerInfo[playerid][pPbiskey] - 100;
				GivePlayerBablo(playerid, SBizzInfo[h][sbTill] + SBizzInfo[h][sbBuyPrice]);
				SBizzInfo[h][sbLocked] = 1;
				SBizzInfo[h][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[h][sbOwner], "The State", 0, strlen("The State"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", SBizzInfo[h][sbTill] + SBizzInfo[h][sbBuyPrice]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[h][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				UpdateSBizz(h);
				return true;
			}
			if (strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0) {
				new h = PlayerInfo[playerid][pPbiskey];
				BizzInfo[h][bLocked] = 1;
				BizzInfo[h][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[h][bOwner], "The State", 0, strlen("The State"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerBablo(playerid, BizzInfo[h][bTill] + BizzInfo[h][bBuyPrice]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", BizzInfo[h][bTill] + BizzInfo[h][bBuyPrice]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[h][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				UpdateBizz(h);
				return true;
			} else {
				error(playerid, " Вы не владеете бизнесом.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/bizinfo", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255) return error(playerid, " Вы не владеете бизнесом.");
			if (bouse >= 100) PrintSBizInfo(playerid, bouse - 100);
			else PrintBizInfo(playerid, bouse);
		}
		return true;
	}
	if (strcmp(cmd, "/prodprice", true) == 0) {
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255) return error(playerid, " Вы не владеете бизнесом");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /prodprice [сумма платежа]");
		if (strval(tmp) < 100 || strval(tmp) > 500) return error(playerid, " Минимальный платеж 100$, Максимальный платеж 500$.");
		if (bouse >= 100) {
			if (strval(tmp) > SBizzInfo[bouse - 100][sbTill]) return error(playerid, " Вы не имеете столько в корзине.");
			SBizzInfo[bouse - 100][sbPriceProd] = strval(tmp);
			format(string, sizeof(string), "Покупка продуктов для %d$.", SBizzInfo[bouse - 100][sbPriceProd]);
		} else {
			if (strval(tmp) > BizzInfo[bouse][bTill]) return error(playerid, " Вы не имеете столько в корзине.");
			BizzInfo[bouse][bPriceProd] = strval(tmp);
			format(string, sizeof(string), "Покупка продуктов для %d$.", BizzInfo[bouse][bPriceProd]);
		}
		OnPropUpdate();
		SendClientMessage(playerid, COLOR_WHITE, string);
		return true;
	}
	if (strcmp(cmd, "/bizfee", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new h = PlayerInfo[playerid][pPbiskey];
			if (h == 255) return error(playerid, " Вы не владеете бизнесом.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bizfee [цена входа]");
			if (strval(tmp) < 0 || strval(tmp) > 1000) return error(playerid, " Минимальная цена  0$, Максимальная цена 1000$.");
			if (h >= 100) {
				SBizzInfo[h - 100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Цена входа установлена в %d$.", SBizzInfo[h - 100][sbEntranceCost]);
			} else {
				BizzInfo[h][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Цена входа установлена в %d$.", BizzInfo[h][bEntranceCost]);
				new temp[256];
				format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Владелец: {00C0FF}%s\n{FFFFFF}Стоимость входа: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d", h, BizzInfo[h][bMessage], BizzInfo[h][bOwner], BizzInfo[h][bEntranceCost], BizzInfo[h][bLevelNeeded]);
				Update3DTextLabelText(BizzInfo[h][bLabel], 0xE4FF61FF, temp);
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return true;
	}
	if (strcmp(cmd, "/bizwithdraw", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255) return error(playerid, " Вы не владеете бизнесом");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				if (bouse >= 100) {
					format(string, sizeof(string), "У вас есть %d$ в корзине.", SBizzInfo[bouse - 100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				} else {
					format(string, sizeof(string), "У вас есть %d$ в корзине.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bizwithdraw [значение]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bizwithdraw [значение]");
			if (bouse >= 100) {
				if (cashdeposit > SBizzInfo[bouse - 100][sbTill] || cashdeposit < 1) return error(playerid, " У вас нет столько");
			} else {
				if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1) return error(playerid, " У вас нет столько");

			}
			if (bouse >= 100) {
				if (!IsPlayerInRangeOfPoint(playerid, 100, SBizzInfo[bouse - 100][sbEntranceX], SBizzInfo[bouse - 100][sbEntranceY], SBizzInfo[bouse - 100][sbEntranceZ])) return error(playerid, " Вы далеко от своего бизнеса");
				else {
					ConsumingMoney[playerid] = 1;
					GivePlayerBablo(playerid, cashdeposit);
					SBizzInfo[bouse - 100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "Вы забрали %d$ из вашей корзины Остаток: %d$ ", cashdeposit, SBizzInfo[bouse - 100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			} else {
				if (!IsPlayerInRangeOfPoint(playerid, 100, BizzInfo[bouse][bExitX], BizzInfo[bouse][bExitY], BizzInfo[bouse][bExitZ])) return error(playerid, " Вы далеко от своего бизнеса");
				else {
					ConsumingMoney[playerid] = 1;
					GivePlayerBablo(playerid, cashdeposit);
					BizzInfo[bouse][bTill] -= cashdeposit;
					format(string, sizeof(string), "Вы забрали %d$ из своеой корзины Остаток: %d4 ", cashdeposit, BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/bizbank", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255) return error(playerid, " Вы не владеете бизнесом");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				if (bouse >= 100) {
					format(string, sizeof(string), "У вас есть %d$ в вашей корзине.", SBizzInfo[bouse - 100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				} else {
					format(string, sizeof(string), "У вас есть %d$ в вашей корзине.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bizbank [значение]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bizbank [значение]");
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			if (cashdeposit > GetPlayerBablo(playerid) || cashdeposit < 1) return error(playerid, " У вас нет столько");
			if (bouse >= 100) {
				if (!IsPlayerInRangeOfPoint(playerid, 100, SBizzInfo[bouse - 100][sbEntranceX], SBizzInfo[bouse - 100][sbEntranceY], SBizzInfo[bouse - 100][sbEntranceZ])) return error(playerid, " Вы далеко от бизнеса");
				else {
					GivePlayerBablo(playerid, -cashdeposit);
					SBizzInfo[bouse - 100][sbTill] += cashdeposit;
					format(string, sizeof(string), "Получено %d$ в вашу корзину Всего: %d$ ", cashdeposit, SBizzInfo[bouse - 100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			} else {
				if (!IsPlayerInRangeOfPoint(playerid, 100, BizzInfo[bouse][bExitX], BizzInfo[bouse][bExitY], BizzInfo[bouse][bExitZ])) return error(playerid, " Вы далеко от своего бизнеса");
				else {
					GivePlayerBablo(playerid, -cashdeposit);
					BizzInfo[bouse][bTill] += cashdeposit;
					format(string, sizeof(string), "Получено %d$ в вашу корзину Всего: %d$ ", cashdeposit, BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/healme", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 2.0, 2029.5566, -1404.6027, 17.2508) &&
				!IsPlayerInRangeOfPoint(playerid, 2.0, 1173.2023, -1323.3982, 15.3950)) return SendClientMessage(playerid, COLOR_GREY, "Ты не у госпиталя.");
			SetPlayerHealth(playerid, 100.0);
			format(string, sizeof(string), "Ты полностью здоров, благодаря помощи госпиталя.(-200$)");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerBablo(playerid, -200);
		}
		return true;
	}
	if (strcmp(cmd, "/heal", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if (!strlen(tmp)) {
				if (location != 255) {
					if (location < 200) {
						if (HouseInfo[location][hArm] == 1) {
							format(string, sizeof(string), "%s одел(а) броню.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							SetPlayerArmour(playerid, 100.0);
						} else {
							format(string, sizeof(string), "Здесь нельзя одеть броню.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
						}
						if (HouseInfo[location][hHel] == 1) {
							new Float:tempheal;
							GetPlayerHealth(playerid, tempheal);
							if (tempheal < 100.0) {
								SetPlayerHealth(playerid, 100.0);
								PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "Тебя полностью вылечили.");
								SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
							} else {
								SendClientMessage(playerid, TEAM_GREEN_COLOR, "Ты полностью здоров.");
							}
						} else {
							format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Здесь нельзя вылечиться.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
						}
						return true;
					} else if (location == 101) {
						new Float:tempheal;
						GetPlayerHealth(playerid, tempheal);
						if (tempheal < 100.0) {
							SetPlayerHealth(playerid, 100.0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Тебя полностью вылечили.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR, string);
						} else {
							SendClientMessage(playerid, COLOR_RED, "Ты полностью здоров.");
						}
					} else if (location == 102 && IsACop(playerid)) //Police Armoury
					{
						SetPlayerHealth(playerid, 100.0);
						format(string, sizeof(string), "%s одел броню.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						TogglePlayerControllable(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid, 1527.5, -12.1, 1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid, 99);
						Spectate[playerid] = 257;
						SetPlayerArmour(playerid, 100.0);
					}
				} else return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /heal [id] [цена]");
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /heal [id] [цена]");
			moneys = strval(tmp);
			if (moneys < 1 || moneys > 500) { error(playerid, " Цена от 1 до 500."); return true; }
			if (giveplayerid == playerid) return error(playerid, " Вы не можете лечить себя.");
			if (PlayerInfo[giveplayerid][pCash] < moneys) return SendClientMessage(playerid, COLOR_WHITE, "У данного игрока нет сколько средств.");
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new giveambu = GetPlayerVehicleID(giveplayerid);
					new playambu = GetPlayerVehicleID(playerid);
					if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) //model
					{
						if (IsAnAmbulance(playambu) && playambu == giveambu) {
							new Float:tempheal;
							GetPlayerHealth(giveplayerid, tempheal);
							if (tempheal >= 100.0) return error(playerid, " Этот человек полностью здоров.");
							if (PlayerInfo[giveplayerid][pLevel] < 1) return error(playerid, " Этого игрока нельзя вылечить.");
							format(string, sizeof(string), "~y~You healed ~n~~w~%s~n~~g~%d$", giveplayer, moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							GivePlayerBablo(playerid, moneys);
							GivePlayerBablo(giveplayerid, -moneys);
							new hp = 0;
							if (PlayerInfo[playerid][pPainPerk] > 0) {
								hp = 20 * PlayerInfo[playerid][pPainPerk];
								hp += 100;
								SetPlayerHealth(giveplayerid, hp);
							} else {
								hp = 100;
								SetPlayerHealth(giveplayerid, 100);
							}
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Вас вылечили до %d hp -%d$", hp, moneys);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						} else {
							error(playerid, " Один из вас не в машине/вертолете.");
							return true;
						}
					} else {
						error(playerid, " Вы не авторизованы для использования этой команды.");
						return true;
					}
				}
			} else {
				format(string, sizeof(string), "%d не активный игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/mole", true) == 0 && PlayerInfo[playerid][pAdmin] >= 5) {
		if (IsPlayerConnected(playerid)) {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) {
				SendClientMessage(playerid, COLOR_GRAD2, "Используй: /mole [mole text]");
				return true;
			}
			format(string, sizeof(string), "SMS: %s. Отправитель: YourWorld ", result);
			if (gTeam[playerid] < 3) { SendClientMessage(playerid, COLOR_YELLOW, string); }
			SendEnemyMessage(COLOR_YELLOW, string);
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (gTeam[i] >= 3 && gPlayerSpawned[i]) {
						RingTone[i] = 20;
					}
				}
			}
			printf("MOLE: %s", result);
		}
		return true;
	}
	if (strcmp(cmd, "/bigears", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3) {
		if (IsPlayerConnected(playerid)) {
			if (!BigEar[playerid]) {
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваши уши выросли, теперь вы слышите всё на расстоянии");
			} else if (BigEar[playerid]) {
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваши уши стали нормальными");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/ip", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 1) {
			tmp = strtok(cmdtext, idx);
			new playersip[256];
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /getip [id]");
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerIp(giveplayerid, playersip, sizeof(playersip));
			format(string, sizeof(string), "Игрок: %s IP: %s", giveplayer, playersip);
			SendClientMessage(playerid, 0xD900D3C8, string);
		}
		return true;
	}
	if (strcmp(cmd, "/id", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /id [ник]");
			new target;
			target = ReturnUser(tmp);
			new sstring[256];
			if (IsPlayerConnected(target)) {
				if (target != INVALID_PLAYER_ID) {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(sstring, sizeof(sstring), "ID: (%d) %s", target, giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, sstring);
				} else {
					error(playerid, " Игрок не был найден");
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/a", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Нет прав для использования данной команды");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /a(dmin) [текст]");
			new arank[64];
			if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл.Администратор"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл.Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератор(4rank)"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератор(3rank)"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератор(2rank)"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератор(1rank)"; } else { arank = "Модератор"; }
			format(string, sizeof(string), "%s %s[%d]:{ffffff} %s ", arank, sendername, playerid, result);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				SendAdminMessage(COLOR_YELLOW, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/givegunall", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) return error(playerid, " У вас недостаточно прав для использования этой команды.");
			new gun;
			new ammoh;
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, "{33aa33}v [Используйте]:{FFFFFF} /givegunall  [Ид-оружия] [патроны]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
				SendClientMessage(playerid, COLOR_GRAD3, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Flamethrower) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
				return true;
			}
			if (gun < 1 || gun > 46 || gun == 27 || gun == 1 || gun == 2 || gun == 9 || gun == 17 || gun == 19 || gun == 20 || gun == 21 || gun == 36 || gun == 38 || gun == 39 || gun == 40 || gun == 44 || gun == 45) { SendClientMessage(playerid, COLOR_GRAD1, "Неизвестное оружие!"); return true; }
			tmp = strtok(cmdtext, idx);
			ammoh = strval(tmp);
			if (ammoh < 1 || ammoh > 9999) { SendClientMessage(playerid, COLOR_GRAD1, "Патронов от 1 до 9999 шт."); return true; }
			for (new i = 0; i < MAX_PLAYERS; i++) {
				if (GetDistanceBetweenPlayers(playerid, i) < 32 && playerid != i) {
					ServerGivePlayerWeapons(i, gun, ammoh);
					SendClientMessage(i, COLOR_GRAD1, "Администратор выдал тебе оружие.");
					new admin[MAX_PLAYER_NAME];
					GetPlayerName(playerid, admin, sizeof(admin));
					format(string, sizeof(string), "Оружие: %s выдал всем рядом стоящим игрокам оружие.", admin);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Вы выдали оружие рядом стоящим игрокам.");
			printf("Использвалась команда %s", cmd);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/admingun", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " У вас недостаточно прав для использования этой команды.");
			ServerGivePlayerWeapons(playerid, 24, 9999);
			ServerGivePlayerWeapons(playerid, 38, 9999);
			ServerGivePlayerWeapons(playerid, 31, 9999);
			ServerGivePlayerWeapons(playerid, 25, 9999);
			ServerGivePlayerWeapons(playerid, 34, 9999);
			ServerGivePlayerWeapons(playerid, 29, 9999);
			SetPlayerHealth(playerid, 160);
			new admin[MAX_PLAYER_NAME];
			GetPlayerName(playerid, admin, sizeof(admin));
			format(string, sizeof(string), "{33aa33}Оружие:{FF9966} %s взял полный комплект Админского оружия.", admin);
			ABroadCast(COLOR_WHITE, string, 1);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/modergun", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " У вас недостаточно прав для использования этой команды.");
			ServerGivePlayerWeapons(playerid, 24, 999);
			ServerGivePlayerWeapons(playerid, 31, 999);
			ServerGivePlayerWeapons(playerid, 25, 999);
			SetPlayerHealth(playerid, 160);
			new admin[MAX_PLAYER_NAME];
			GetPlayerName(playerid, admin, sizeof(admin));
			format(string, sizeof(string), "{33aa33}Оружие:{FF9966} %s взял полный комплект Модерского оружия.", admin);
			ABroadCast(COLOR_WHITE, string, 1);
			return true;
		}
		return true;
	}
	if (strcmp(cmd, "/healall", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 2) //  2 - уровень админки , ставьте свой.
		{
			for (new i = 0; i < MAX_PLAYERS; i++) {
				if (GetDistanceBetweenPlayers(playerid, i) < 32 && playerid != i) {
					SetPlayerHealth(i, 120);
					SendClientMessage(i, COLOR_GRAD1, "Администрация сервера по-полнила вам hp до 120.");
					new admin[MAX_PLAYER_NAME];
					GetPlayerName(playerid, admin, sizeof(admin));
					format(string, sizeof(string), "Жизни: %s выдал всем рядом стоящим игрокам жизни.", admin);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Ты пополнил здоровье рядом находящимся игрокам.");
			return true;
		}
		error(playerid, " У вас недостаточно прав для использования этой команды.");
		printf("Использвалась команда %s", cmd);
		return true;
	}
	if (strcmp(cmd, "/takegunall", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 4) // ИМ и старше
		{
			for (new i = 0; i < MAX_PLAYERS; i++) {
				if (GetDistanceBetweenPlayers(playerid, i) < 32 && playerid != i) {
					ResetPlayerWeapons(i);
					SendClientMessage(i, COLOR_GRAD1, "Администрация сервера отобрала у вас всё оружие.");
					new admin[MAX_PLAYER_NAME];
					GetPlayerName(playerid, admin, sizeof(admin));
					format(string, sizeof(string), "Оружие: %s забрал у всех рядом стоящиx оружие.", admin);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Ты отобрал оружие у рядом находящихся игроков.");
			return true;
		}
		error(playerid, " У вас недостаточно прав для использования этой команды.");
		return true;
	}
	if (strcmp(cmd, "/ao", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		new arank[64];
		if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл. Администратор"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл.Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератор"; } else { arank = "Модератор"; }
		format(string, sizeof(string), "(( %s %s[%d]: %s ))", arank, sendername, playerid, result);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		printf(" %s %s[%d]: %s ", arank, sendername, playerid, result);
		return true;
	}
	if (strcmp(cmd, "/ho", true) == 0) {
		if (PlayerInfo[playerid][pHelper] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		new hrank[64];
		if (PlayerInfo[playerid][pHelper] == 4) { hrank = "Главный Хелпер"; } else if (PlayerInfo[playerid][pHelper] == 3) { hrank = "Хелпер 3 уровня"; } else if (PlayerInfo[playerid][pHelper] == 2) { hrank = "Хелпер 2 уровня"; } else if (PlayerInfo[playerid][pHelper] == 1) { hrank = "Хелпер"; } else { hrank = "Хелпер"; }
		format(string, sizeof(string), "(( %s %s[%d]: %s ))", hrank, sendername, playerid, result);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		return true;
	}
	if (strcmp(cmd, "/oa", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		format(string, sizeof(string), "{ffffff}• %s[%d]: %s", sendername, playerid, result);
		SendClientMessageToAll(COLOR_WHITE, string);
		return true;
	}
	if (strcmp(cmd, "/oar", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		format(string, sizeof(string), "%s", result);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		return true;
	}
	if (strcmp(cmd, "/oaw", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		format(string, sizeof(string), "{ffffff}%s", result);
		SendClientMessageToAll(COLOR_WHITE, string);
		return true;
	}
	if (strcmp(cmd, "/oab", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GRAD2, "У Вас недостаточно прав для того, чтобы использовать эту команду.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) return true;
		format(string, sizeof(string), "%s", result);
		SendClientMessageToAll(COLOR_LIGHTBLUE, string);
		return true;
	}
	if (strcmp(cmd, "/logout", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				SavePlayer(playerid);
				SendClientMessage(playerid, COLOR_GRAD1, "Теперь можно безопасно выйти.");
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/cnn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return true;
				}
				format(string, sizeof(string), "~b~%s: ~w~%s", sendername, result);
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i)) {
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/cnnn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				tmp = strtok(cmdtext, idx);
				new txtid;
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cnnn [введите]");
					return true;
				}
				txtid = strval(tmp);
				if (txtid == 2) {
					error(playerid, " Вы не можете выбрать 2");
					return true;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cnnn [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return true;
				}
				format(string, sizeof(string), "~w~%s", result);
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i) == 1) {
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return true;
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/prison", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " У вас недостаточно прав, чтобы использовать эту команду.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /prison [playerid/PartOfName] [причина]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[giveplayerid][pJailed] == 1 || PlayerInfo[giveplayerid][pJailed] == 4) return error(playerid, " Этот игрок уже сидит в тюрьме.");
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new arank[64];
					if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл. Администратором"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл. Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератором"; } else { arank = "Модератор"; }
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' ')) {
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if (!strlen(result)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /prison [id] [причина]");
						return true;
					}
					format(string, sizeof(string), "YourWorld : %s был(а) посажен(а) в Форт Де Морган %s %s. Причина: %s.", giveplayer, arank, sendername, (result));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Ты посадил(а) %s в Форт Де Моргана.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Ты был(а) посажен(а) в Форт Де Моргана %s %s.", arank, sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
					PlayerInfo[giveplayerid][pWanted] = 0;
					PlayerInfo[giveplayerid][pJailed] = 4;
					SetPlayerSkin(giveplayerid, 268);
					PlayerInfo[giveplayerid][pJailTime] = 10800;
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWanted]);
					SetPlayerPos(giveplayerid, 107.2300, 1920.6311, 18.5208);
					SetPlayerWorldBounds(giveplayerid, 337.5694, 101.5826, 1940.9759, 1798.7453);
					SafeResetPlayerWeapons(giveplayerid);
				}
			} else {
				error(playerid, " Этот игрок в оффлайн.");
				return true;
			}
		}
		return true;
	}
	if (strcmp(cmd, "/unprison", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Ты не авторизован для использования этой команды.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unprison [id]");
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[giveplayerid][pJailed] != 4) return error(playerid, " Этот игрок не сидит в Форт Де Моргане.");
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new arank[64];
					if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл. Администратором"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл.Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератором"; } else { arank = "Модератор"; }
					PlayerInfo[giveplayerid][pJailTime] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerWorldBounds(giveplayerid, 20000.0000, -20000.0000, 20000.0000, -20000.0000);
					SetPlayerPos(giveplayerid, 93.4852, 1920.6235, 18.0450);
					format(string, 256, "YourWorld : %s был(а) освобожден(а) из Форт Де Моргана %s %s.", giveplayer, arank, sendername);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Ты освободил(а) %s из Форт Де моргана.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Ты был(а) освобождён %s %s из Форт Де моргана.", arank, sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/jail", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /jail [id] [время] [причина]");
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						if (PlayerInfo[playa][pJailed] > 0) return error(playerid, " Этот игрок находится в заключении.");
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /jail [id] [время] [причина]");
						new arank[64];
						if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл.Администратор"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл.Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератор"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератор"; } else { arank = "Модератор"; }

						SafeResetPlayerWeapons(playa);
						PlayerInfo[playa][pWanted] = 0;
						PlayerInfo[playa][pJailed] = 1;
						PlayerInfo[playa][pZapret] = 1;
						ZonaKill[playa] = 0;
						SetPlayerSkin(playa, 268);
						PlayerInfo[playa][pJailTime] = money * 60;
						SetPlayerWantedLevel(playa, PlayerInfo[playa][pWanted]);
						SetPlayerInterior(playa, 6);
						PlayerInfo[playa][pInt] = 6;
						new rand = random(sizeof(LSPDSpawns));
						SetPlayerPos(playa, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
						format(string, 256, "YourWorld : %s был(а) посажен(а) в тюрьму %sом %s на %d минут(ы).Причина: %s.", giveplayer, arank, sendername, money, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Ты посадил(а) %s в тюрьму.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Ты был(а) посажен(а) в тюрьму %s %s.", arank, sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "YourWorld : %s был(а) посажен(а) в тюрьму %sом %s на %d минут(ы).Причина: %s.", giveplayer, arank, sendername, money, (result));
						printf("%s", string);
					}
				} else {
					error(playerid, " Ты не авторизован для использования этой команды.");
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/unfreeing", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			format(string, 256, " Граждане, которых запрещено выпускать:");
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerInfo[i][pNoFree] > 0) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "*{D5FF00} %s{FFFFFF}[id: {2DED17} %d].", sendername, i);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}

				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/unnofree", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unnofree [id игрока]");
				giveplayerid = ReturnUser(tmp);
				if (PlayerInfo[giveplayerid][pNoFree] > 0) {
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							PlayerInfo[giveplayerid][pNoFree] = 0;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы сняли запрет на досрочное освобождение %s из тюрьмы.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вам сняли запрет на досрочное освобождение из тюрьмы %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s сняли запрет на досрочное освобождение %s из тюрьмы.", sendername, giveplayer);
							SendTeamMessage(2, COLOR_WHITE, string);
						}
					} else return error(playerid, " Данного игрока нет в игре.");
				} else return error(playerid, " Игрока не запрещено выпускать.");
			} else return error(playerid, " Вы не служитель закона.");
		}
		return true;
	}
	if (strcmp(cmd, "/nofree", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /nofree [id игрока]");
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (PlayerInfo[giveplayerid][pJailed] == 1) {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы дали запрет на досрочное освобождение %s из тюрьмы.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вам дали запрет на досрочное освобождение из тюрьмы %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s дал запрет на досрочное освобождение %s из тюрьмы.", sendername, giveplayer);
							SendTeamMessage(2, COLOR_WHITE, string);
							PlayerInfo[playerid][pNoFree] = 1;
						} else return error(playerid, " Игрок не в тюрьме.");
					}
				} else return error(playerid, " Его нет в игре.");
			} else return error(playerid, " Вы не служитель закона.");
		}
		return true;
	}
	if (strcmp(cmd, "/unjail", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " Ты не авторизован для использования этой команды.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unjail [id]");
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pJailed] == 0) return error(playerid, " Этот игрок не заключен");
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new arank[64];
					if (PlayerInfo[playerid][pAdmin] == 6) { arank = "Гл.Администратором"; } else if (PlayerInfo[playerid][pAdmin] == 5) { arank = "Гл.Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 4) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 3) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 2) { arank = "Модератором"; } else if (PlayerInfo[playerid][pAdmin] == 1) { arank = "Модератором"; } else { arank = "Модератор"; }
					format(string, sizeof(string), "Ты освободил(а) из тюрьмы %s.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					PlayerInfo[giveplayerid][pJailTime] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					PlayerInfo[giveplayerid][pWanted] = 0;
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWanted]);
					SetPlayerPos(giveplayerid, 246.8119, 68.0246, 1003.6406);
					SetPlayerInterior(giveplayerid, 6);
					PlayerInfo[giveplayerid][pZapret] = 0;
					PlayerInfo[giveplayerid][pNoFree] = 0;
					format(string, 256, "YourWorld : %s был(а) освобождён(а) из тюрьмы  %s %s.", giveplayer, arank, sendername);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/tod", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :/tod [время дня] (0-23)");
				return true;
			}
			new hour;
			hour = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] != 6) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			SetWorldTime(hour);
			format(string, sizeof(string), "Вы установили время сервера на %d часов.", hour);
			BroadCast(COLOR_LIGHTBLUE, string);
		}
		return true;
	}
	if (strcmp(cmd, "/setstatss", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /скрытая команда [id] [код] [значение]");
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|1 Уровень |2 Респекты |3 Очки апгрейда |5 Ключи от дома |6 Ключи от бизнеса");
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|7 Vip-Аккаунт  |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектива |11 Скилл адвоката");
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|12 Скилл Механика |13 Скилл Репортёра |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
				SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|17 Скил Торговца оружием");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /скрытая команда [id] [код] [значение]");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|1 Уровень |2 Респекты |3 Очки апгрейда |5 Ключи от дома |6 Ключи от бизнеса");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|7 Vip-Аккаунт |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектива |11 Скилл адвоката");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|12 Скилл Механика |13 Скилл Репортёра |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|17 Скил Торговца оружием");
						return true;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /скрытая команда [id] [код] [значение]");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|1 Уровень |2 Респекты |3 Очки апгрейда |5 Ключи от дома |6 Ключи от бизнеса");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|7 Vip-Аккаунт  |8 Модель игрока |9 Начальное здоровье |10 Скилл Детектива |11 Скилл адвоката");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|12 Скилл Механика |13 Скилл Репортёра |14 Скилл Автоугонщика |15 Скилл продавца наркотиков |16 Скилл Sex");
						SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}|17 Скил Торговца оружием");
						return true;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 6) {
						switch (stat) {
							case 1 :  {
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "Игрок стал уровня - %d.", amount);
							}
							case 2 :  {
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "Очки уважения игрока установлены - %d.", amount);
							}
							case 3 :  {
								PlayerInfo[giveplayerid][gPupgrade] = amount;
								format(string, sizeof(string), "Игрок получил - %d очков улучшений.", amount);
							}
							case 5 :  {
								PlayerInfo[giveplayerid][pPhousekey] = amount;
								format(string, sizeof(string), "Ключей от дома у игрока теперь - %d.", amount);
							}
							case 6 :  {
								PlayerInfo[giveplayerid][pPbiskey] = amount;
								format(string, sizeof(string), "Ключей от бизнеса у игрока теперь - %d.", amount);
							}
							case 8 :  {
								PlayerInfo[giveplayerid][pChar] = amount;
								format(string, sizeof(string), "Модель игрока установлена - %d.", amount);
							}
							case 9 :  {
								PlayerInfo[giveplayerid][pSHealth] = amount;
								format(string, sizeof(string), "У игрока теперь - %d начального здоровья. ", amount);
							}
							case 10 :  {
								PlayerInfo[giveplayerid][pDetSkill] = amount;
								format(string, sizeof(string), "Детективный навык игрока установлен - %d.", amount);
							}
							case 11 :  {
								PlayerInfo[giveplayerid][pLawSkill] = amount;
								format(string, sizeof(string), "Скилл адвоката игрока установлен - %d.", amount);
							}
							case 12 :  {
								PlayerInfo[giveplayerid][pMechSkill] = amount;
								format(string, sizeof(string), "Скилл механика игрока установлен - %d.", amount);
							}
							case 13 :  {
								PlayerInfo[giveplayerid][pNewsSkill] = amount;
								format(string, sizeof(string), "Скилл репортера игрока установлен - %d", amount);
							}
							case 14 :  {
								PlayerInfo[giveplayerid][pJackSkill] = amount;
								format(string, sizeof(string), "Скилл автоугонщика игрока установлен - %d.", amount);
							}
							case 15 :  {
								PlayerInfo[giveplayerid][pDrugsSkill] = amount;
								format(string, sizeof(string), "Скилл продавца наркотиков игрока установлен - %d.", amount);
							}
							case 17 :  {
								PlayerInfo[giveplayerid][pGunSkill] = amount;
								format(string, sizeof(string), "Скил Торговца оружием установлен - %d.", amount);
							}
							case 7 :  {
								PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "Vip-Аккаунт игрока теперь - %d.", amount);
							}
							case 100 :  {
								PlayerInfo[giveplayerid][pAccount] = amount;
								format(string, sizeof(string), "Банковский cчет игрока установлен - %d$.", amount);
							}
							default:  {
								format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Невозможное значение", amount);
							}

						}
						SendClientMessage(playerid, COLOR_WHITE, string);
					} else {
						error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
					}
				}
			}
		}
		return true;
	}
	if (strcmp(cmd, "/setint", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /setint [id интерьера]");
			new intid;
			intid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] < 1) return error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			SetPlayerInterior(playerid, intid);
			PlayerInfo[playerid][pInt] = intid;
			format(string, sizeof(string), "Интерьер %d.", intid);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		return true;
	}
	if (strcmp(cmd, "/getvirt", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new virt;
			virt = GetPlayerVirtualWorld(playerid);
			format(string, sizeof(string), "Ваш виртуальный мир %d", virt);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	if (strcmp(cmd, "/getlocal", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			format(string, sizeof(string), "Ваша локация %d", PlayerInfo[playerid][pLocal]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	if (strcmp(cmd, "/setvw", true) == 0) {
		if (!IsPlayerConnected(playerid)) return error(playerid, " Ты не авторизован для использования этой команды.");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /setvw [id] [виртуальный мир]");
		new playa;
		playa = ReturnUser(tmp);
		new virid;
		tmp = strtok(cmdtext, idx);
		virid = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 1) return error(playerid, " Нет прав на использование команды.");
		if (IsPlayerConnected(playa)) {
			if (playa != INVALID_PLAYER_ID) {
				GetPlayerName(playa, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SetPlayerVirtualWorld(playa, virid);
				format(string, sizeof(string), "Ты поставил виртуальный мир %s на %d.", giveplayer, virid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "%s поставил твой виртуальный мир на %d.", sendername, virid);
				SendClientMessage(playa, COLOR_GRAD1, string);
			}
		}
		return true;
	}
	if (strcmp(cmd, "/invite", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /invite [playerid/PartOfName]");
			new para1;
			new ftext[25];
			new string2[128];
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						if (PlayerInfo[para1][pLevel] < 1) return error(playerid, " Игрок должен иметь как минимум А ранг для вступления куда-либо");
						if (PlayerInfo[para1][pJob] != 0) return error(playerid, " Этот игрок работает");
						if (PlayerInfo[para1][pLeader] > 0) return error(playerid, " Нельзя пригласить лидера другой фракции.");
						if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pLeader] == 10) {
							if (PlayerInfo[para1][pLevel] < 2) return error(playerid, " Игрок должен иметь как минимум 2 уровень.");
						}
						if (gTeam[para1] == TEAM_GREEN && PlayerInfo[para1][pMember] == 0) {
							if (PlayerInfo[playerid][pLeader] == 1) ftext = "Полицию LS";
							else if (PlayerInfo[playerid][pLeader] == 2) ftext = "ФБР";
							else if (PlayerInfo[playerid][pLeader] == 3) ftext = "Армию";
							else if (PlayerInfo[playerid][pLeader] == 4) ftext = "Медики";
							else if (PlayerInfo[playerid][pLeader] == 5) ftext = "La Cosa Nostra";
							else if (PlayerInfo[playerid][pLeader] == 6) ftext = "Yakuza";
							else if (PlayerInfo[playerid][pLeader] == 8) ftext = "Наёмные Убийцы";
							else if (PlayerInfo[playerid][pLeader] == 9) ftext = "Репортёры";
							else if (PlayerInfo[playerid][pLeader] == 10) ftext = "Такси";
							else if (PlayerInfo[playerid][pLeader] == 11) ftext = "School Instructors";
							else if (PlayerInfo[playerid][pLeader] == 12) ftext = "StreetRacers";
							else if (PlayerInfo[playerid][pLeader] == 13) ftext = "Grove Street Gang";
							else if (PlayerInfo[playerid][pLeader] == 14) ftext = "El Coronos";
							else if (PlayerInfo[playerid][pLeader] == 15) ftext = "Los Santos Vagos";
							else if (PlayerInfo[playerid][pLeader] == 16) ftext = "The Ballas Gang";
							else if (PlayerInfo[playerid][pLeader] == 18) ftext = "Triads Mafia";
							else if (PlayerInfo[playerid][pLeader] == 19) ftext = "San Fierro Rifa";
							else if (PlayerInfo[playerid][pLeader] == 20) ftext = "Russian Mafia";
							else return true;
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Лидер %s предложил вступить вам в %s", sendername, ftext);
							ShowPlayerDialog(para1, 156, 0, "Приглашение", string, "Вступить", "Отмена");
							SetPVarInt(para1, "PlayerInvite", playerid);
							format(string2, sizeof(string2), " Вы приглаcили %s присоединиться к вам", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string2);
						} else {
							error(playerid, " Этот игрок находится в розыске или уже состоит в фракции.");
							return true;
						}
					}
				}
			} else {
				error(playerid, " Вы не уполномочены использовать эту команду ");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/uninvite", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /uninvite [id]");
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] != PlayerInfo[para1][pMember]) return error(playerid, " Вы не можете уволить члена другой фракции.");
			if (PlayerInfo[playerid][pLeader] >= 1) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						if (PlayerInfo[para1][pMember] > 0 || PlayerInfo[playerid][pAdmin] >= 6) {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							printf("AdmCmd: %s has uninvited %s.", sendername, giveplayer);
							format(string, sizeof(string), "Вас кикнул с фракции лидер %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "Вы сново гражданский.");
							gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pFWarns] = 0;
							PlayerInfo[para1][pChar] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(para1, gTeam[para1], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
							PlayerInfo[para1][pChar] = CIV[rand];
							MedicBill[para1] = 0;
							PlayerInfo[para1][pJob] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Вы кикнули %s  из фракции.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
				}
			} else {
				error(playerid, " Вы не авторизованы для использования этой команды.");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/kickinvite", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 5) return error(playerid, " Вы не Администратор.");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /kickinvite [id]");
		new playa;
		playa = ReturnUser(tmp);
		if (playa == INVALID_PLAYER_ID) return true;
		new PName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, PName, sizeof(PName));
		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "Вы уволили из фракции %s.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Администратор %s уволил(а) вас из фракции.", PName);
		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		gTeam[playa] = 3;
		PlayerInfo[playa][pJob] = 0;
		PlayerInfo[playa][pTeam] = 3;
		PlayerInfo[playa][pFWarns] = 0;
		PlayerInfo[playa][pMember] = 0;
		PlayerInfo[playa][pRank] = 0;
		PlayerInfo[playa][pChar] = 0;
		new rand = random(sizeof(CIV));
		SetSpawnInfo(playa, gTeam[playa], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
		PlayerInfo[playa][pChar] = CIV[rand];
		MedicBill[playa] = 0;
		SpawnPlayer(playa);
		return true;
	}
	if (strcmp(cmd, "/setadm1", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /скрытая команда [id] [level(1-6)]");
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (level > 6 || level < 0) { error(playerid, " Невозможно значение менее 1, или более 6."); return true; }
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pAdmin] = level;
						printf("Главный Администратор %s Повысил/Понизил %s до %d уровня модерирования", sendername, giveplayer, level);
						format(string, sizeof(string), "Главный Администратор %s Повысил/Понизил вас до %d уровня модерирования", sendername, level);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы Повысили/понизили %s до %d уровня модерирования", giveplayer, level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			} else {
				error(playerid, " Вы не уполномочены использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/giverank", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /giverank [ID игрока] [ранг]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /giverank [ID игрока] [ранг]");
				return true;
			}
			level = strval(tmp);
			if (level > 6 || level < 1) {
				error(playerid, " Выбранное значения ранга недопустимо. (От 1 до 6)");
				return true;
			}
			if (PlayerInfo[playerid][pLeader] >= 1) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						if (PlayerInfo[playerid][pLeader] != PlayerInfo[para1][pMember]) {
							error(playerid, " Вы не можете повысить/понизить этого человека.");
							return true;
						}
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pRank] = level;
						format(string, sizeof(string), "Вы были понижены/повышены в ранге лидером %s (Ранг: %d)", sendername, level);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы понизили/повысили в ранге %s (Ранг: %d)", giveplayer, level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) { // Ранги и Скины LSPD
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 280;
									SetPlayerSkin(para1, 280);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 281;
									SetPlayerSkin(para1, 281);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 282;
									SetPlayerSkin(para1, 282);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 267;
									SetPlayerSkin(para1, 267);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 266;
									SetPlayerSkin(para1, 266);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 265;
									SetPlayerSkin(para1, 265);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 211;
									SetPlayerSkin(para1, 211);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) // Ранги и скины FBI
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 285;
									SetPlayerSkin(para1, 285);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 285;
									SetPlayerSkin(para1, 285);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 286;
									SetPlayerSkin(para1, 286);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 286;
									SetPlayerSkin(para1, 286);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 163;
									SetPlayerSkin(para1, 163);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 164;
									SetPlayerSkin(para1, 164);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 93;
									SetPlayerSkin(para1, 93);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) // Ранги и скины Национальной гвардии
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 287;
									SetPlayerSkin(para1, 287);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 191;
									SetPlayerSkin(para1, 191);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) // РАнги и скины МЧС
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 70;
									SetPlayerSkin(para1, 70);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 275;
									SetPlayerSkin(para1, 275);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 275;
									SetPlayerSkin(para1, 275);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 274;
									SetPlayerSkin(para1, 274);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 274;
									SetPlayerSkin(para1, 274);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 276;
									SetPlayerSkin(para1, 276);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 219;
									SetPlayerSkin(para1, 219);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) // Ранги и скины Лецензеров
						{
							if (PlayerInfo[para1][pRank] == 1) {
								PlayerInfo[para1][pChar] = 59;
								SetPlayerSkin(para1, 59);
							} else if (PlayerInfo[para1][pRank] == 2) {
								PlayerInfo[para1][pChar] = 60;
								SetPlayerSkin(para1, 60);
							} else if (PlayerInfo[para1][pRank] == 3) {
								PlayerInfo[para1][pChar] = 60;
								SetPlayerSkin(para1, 60);
							} else if (PlayerInfo[para1][pRank] == 4) {
								PlayerInfo[para1][pChar] = 189;
								SetPlayerSkin(para1, 189);
							} else if (PlayerInfo[para1][pRank] == 5) {
								PlayerInfo[para1][pChar] = 189;
								SetPlayerSkin(para1, 189);
							} else if (PlayerInfo[para1][pRank] == 6) {
								PlayerInfo[para1][pChar] = 171;
								SetPlayerSkin(para1, 171);
							}
						} else if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) // Ранги и скины Агенство Хитманов
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 127;
									SetPlayerSkin(para1, 127);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 127;
									SetPlayerSkin(para1, 127);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 165;
									SetPlayerSkin(para1, 165);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 165;
									SetPlayerSkin(para1, 165);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 166;
									SetPlayerSkin(para1, 166);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 166;
									SetPlayerSkin(para1, 166);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 194;
									SetPlayerSkin(para1, 194);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) // Ранги и скины La Cosa Nostra
						{
							if (PlayerInfo[para1][pSex] == 1) {
								//Male Skin
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 258;
									SetPlayerSkin(para1, 258);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 98;
									SetPlayerSkin(para1, 98);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 46;
									SetPlayerSkin(para1, 46);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 124;
									SetPlayerSkin(para1, 124);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 126;
									SetPlayerSkin(para1, 126);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 113;
									SetPlayerSkin(para1, 113);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 233;
									SetPlayerSkin(para1, 233);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) // Ранги и скины El Coronos
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 47;
									SetPlayerSkin(para1, 47);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 114;
									SetPlayerSkin(para1, 114);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 114;
									SetPlayerSkin(para1, 114);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 115;
									SetPlayerSkin(para1, 115);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 116;
									SetPlayerSkin(para1, 116);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 292;
									SetPlayerSkin(para1, 292);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 40;
									SetPlayerSkin(para1, 40);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) // Ранги и скины Grove Street
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 105;
									SetPlayerSkin(para1, 105);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 107;
									SetPlayerSkin(para1, 107);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 106;
									SetPlayerSkin(para1, 106);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 269;
									SetPlayerSkin(para1, 269);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 271;
									SetPlayerSkin(para1, 271);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 270;
									SetPlayerSkin(para1, 270);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 195;
									SetPlayerSkin(para1, 195);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) // Ранги и скины Russia Mafia
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 112;
									SetPlayerSkin(para1, 112);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 112;
									SetPlayerSkin(para1, 112);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 111;
									SetPlayerSkin(para1, 111);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 111;
									SetPlayerSkin(para1, 111);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 125;
									SetPlayerSkin(para1, 125);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 272;
									SetPlayerSkin(para1, 272);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 216;
									SetPlayerSkin(para1, 216);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) // ранги и скины Sf Rifa
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 174;
									SetPlayerSkin(para1, 174);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 174;
									SetPlayerSkin(para1, 174);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 174;
									SetPlayerSkin(para1, 174);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 175;
									SetPlayerSkin(para1, 175);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 175;
									SetPlayerSkin(para1, 175);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 173;
									SetPlayerSkin(para1, 173);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 226;
									SetPlayerSkin(para1, 226);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) // ранги и скины SanNews
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 289;
									SetPlayerSkin(para1, 289);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 188;
									SetPlayerSkin(para1, 188);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 188;
									SetPlayerSkin(para1, 188);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 187;
									SetPlayerSkin(para1, 187);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 59;
									SetPlayerSkin(para1, 59);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 295;
									SetPlayerSkin(para1, 295);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 150;
									SetPlayerSkin(para1, 150);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) // ранги искины Los Santos Vagos
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 108;
									SetPlayerSkin(para1, 108);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 108;
									SetPlayerSkin(para1, 108);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 109;
									SetPlayerSkin(para1, 109);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 109;
									SetPlayerSkin(para1, 109);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 110;
									SetPlayerSkin(para1, 110);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 110;
									SetPlayerSkin(para1, 110);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 12;
									SetPlayerSkin(para1, 12);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) // ранги и скины Taxi Club
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 261;
									SetPlayerSkin(para1, 261);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 262;
									SetPlayerSkin(para1, 262);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 262;
									SetPlayerSkin(para1, 262);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 253;
									SetPlayerSkin(para1, 253);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 255;
									SetPlayerSkin(para1, 255);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 61;
									SetPlayerSkin(para1, 61);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 172;
									SetPlayerSkin(para1, 172);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) // ранги и скины SteetRece
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 21;
									SetPlayerSkin(para1, 21);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 180;
									SetPlayerSkin(para1, 180);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 180;
									SetPlayerSkin(para1, 180);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 170;
									SetPlayerSkin(para1, 170);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 299;
									SetPlayerSkin(para1, 299);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 48;
									SetPlayerSkin(para1, 48);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 193;
									SetPlayerSkin(para1, 193);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) // ранги и скины Hell Angels
						{
							if (PlayerInfo[para1][pRank] == 1) {
								PlayerInfo[para1][pChar] = 100;
								SetPlayerSkin(para1, 100);
							} else if (PlayerInfo[para1][pRank] == 2) {
								PlayerInfo[para1][pChar] = 254;
								SetPlayerSkin(para1, 254);
							} else if (PlayerInfo[para1][pRank] == 3) {
								PlayerInfo[para1][pChar] = 247;
								SetPlayerSkin(para1, 247);
							} else if (PlayerInfo[para1][pRank] == 4) {
								PlayerInfo[para1][pChar] = 248;
								SetPlayerSkin(para1, 248);
							} else if (PlayerInfo[para1][pRank] == 5) {
								PlayerInfo[para1][pChar] = 181;
								SetPlayerSkin(para1, 181);
							} else if (PlayerInfo[para1][pRank] == 6) {
								PlayerInfo[para1][pChar] = 242;
								SetPlayerSkin(para1, 242);
							}
						} else if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) // ранги и скины The Triads Mafia
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 170;
									SetPlayerSkin(para1, 170);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 117;
									SetPlayerSkin(para1, 117);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 117;
									SetPlayerSkin(para1, 117);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 118;
									SetPlayerSkin(para1, 118);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 208;
									SetPlayerSkin(para1, 208);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 294;
									SetPlayerSkin(para1, 294);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 141;
									SetPlayerSkin(para1, 141);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) // Ранги и скины Yakuza Family
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 121;
									SetPlayerSkin(para1, 121);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 122;
									SetPlayerSkin(para1, 122);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 123;
									SetPlayerSkin(para1, 123);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 186;
									SetPlayerSkin(para1, 186);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 186;
									SetPlayerSkin(para1, 186);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 120;
									SetPlayerSkin(para1, 120);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 263;
									SetPlayerSkin(para1, 263);
								}
							}
						} else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) // Ранги и скины The Ballas Gang
						{
							if (PlayerInfo[para1][pSex] == 1) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 28;
									SetPlayerSkin(para1, 28);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 103;
									SetPlayerSkin(para1, 103);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 103;
									SetPlayerSkin(para1, 103);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 102;
									SetPlayerSkin(para1, 102);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 102;
									SetPlayerSkin(para1, 102);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 104;
									SetPlayerSkin(para1, 104);
								}
							} else if (PlayerInfo[para1][pSex] == 2) {
								if (PlayerInfo[para1][pRank] == 1) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								} else if (PlayerInfo[para1][pRank] == 2) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								} else if (PlayerInfo[para1][pRank] == 3) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								} else if (PlayerInfo[para1][pRank] == 4) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								} else if (PlayerInfo[para1][pRank] == 5) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								} else if (PlayerInfo[para1][pRank] == 6) {
									PlayerInfo[para1][pChar] = 13;
									SetPlayerSkin(para1, 13);
								}
							}
						}
					}
				}
			} else {
				SendClientMessage(playerid, COLOR_RED, "Ты не авторизован для использования этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/makeleader", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /makeleader [id] [номер(0-20)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (level > 20 || level < 0) {
				error(playerid, " Номер фракции можно ввести от 0 до 20.");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 5) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						if (PlayerInfo[para1][pMember] > 0 || PlayerInfo[para1][pFMember] < 255) {
							error(playerid, " Этот игрок состоит в фракции.");
							return true;
						}
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLeader] = level;
						PlayerInfo[para1][pJob] = 0;
						SetPlayerHealth(para1, 0);
						new ttext[20];
						if (level == 0) {
							SendClientMessage(para1, COLOR_LIGHTBLUE, "Вы были сняты с поста лидер");
							format(string, sizeof(string), "Вы назначили %s лидером фракции.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (level == 1) {
							ttext = "LSPD";
						} else if (level == 2) {
							ttext = "F.B.I.";
						} else if (level == 3) {
							ttext = "National Guard";
						} else if (level == 4) {
							ttext = "МЧС";
						} else if (level == 5) {
							ttext = "La Cosa Nostra";
						} else if (level == 6) {
							ttext = "Yakuza";
						} else if (level == 8) {
							ttext = "Hitman Agency";
						} else if (level == 9) {
							ttext = "Репортёр";
						} else if (level == 10) {
							ttext = "Taxi Cab Company";
						} else if (level == 12) {
							ttext = "Street Racers";
						} else if (level == 13) {
							ttext = "Grove Street Gang";
						} else if (level == 14) {
							ttext = "El Coronos ";
						} else if (level == 15) {
							ttext = "Los Santos Vagos";
						} else if (level == 19) {
							ttext = "San Fierro Rifa";
						} else if (level == 16) {
							ttext = "The Ballas Gang";
						} else if (level == 18) {
							ttext = "Triads Mafia";
						} else if (level == 20) {
							ttext = "Russian Mafia";
						}
						if (level > 0) {
							format(string, sizeof(string), "Вы были назначены лидером %s. Назначил(а): %s", ttext, sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы назначили %s лидером фракции.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						if (level == 0) {
							PlayerInfo[para1][pChar] = 0;
							gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pLeader] = 0;
							PlayerInfo[para1][pJob] = 0;
							MedicBill[para1] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(para1, gTeam[para1], CIV[rand], 0.0, 0.0, 0.0, 0, 0, 0, 0, 0, 0, 0);
							PlayerInfo[para1][pChar] = CIV[rand];
							SpawnPlayer(para1);
							return true;
						}
						if (level == 0) {
							PlayerInfo[para1][pChar] = 79;
						} else if (level == 1) {
							PlayerInfo[para1][pChar] = 265;
						} else if (level == 2) {
							PlayerInfo[para1][pChar] = 164;
						} else if (level == 3) {
							PlayerInfo[para1][pChar] = 287;
						} else if (level == 4) {
							PlayerInfo[para1][pChar] = 276;
						} else if (level == 5) {
							PlayerInfo[para1][pChar] = 113;
						} else if (level == 6) {
							PlayerInfo[para1][pChar] = 120;
						} else if (level == 7) {
							PlayerInfo[para1][pChar] = 147;
						} else if (level == 8) {
							PlayerInfo[para1][pChar] = 166;
						} else if (level == 9) {
							PlayerInfo[para1][pChar] = 295;
						} else if (level == 10) {
							PlayerInfo[para1][pChar] = 61;
						} else if (level == 11) {
							PlayerInfo[para1][pChar] = 171;
						} else if (level == 12) {
							PlayerInfo[para1][pChar] = 48;
						} else if (level == 13) {
							PlayerInfo[para1][pChar] = 270;
						} else if (level == 14) {
							PlayerInfo[para1][pChar] = 292;
						} else if (level == 15) {
							PlayerInfo[para1][pChar] = 110;
						} else if (level == 16) {
							PlayerInfo[para1][pChar] = 104;
						} else if (level == 16) {
							SendClientMessage(playerid, COLOR_WHITE, "Не доступно.");
							return true;
						} else if (level == 18) {
							PlayerInfo[para1][pChar] = 294;
						} else if (level == 19) {
							PlayerInfo[para1][pChar] = 173;
						} else if (level == 20) {
							PlayerInfo[para1][pChar] = 272;
						}
						gTeam[para1] = 20;
						PlayerInfo[para1][pTeam] = 20;
						SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					}
				}
			} else {
				error(playerid, " Нет прав на использования данной команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gotols", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (GetPlayerState(playerid) == 2) {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePosition(tmpcar, 1529.6823, -1684.2125, 13.3828);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
				} else {
					SetPlayerPos(playerid, 1529.6823, -1684.2125, 13.3828);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы телепортировали себя в LS.");
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "Телепорт: %s телепортировался в Los-Santos.", adminname);
				ABroadCast(COLOR_YELLOW, string, 1);
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gotolv", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (GetPlayerState(playerid) == 2) {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePosition(tmpcar, 2034.1964, 1536.1984, 10.8203);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
				} else {
					SetPlayerPos(playerid, 2034.1964, 1536.1984, 10.8203);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы телепортировали себя в LV.");
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "Телепорт: %s телепортировался в Las-Venturas.", adminname);
				ABroadCast(COLOR_YELLOW, string, 1);
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gotosf", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (GetPlayerState(playerid) == 2) {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePosition(tmpcar, -1999.0635, 120.0466, 27.6875);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
				} else {
					SetPlayerPos(playerid, -1999.0635, 120.0466, 27.6875);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы телепортировали себя в SF.");
				SetPlayerInterior(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string, sizeof(string), "Телепорт: %s телепортировался в San-Fierro.", adminname);
				ABroadCast(COLOR_YELLOW, string, 1);
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/goto", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD2, "{00C0FF}Используйте{FFFFFF} : /goto [playerid/PartOfName]");
				return true;
			}
			new Float:plocx, Float:plocy, Float:plocz;
			new plo;
			new plow[MAX_PLAYER_NAME];
			if (plo != INVALID_PLAYER_ID) {
				if (PlayerInfo[playerid][pAdmin] >= 1) {
					GetPlayerPos(plo, plocx, plocy, plocz);
					GetPlayerName(plo, plow, sizeof(plow));
					if (GetPlayerState(playerid) == 2) {
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePosition(tmpcar, plocx, plocy + 4, plocz);
						TelePos[playerid][0] = 0.0;
						TelePos[playerid][1] = 0.0;
					} else {
						SetPlayerPos(playerid, plocx, plocy + 2, plocz);
					}
					SetPlayerInterior(playerid, GetPlayerInterior(plo));
					SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
					SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы.");
					new adminname[32];
					GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string, sizeof(string), "Телепорт: %s телепортировался к игроку %s.", adminname, plow);
					ABroadCast(COLOR_YELLOW, string, 1);
				} else {
					error(playerid, " У вас нет доступа.");
				}
			} else {
				format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : %d неверный ид.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gethere", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /gethere [playerid/PartOfName]");
				return true;
			}
			new Float:plocx, Float:plocy, Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo)) {
				if (plo != INVALID_PLAYER_ID) {
					if (PlayerInfo[playerid][pAdmin] >= 2) {
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if (GetPlayerState(plo) == 2) {
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePosition(tmpcar, plocx, plocy + 4, plocz);
						} else {
							SetPlayerPos(plo, plocx, plocy + 2, plocz);
						}
						SetPlayerInterior(plo, GetPlayerInterior(playerid));
						SetPlayerVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
						SendClientMessage(plo, COLOR_RED, "Вы были телепортированы Администрацией.");
						new adminname[32];
						GetPlayerName(playerid, adminname, sizeof(adminname));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "Телепорт: %s телепортировал игрока %s к себе.", adminname, giveplayer);
						ABroadCast(COLOR_YELLOW, string, 1);
					} else {
						error(playerid, " Вам не доступна данная команда.");
					}
				}
			} else {
				format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : %d не активный игрок.", plo);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/tpto", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3) {
		new telename[MAX_PLAYER_NAME];
		new teleid;
		new adminname[32];
		new Float:pX, Float:pY, Float:pZ;
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /tpto [id игрока] [к id игрока]");
			return true;
		}
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /tpto [id игрока] [к id игрока]");
			return true;
		}
		teleid = strval(tmp);
		if (IsPlayerConnected(giveplayerid) && IsPlayerConnected(teleid)) {
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(teleid, telename, sizeof(telename));
			GetPlayerName(playerid, adminname, sizeof(adminname));
			GetPlayerPos(teleid, pX, pY, pZ);
			SetPlayerPos(giveplayerid, pX, pY, pZ);
			format(string, sizeof(string), "Вы телепортировали %s к %s.", giveplayer, telename);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Ты был(а) телепортирован(а) к %s.", telename);
			SendClientMessage(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "Телепорт: %s телепортировал %s к %s.", adminname, giveplayer, telename);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		if (!IsPlayerConnected(giveplayerid)) {
			format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : %d не активный игрок.", giveplayerid);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if (!IsPlayerConnected(teleid)) {
			format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : %d не активный игрок.", teleid);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}

	if (strcmp(cmd, "/tp", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				ShowPlayerDialog(playerid, 99, DIALOG_STYLE_LIST, "[ Администрационый Телепорт ]", "Автошкола\nОтель LS\nОтель LV\nЛСПД\nКПП Армии\nФортДеМорган\nБанк\nJizzy\nАлхамбра\nАэропорт LS\nАэропорт SF\nАэропорт LV\nГора Чиллиад\nЗабр.Аэро", "Выбрать", "Отмена");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gm", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 2) {
				ShowPlayerDialog(playerid, 547, DIALOG_STYLE_LIST, "Мафии (телепорт)", "Yakuza\nRussian Mafia\nTriads\nLa Coza Nostra\n", "Выбрать", "Отмена");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/mark", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				GetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы установили точку телепорта (используте /gotomark для тп в неё)");
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gotomark", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (GetPlayerState(playerid) == 2) {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePosition(tmpcar, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
				} else {
					SetPlayerPos(playerid, TeleportDest[playerid][0], TeleportDest[playerid][1], TeleportDest[playerid][2]);
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы телепортировались.");
				SetPlayerInterior(playerid, 0);
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gotocar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /gotocar [carid]");
				return true;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				new Float:cwx2, Float:cwy2, Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2) {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePosition(tmpcar, cwx2, cwy2, cwz2);
					TelePos[playerid][0] = 0.0;
					TelePos[playerid][1] = 0.0;
				} else {
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были телепортированы");
				SetPlayerInterior(playerid, 0);
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gethere", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /gethere [ID игрока]");
				return true;
			}
			new Float:plocx, Float:plocy, Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo)) {
				if (plo != INVALID_PLAYER_ID) {
					if (PlayerInfo[plo][pAdmin] > PlayerInfo[playerid][pAdmin]) {
						error(playerid, " Вы не можете телепортировать к себе администратора, старше Вас по рангу.");
						return true;
					}
					if (PlayerInfo[playerid][pAdmin] >= 0) {
						GetPlayerPos(playerid, plocx, plocy, plocz);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SendClientMessage(plo, COLOR_GREY, "Вы были телепортированы.");
					} else {
						error(playerid, " У вас недостаточно прав для того, чтобы использовать эту команду.");
					}
				}
			} else {
				error(playerid, " Нет игрока с таким ID.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fuelcars", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 5) {
				for (new c = 0; c < CAR_AMOUNT; c++) {
					Gas[c] = GasMax;
				}
				BroadCast(COLOR_WHITE, "{00C0FF}YourWorld{FFFFFF} : Все автомобили были заправлены Администрацией.");
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/givepack", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givepack [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3) {
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						ServerGivePlayerWeapons(giveplayerid, 24, 500);
						ServerGivePlayerWeapons(giveplayerid, 31, 999);
						ServerGivePlayerWeapons(giveplayerid, 25, 500);
						ServerGivePlayerWeapons(giveplayerid, 33, 200);
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/givegun", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givegun [id] [weaponid] [ammo]");
				return true;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givegun [id] [weaponid] [ammo]");
				return true;
			}
			if (gun < 1 || gun > 46) {
				error(playerid, " Такого оружия нет.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if (ammo < 1 || ammo > 9999) {
				error(playerid, " Патронов может быть от 1 до 9999 шт.");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 3) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						ServerGivePlayerWeapons(playa, gun, ammo);
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/givedrugs", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 6) {
			if (IsPlayerConnected(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givedrugs [id] [кол-во наркотиков]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givedrugs [id] [кол-во наркотиков]");
					return true;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
				PlayerInfo[giveplayerid][pDrugs] = moneys;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "YourWorld : Администратор %s дал %s %d грамм наркотиков.", sendername, giveplayer, moneys);
				ABroadCast(COLOR_YELLOW, string, 1);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/givemats", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 6) {
			if (IsPlayerConnected(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givemats [id] [кол-во]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givemats [id] [кол-во]");
					return true;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
				PlayerInfo[giveplayerid][pMats] = moneys;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "YourWorld : Администратор: %s дал %s %d материалов.", sendername, giveplayer, moneys);
				ABroadCast(COLOR_YELLOW, string, 1);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/update", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 5) {
			SendClientMessage(playerid, COLOR_YELLOW, "Все аккаунты игроков были сохранены.");
		} else {
			error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
		}
		return true;
	}

	if (strcmp(cmd, "/sethp", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sethp [id] [кол-во здоровья]");
				return true;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						if (health < 0 || health > 160) {
							error(playerid, " Не ниже 0 и не выше 160.");
							return true;
						}
						SetPlayerHealth(playa, health);
						for (new i = 0; i < GetMaxPlayers(); i++) {
							if (IsPlayerConnected(i)) {
								if (PlayerInfo[i][pAdmin] >= 6) {
									format(string, sizeof(string), "Set-Hp Система: %s установил жизни игроку %s на %d.", sendername, giveplayer, health);
									SendClientMessage(i, COLOR_YELLOW, string);
								}
							}
						}
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/bizlist", true) == 0) {
		string[0] = 0;
		for (new h = 0; h < sizeof(BizzInfo); h++) {
			new string1[144];
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
				if (BizzInfo[h][bMafia] != 16) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 16) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {
				if (BizzInfo[h][bMafia] != 5) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 5) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
				if (BizzInfo[h][bMafia] != 6) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 6) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) {
				if (BizzInfo[h][bMafia] != 13) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 13) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) {
				if (BizzInfo[h][bMafia] != 14) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 14) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) {
				if (BizzInfo[h][bMafia] != 15) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 15) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {
				if (BizzInfo[h][bMafia] != 18) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 18) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
				if (BizzInfo[h][bMafia] != 19) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 19) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {
				if (BizzInfo[h][bMafia] != 20) {
					continue;
				}
				if (BizzInfo[h][bMafia] == 20) {
					format(string1, sizeof(string1), "%s", BizzInfo[h][bMessage]);
				}
			}
			format(string, sizeof(string), "%s%s\n", string, string1);
		}
		for (new h = 0; h < sizeof(SBizzInfo); h++) {
			new string1[144];
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
				if (SBizzInfo[h][sbMafia] != 16) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 16) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {
				if (SBizzInfo[h][sbMafia] != 5) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 5) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
				if (SBizzInfo[h][sbMafia] != 6) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 6) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) {
				if (SBizzInfo[h][sbMafia] != 13) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 13) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) {
				if (SBizzInfo[h][sbMafia] != 14) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 14) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) {
				if (SBizzInfo[h][sbMafia] != 15) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 15) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
				if (SBizzInfo[h][sbMafia] != 16) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 16) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {
				if (SBizzInfo[h][sbMafia] != 18) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 18) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
				if (SBizzInfo[h][sbMafia] != 19) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 19) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {
				if (SBizzInfo[h][sbMafia] != 20) {
					continue;
				}
				if (SBizzInfo[h][sbMafia] == 20) {
					format(string1, sizeof(string1), "%s", SBizzInfo[h][sbMessage]);
				}
			}
			format(string, sizeof(string), "%s%s\n", string, string1);
		}
		ShowPlayerDialog(playerid, 1351, DIALOG_STYLE_MSGBOX, "{00C0FF}Список бизнесов:", string, "Ok", "");
		return true;
	}

	if (strcmp(cmd, "/veh", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 3) {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /veh [carid] [цвет 1] [цвет 2]");
				return true;
			}
			new car;
			car = strval(tmp);
			if (car < 400 || car > 611) {
				error(playerid, " Номер Транспортного средства не может быть ниже 400 или выше 611.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /veh [carid] [цвет 1] [цвет 2]");
				return true;
			}
			new color1;
			color1 = strval(tmp);
			if (color1 < 0 || color1 > 126) {
				error(playerid, " Номер цвета от 0 до 126.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /veh [ид транспорта] [цвет 1] [цвет 2]");
				return true;
			}
			new color2;
			color2 = strval(tmp);
			if (color2 < 0 || color2 > 126) {
				error(playerid, " Номер цвета от 0 до 126.");
				return true;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			new carid = CreateVehicle(car, X, Y, Z, 0.0, color1, color2, 12000);
			CreatedCars[CreatedCar] = carid;
			CreatedCar++;
			format(string, sizeof(string), "Вы создали транспорт [%d].", carid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return true;
	}

	if (strcmp(cmd, "/destroycars", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 3) {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
			for (new i = 0; i < sizeof(CreatedCars); i++) {
				if (i != 0) {
					DestroyVehicle(i);
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "Транспорт уничтожен.");
		}
		return true;
	}

	if (strcmp(cmd, "/weather", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 5) {
				error(playerid, " Вы не можете использовать эту команду.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /weather [weatherid]");
				return true;
			}
			new weather;
			weather = strval(tmp);
			if (weather < 0 || weather > 45) {
				error(playerid, " ID погоды от 0 до 45.");
				return true;
			}
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_GREY, "Погода установлена.");
		}
		return true;
	}

	if (strcmp(cmd, "/weatherall", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /weatherall [weatherid]");
				return true;
			}
			new weather;
			weather = strval(tmp);
			if (weather < 0 || weather > 45) {
				error(playerid, " ID погоды от 0 до 45.");
				return true;
			}
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "Установлена погода разнообразная.");
		}
		return true;
	}

	if (strcmp(cmd, "/money", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /money [id] [сумма]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						ReserPlayerBablo(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerBablo(playa, money);
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/givemoney", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /givemoney [id] [сумма]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						ConsumingMoney[playa] = 1;
						GivePlayerBablo(playa, money);
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/explode", true) == 0) {
		GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 2) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /explode [id]");
			return true;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if (IsPlayerConnected(giveplayerid)) {
			if (PlayerInfo[playerid][pAdmin] < 4) {
				error(playerid, " У тебя нет прав на использование этой команды.");
				return true;
			}
			if (giveplayerid == INVALID_PLAYER_ID) {
				return true;
			}
			new PlayerNam[30];
			GetPlayerName(playerid, PlayerNam, 30);
			format(string, sizeof(string), "Explode : %s взорвал игрока %s", PlayerNam, giveplayer);
			ABroadCast(COLOR_YELLOW, string, 1);
			SetPlayerHealth(giveplayerid, 10);
			new Float:boomx, Float:boomy, Float:boomz;
			GetPlayerPos(giveplayerid, boomx, boomy, boomz);
			CreateExplosion(boomx, boomy, boomz, 7, 10);
			printf("YourWorld : %s использовал /explode на игроке %s", PlayerNam, giveplayer);
		}
		return true;
	}

	if (strcmp(cmd, "/slap", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /slap [id]");
				return true;
			}
			new Float:slx, Float:sly, Float:slz, playa, Float:shealth;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerHealth(playa, shealth);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz + 9);
						PlayerPlaySound(playa, 1130, slx, sly, slz + 5);
						new planame[32];
						new adminname[32];
						GetPlayerName(playerid, adminname, sizeof(adminname));
						GetPlayerName(giveplayerid, planame, sizeof(planame));
						format(string, sizeof(string), "Slap: %s слапнул игрока %s.", adminname, planame);
						ABroadCast(COLOR_YELLOW, string, 1);
					}
				}
			} else {
				error(playerid, " Вы не можете использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/delivery", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] == 3) {
				new newcar = GetPlayerVehicleID(playerid);
				if (!(newcar >= dalnoboishikauto[0] && newcar <= dalnoboishikauto[1])) {
					error(playerid, "  Вы не можете доставлять грузы, находясь не в грузовике.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 80, -87.8138, -309.6874, 1.4297)) {
					if (PlayerInfo[playerid][pTruckTime] == 0) {
						new level = PlayerInfo[playerid][pDalnoboiSkill];
						if (level >= 0 && level <= 50) {
							PlayerInfo[playerid][pTruckTime] = 60 * 6;
						} else if (level >= 51 && level <= 100) {
							PlayerInfo[playerid][pTruckTime] = 60 * 5;
						}
						if (level >= 101 && level <= 200) {
							PlayerInfo[playerid][pTruckTime] = 60 * 4;
						}
						if (level >= 201 && level <= 400) {
							PlayerInfo[playerid][pTruckTime] = 60 * 3;
						}
						if (level >= 401) {
							PlayerInfo[playerid][pTruckTime] = 60 * 2;
						}
						new randad = random(sizeof(RandomDalnoboiMarkers));
						SetPlayerCheckpoint(playerid, RandomDalnoboiMarkers[randad][0], RandomDalnoboiMarkers[randad][1], RandomDalnoboiMarkers[randad][2], 10.0);
						GameTextForPlayer(playerid, "~w~PY€ ЊO‡YЌE® ~n~~r~ B MO„E¦E EO ѓOC¦A…¦", 5000, 1);
						CP[playerid] = 777;
					} else {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы уже доставили груз, следующий будет доступен через %d секунд.", PlayerInfo[playerid][pTruckTime]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				} else {
					error(playerid, " Вы должны быть рядом с погрузочной станцией.");
				}
			} else {
				error(playerid, " Вы не дальнобойщик.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/sban", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, 0xFFFFFFFF, "{00C0FF}Используйте{FFFFFF} : /sban [playerid] [число] [причина]");
			return true;
		}
		giveplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, 0xFFFFFFFF, "{00C0FF}Используйте{FFFFFF} : /sban [playerid] [число] [причина]");
			return true;
		}
		new chislo = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 1) {
			if (!IsPlayerConnected(giveplayerid)) {
				error(playerid, " Этот игрок не в игре.");
				return true;
			}
			if (giveplayerid != INVALID_PLAYER_ID) {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF}: /ban [playerid] [число] [причина]");
					return true;
				}
				if (strval(tmp) < 1 || strval(tmp) > 91) {
					error(playerid, " Количество дней бана игрока,должно быть от 1 до 91.");
					return true;
				}
				new PlayerNick[MAX_PLAYER_NAME], PlayerBan[MAX_PLAYER_NAME];
				new ip[15];
				GetPlayerIp(giveplayerid, ip, 15);
				GetPlayerName(playerid, PlayerNick, MAX_PLAYER_NAME);
				GetPlayerName(giveplayerid, PlayerBan, MAX_PLAYER_NAME);
				new arank[64];
				if (PlayerInfo[playerid][pAdmin] == 6) {
					arank = "Гл. Администратором";
				} else if (PlayerInfo[playerid][pAdmin] == 5) {
					arank = "Гл.Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 4) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 3) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 2) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 1) {
					arank = "Модератором";
				} else {
					arank = "Модератор";
				}
				format(string, sizeof(string), "Вы забанили игрокика %s был(а) забанен(а) %d дней. Причина: %s.", PlayerBan, chislo, (result));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "Вы  были забанены %s %s  на %d дней. Причина: %s.", arank, PlayerNick, chislo, (result));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pBlockeds] += 1;
				SavePlayer(giveplayerid);
				GetPlayerIp(giveplayerid, ip, sizeof(ip));
				AddBan(giveplayerid, PlayerBan, PlayerNick, 3, chislo, result);
				format(string, sizeof(string), "banip %s", ip);
				SendRconCommand(string);
				SendRconCommand("reloadbans");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/ban", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, 0xFFFFFFFF, "{00C0FF}Используйте{FFFFFF} : /ban [playerid] [число] [причина]");
			return true;
		}
		giveplayerid = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, 0xFFFFFFFF, "{00C0FF}Используйте{FFFFFF} : /ban [playerid] [число] [причина]");
			return true;
		}
		new chislo = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 1) {
			if (!IsPlayerConnected(giveplayerid)) {
				error(playerid, " Этот игрок не в игре.");
				return true;
			}
			if (giveplayerid != INVALID_PLAYER_ID) {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) idx++;
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF}: /ban [playerid] [число] [причина]");
					return true;
				}
				if (strval(tmp) < 1 || strval(tmp) > 91) {
					error(playerid, " Количество дней бана игрока,должно быть от 1 до 91.");
					return true;
				}
				new PlayerNick[MAX_PLAYER_NAME], PlayerBan[MAX_PLAYER_NAME];
				new ip[15];
				GetPlayerIp(giveplayerid, ip, 15);
				GetPlayerName(playerid, PlayerNick, MAX_PLAYER_NAME);
				GetPlayerName(giveplayerid, PlayerBan, MAX_PLAYER_NAME);
				new arank[64];
				if (PlayerInfo[playerid][pAdmin] == 6) {
					arank = "Гл. Администратором";
				} else if (PlayerInfo[playerid][pAdmin] == 5) {
					arank = "Гл.Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 4) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 3) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 2) {
					arank = "Модератором";
				} else if (PlayerInfo[playerid][pAdmin] == 1) {
					arank = "Модератором";
				} else {
					arank = "Модератор";
				}
				format(string, sizeof(string), "YourWorld : %s был(а) забанен(а) %s %s на %d дней. Причина: %s.\n", PlayerBan, arank, PlayerNick, chislo, (result));
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				WriteLog(string, "ban.cfg");
				PlayerInfo[giveplayerid][pBlockeds] += 1;
				SavePlayer(giveplayerid);
				GetPlayerIp(giveplayerid, ip, sizeof(ip));
				AddBan(giveplayerid, PlayerBan, PlayerNick, 3, chislo, result);
				format(string, sizeof(string), "banip %s", ip);
				SendRconCommand(string);
				SendRconCommand("reloadbans");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unban", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 5) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unban [players nick]");
				return true;
			}
			UnBan(tmp);
		}
		return true;
	}

	if (strcmp(cmd, "/vor", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 6) {
				SendClientMessage(playerid, COLOR_WHITE, " Доступно только для карманников");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /vor [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if (IsPlayerConnected(giveplayerid)) {
				if (PlayerInfo[playerid][pJob] == PlayerInfo[giveplayerid][pJob]) {
					SendClientMessage(playerid, COLOR_WHITE, " Нельзя ограбить карманника");
					return true;
				}
				if (PlayerInfo[giveplayerid][pLevel] < 1) {
					error(playerid, " Игрок должен быть как минимум 1lvl что бы его ограбить.");
					return true;
				}
				if (giveplayerid == INVALID_PLAYER_ID) {
					error(playerid, " Игрок не найден.");
					return true;
				}
				if (GetPlayerBablo(giveplayerid) < 1000) {
					SendClientMessage(playerid, COLOR_WHITE, " Этот игрок слишком беден.");
					return true;
				}
				if (ProxDetectorS(2.0, playerid, giveplayerid)) {
					if (Ograblen[giveplayerid] == 1) {
						SendClientMessage(playerid, COLOR_WHITE, "Этот игрок уже был ограблен");
						return true;
					}
					if (PlayerInfo[playerid][pVorSkill] >= 0 && PlayerInfo[playerid][pVorSkill] <= 50) {
						new postradal = (GetPlayerBablo(giveplayerid) / 100);
						if (PlayerInfo[playerid][pWanted] >= 1) {
							SendClientMessage(playerid, COLOR_WHITE, "Ты уже в розыске,сними розыск в убежище карманников.");
							return true;
						}
						GivePlayerBablo(giveplayerid, -postradal);
						GivePlayerBablo(playerid, postradal);
						format(string, sizeof(string), "Вы успешно обворовали %s на сумму %d$.", giveplayer, postradal);
						SendClientMessage(playerid, 0x6AB1FFFF, string);
						format(string, sizeof(string), "Вы были обворованы на сумму %d$ карманником %s.", postradal, sendername);
						SendClientMessage(giveplayerid, 0x6AB1FFFF, string);
						PlayerInfo[playerid][pWanted] += 1;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						Ograblen[giveplayerid] = 1;
					} else if (PlayerInfo[playerid][pVorSkill] >= 51 && PlayerInfo[playerid][pVorSkill] <= 100) {
						new postradal = (GetPlayerBablo(giveplayerid) / 98);
						if (PlayerInfo[playerid][pWanted] >= 2) {
							SendClientMessage(playerid, COLOR_WHITE, "Ты уже в розыске,сними розыск в убежище карманников");
							return true;
						}
						GivePlayerBablo(giveplayerid, -postradal);
						GivePlayerBablo(playerid, postradal);
						format(string, sizeof(string), "Вы успешно обворовали %s на сумму %d $.", giveplayer, postradal);
						SendClientMessage(playerid, 0x6AB1FFFF, string);
						format(string, sizeof(string), "Вы были обворованы на сумму %d$ карманником %s.", postradal, sendername);
						SendClientMessage(giveplayerid, 0x6AB1FFFF, string);
						PlayerInfo[playerid][pWanted] += 1;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						Ograblen[giveplayerid] = 1;
					} else if (PlayerInfo[playerid][pVorSkill] >= 101 && PlayerInfo[playerid][pVorSkill] <= 200) {
						new postradal = (GetPlayerBablo(giveplayerid) / 96);
						if (PlayerInfo[playerid][pWanted] >= 3) {
							SendClientMessage(playerid, COLOR_WHITE, "Ты уже в розыске,сними розыск в убежище карманников");
							return true;
						}
						GivePlayerBablo(giveplayerid, -postradal);
						GivePlayerBablo(playerid, postradal);
						format(string, sizeof(string), "Вы успешно обворовали %s на сумму %d $.", giveplayer, postradal);
						SendClientMessage(playerid, 0x6AB1FFFF, string);
						format(string, sizeof(string), "Вы были обворованы на сумму %d$ карманником %s.", postradal, sendername);
						SendClientMessage(giveplayerid, 0x6AB1FFFF, string);
						PlayerInfo[playerid][pWanted] += 1;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						Ograblen[giveplayerid] = 1;
					} else if (PlayerInfo[playerid][pVorSkill] >= 201 && PlayerInfo[playerid][pVorSkill] <= 400) {
						new postradal = (GetPlayerBablo(giveplayerid) / 94);
						if (PlayerInfo[playerid][pWanted] >= 4) {
							SendClientMessage(playerid, COLOR_WHITE, "Ты уже в розыске,сними розыск в убежище карманников");
							return true;
						}
						GivePlayerBablo(giveplayerid, -postradal);
						GivePlayerBablo(playerid, postradal);
						format(string, sizeof(string), "Вы успешно обворовали %s на сумму %d $.", giveplayer, postradal);
						SendClientMessage(playerid, 0x6AB1FFFF, string);
						format(string, sizeof(string), "Вы были обворованы на сумму %d$ карманником %s.", postradal, sendername);
						SendClientMessage(giveplayerid, 0x6AB1FFFF, string);
						PlayerInfo[playerid][pWanted] += 1;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						Ograblen[giveplayerid] = 1;
					} else if (PlayerInfo[playerid][pVorSkill] >= 401) {
						new postradal = (GetPlayerBablo(giveplayerid) / 92);
						if (PlayerInfo[playerid][pWanted] >= 5) {
							SendClientMessage(playerid, COLOR_WHITE, "Ты уже в розыске,сними розыск в убежище карманников");
							return true;
						}
						GivePlayerBablo(giveplayerid, -postradal);
						GivePlayerBablo(playerid, postradal);
						format(string, sizeof(string), "Вы успешно обворовали %s на сумму %d $.", giveplayer, postradal);
						SendClientMessage(playerid, 0x6AB1FFFF, string);
						format(string, sizeof(string), "Вы были обворованы на сумму %d$ карманником %s.", postradal, sendername);
						SendClientMessage(giveplayerid, 0x6AB1FFFF, string);
						PlayerInfo[playerid][pWanted] += 1;
						SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						Ograblen[giveplayerid] = 1;
					}
					if (PlayerInfo[playerid][pVorSkill] < 401) {
						PlayerInfo[playerid][pVorSkill] += 1;
						if (PlayerInfo[playerid][pVorSkill] == 50) {
							SendClientMessage(playerid, COLOR_YELLOW, "Ваш воровской навык теперь 2 уровня.");
						} else if (PlayerInfo[playerid][pVorSkill] == 100) {
							SendClientMessage(playerid, COLOR_YELLOW, "Ваш воровской навык теперь 3 уровня.");
						} else if (PlayerInfo[playerid][pVorSkill] == 200) {
							SendClientMessage(playerid, COLOR_YELLOW, "Ваш воровской навык теперь 4 уровня.");
						} else if (PlayerInfo[playerid][pVorSkill] == 400) {
							SendClientMessage(playerid, COLOR_YELLOW, "Ваш воровской навык теперь 5 уровня.");
						}
					}
				} else {
					error(playerid, " Вы слишком далеко.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/facepalm", true) == 0) {
		ApplyAnimation(playerid, "MISC", "plyr_shkhead", 4.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp(cmd, "/piss", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		SetPlayerSpecialAction(playerid, 68);
		return true;
	}

	if (strcmp(cmd, "/wank", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.1, 0, 2, 1, 1, 1);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp(cmd, "/handsup", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
			AnimationOn[playerid] = 1;
		}
		return true;
	}

	if (strcmp(cmd, "/getarrested", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp(cmd, "/robman", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp(cmd, "/fucku", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		OnePlayAnim(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp(cmd, "/taichi", true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/laugh", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp("/crossarms", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/lay", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/vomit", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp("/wave", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/slapass", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp("/deal", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
		return true;
	}

	if (strcmp("/gro", cmdtext, true) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SITTING);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/crack", cmdtext, true, 6) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp("/smoke", cmdtext, true, 4) == 0) {
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		AnimationOn[playerid] = 1;
		return true;
	}

	if (strcmp(cmd, "/dance", true) == 0) {
		new dancestyle;
		if (PlayerTied[playerid] > 0 || PlayerCuffed[playerid] > 0 || PlayerCuffedTime[playerid] > 0 || PlayerOnJob[playerid]) {
			error(playerid, " Вы обездвижены и не можете использовать анимацию.");
			return true;
		}
		tmp = strtok(cmdtext, idx);
		dancestyle = strval(tmp);
		if (!strlen(tmp) || dancestyle < 1 || dancestyle > 4) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /dance [1-4]");
			return true;
		}
		if (dancestyle == 1) {
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
			AnimationOn[playerid] = 1;
		} else if (dancestyle == 2) {
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
			AnimationOn[playerid] = 1;
		} else if (dancestyle == 3) {
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
			AnimationOn[playerid] = 1;
		} else if (dancestyle == 4) {
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
			AnimationOn[playerid] = 1;
		}
		return true;
	}

	if (strcmp(cmd, "/iznas", true) == 0) {
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /iznas ID игрока");
			return true;
		}
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (IsPlayerConnected(giveplayerid)) {
			if (giveplayerid != INVALID_PLAYER_ID) {
				if (!ProxDetectorS(2.0, playerid, giveplayerid)) {
					SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок должен находиться вблизи от Вас.");
					return true;
				}
				if (PlayerInfo[giveplayerid][pAdmin] > 0) {
					error(playerid, " У этого игрока стальное очко.");
					return true;
				}
				if (playerid == giveplayerid) {
					error(playerid, " Ваш член слишком мал,что бы дотянуться до вашей жопы.");
					return true;
				}
				SendClientMessage(playerid, COLOR_GREY, "Вы изнасиловали игрока.");
				SendClientMessage(giveplayerid, COLOR_GREY, "Вы были изнасилованы.");
				ApplyAnimation(giveplayerid, "SNM", "SPANKINGW", 4.1, 0, 1, 1, 1, 1);
				ApplyAnimation(playerid, "SNM", "SPANKEDW", 4.1, 0, 1, 1, 1, 1);
				AnimationOn[playerid] = 1;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/engine", true) == 0) {
		new name[MAX_PLAYER_NAME];
		if (IsPlayerInAnyVehicle(playerid)) {
			if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				new carid = GetPlayerVehicleID(playerid);
				if (!IsABMX(carid)) {
					if (CarEngine[carid] == 0) {
						new vehicleid = GetPlayerVehicleID(playerid);
						new Float:vh;
						GetVehicleHealth(vehicleid, vh);
						if (Gas[GetPlayerVehicleID(playerid)] <= 0) {
							error(playerid, " В транспорте нет бензина.");
							return true;
						}
						if (vh < 400) {
							GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(carid, false, lights, alarm, doors, bonnet, boot, objective);
							error(playerid, " Двигатель сломан.");
							return true;
						}
						GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(carid, true, lights, alarm, doors, bonnet, boot, objective);
						GetPlayerName(playerid, name, sizeof(name));
						format(string, sizeof(string), "%s завел(а) двигатель.", name);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						CarEngine[carid] = 1;
					} else if (CarEngine[carid] == 1) {
						GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(carid, false, lights, alarm, doors, bonnet, boot, objective);
						GetPlayerName(playerid, name, sizeof(name));
						format(string, sizeof(string), "%s заглушил(а) двигатель.", name);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						CarEngine[carid] = 0;
					}
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/wanking", true) == 0) {
		if (PlayerInfo[playerid][pFBancka] == 1) {
			SendClientMessage(playerid, COLOR_WHITE, "У вас уже есть наполненная баночка, продайте ее.");
			return true;
		}
		if (PlayerInfo[playerid][pBancka] == 0) {
			SendClientMessage(playerid, COLOR_WHITE, "Сначала купите банку");
			return true;
		}
		if (!IsPlayerInRangeOfPoint(playerid, 3.0, 347.2221, 162.3731, 1014.1875)) {
			error(playerid, "Вы не в комнате");
			return true;
		}
		if (GetPVarInt(playerid, "Sperma") > gettime()) {
			error(playerid, "Невозможно использовать сейчас эту команду.");
			return true;
		}
		PlayerInfo[playerid][pBancka] = 0;
		SetPVarInt(playerid, "Sperma", gettime() + 3600);
		PlayerInfo[playerid][pDrochSkill] += 1;
		PlayerInfo[playerid][pFBancka] = 1;
		if (PlayerInfo[playerid][pDrochSkill] == 50) {
			SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы 2 уровня.");
		} else if (PlayerInfo[playerid][pDrochSkill] == 100) {
			SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы 3 уровня.");
		} else if (PlayerInfo[playerid][pDrochSkill] == 200) {
			SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы 4 уровня.");
		} else if (PlayerInfo[playerid][pDrochSkill] == 400) {
			SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл донора спермы 5 уровня(максимальный).");
		}
		return true;
	}

	if (strcmp(cmd, "/exchange", true) == 0) {
		if (PlayerInfo[playerid][pFBancka] == 0) {
			SendClientMessage(playerid, COLOR_WHITE, "Наберите Сперму в комнате командой /wanking");
			return true;
		}
		if (!IsPlayerInRangeOfPoint(playerid, 5.0, 1631.0933, 1819.6515, 10.8280)) {
			error(playerid, " Вы не на месте обмена");
			return true;
		}
		PlayerInfo[playerid][pFBancka] = 0;
		if (PlayerInfo[playerid][pDrochSkill] >= 0 && PlayerInfo[playerid][pDrochSkill] <= 50) {
			GivePlayerBablo(playerid, 500);
			SendClientMessage(playerid, COLOR_WHITE, "Вы получили гонорар в размере 500$");
		} else if (PlayerInfo[playerid][pDrochSkill] >= 51 && PlayerInfo[playerid][pDrochSkill] <= 100) {
			GivePlayerBablo(playerid, 1000);
			SendClientMessage(playerid, COLOR_WHITE, "Вы получили гонорар в размере 1000$");
		} else if (PlayerInfo[playerid][pDrochSkill] >= 101 && PlayerInfo[playerid][pDrochSkill] <= 200) {
			GivePlayerBablo(playerid, 1500);
			SendClientMessage(playerid, COLOR_WHITE, "Вы получили гонорар в размере 1500$");
		} else if (PlayerInfo[playerid][pDrochSkill] >= 201 && PlayerInfo[playerid][pDrochSkill] <= 400) {
			GivePlayerBablo(playerid, 2000);
			SendClientMessage(playerid, COLOR_WHITE, "Вы получили гонорар в размере 2000$");
		} else if (PlayerInfo[playerid][pDrochSkill] >= 401) {
			GivePlayerBablo(playerid, 2500);
			SendClientMessage(playerid, COLOR_WHITE, "Вы получили гонорар в размере 2500$");
		}
		return true;
	}

	if (strcmp(cmd, "/helpers", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Активные помощники:");
			for (new i = 0; i < MAX_PLAYERS; i++) {
				if (IsPlayerConnected(i)) {
					if (!PlayerInfo[i][pHelper]) {
						continue;
					}
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, " %s.{00C0FF}Стаж помощника:{FFFFFF} %d", sendername, PlayerInfo[i][pHelper]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
		return true;
	}

	if (strcmp(cmdtext, "/hduty", true) == 0 || strcmp(cmdtext, "/helperduty", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPVarInt(playerid, "Help") > gettime()) {
				error(playerid, " Cменить статус помощника,можно раз в 30 минут.");
				return true;
			}
			if (PlayerInfo[playerid][pHelper] >= 1) {
				if (HelperDuty[playerid] == 0) {
					HelperDuty[playerid] = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{00C0FF}[H]{FFFFFF}elper %s ждет ваши вопросы![/вопрос]", sendername);
					BroadCast(COLOR_WHITE, string);
					SetPVarInt(playerid, "Help", gettime() + 600);
				} else if (HelperDuty[playerid] == 1) {
					HelperDuty[playerid] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "{00C0FF}[H]{FFFFFF}elper %s неактивен.", sendername);
					BroadCast(COLOR_WHITE, string);
					SetPVarInt(playerid, "Help", gettime() + 600);
					return true;
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "У вас нет прав на использование данной команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/vopros", true) == 0 || strcmp(cmd, "/вопрос", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (MuteHelpTime[playerid] != 0) {
				error(playerid, "Вам запретили задавать вопрос на определенное время.");
				return true;
			}
			if (GetPVarInt(playerid, "Vopros") > gettime()) {
				error(playerid, "Задать вопрос,можно раз в 2 минуты.");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) {
				SendClientMessage(playerid, COLOR_GRAD2, "{ffffff}Введите: /vopros [text]");
				return true;
			}
			format(string, sizeof(string), "Вопрос от %s[%d]: %s", sendername, playerid, (result));
			SendHelperMessage(0x10F441AA, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Ваш вопрос отправлен хелперам.");
			SetPVarInt(playerid, "Vopros", gettime() + 120);
		}
		return true;
	}

	if (strcmp(cmd, "/ans", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pHelper] >= 1) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD2, "{ffffff}Введите: /ans [PlayerID] [text]");
					return true;
				}
				if (HelperDuty[playerid] == 1) {
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' ')) {
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if (!strlen(result)) {
								SendClientMessage(playerid, COLOR_GRAD2, "{ffffff}Введите: /ans [PlayerID] [text]");
								return true;
							}
							format(string, sizeof(string), "{00C0FF}[HELPER]{FFFFFF} %s: %s", sendername, (result));
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "{00C0FF}[H]{FFFFFF} %s ответил %s[%d]: %s", sendername, giveplayer, giveplayerid, (result));
							SendHelperMessage(COLOR_WHITE, string);
						}
					} else {
						SendClientMessage(playerid, COLOR_GRAD1, "Этот игрок не в сети.");
					}
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "Вы не на дежурстве.");
				}
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "Нет прав на использование данной команды.");
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Вы не авторизированы.");
		}
		return true;
	}

	if (strcmp(cmd, "/helper", true) == 0 || strcmp(cmd, "/hc", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pHelper] >= 1) {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "Введите: {00C0FF}/hc {FFFFFF}[текст]");
					return true;
				}
				if (HelperDuty[playerid] == 0) {
					error(playerid, " Для отправки сообщения в /hc чат, вам нужно выйти на работу.");
					return true;
				}
				format(string, sizeof(string), "Helper %s[%d]: %s", sendername, playerid, result);
				SendHelperMessage(COLOR_GREEN, string);
				printf("Helper %s: %s", sendername, result);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/helpleader", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /leaderhelper [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] < 5) {
				error(playerid, "Вам не доступна эта функция");
				return true;
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[giveplayerid][pHelper] = 4;
					format(string, sizeof(string), "Вы были назначены на должность главного хелпера, администратором %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Вы назначили игрока %s на должность главного хелпера.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/makehelper", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "Введите: {00C0FF}/makehelper{FFFFFF} [playerid] [level(1-3, 0-убрать хеллперку]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[para1][pHelper] != 4 && PlayerInfo[playerid][pAdmin] < 5) {
				SendClientMessage(playerid, COLOR_GRAD1, "{ffffff}Вам не доступна эта функция");
				return true;
			}
			if (IsPlayerConnected(para1)) {
				if (para1 != INVALID_PLAYER_ID) {
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pHelper] = level;
					if (level < 0 || level > 4) {
						SendClientMessage(playerid, COLOR_GREY, "Не меньше '0' и не больше '3'.");
						return true;
					}
					format(string, sizeof(string), "Вы были назначены на должность хелпера, администратором %s.", sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Вы назначили/повысили игрока %s до %d уровня помощника.", giveplayer, level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/bizwar", true) == 0) {
		new full, lead, ugrok;
		if (PlayerInfo[playerid][pLeader] < 0) {
			SendClientMessage(playerid, COLOR_GREY, "Только для лидера.");
			return true;
		}
		new leader = PlayerInfo[playerid][pLeader];
		if (leader == 5 || leader == 6 || leader == 13 || leader == 14 || leader == 15 || leader == 16 || leader >= 18 && leader <= 20) {
			for (new h = 0; h < sizeof(SBizzInfo); h++) {
				if (IsPlayerInRangeOfPoint(playerid, 2.0, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]) && MafiaZoneWar[h] == false) {
					if (SBizzInfo[h][sbMafia] == leader) {
						SendClientMessage(playerid, COLOR_GREY, "Бизнес принадлежит вашей мафии/банде.");
						return true;
					}
					full++;
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) {
							continue;
						}
						if (PlayerInfo[i][pLeader] == SBizzInfo[h][sbMafia]) {
							lead++;
						}
					}
					for (new s = 0; s < GetMaxPlayers(); s++) {
						if (!IsPlayerConnected(s)) {
							continue;
						}
						if (PlayerInfo[s][pMember] == SBizzInfo[h][sbMafia]) {
							ugrok++;
						}
					}
					if (lead == 0) {
						SendClientMessage(playerid, COLOR_WHITE, " Лидер соперников отсутствует.");
						return true;
					}
					if (ugrok < 2) {
						SendClientMessage(playerid, COLOR_WHITE, " У cоперника не достаточно бойцов.");
						return true;
					}
					if (MafiaWar[SBizzInfo[h][sbMafia]] == 1) {
						SendClientMessage(playerid, COLOR_GREY, " Данная банда/мафия уже участвует в стреле.");
						return true;
					}
					if (MafiaOtkat[SBizzInfo[h][sbMafia]] > gettime()) {
						SendClientMessage(playerid, COLOR_GREY, "Данная банда/мафия отдыхает после сражения.");
						return true;
					}
					if (SBizzInfo[h][sbMafia] == 0) {
						SBizzInfo[h][sbMafia] = leader;
						OnPropUpdate();
						SBizzInfo[h][sbOwned] = 1;
						UpdateSBizz(h);
						SendClientMessage(playerid, COLOR_WHITE, " Бизнес взят под контроль ");
						return true;
					}
					SetPVarInt(playerid, "BIZZID", h);
					MafiaZoneFraction[h] = SBizzInfo[h][sbMafia];
					MafiaZoneStatus[h] = 0;
					MafiaBizWar(playerid);
				}
			}
			for (new h = 0; h < sizeof(BizzInfo); h++) {
				if (IsPlayerInRangeOfPoint(playerid, 2.0, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]) && MafiaZoneWar[h] == false) {
					if (BizzInfo[h][bMafia] == leader) {
						SendClientMessage(playerid, COLOR_GREY, "Бизнес принадлежит вашей мафии/банде.");
						return true;
					}
					full++;
					for (new i = 0; i < GetMaxPlayers(); i++) {
						if (!IsPlayerConnected(i)) {
							continue;
						}
						if (PlayerInfo[i][pLeader] == BizzInfo[h][bMafia]) {
							lead++;
						}
					}
					for (new s = 0; s < GetMaxPlayers(); s++) {
						if (!IsPlayerConnected(s)) {
							continue;
						}
						if (PlayerInfo[s][pMember] == BizzInfo[h][bMafia]) {
							ugrok++;
						}
					}
					if (lead == 0) {
						SendClientMessage(playerid, COLOR_WHITE, " Лидер соперников отсутствует.");
						return true;
					}
					if (ugrok < 2) {
						SendClientMessage(playerid, COLOR_WHITE, " У cоперника не достаточно бойцов.");
						return true;
					}
					if (MafiaWar[BizzInfo[h][bMafia]] == 1) {
						SendClientMessage(playerid, COLOR_GREY, " Данная банда/мафия уже участвует в стреле.");
						return true;
					}
					if (MafiaOtkat[BizzInfo[h][bMafia]] > gettime()) {
						SendClientMessage(playerid, COLOR_GREY, "Данная банда/мафия отдыхает после сражения.");
						return true;
					}
					if (BizzInfo[h][bMafia] == 0) {
						BizzInfo[h][bMafia] = leader;
						BizzInfo[h][bOwned] = 1;
						OnPropUpdate();
						UpdateBizz(h);
						SendClientMessage(playerid, COLOR_WHITE, " Бизнес взят под контроль ");
						return true;
					}
					SetPVarInt(playerid, "BIZZID", h);
					MafiaZoneFraction[h] = BizzInfo[h][bMafia];
					MafiaZoneStatus[h] = 1;
					MafiaBizWar(playerid);
				}
			}
			if (full == 0) {
				SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с бизнесом.");
			}
		} else {
			SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная функция.");
		}
		return true;
	}

	if (strcmp(cmd, "/loadmed", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 609) {
				error(playerid, "Вы не в фугроне.");
				return true;
			}
			SendClientMessage(playerid, COLOR_GREEN, "Езжайте на склад. После загрузки отправляйтесь в госпиталь Сан Фиерро.");
			SetPlayerCheckpoint(playerid, -56.1050, -223.1676, 5.4297, 5);
			PicCP[playerid] = 1;
		}
		return true;
	}

	if (strcmp(cmd, "/drugsweld", true) == 0) {
		if (IsAMember(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 10, 333.6759, 1124.3232, 1083.8903)) {
				SendClientMessage(playerid, COLOR_GRAD1, " Вы не в наркопритоне.");
				return true;
			}
			if (Medicines[playerid] < 3) {
				SendClientMessage(playerid, COLOR_WHITE, " У Вас недостаточно медикаментов.");
				return true;
			}
			ApplyAnimation(playerid, "DEALER", "DRUGS_BUY", 4.0, 1, 0, 0, 1, 1, 1);
			SendClientMessage(playerid, COLOR_WHITE, " Вы сварили 9 грамм наркотиков. (/usedrugs)");
			Medicines[playerid] -= 3;
			PlayerInfo[playerid][pDrugs] += 9;
		}
		return true;
	}

	if (strcmp(cmd, "/munload", true) == 0) {
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 609) {
			error(playerid, " Вы не в фургоне.");
			return true;
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
			if (Medicines[playerid] <= 0) {
				SendClientMessage(playerid, COLOR_GREY, " Недостаточно медикаментов для разгрузки.");
				return true;
			}
			if (medwarehouse >= 500) {
				SendClientMessage(playerid, COLOR_GREY, " Склад заполнен.");
				return true;
			}
			if (PlayerToPoint(6.0, playerid, -2685.3289, 636.1305, 14.4531)) {
				medwarehouse += Medicines[playerid];
				Medicines[playerid] = 0;
				format(string, sizeof(string), " Медикаменты разгружены, в фургоне %d/100", Medicines[playerid]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, sizeof(string), " Всего медикаментов на складе: %d/500", medwarehouse);
				SendClientMessage(playerid, COLOR_GREEN, string);
				if (medwarehouse > 500) {
					medwarehouse = 500;
				}
				SaveMaterials();
			}
		}
		return true;
	}

	if (strcmp(cmd, "/wmedicines", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
			format(string, sizeof(string), " Медикаментов на складе: %d/500 .", medwarehouse);
			SendClientMessage(playerid, 0x6495EDFF, string);
		}
		return true;
	}

	if (strcmp(cmd, "/mheal", true) == 0) {
		new Float:health;
		GetPlayerHealth(playerid, health);
		if (health > 90) {
			error(playerid, " У вас все нормально со здоровьем.");
			return true;
		}
		if (PlayerInfo[playerid][pHmed] == 0) {
			SendClientMessage(playerid, COLOR_GREY, " У Вас нет аптечек.");
			return true;
		}
		SendClientMessage(playerid, COLOR_LIGHTGREEN, " Вы использовали аптечку.");
		PlayerInfo[playerid][pHmed] = 0;
		SetPlayerHealth(playerid, health + 30);
		return true;
	}

	if (strcmp(cmd, "/as", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) {
			error(playerid, " Нет прав на использование команды.");
			return true;
		}
		if (An[playerid] == 1) {
			An[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Информация о выходе игроков включена");
		} else if (An[playerid] == 0) {
			An[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Информация о выходе игроков выключена");
		}
		return true;
	}

	if (strcmp(cmd, "/setmed", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
			ShowPlayerDialog(playerid, 1233, DIALOG_STYLE_INPUT, "  ", " {FFFFFF}Введите ID игрока, которому желаете выдать аптечку.", "Выдать", "Отмена");
		}
		return true;
	}

	if (strcmp("/vp", cmdtext, true) == 0) {
		ShowPlayerDialog(playerid, 1666, DIALOG_STYLE_LIST, "Панель автомобиля", "[1] Фары\n[2] Капот\n[3] Багажник", "Выбрать", "Отмена");
		return true;
	}

	if (strcmp("/bonnet", cmdtext, true) == 0) {
		new carid = GetPlayerVehicleID(playerid);
		if (bnt[carid] == 0) {
			if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					new v = GetPlayerVehicleID(playerid);
					new Float:hp;
					GetVehicleHealth(v, hp);
					if (hp >= 350) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
						bnt[carid] = 1;
					} else {
						SendClientMessage(playerid, COLOR_GRAD1, "Капот поврежен.");
					}
				}
			}
		} else if (bnt[carid] == 1) {
			if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
					bnt[carid] = 0;
				}
			}
		}
		return true;
	}

	if (strcmp("/boot", cmdtext, true) == 0) {
		new carid = GetPlayerVehicleID(playerid);
		if (bt[carid] == 0) {
			if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					new v = GetPlayerVehicleID(playerid);
					new Float:hp;
					GetVehicleHealth(v, hp);
					if (hp >= 350) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
						bt[carid] = 1;
					} else {
						SendClientMessage(playerid, COLOR_GRAD1, "Багажник поврежден");
					}
				}
			}
		} else if (bt[carid] == 1) {
			if (GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID) {
				if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
					bt[carid] = 0;
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/tr", true) == 0) {
		if (!IsPlayerConnected(playerid)) {
			return true;
		}
		new newcar = GetPlayerVehicleID(playerid);
		if (PlayerInfo[playerid][pJob] != 3) {
			error(playerid, "Вы не работаете дальнобойщикомю");
			return true;
		}
		if (!(newcar >= dalnoboishikauto[0] && newcar <= dalnoboishikauto[1])) {
			error(playerid, " Использовать рацию можно только в трейлере.");
			return true;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) {
			SendClientMessage(playerid, COLOR_WHITE, "Введите: {00C0FF}/tr {FFFFFF}[текст]");
			return true;
		}
		format(string, sizeof(string), "%s[%d](skill:%d): %s", sendername, playerid, PlayerInfo[playerid][pDalnoboiSkill], result);
		SendDalnMessage(COLOR_AOCHAT, string);
		return true;
	}

	if (strcmp("/setnum", cmdtext, true, 7) == 0) {
		new house = PlayerInfo[playerid][pPhousekey];
		if (!IsPlayerInAnyVehicle(playerid)) {
			SendClientMessage(playerid, 0x00FF00AA, "Вы не в транспорте.");
			return true;
		}
		if (!IsPlayerInRangeOfPoint(playerid, 12.0, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez])) {
			error(playerid, " Вы находитесь далеко от дома.");
			return true;
		}
		if (IsPlayerInVehicle(playerid, hCar[house]) && GetPlayerState(playerid) == 2) {
			ShowPlayerDialog(playerid, DIA_SET, DIALOG_STYLE_INPUT, "Номера", "Введите номер для автомобиля", "Установить", "Отмена");
		} else {
			error(playerid, "Вы не в домашнем авто.");
		}
		return true;
	}

	if (strcmp(cmd, "/viptime", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /viptime [id]");
				return true;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						PlayerInfo[para1][pVipTime] = 1;
					}
				}
			} else {
				error(playerid, " Вы не уполномочены использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/sklad", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2546.8777, -1281.8262, 1060.9844)) {
				if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20 && GetPlayerVirtualWorld(playerid) == 4) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 440, DIALOG_STYLE_LIST, "Русская мафия", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2498.2224, -1710.7615, 1014.7422)) {
				if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 550, DIALOG_STYLE_LIST, "Grove Street", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, -2165.1587, 646.3699, 1057.5938)) {
				if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 660, DIALOG_STYLE_LIST, "The Ballas Gang", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2546.7993, -1281.6243, 1060.9844) && GetPlayerVirtualWorld(playerid) == 10) {
				if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 770, DIALOG_STYLE_LIST, "El Coronos", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2498.2224, -1710.7615, 1014.7422)) {
				if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 880, DIALOG_STYLE_LIST, "The Rifa Gang", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2546.8777, -1281.8262, 1060.9844)) {
				if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 && GetPlayerVirtualWorld(playerid) == 1) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 990, DIALOG_STYLE_LIST, "Los Santos Vagos", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 1267.3802, -787.2311, 1091.9063)) {
				if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 330, DIALOG_STYLE_LIST, "La Cosa Nostra", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, -2165.1587, 646.3699, 1057.5938)) {
				if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 220, DIALOG_STYLE_LIST, "Yakuza", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 1733.2671, -1639.8517, 20.2299)) {
				if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 6158, DIALOG_STYLE_LIST, "The Triads Mafia", s, "Открыть", "Отмена");
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2546.8000, -1281.8187, 1060.9844) && GetPlayerVirtualWorld(playerid) == 5) {
				if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) {
					new s[512];
					format(s, sizeof(s), "Деньги\nНаркотики\nМатериалы");
					ShowPlayerDialog(playerid, 5661, DIALOG_STYLE_LIST, "StreetRacers", s, "Открыть", "Отмена");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/tlock", true) == 0) {
		if (GetPlayerVehicleID(playerid) >= dalnoboishikauto[0] && GetPlayerVehicleID(playerid) <= dalnoboishikauto[1]) {
			fura[playerid] = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, COLOR_WHITE, " Вы закрыли свою фуру.");
			gCarLock[fura[playerid]] = 1;
			LockCar(fura[playerid]);
		}
		return true;
	}

	if (strcmp(cmd, "/tunlock", true) == 0) {
		if (GetPlayerVehicleID(playerid) >= dalnoboishikauto[0] && GetPlayerVehicleID(playerid) <= dalnoboishikauto[1]) {
			SendClientMessage(playerid, COLOR_WHITE, " Ваша фура была открыта.");
			gCarLock[GetPlayerVehicleID(playerid)] = 0;
			UnLockCar(GetPlayerVehicleID(playerid));
		}
		return true;
	}

	if (strcmp(cmdtext, "/rules2", true) == 0) {
		new String[1673];
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}> ОСНОВНЫЕ ПРАВИЛА СЕРВЕРА,НАРУШЕНИЯ КОТОРЫХ НАКАЗУЕМО:\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}1)Запрещено использования читов, а также подобного рода программ,для получения какого-либо преимущества.\n", strlen(String));
		strins(String, "{ffffff}2)Запрещен DriveBy (DB) - попытка убийства игрока с водительского места, будь то наезд на игрока или стрельба с водительского места,по игрокам\n", strlen(String));
		strins(String, "{ffffff}3)Запрещен DeathMatch (DM) - убийство игроков без явных для этого причин.\n", strlen(String));
		strins(String, "{ffffff}4)Запрещена реклама других ресурсов,касающихся политики SA:MP.\n", strlen(String));
		strins(String, "{ffffff}5)Запрещено Оскорбления - проявления неадекватного состояния и неуважения к другим игрокам в текстовой форме.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}> ПОЛУЧЕНИЕ ЛИЦЕНЗИИ НА УПРАВЛЕНИЕ ТРАНСПОРТОМ:\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}После регистрации нового персонажа,вы не имеете водительских прав,жизнь в штате без которых не возможна,поэтому вам нужно попасть в АвтоШколу.\n", strlen(String));
		strins(String, "{ffffff}Что бы найти АвтоШколу введите /kpk=> Навигации=> Локации=> АвтоШкола и следуйте на маркер,который будет виден вам на радаре.\n", strlen(String));
		strins(String, "{ffffff}Так же,вы можете воспользоватся службой такси,для вызова введите: /service taxi.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}> ТРУДОУСТРОЙСТВО:\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}После получения прав,вы можете устроиться на работу и накопить свой первый капитал.\n", strlen(String));
		strins(String, "{ffffff}На нашем сервере,помимо постоянных робот,существуют подработки,на которых вы сможете зарабатывать в промежуток между основным заработком.\n", strlen(String));
		strins(String, "{ffffff}Что бы найти места для трудоустройства введите: /kpk=> Навигации=> Центр занятости или /kpk=> Навигации=> Подработки.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}> ЗАКЛЮЧЕНИЕ:\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}Сайт нашего серверa www.YourGame.su, на котором после регистрации вы сможете найти более подробную информацию.\n", strlen(String));
		strins(String, "{ffffff}Для разъяснения непонятных для вас нюансов,вводите на сервере команду: /вопрос [текст],наши онлайн помощники докладно донесут информацию вам.\n", strlen(String));
		strins(String, "{ffffff}Чтобы получить информацию в текстовой форме вводите команду: /help.\n", strlen(String));
		strins(String, "{ffffff}Основная команда для упрощения игрового процесса новичка: /kpk.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{F5DEB3}Приятной вам игры!\n", strlen(String));
		strins(String, "{F5DEB3}C уважением администрация сервера.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, " ", strlen(String));
		ShowPlayerDialog(playerid, 9977, DIALOG_STYLE_MSGBOX, "{ffffff} Правила", String, "Ok", "");
		return true;
	}

	if (strcmp(cmdtext, "/rules", true) == 0) {
		new String[1673];
		strins(String, "{00C0FF}Здравствуй новичок.Рады тебя видеть на нашем сервере! \n", strlen(String));
		strins(String, "{00C0FF}Краткая информация для введения в курс игрового процесса.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}=============================================ОСНОВНЫЕ ПРАВИЛА СЕРВЕРА,НАРУШЕНИЯ КОТОРЫХ НАКАЗУЕМО===========================================\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}1)Запрещено использования читов, а также подобного рода программ,для получения какого-либо преимущества.\n", strlen(String));
		strins(String, "{ffffff}2)Запрещен DriveBy (DB) - попытка убийства игрока с водительского места, будь то наезд на игрока или стрельба с водительского места,по игрокам\n", strlen(String));
		strins(String, "{ffffff}3)Запрещен DeathMatch (DM) - убийство игроков без явных для этого причин.\n", strlen(String));
		strins(String, "{ffffff}4)Запрещена реклама других ресурсов,касающихся политики SA:MP.\n", strlen(String));
		strins(String, "{ffffff}5)Запрещено Оскорбления - проявления неадекватного состояния и неуважения к другим игрокам в текстовой форме.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}=================================================ПОЛУЧЕНИЕ ЛИЦЕНЗИИ НА УПРАВЛЕНИЕ ТРАНСПОРТОМ=================================================\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}После регистрации нового персонажа,вы не имеете водительских прав,жизнь в штате без которых не возможна,поэтому вам нужно попасть в АвтоШколу.\n", strlen(String));
		strins(String, "{ffffff}Что бы найти АвтоШколу введите /kpk=> Навигации=> Локации=> АвтоШкола и следуйте на маркер,который будет виден вам на радаре.\n", strlen(String));
		strins(String, "{ffffff}Так же,вы можете воспользоватся службой такси,для вызова введите: /service taxi.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}===============================================================ТРУДОУСТРОЙСТВО================================================================\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}После получения прав,вы можете устроиться на работу и накопить свой первый капитал.\n", strlen(String));
		strins(String, "{ffffff}На нашем сервере,помимо постоянных робот,существуют подработки,на которых вы сможете зарабатывать в промежуток между основным заработком.\n", strlen(String));
		strins(String, "{ffffff}Что бы найти места для трудоустройства введите: /kpk=> Навигации=> Центр занятости или /kpk=> Навигации=> Подработки.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{00C0FF}==================================================================ЗАКЛЮЧЕНИЕ==================================================================\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{ffffff}Сайт нашего серверa www.YourGame.su, на котором после регистрации вы сможете найти более подробную информацию.\n", strlen(String));
		strins(String, "{ffffff}Для разъяснения непонятных для вас нюансов,вводите на сервере команду: /вопрос [текст],наши онлайн помощники докладно донесут информацию вам.\n", strlen(String));
		strins(String, "{ffffff}Чтобы получить информацию в текстовой форме вводите команду: /help.\n", strlen(String));
		strins(String, "{ffffff}Основная команда для упрощения игрового процесса новичка: /kpk.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "{F5DEB3}Приятной вам игры!\n", strlen(String));
		strins(String, "{F5DEB3}C уважением администрация сервера.\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, "\n", strlen(String));
		strins(String, " ", strlen(String));
		ShowPlayerDialog(playerid, 997, DIALOG_STYLE_MSGBOX, "{ffffff} Правила", String, "Ok", "");
		return true;
	}

	if (strcmp(cmd, "/job", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsPlayerInRangeOfPoint(playerid, 1.5, 362.6015, 173.5510, 1008.3828)) {
				error(playerid, " Вы не в центре занятости.");
				return true;
			}
			ShowPlayerDialog(playerid, 2412, DIALOG_STYLE_MSGBOX, "Центр занятости", "Выберите действие:", "Устроиться", "Уволиться");
		}
		return true;
	}

	if (strcmp(cmd, "/mute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /mute [id] [время] [причина]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playa][pMuted] > 0) {
				error(playerid, " Этот игрок уже заткнут.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new arank[64];
						if (PlayerInfo[playerid][pAdmin] == 6) {
							arank = "Гл. Администратором";
						} else if (PlayerInfo[playerid][pAdmin] == 5) {
							arank = "Гл.Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 4) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 3) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 2) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 1) {
							arank = "Модератором";
						} else {
							arank = "Модератор";
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /mute [id] [время] [причина]");
							return true;
						}
						if (money < 1) {
							error(playerid, " Нельзя заткнуть игрока меньше чем на 1 минуту.");
							return true;
						}
						PlayerInfo[playa][pMuted] = 1;
						PlayerInfo[playa][pMutedTime] = money * 60;
						format(string, sizeof(string), "YourWorld : %s заткнут(а) %s %s на %d минут. Причина: %s.", giveplayer, arank, sendername, money, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Ты заткнут(а) %s %s на %d минут. Причина: %s.", arank, sendername, money, (result));
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Ты заткнул(а) %s на %d минут. Причина: %s.", giveplayer, money, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			} else {
				error(playerid, " Ты не авторизован для этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unmute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] == 0) {
				error(playerid, " Ты не авторизован для использования этой команды.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unmute [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pMuted] == 0) {
						error(playerid, " Этот игрок не заткнут.");
						return true;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new arank[64];
					if (PlayerInfo[playerid][pAdmin] == 6) {
						arank = "Гл. Администратором";
					} else if (PlayerInfo[playerid][pAdmin] == 5) {
						arank = "Гл.Модератором";
					} else if (PlayerInfo[playerid][pAdmin] == 4) {
						arank = "Модератором";
					} else if (PlayerInfo[playerid][pAdmin] == 3) {
						arank = "Модератором";
					} else if (PlayerInfo[playerid][pAdmin] == 2) {
						arank = "Модератором";
					} else if (PlayerInfo[playerid][pAdmin] == 1) {
						arank = "Модератором";
					} else {
						arank = "Модератор";
					}
					PlayerInfo[giveplayerid][pMutedTime] = 0;
					PlayerInfo[giveplayerid][pMuted] = 0;
					format(string, 256, "YourWorld : %s был(а) разглушен(а) %s %s.", giveplayer, arank, sendername);
					BroadCast(COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Ты был(а) разглушен(а) %s %s.", arank, sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Ты разглушил(а) %s.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/hunmute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pHelper] == 0) {
				error(playerid, " Команда доступна только для хелперов.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hunmute [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (MuteHelpTime[giveplayerid] == 0) {
						error(playerid, " Этот игрок не заткнут.");
						return true;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					MuteHelpTime[giveplayerid] = 0;
					format(string, sizeof(string), "{00C0FF}[H]{FFFFFF}%s разрешил игроку %s вновь задавать вопросы.", sendername, giveplayer);
					SendHelperMessage(COLOR_WHITE, string);
					format(string, sizeof(string), "Хелпер %s разрешил вам снова задавать вопросы хелперам.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				}
			}
			return true;
		}
	}

	if (strcmp(cmd, "/hmute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hmute [id] [время]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			if (MuteHelpTime[playa] > 0) {
				error(playerid, " Этот игрок уже заткнут.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pHelper] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new hrank[64];
						if (PlayerInfo[playerid][pHelper] == 4) {
							hrank = "Гл. Хелпер";
						} else if (PlayerInfo[playerid][pHelper] == 3) {
							hrank = "Хелпер";
						} else if (PlayerInfo[playerid][pHelper] == 2) {
							hrank = "Хелпер";
						} else if (PlayerInfo[playerid][pHelper] == 1) {
							hrank = "Хелпер";
						} else {
							hrank = "Хелпер";
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /hmute [id] [время] [причина]");
							return true;
						}
						if (money < 1 || money > 60) {
							error(playerid, " Заткнуть игрока можно на время от 1 до 60 минут.");
							return true;
						}
						MuteHelpTime[playa] = money * 60;
						format(string, sizeof(string), "YourWorld : %s %s запретил %s задавать вопросы в течении %d минут. Причина: %s", hrank, sendername, giveplayer, money, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "{00C0FF}[H]{FFFFFF}%s запретил игроку %s задавать вопросы в течении %d минут.", sendername, giveplayer, money);
						SendHelperMessage(COLOR_WHITE, string);
						format(string, sizeof(string), "Хелпер %s запретил тебе задавать вопрос в течении %d минут.", sendername, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
					}
				}
			} else {
				error(playerid, " Ты не авторизован для этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fixteamcars", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLeader] == 0) {
				error(playerid, " Команда доступна только для лидеров.");
				return true;
			}
			if (SBizzInfo[8][sbProducts] == 0) {
				GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				return true;
			}
			for (new i = 0; i < MAX_VEHICLES; i++) {
				if (PlayerInfo[playerid][pLeader] == 5) {
					if (i >= LKN[0] && i <= LKN[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 6) {
					if (i >= Yakudza[0] && i <= Yakudza[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 12) {
					if (i >= Street[0] && i <= Street[11]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 13) {
					if (i >= Groov[0] && i <= Groov[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 14) {
					if (i >= Aztek[0] && i <= Aztek[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 15) {
					if (i >= Vagos[0] && i <= Vagos[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 16) {
					if (i >= Balla[0] && i <= Balla[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 18) {
					if (i >= Triad[0] && i <= Triad[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 19) {
					if (i >= Rifa[0] && i <= Rifa[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 20) {
					if (i >= RusMaf[0] && i <= RusMaf[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 9) {
					if (i >= Report[0] && i <= Report[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 4) {
					if (i >= M4C[0] && i <= M4C[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 8) {
					if (i >= Hit[0] && i <= Hit[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 10) {
					if (i >= Taxi[0] && i <= Taxi[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 1) {
					if (i >= copcar[0] && i <= copcar[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 2) {
					if (i >= fbicar[0] && i <= fbicar[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				} else if (PlayerInfo[playerid][pLeader] == 3) {
					if (i >= armycar[0] && i <= armycar[1]) {
						if (!IsVehicleOccupied(i)) {
							SetVehicleToRespawn(i);
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Вы зареспавнили все машины своей фракции.");
			GameTextForPlayer(playerid, "~w~Car~n~~g~Repaired~n~~r~-1000$", 5000, 1);
			GivePlayerBablo(playerid, -1000);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			if (SBizzInfo[8][sbMafia] > 0) {
				SBizzInfo[8][sbTill] += 900;
				SBizzInfo[8][sbProducts]--;
				ObwyakInfo[SBizzInfo[8][sbMafia]][oGangMoney] += 100;
			} else {
				SBizzInfo[8][sbTill] += 1000;
				SBizzInfo[8][sbProducts]--;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fmute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /fmute [id] [время]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			if (MuteFamily[playa] > 0) {
				error(playerid, " Этот игрок уже заткнут.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						if (PlayerInfo[playerid][pLeader] != PlayerInfo[playa][pMember]) {
							error(playerid, " Этот игрок не находиться под вашим руководством.");
							return true;
						}
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						if (money < 1 || money > 15) {
							error(playerid, " Заткнуть игрока можно на время от 1 до 15 минут.");
							return true;
						}
						MuteFamily[playa] = money * 60;
						format(string, sizeof(string), "Лидер %s запретил(а) общаться подчиненному %s  в теченни %d минут.", sendername, giveplayer, money);
						SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
					}
				} else {
					error(playerid, " Ты не авторизован для этой команды.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/funmute", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLeader] == 0) {
				error(playerid, " Нет прав на использование данной команды.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /funmute [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[playerid][pLeader] != PlayerInfo[giveplayerid][pMember]) {
						error(playerid, " Этот игрок не находиться под вашим руководством.");
						return true;
					}
					if (MuteFamily[giveplayerid] == 0) {
						error(playerid, " Этот игрок не заткнут.");
						return true;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					MuteFamily[giveplayerid] = 0;
					format(string, sizeof(string), "%s был(а) разглушен(а) лидером %s.", giveplayer, sendername);
					SendRadioMessage(PlayerInfo[playerid][pLeader], TEAM_AZTECAS_COLOR, string);
				}
			}
			return true;
		}
	}

	if (strcmp(cmd, "/kick", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /kick [id] [причина]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new arank[64];
						if (PlayerInfo[playerid][pAdmin] == 6) {
							arank = "Гл. Администратором";
						} else if (PlayerInfo[playerid][pAdmin] == 5) {
							arank = "Гл.Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 4) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 3) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 2) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 1) {
							arank = "Модератором";
						} else {
							arank = "Модератор";
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /kick [id] [причина]");
							return true;
						}
						new year, month, day;
						getdate(year, month, day);
						format(string, sizeof(string), "YourWorld : %s был(а) кикнут(а) %s %s. Причина: %s.", giveplayer, arank, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						format(string, sizeof(string), "Ты кикнул(а) %s. Причина: %s.", giveplayer, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Ты был(а) кикнут(а) %s %s. Причина: %s.", arank, sendername, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						TogglePlayerControllable(giveplayerid, 0);
						KickLog(string);
						Kick(giveplayerid);
						TogglePlayerControllable(giveplayerid, 0);
					}
				} else {
					error(playerid, " Этот игрок не в сети.");
				}
			} else {
				error(playerid, " Ты не авторизован для этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/skick", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /skick [id] [причина]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new arank[64];
						if (PlayerInfo[playerid][pAdmin] == 6) {
							arank = "Гл. Администратором";
						} else if (PlayerInfo[playerid][pAdmin] == 5) {
							arank = "Гл.Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 4) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 3) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 2) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 1) {
							arank = "Модератором";
						} else {
							arank = "Модератор";
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /kick [id] [причина]");
							return true;
						}
						new year, month, day;
						getdate(year, month, day);
						TogglePlayerControllable(giveplayerid, 0);
						KickLog(string);
						Kick(giveplayerid);
					}
				} else {
					error(playerid, " Этот игрок не в сети.");
				}
			} else {
				error(playerid, " Ты не авторизован для этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/warn", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /warn [id] [причина]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						new arank[64];
						if (PlayerInfo[playerid][pAdmin] == 6) {
							arank = "Гл. Администратором";
						} else if (PlayerInfo[playerid][pAdmin] == 5) {
							arank = "Гл.Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 4) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 3) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 2) {
							arank = "Модератором";
						} else if (PlayerInfo[playerid][pAdmin] == 1) {
							arank = "Модератором";
						} else {
							arank = "Модератор";
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /warn [id] [причина]");
							return true;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if (PlayerInfo[giveplayerid][pWarns] >= 3) {
							new year, month, day;
							new ip[15];
							getdate(year, month, day);
							format(string, sizeof(string), "YourWorld: %s был(a) забанен(а) %s %s. Причина: %s.", giveplayer, arank, sendername, (result));
							BanLog(string);
							format(string, sizeof(string), "YourWorld: %s был(а) забанен(а) %s %s. Причина: %s(3-е предупреждение).", giveplayer, arank, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							PlayerInfo[giveplayerid][pBlockeds] += 1;
							PlayerInfo[giveplayerid][pWarns] = 0;
							new PlayerNick[MAX_PLAYER_NAME], PlayerBan[MAX_PLAYER_NAME];
							GetPlayerName(playerid, PlayerNick, MAX_PLAYER_NAME);
							GetPlayerName(giveplayerid, PlayerBan, MAX_PLAYER_NAME);
							AddBan(giveplayerid, PlayerBan, PlayerNick, 3, 15, (result));
							format(string, sizeof(string), "banip %s", ip);
							SendRconCommand(string);
							SendRconCommand("reloadbans");
						} else {
							format(string, sizeof(string), "Вам было выдано предупреждение %s %s. Причина: %s.", arank, sendername, (result));
							SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
							format(string, sizeof(string), "YourWorld : %s был(а) предупрежден(а) %s %s. Причина: %s.", giveplayer, arank, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							SavePlayer(playerid); //Сохранение акков
						}
					}
				}
			} else {
				format(string, sizeof(string), "%d не активный игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unblock", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 6) {
				error(playerid, " Недостаточно прав для использования команды.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unblock [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) {
					return true;
				}
				new planame[32];
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				GetPlayerName(giveplayerid, planame, sizeof(planame));
				if (PlayerInfo[giveplayerid][pBlockeds] < 1) {
					error(playerid, " У игрока нет блокировок");
					return true
				}
				PlayerInfo[giveplayerid][pBlockeds]--;
				format(string, sizeof(string), "Вы сняли одну блокировку игроку %s", planame);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "Вам была снята одна блокировка администратором %s", adminname);
				SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
			} else {
				format(string, sizeof(string), "%d - не активный игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unwarn", true) == 0) { // Очистка варнов
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 6) {
				SendClientMessage(playerid, COLOR_RED, "Недостаточно прав для использования команды.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unwarn [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) {
					return true;
				}
				new planame[32];
				new adminname[32];
				GetPlayerName(playerid, adminname, sizeof(adminname));
				GetPlayerName(giveplayerid, planame, sizeof(planame));
				if (PlayerInfo[giveplayerid][pWarns] < 1) {
					SendClientMessage(playerid, COLOR_WHITE, "У игрока нет предупреждений");
					return true;
				}
				PlayerInfo[giveplayerid][pWarns]--;
				format(string, sizeof(string), "Вы сняли одно предупреждение игроку %s", planame);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "Вам было снято одно предупреждение администратором %s", adminname);
				SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
				format(string, sizeof(string), "YourWorld : Администратор %s снял игроку %s предупреждение.", adminname, planame);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ABroadCast(COLOR_YELLOW, string, 1);
			} else {
				format(string, sizeof(string), "%d - не активный игрок.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/checkw2", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] < 1) {
			error(playerid, " Недостаточно прав для использования этой команды");
			return true;
		}
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /checkweapons [id]");
			return true;
		}
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID) {
			error(playerid, " Игрока нет на сервере");
			return true;
		}
		new sweapon, sammo;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "%s имеет следующее оружие:", giveplayer);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		for (new i = 0; i < 9; i++) {
			GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
			if (sweapon != 0) {
				format(string, sizeof(string), "%d: ид оружия: %d [кол-во патрон: %d]", i, sweapon, sammo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/checkw", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /checkweapons [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new weap[13];
					new ammotup;
					new vstringa[13][64];
					new weapname[47][32] = {
						"Unarmed,",
						"Brass Knuckles,",
						"Golf Club,",
						"Nite Stick,",
						"Knife,",
						"Baseball Bat,",
						"Shovel,",
						"Pool Cue,",
						"Katana,",
						"Chainsaw,",
						"Purple Dildo,",
						"Small White Vibrator,",
						"Large White Vibrator,",
						"Silver Vibrator,",
						"Flowers,",
						"Cane,",
						"Grenade,",
						"Tear Gas,",
						"Molotov Cocktail,",
						"Vehicle Missile,",
						"Hydra Flare,",
						"Jetpack,",
						"9mm,",
						"Silenced 9mm,",
						"Desert Eagle,",
						"Shotgun,",
						"Sawnoff Shotgun,",
						"Combat Shotgun,",
						"Micro SMG (Uzi),",
						"SMG (MP5),",
						"AK47 (Kalashnikov),",
						"M4,",
						"Tec9,",
						"Country Rifle,",
						"Sniper Rifle,",
						"Rocket Launcher,",
						"HS Rocket Launcher,",
						"Flamethrower,",
						"Minigun,",
						"Satchel Charge,",
						"Detonator,",
						"Spraycan,",
						"Fire Extinguisher,",
						"Camera,",
						"Nightvision Goggles,",
						"Infrared Vision,",
						"Parachute,"
					};
					for (new c = 0; c < 13; c++) {
						GetPlayerWeaponData(giveplayerid, c, weap[c], ammotup);
						if (weap[c] != 0) {
							format(vstringa[c], sizeof(string), "%s", weapname[weap[c]]);
						}
					}
					format(string, sizeof(string), "Оружие у %s: %s %s %s %s %s %s %s %s %s %s %s %s", giveplayer, vstringa[0], vstringa[1], vstringa[2], vstringa[3], vstringa[4], vstringa[5], vstringa[6], vstringa[7], vstringa[8], vstringa[9], vstringa[10], vstringa[11], vstringa[12]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			} else {
				error(playerid, " Данный игрок находится в оффлайне.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/help", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Выбери раздел помощи", "Игрок\nДом\nЧаты\nТранспорт\nЛидерам\nБизнес\nРабота\nРыбалка\nЕда\nOстальное", "Ок", "Отмена");
		}
		return true;
	}

	if (strcmp(cmd, "/setskin", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /setskin [id] [id skina]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (level > 299 || level < 1) {
				error(playerid, " Неправильный ID скина.");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				if (IsPlayerConnected(para1)) {
					if (para1 != INVALID_PLAYER_ID) {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pChar] = level;
						format(string, sizeof(string), "Ваш скин был изменен Администратором %s.", sendername);
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), "Вы дали %s скин %d.", giveplayer, level);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					}
				}
			} else {
				error(playerid, " Вы не уполномочены использовать ту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/agl", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if (!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :  [name] [id_игрока/ЧастьИмени]");
					SendClientMessage(playerid, COLOR_WHITE, "Лицензии: Driving, Pilots, Sailing, Fishing, Weapon, all(все лицензии).");
					return true;
				}
				if (strcmp(x_nr, "moto", true) == 0) { //мото
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agl moto [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали лицензию на управление мото транспортом %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s выдал вам лицензию на управление мото транспортом.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pMotoLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				} else if (strcmp(x_nr, "Pilots", true) == 0) { //полеты
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense Pilots [id_игрока/ЧастьИмени]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали лицензию на полеты %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s дал вам лицензию на полеты.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pFlyLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				}
				if (strcmp(x_nr, "driving", true) == 0) { // авто
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense Driving [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали водительские права %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s дал вам водительские права.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pCarLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				} else if (strcmp(x_nr, "sailing", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense sailing [id_игрока/ЧастьИмени]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали лицензию на водный транспорт %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s дал вам лицензию на водный транспорт.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pBoatLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				} else if (strcmp(x_nr, "all", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense all [id_игрока/ЧастьИмени]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали комплект лицензий(Рыбалка, вождение, лодки, оружие, летание) игроку %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы получили в подарок все лицензии от администратора %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pBoatLic] = 1;
							PlayerInfo[giveplayerid][pFishLic] = 1;
							PlayerInfo[giveplayerid][pCarLic] = 1;
							PlayerInfo[giveplayerid][pGunLic] = 1;
							PlayerInfo[giveplayerid][pFlyLic] = 1;
							PlayerInfo[giveplayerid][pMotoLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				} else if (strcmp(x_nr, "fishing", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense fishing [id_игрока/ЧастьИмени]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали лицензию на рыбалку %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s дал вам лицензию на рыбалку.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pFishLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				} else if (strcmp(x_nr, "weapon", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /agivelicense weapon [id_игрока/ЧастьИмени]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "Вы дали лицензию на оружие %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Администратор %s дал вам лицензию на оружие.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pGunLic] = 1;
						}
					} else {
						error(playerid, " Этот игрок не в сети.");
					}
				}
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "Вы не администратор.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/kickjob", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 1) {
			if (IsPlayerConnected(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /kickjob [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вас уволил(а) с работы Администратор %s.", sendername);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pJob] = 0;
				PlayerInfo[giveplayerid][pChar] = 0;
				PlayerInfo[giveplayerid][pContractTime] = 0;
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "YourWorld : Администратор %s уволил(а) с работы игрока %s.", sendername, giveplayer);
				ABroadCast(COLOR_YELLOW, string, 1);
			}
		} else {
			error(playerid, " Недостаточно прав.");
		}
		return true;
	}

	if (strcmp(cmd, "/freeze", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /freeze [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playa][pAdmin] > 0) {
				error(playerid, " Администраторы не могут быть замороженны.");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] < 1) {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
			if (IsPlayerConnected(playa)) {
				if (playa != INVALID_PLAYER_ID) {
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					TogglePlayerControllable(playa, 0);
					format(string, sizeof(string), "YourWorld : администратор: %s замарозил(а) %s.", sendername, giveplayer);
					printf("%s", string);
					format(string, sizeof(string), "[FREEZE] {ff3300}%s был заморожен(а) администратором: %s.", giveplayer, sendername);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unfreeze", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unfreeze [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				if (IsPlayerConnected(playa)) {
					if (playa != INVALID_PLAYER_ID) {
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "YourWorld : Администратор: %s размарозил(а) %s", sendername, giveplayer);
						printf("%s", string);
						format(string, sizeof(string), "[FREEZE] {ff3300}%s был(а) разморожен(а) Администратором: %s", giveplayer, sendername);
						ABroadCast(COLOR_YELLOW, string, 1);
					}
				}
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/unbanip", true) == 0) {
		if (PlayerInfo[playerid][pAdmin] >= 5) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /unbanip [ip]");
				return true;
			}
			format(string, sizeof(string), "unbanip %s", tmp);
			SendRconCommand(string);
			SendRconCommand("reloadbans");
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 256, "Администрация: %s Pазбанил(а) IP: %s", sendername, tmp);
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		return true;
	}

	if (strcmp(cmd, "/restart", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				GameModeInitExitFunc();
			} else {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/gmx", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] != 6) {
				error(playerid, " У Вас недостаточно прав для того, чтобы использовать эту команду.");
				return true;
			}
			GameModeExit();
		}
		return true;
	}

	if (strcmp(cmd, "/cam", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cam [1/2/3/4]");
				return true;
			}
			Unspec[playerid][sCam] = strval(tmp);
			format(string, sizeof(string), "Положение камеры %d", Unspec[playerid][sCam]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}

	if (!strcmp(cmd, "/mutelist", true)) {
		if (PlayerInfo[playerid][pAdmin] < 1) {
			error(playerid, " Вы не Администратор.");
			return true;
		}
		new countmute = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Лист Игроков в Муте:");
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (PlayerInfo[i][pMuted] == 1 && IsPlayerConnected(i)) {
				GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s[%d] - %d секунд.", sendername, i, PlayerInfo[i][pMutedTime]);
				countmute++;
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		if (countmute == 0) {
			error(playerid, " В данный момент в муте игроков не найдено.");
		}
		return true;
	}

	if (strcmp(cmd, "/onjail", true) == 0 || strcmp(cmd, "/onj", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] < 1) {
				error(playerid, " Вы не Администратор.");
				return true;
			}
			SendClientMessage(playerid, COLOR_GREEN, "В тюрьме сидят:");
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (PlayerInfo[i][pJailed] != 0) {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Заключенному %s[%d] осталось %d секунд. Залог: %d", sendername, i, PlayerInfo[i][pJailTime], JailPrice[i]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор : /spec /check /ip /setint /cc  ");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор : /goto /mute /kick /skick /warn /ban");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор : /freeze /unfreeze /an /jail");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор :/unjail /maskeds /gotols /gotolv /gotosf /tp /gm ");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор :/kickjob /bigears /cnn /sethp /setjob /lechit");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор :  /noooc /hq /setstat /forceskin /givegun");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Модератор : /explode /setchamp /agl");
			}
			if (PlayerInfo[playerid][pAdmin] >= 5) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Гл.Модератор: /mole /showpm /makeleader /res /setname /setage /tphouse /fuelcars /update /unbanip /clearradio /setstat /tpbiz");
			}
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Гл.Администратор:/unwarn /resetgun /payday /hirecar /logout /logoutpl /logoutall /cnnn /tod /startlotto /localchat");
			}
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Гл.Администратор: /skydive /fourdive /kickinvite /makeadmin /makeleader /adivorce /gotoint /gotocar /restart /deleteacc");
			}
			if (PlayerInfo[playerid][pAdmin] >= 6) {
				SendClientMessage(playerid, COLOR_CGREEN3d, "Гл.Администратор:/setvw /arestart /gmx /asellbiz /givedrugs /givemats /money /givemoney /setskin /asellhouse");
			}
		}
		return true;
	}

	if (strcmp(cmdtext, "/skill", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			ShowPlayerDialog(playerid, 1799, DIALOG_STYLE_LIST, "Ваши навыки(скиллы):", "Детектив\nАдвокат\nУгонщик\nНарко Диллер\nДальнобойщик\nРепортер\nМеханик\nАвто диллер\nРыболов\nГан Диллер\nДонор спермы\nКарманник\nВышибала", "Выбрать", "Отмена");
		}
		return true;
	}

	if (strcmp(cmd, "/lessons", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsAnInstructor(playerid)) {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|____ Список уроков ____|");
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i)) {
						if (TakingLesson[i] == 1) {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "Имя: %s", sendername);
							SendClientMessage(playerid, COLOR_YELLOW, string);
						}
					}
				}
			} else {
				error(playerid, " Вы не школьный инструктор.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/ram", true) == 0) {
		if (IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1) {
			for (new i = 0; i < sizeof(HouseInfo); i++) {
				if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) {
					SetPlayerVirtualWorld(playerid, i + 250);
					SetPlayerInterior(playerid, HouseInfo[i][hInt]);
					SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
				}
			}
		} else {
			SendClientMessage(playerid, COLOR_GRAD1, "Недостаточно прав на использование команды.");
		}
		return true;
	}

	if (strcmp(cmd, "/watchint", true) == 0) {
		for (new i = 0; i < sizeof(HouseInfo); i++) {
			if (PlayerToPoint(3, playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) {
				if (HouseInfo[i][hOwned] != 0) {
					error(playerid, " Этот дом не продаеться.");
					return true;
				}
				SetPlayerVirtualWorld(playerid, i + 250);
				SetPlayerInterior(playerid, HouseInfo[i][hInt]);
				SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
				PlayerInfo[playerid][pLocal] = i;
				GivePlayerBablo(playerid, -1000);
				SendClientMessage(playerid, -1, " Вы заплатили 1.ООО$ за просмотр интерьера дома.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/divorce", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMarried] < 1) {
				SendClientMessage(playerid, COLOR_RED, "Вы Не женаты/незамужем.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :  /divorce [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) {
					error(playerid, " Этого игрока нету на сервере.");
					return true;
				}
				if (!ProxDetectorS(8.0, playerid, giveplayerid)) {
					error(playerid, " Этот игрок не возле Вас.");
					return true;
				}
				if (giveplayerid == playerid) {
					error(playerid, " Вы не можете сделать себе предложение.");
					return true;
				}
				new dstring[MAX_PLAYER_NAME];
				new wstring[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", giveplayer);
				strmid(wstring, string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
				strmid(dstring, string, 0, strlen(string), 255);
				if (strcmp(dstring, wstring, true) == 0) {
					format(string, sizeof(string), "Вы послали Бумаги на Развода %s.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s Только что отправил вам документы о разводе (напишите /accept divorce) чтобы принять.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					DivorceOffer[giveplayerid] = playerid;
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "Этот игрок Не женат/незамужем на Вас.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/propose", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerBablo(playerid) < 100000) {
				SendClientMessage(playerid, COLOR_WHITE, "Затраты Брака и Приема 100000$.");
				return true;
			}
			if (PlayerInfo[playerid][pMarried] > 0) {
				error(playerid, " Вы уже Женаты.");
				return true;
			}
			if (PlayerInfo[playerid][pPhousekey] == 0) {
				error(playerid, " Вы не имеете Дома, чтобы позволить вашей Жене / Мужу жить с вами.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /propose [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (!IsPlayerConnected(giveplayerid)) {
				return true;
			}
			if (giveplayerid == INVALID_PLAYER_ID) {
				error(playerid, " Этого игрока нету на сервере.");
				return true;
			}
			if (PlayerInfo[giveplayerid][pMarried] > 0) {
				error(playerid, " Этот игрок уже Женат.");
				return true;
			}
			if (PlayerInfo[giveplayerid][pPhousekey] != 0) {
				error(playerid, " Этот игрок имеет Дом, не может быть Женат.");
				return true;
			}
			if (PlayerInfo[giveplayerid][pPbiskey] != 255) {
				error(playerid, " Этот игрок имеет бизнес и не может быть женат.");
				return true;
			}
			if (!ProxDetectorS(8.0, playerid, giveplayerid)) {
				error(playerid, " Этот игрок не возле Вас.");
				return true;
			}
			if (giveplayerid == playerid) {
				error(playerid, " Вы не можете сделать себе предложение.");
				return true;
			}
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Вы сделали предложение %s.", giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s Сделал вам предложение(напишите /accept marriage) чтобы принять.", sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			ProposeOffer[giveplayerid] = playerid;
		}
		return true;
	}

	if (strcmp(cmd, "/witness", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /witness [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) {
					error(playerid, " Этого игрока нету на сервере.");
					return true;
				}
				if (!ProxDetectorS(8.0, playerid, giveplayerid)) {
					return true;
				}
				if (giveplayerid == playerid) {
					error(playerid, " Вы не можете сделать себе предложение.");
					return true;
				}
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "Вы просите %s быть вашим Свидетелем Брака.", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s Просит вас быть его Свидетелем Брака (ведите /accept witness) чтобы принять.", sendername);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				MarryWitnessOffer[giveplayerid] = playerid;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/read", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /read [name]");
				SendClientMessage(playerid, COLOR_GREY, " Доступные имена: Бумага, ТестБумага");
				return true;
			}
			if (strcmp(x_job, "paper", true) == 0) {
				if (GotPaper[playerid] > 0) {
					SendClientMessage(playerid, COLOR_WHITE, "|_______________ YourWorld: Газета _______________|");
					format(string, sizeof(string), "| %s  |  By News Reporter: %s.", Paper[playerid][pTitle], Paper[playerid][pMaker]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine6]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", Paper[playerid][pLine7]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
				} else {
					error(playerid, " Вы не имеете Газеты.");
				}
			} else if (strcmp(x_job, "testpaper", true) == 0) {
				if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /read testpaper [Номер Газеты]");
						return true;
					}
					new paper = strval(tmp);
					if (paper < 1 || paper > 10) {
						error(playerid, " Номер Газеты может быть от 1 до 10.");
						return true;
					}
					paper -= 1;
					if (PaperInfo[paper][PaperUsed] == 0) {
						error(playerid, " Нет никакой Газеты, написанной на том номере.");
						return true;
					}
					SendClientMessage(playerid, COLOR_WHITE, "|_______________ YourWorld: Газета _______________|");
					format(string, sizeof(string), "| %s  |  By News Reporter: %s.", PaperInfo[paper][PaperTitle], PaperInfo[paper][PaperMaker]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
				} else {
					error(playerid, " Вы не Репортер Новостей.");
				}
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /read testpaper [Номер Газеты]");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/deliver", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 15) {
				error(playerid, " Вы не Разносчик Газет.");
				return true;
			}
			if (BringingPaper[playerid] != 1) {
				error(playerid, " Вы не взяли газету у Репортёров.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /deliver [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (!IsPlayerConnected(giveplayerid)) {
				error(playerid, " Этого игрока нету на сервере.");
				return true;
			}
			if (giveplayerid == INVALID_PLAYER_ID) {
				return true;
			}
			if (!ProxDetectorS(8.0, playerid, giveplayerid)) {
				error(playerid, " Этот игрок не возле Вас.");
				return true;
			}
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Вы предложили одну из ваших газет. %s.", giveplayer);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Разносчик Газет %s хочет дать вам Газету (используй /accept paper, взять газету).", sendername);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			PaperOffer[giveplayerid] = playerid;
		}
		return true;
	}

	if (strcmp(cmd, "/bring", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 15) {
				error(playerid, " Вы не Разносчик Газет.");
				return true;
			}
			if (IsPlayerInRangeOfPoint(playerid, 10.0, 51.0606, 1414.6925, 1085.3000)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /bring [Номер Газеты]");
					return true;
				}
				new paper = strval(tmp);
				if (paper < 1 || paper > 10) {
					error(playerid, " Номер Газеты может быть от 1 до 10.");
					return true;
				}
				paper -= 1;
				if (PaperInfo[paper][PaperUsed] == 0) {
					error(playerid, " На этом номере нету Газеты.");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "Теперь вы можете доставлять газеты людям.Газета: %s, By: %s.", PaperInfo[paper][PaperTitle], PaperInfo[paper][PaperMaker]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
				strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
				strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
				strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
				strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
				strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
				strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
				strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
				strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
				strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
				BringingPaper[playerid] = 1;
			} else {
				error(playerid, " Вы не в здании репортеров.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/papers", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pJob] == 15) {
				if (IsPlayerInRangeOfPoint(playerid, 15.0, 51.0606, 1414.6925, 1085.3000)) {
					new number = 0;
					for (new i = 0; i < sizeof(PaperInfo); i++) {
						number++;
						if (PaperInfo[i][PaperUsed] == 1) {
							format(string, sizeof(string), "|%d| Газета: %s, By: %s", number, PaperInfo[i][PaperTitle], PaperInfo[i][PaperMaker]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				} else {
					error(playerid, " Вы не в Здании Редакции Новостей.");
				}
			} else {
				error(playerid, " Вы не разносщик газет / Репортер.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/paper", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
				if (!IsPlayerInRangeOfPoint(playerid, 15.0, 51.0606, 1414.6925, 1085.3000)) {
					error(playerid, " Вы не в Здании Редакции Новостей.");
					return true;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if (!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /paper write [Номер Газеты] or /paper delete [Номер Газеты]");
					return true;
				}
				if (strcmp(x_nr, "write", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /paper write [Номер Газеты]");
						return true;
					}
					new paper = strval(tmp);
					if (paper < 1 || paper > 10) {
						error(playerid, " Номер Газеты может быть от 1 до 10.");
						return true;
					}
					paper -= 1;
					if (PaperInfo[paper][PaperUsed] == 1) {
						error(playerid, " На этом номере есть уже Газета.");
						return true;
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы изготавливаете новую Газету.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "Все, что Вы печатаете теперь, будет добавлено в Газету, Вы имеете 7 линий в наличии.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "Пожалуйста напечатайте Названии вашей Газеты.");
					WritingPaper[playerid] = 1;
					WritingPaperNumber[playerid] = paper;
					WritingLine[playerid] = 1;
				} else if (strcmp(x_nr, "delete", true) == 0) {
					if (PlayerInfo[playerid][pRank] >= 4) {
						error(playerid, " У вас должен быть LvL 4, чтобы удалять Газеты.");
						return true;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /paper delete [Номер Газеты]");
						return true;
					}
					new paper = strval(tmp);
					if (paper < 1 || paper > 10) {
						error(playerid, " Номер Газеты может быть от 1 до 10.");
						return true;
					}
					paper -= 1;
					ClearPaper(paper);
					new number = paper;
					number += 1;
					format(string, sizeof(string), "Вы удалили Газету %d.", number);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /paper write [Номер Газеты] or /paper delete [Номер Газеты]");
				}
			} else {
				error(playerid, " Вы не Репортер Новостей.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/cis", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new Veh = GetPlayerVehicleID(playerid);
			new carid = GetPlayerVehicleID(playerid);
			if ((Veh >= GRUZauto[0] && Veh <= GRUZauto[1])) {
				if (TrailerCescerna(carid)) {
					if (IsPlayerInRangeOfPoint(playerid, 10, -1013.1619, -603.7551, 32.0126)) {
						SendClientMessage(playerid, COLOR_YELLOW, "[Диспетчерская]: Ежай на завод там тебе заправят цисцерну.");
						SendClientMessage(playerid, COLOR_LIGHTRED, "[Диспетчерская]: Следуйте по Красным Маячкам ");
						SetPlayerCheckpoint(playerid, 240.4488, 1421.1270, 11.5979, 4.0);
						Limiter[playerid] = 1;
						JobCis[playerid] = 1;
					}
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/spawnchange", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pPhousekey] != 0 || PlayerInfo[playerid][pFlatKey] != 0) {
				if (Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1) {
					SendClientMessage(playerid, COLOR_RED, "Вы - Наблюдаете, не может изменить Возрождения прямо сейчас.");
					return true;
				}
				if (SpawnChange[playerid]) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы сменили место своего возрождения.");
					SpawnChange[playerid] = 0;
					if (IsAnInstructor(playerid)) {
						if (SchoolSpawn[playerid] == 0) {
							SchoolSpawn[playerid] = 1;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы теперь будете возрождатся в Летной Школе.");
						} else if (SchoolSpawn[playerid] == 1) {
							SchoolSpawn[playerid] = 0;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы теперь будете возрождаться в Автошколе.");
						}
					}
				} else {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Отлично.Теперь Вы будете возрождаться у себя в доме.");
					SpawnChange[playerid] = 1;
				}
			} else {
				if (IsAnInstructor(playerid)) {
					if (SchoolSpawn[playerid] == 0) {
						SchoolSpawn[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы теперь будете возраждатся в Летней Школе.");
					} else if (SchoolSpawn[playerid] == 1) {
						SchoolSpawn[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы теперь будете возраждатся в Автошколе.");
					}
				} else {
					SendClientMessage(playerid, COLOR_RED, "Вы не имеете собственном доме.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/report", true) == 0 || strcmp(cmd, "/re", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPVarInt(playerid, "ReportOtkat") > gettime()) {
				error(playerid, " Жди 3 минуты, прежде чем отправить следующую жалобу Администраторам.");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' ')) {
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if (!strlen(result)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /report [id] [причина жалобы]");
				return true;
			}
			format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, (result));
			ABroadCast(0xE19898AA, string, 1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваша жалоба была отправлена Администрации. Ожидайте, вашу заявку обязательно рассмотрят.");
			format(string, sizeof(string), "Текст вашей жалобы:{ffffff} %s", (result));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SetPVarInt(playerid, "ReportOtkat", gettime() + 180);
		}
		return true;
	}

	if (strcmp(cmd, "/otvet", true) == 0 || strcmp(cmd, "/an", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pAdmin] >= 1) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /an [id] [текст]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if (!strlen(result)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /an [ид игрока] [текст]");
							return true;
						}
						SendClientMessage(giveplayerid, COLOR_ORANGERED, string);
						format(string, sizeof(string), "Администратор %s ответил(а) %s: %s", sendername, giveplayer, (result));
						HABroadCast(COLOR_ORANGERED, string, 1);
					}
				} else {
					format(string, sizeof(string), "%d - Нет такого игрока.", giveplayerid);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			} else {
				error(playerid, " У вас нет прав на использование этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/lotto", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLottoNr] != 0) {
				error(playerid, " Вы уже имеете лотерейный билет.");
				return true;
			}
			if (GetPlayerBablo(playerid) < 1500) {
				error(playerid, " Вы доложны иметь 1500$ для Лотерейного Билета.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /lotto [номер]");
				return true;
			}
			new lottonr = strval(tmp);
			if (lottonr < 0 || lottonr > 80) {
				error(playerid, " Номер Лотерейного билета может быть от 0 до 80.");
				return true;
			}
			format(string, sizeof(string), "Вы купили Лотерейный Билет с номером: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerBablo(playerid, -1500);
			PlayerInfo[playerid][pLottoNr] = lottonr;
		}
		return true;
	}

	if (strcmp(cmd, "/take", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pRank] >= 3 && PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pRank] >= 3 && PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pRank] >= 3 && PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3) {
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if (!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take [название] [id]");
					SendClientMessage(playerid, COLOR_WHITE, "Название: Driverslicense, Flyinglicense, Boatlicense, Gunlicense, Weapons, Drugs, Materials");
					return true;
				}
				if (strcmp(x_nr, "driverslicense", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take driverslicense [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid == INVALID_PLAYER_ID) {
							error(playerid, " Этого игрока нету на сервере.");
							return true;
						}
						if (!ProxDetectorS(8.0, playerid, giveplayerid)) {
							error(playerid, " Этот игрок не возле Вас.");
							return true;
						}
						if (playerid == giveplayerid) {
							error(playerid, " Нельзя отобрать лицензию у самого себя.");
							return true;
						}
						if (IsACop(giveplayerid)) {
							error(playerid, " Нельзя отобрать лицензию у законника.");
							return true;
						}
						if (PlayerInfo[giveplayerid][pCarLic] == 0) {
							error(playerid, " У этого игрока нет лицензии на вождение.");
							return true;
						}
						format(string, sizeof(string), "Вы лишили %s Лицензии на Вождение.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Лишил вас Лицензии на вождение.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pCarLic] = 0;
					}
				} else if (strcmp(x_nr, "motolicense", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take motolicense [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (IsACop(giveplayerid)) {
									error(playerid, " Нельзя отобрать лицензию у законника.");
									return true;
								}
								if (playerid == giveplayerid) {
									error(playerid, " Нельзя отобрать лицензию у самого себя.");
									return true;
								}
								if (PlayerInfo[giveplayerid][pMotoLic] == 0) {
									error(playerid, " У этого игрока нет лицензии на мото транспорт.");
									return true;
								}
								format(string, sizeof(string), "Вы лишили %s лицензии на мото транспорт.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s Лишил вас лицензии на мото транспорт.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pMotoLic] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "flyinglicense", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take flyinglicense [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (IsACop(giveplayerid)) {
									error(playerid, " Нельзя отобрать лицензию у законника.");
									return true;
								}
								if (playerid == giveplayerid) {
									error(playerid, " Нельзя отобрать лицензию у самого себя.");
									return true;
								}
								if (PlayerInfo[giveplayerid][pFlyLic] == 0) {
									error(playerid, " У этого игрока нет лицензии на воздушный транспорт.");
									return true;
								}
								format(string, sizeof(string), "Вы лишили %s Лицензии на воздушный транспорт.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s Лишил вас Лицензии на воздушный транспорт.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pFlyLic] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "gunlicense", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take driverslicense [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (IsACop(giveplayerid)) {
									error(playerid, " Нельзя отобрать лицензию у законника.");
									return true;
								}
								if (playerid == giveplayerid) {
									error(playerid, " Нельзя отобрать лицензию у самого себя.");
									return true;
								}
								if (PlayerInfo[giveplayerid][pGunLic] == 0) {
									error(playerid, " У этого игрока нет лицензии на ношение оружия.");
									return true;
								}
								format(string, sizeof(string), "Вы лишили %s Лицензии на Оружие.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s Лишил вас Лицензии на Оружие.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pGunLic] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "boatlicense", true) == 0) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take boatlicense [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (IsACop(giveplayerid)) {
									error(playerid, " Нельзя отобрать лицензию у законника.");
									return true;
								}
								if (playerid == giveplayerid) {
									error(playerid, " Нельзя отобрать лицензию у самого себя.");
									return true;
								}
								if (PlayerInfo[giveplayerid][pBoatLic] == 0) {
									error(playerid, " У этого игрока нет лицензии на управление водным транспортом.");
									return true;
								}
								format(string, sizeof(string), "Вы лишили %s Лицензии на водный транспорт.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s Лишил вас Лицензии на водный транспорт.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[giveplayerid][pBoatLic] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "weapons", true) == 0) {
					if (!IsACop(playerid)) {
						error(playerid, " Вы не в праве использовать данную команду");
						return true;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take weapons [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (IsACop(giveplayerid)) {
									error(playerid, " Нельзя отобрать лицензию у законника.");
									return true;
								}
								if (playerid == giveplayerid) {
									error(playerid, " Нельзя отобрать лицензию у самого себя.");
									return true;
								}
								if (GetPlayerWeapon(giveplayerid) <= 0) {
									error(playerid, " У данного игрока нет оружия.");
									return true;
								}
								format(string, sizeof(string), "Вы конфисковали у %s Оружие.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Офицер %s Конфисковал(а) все ваше Оружие.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								SafeResetPlayerWeapons(giveplayerid);
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "drugs", true) == 0) {
					if (!IsACop(playerid)) {
						error(playerid, " Вы не в праве использовать данную команду");
						return true;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take drugs [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (IsACop(giveplayerid)) {
								SendClientMessage(playerid, COLOR_WHITE, " Вы не можете отобрать наркотические вещества у данного игрока.");
								return true;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								if (playerid == giveplayerid) {
									error(playerid, " У вас не может быть наркотиков.");
									return true;
								}
								if (PlayerInfo[giveplayerid][pDrugs] <= 0) {
									error(playerid, " У этого игрока нет наркотиков.");
									return true;
								}
								new givep[MAX_PLAYER_NAME];
								GetPlayerName(giveplayerid, givep, sizeof(givep));
								format(string, sizeof(string), "Вы конфисковали наркотики у %s.", givep);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Офицер %s Конфисковал(а) у вас все Наркотики.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[playerid][pTkDrugs] += PlayerInfo[giveplayerid][pDrugs];
								PlayerInfo[giveplayerid][pDrugs] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else if (strcmp(x_nr, "materials", true) == 0) {
					if (!IsACop(playerid)) {
						error(playerid, " Вы не в праве использовать данную команду");
						return true;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /take materials [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (playerid == giveplayerid) {
								error(playerid, " Нельзя отобрать материалы у самого себя.");
								return true;
							}
							if (IsACop(giveplayerid)) {
								error(playerid, " Вы не можете отобрать материалы у данного игрока.");
								return true;
							}
							if (PlayerInfo[giveplayerid][pMats] <= 0) {
								error(playerid, " У этого игрока нет материалов.");
								return true;
							}
							if (ProxDetectorS(8.0, playerid, giveplayerid)) {
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "Вы конфисковали материалы у %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Офицер %s Конфисковал(а) у вас все Материалы.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PlayerInfo[playerid][pTkMats] += PlayerInfo[giveplayerid][pMats];
								PlayerInfo[giveplayerid][pMats] = 0;
							} else {
								error(playerid, " Этот игрок не возле Вас.");
							}
						}
					} else {
						error(playerid, " Этого игрока нету на сервере.");
					}
				} else {
					error(playerid, " вами названия не существует.");
				}
			} else {
				error(playerid, " Нет прав на использование этой команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/drink", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerVirtualWorld(playerid) == 19) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 3.0, 499.4543, -20.7805, 1000.6797)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 789, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 5) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 7.0, -2659.0679, 1410.2938, 910.1703)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 787, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 22) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 7.0, 501.7938, -68.7482, 998.7578)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 794, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 6) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 7.0, 499.4543, -20.7805, 1000.6797)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 796, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 20) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 7.0, 1212.0762, -28.5799, 1000.9531)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 792, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 21) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 7.0, 1215.39, -12.61, 1000.9219)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 793, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			} else if (GetPlayerVirtualWorld(playerid) == 7) {
				if (GetPlayerBablo(playerid) < 30) {
					error(playerid, " У вас нет данной суммы.");
					return true;
				}
				if (IsPlayerInRangeOfPoint(playerid, 3.0, 499.4543, -20.7805, 1000.6797)) {
					error(playerid, " Вы не у барной стойки.");
					return true;
				}
				ShowPlayerDialog(playerid, 786, DIALOG_STYLE_LIST, "Выпивка в Баре:", "Пиво 6$\nВодка 10$\nКоктейль 25$\nВиски 10$\nМолоко 2$\nСпранк 2$\nВода 1$", "Ок", "Отмена");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/service", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if (!strlen(x_nr)) {
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "|__________________ Название Сервисов __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Используй: /service [name]");
				SendClientMessage(playerid, COLOR_WHITE, "Команды: Taxi, Medic, Mechanic");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "|________________________________________________|");
				return true;
			}
			if (strcmp(x_nr, "taxi", true) == 0) {
				if (TaxiDrivers < 1) {
					error(playerid, " В данный момент Таксистов на службе нет, попробуйте позже.");
					return true;
				}
				if (GetPVarInt(playerid, "taxicall") > gettime()) {
					error(playerid, " Сделать запрос можно 1 раз в минуту.");
					return true;
				}
				if (TransportDuty[playerid] > 0) {
					error(playerid, " Вы уже заказали такси..");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s Вызывает Такси. (наберите /accept taxi чтобы принять вызов)", sendername);
				SendRadioMessage(10, TEAM_AZTECAS_COLOR, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы позвонили в Taxi,ждите ответа.");
				TaxiCall = playerid;
				SetPVarInt(playerid, "taxicall", gettime() + 60);
			} else if (strcmp(x_nr, "medic", true) == 0) {
				if (Medics < 1) {
					error(playerid, " В данный момент Медиков на службе нет, попробуйте позже.");
					return true;
				}
				if (GetPVarInt(playerid, "call") > gettime()) {
					error(playerid, " Команда доступна раз в 1 минуту.");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s Вызывает Медиков. (наберите /accept medic чтобы принять вызов)", sendername);
				SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы позвонили в Скорую Помощь,ждите ответа.");
				MedicCall = playerid;
				SetPVarInt(playerid, "call", gettime() + 60);
			} else if (strcmp(x_nr, "mechanic", true) == 0) {
				if (Mechanics < 1) {
					error(playerid, " В данный момент Механиков на службе нет, попробуйте позже.");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s Вызывает Механика. (наберите /accept mechanic чтобы принять вызов)", sendername);
				SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы позвонили АвтоМеханикам,ждите ответа.");
				MechanicCall = playerid;
			} else {
				error(playerid, " Неизвестное имя Сервиса.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/tie", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16 || PlayerInfo[playerid][pLeader] == 18 || PlayerInfo[playerid][pLeader] == 19 || PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pMember] == 5 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 6 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 13 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 14 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 15 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 16 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 17 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 18 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 19 && PlayerInfo[playerid][pRank] > 2 || PlayerInfo[playerid][pMember] == 20 && PlayerInfo[playerid][pRank] > 2) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /tie [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						return true;
					}
					if (PlayerTied[giveplayerid] > 0) {
						error(playerid, " Игрок уже связан.");
						return true;
					}
					if (ProxDetectorS(8.0, playerid, giveplayerid)) {
						new car = GetPlayerVehicleID(playerid);
						if (giveplayerid == playerid) {
							error(playerid, " Вы не можете связать самого себя.");
							return true;
						}
						if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car)) {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "Вы связали %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Вас связали.");
							format(string, sizeof(string), "* %s был связан .", giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~CB•€Aм", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerTied[giveplayerid] = 1;
						} else {
							error(playerid, " Игрок не в автомобиле.");
						}
					} else {
						error(playerid, " Этот игрок не рядом с вами.");
					}
				} else {
					error(playerid, " Этот игрок не в игре.");
				}
			} else {
				error(playerid, " нет прав на использование команды.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/untie", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsAMember(playerid) || PlayerInfo[playerid][pFMember] < 255) {
				if (PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pLeader] < 1) {
					error(playerid, " Вы не можете развязать игрока, вам нужен 3 ранг.");
					return true;
				}
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /untie [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (ProxDetectorS(8.0, playerid, giveplayerid)) {
							if (giveplayerid == playerid) {
								error(playerid, " Вы не можете развязать самого себя.");
								return true;
							}
							if (PlayerTied[giveplayerid]) {
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "Вы развязали %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы были развязаны %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~PA€B•€Aм", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
							} else {
								error(playerid, " Этот игрок не связан.");
							}
						} else {
							error(playerid, " Этот игрок не рядом с вами.");
						}
					}
				} else {
					error(playerid, " Этот игрок не в игре.");
				}
			} else {
				error(playerid, " Вы не состоите во фракции.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fare", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
				if (GetPVarInt(playerid, "TaxTime") > gettime()) {
					error(playerid, " Сменить статус можно раз в 3 минуты.");
					return true;
				}
				if (TransportDuty[playerid] > 0) {
					if (TransportDuty[playerid] == 1) {
						TaxiDrivers -= 1;
					}
					TransportDuty[playerid] = 0;
					format(string, sizeof(string), "Вы выполнили работу и заработали %d$.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1;
					TransportValue[playerid] = 0;
					TransportMoney[playerid] = 0;
					Delete3DTextLabel(fare3dtext);
					return true;
				}
				new Veh = GetPlayerVehicleID(playerid);
				new model = GetVehicleModel(Veh);
				if (model == 420 || model == 438 || model == 437 || model == 418 || model == 560 || model == 579) {
					if (GetPlayerState(playerid) == 2) {
						tmp = strtok(cmdtext, idx);
						if (!strlen(tmp)) {
							SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /fare [цена]");
							return true;
						}
						moneys = strval(tmp);
						if (moneys < 1 || moneys > 999) {
							error(playerid, " Цена должна быть в пределах от 1$ до 999$.");
							return true;
						}
						TaxiDrivers += 1;
						TransportDuty[playerid] = 1;
						TransportValue[playerid] = moneys;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Таксист %s на службе, тариф: %d$.(Вызвать /service taxi).", sendername, TransportValue[playerid]);
						OOCNews(TEAM_GROVE_COLOR, string);
						SetPVarInt(playerid, "TaxTime", gettime() + 180);
					} else {
						error(playerid, " Вы не таксист.");
					}
				} else {
					error(playerid, " Вы не в такси/автобусе.");
				}
			} else {
				error(playerid, " Вы не водитель такси.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/eat", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /eat [cook number]");
				return true;
			}
			new cookid = strval(tmp);
			if (cookid < 1 || cookid > 5) {
				SendClientMessage(playerid, COLOR_GREY, "От 1 до 5.");
				return true;
			} else if (cookid == 1 && Cooking[playerid][pCWeight1] < 1) {
				error(playerid, " Нечего готовить(1).");
				return true;
			} else if (cookid == 2 && Cooking[playerid][pCWeight2] < 1) {
				error(playerid, " Нечего готовить(2).");
				return true;
			} else if (cookid == 3 && Cooking[playerid][pCWeight3] < 1) {
				error(playerid, " Нечего готовить(3).");
				return true;
			} else if (cookid == 4 && Cooking[playerid][pCWeight4] < 1) {
				error(playerid, " Нечего готовить(4).");
				return true;
			} else if (cookid == 5 && Cooking[playerid][pCWeight5] < 1) {
				error(playerid, " Нечего готовить(5).");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			if (GetPlayerHealth(playerid, health) < 40) {
				new hp = 0;
				switch (cookid) {
					case 1 :  {
						if (Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18) {
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, 255, "Уничтожение редких рыб");
						}
						SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
						hp = Cooking[playerid][pCWeight1];
						format(string, sizeof(string), "%s Кушает %s.", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "Вы скушали %s , весом в %d, и ваше здоровье улудшилось.", Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 2 :  {
						if (Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18) { //Dolphin or Turtle
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, 255, "Уничтожение редких рыб");
						}
						SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
						hp = Cooking[playerid][pCWeight2];
						format(string, sizeof(string), "%s Кушает %s.", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "Вы скушали %s , весом в %d, и ваше здоровье улудшилось.", Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 3 :  {
						if (Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18) {
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, 255, "Уничтожение редких рыб");
						}
						SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
						hp = Cooking[playerid][pCWeight3];
						format(string, sizeof(string), "%s Кушает %s.", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "Вы скушали %s , весом в %d, и ваше здоровье улудшилось.", Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 4 :  {
						if (Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18) {
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, 255, "Уничтожение редких рыб");
						}
						SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
						hp = Cooking[playerid][pCWeight4];
						format(string, sizeof(string), "%s Кушает %s.", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "Вы скушали %s , весом в %d, и ваше здоровье улудшилось.", Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 5 :  {
						if (Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18) {
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerCriminal(playerid, 255, "Уничтожение редких рыб");
						}
						SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
						hp = Cooking[playerid][pCWeight5];
						format(string, sizeof(string), "%s Кушает %s.", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						format(string, sizeof(string), "Вы скушали %s , весом в %d, и ваше здоровье улудшилось.", Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
				ClearCookingID(playerid, cookid);
				ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			} else {
				SendClientMessage(playerid, COLOR_GREY, "Вы сейчас довольно-таки сыты.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/cook", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsAtCookPlace(playerid)) {
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if (!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "Используй: /cook [name]");
					SendClientMessage(playerid, COLOR_WHITE, "Haзвания: Lastfish, Fish, Chicken, Hamburger, Pizza.");
					return true;
				}
				if (strcmp(x_nr, "lastfish", true) == 0) {
					if (Fishes[playerid][pLastFish] > 0) {
						new found = 0;
						if (Cooking[playerid][pCWeight1] == 0) {
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
							format(string, sizeof(string), "Вы приготовили %s, весом %dкг.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							found = 1;
						} else if (Cooking[playerid][pCWeight2] == 0) {
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
							format(string, sizeof(string), "Вы приготовили %s, весом %dкг.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							found = 1;
						} else if (Cooking[playerid][pCWeight3] == 0) {
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
							format(string, sizeof(string), "Вы приготовили %s, весом %dкг.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							found = 1;
						} else if (Cooking[playerid][pCWeight4] == 0) {
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
							format(string, sizeof(string), "Вы приготовили %s, весом %dкг.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							found = 1;
						} else if (Cooking[playerid][pCWeight5] == 0) {
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
							format(string, sizeof(string), "Вы приготовили %s, весом %dкг.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							found = 1;
						} else {
							error(playerid, " У вас нет больше места.");
						}
						if (found) {
							ClearFishID(playerid, Fishes[playerid][pLastFish]);
							Fishes[playerid][pLastFish] = 0;
							Fishes[playerid][pFishID] = 0;
						}
					} else {
						error(playerid, " Вы еще не поймали рыбу.");
					}
				} else if (strcmp(x_nr, "fish", true) == 0) {
					new found = 0;
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :/cook fish [fishnumber]");
						return true;
					}
					new fishid = strval(tmp);
					if (fishid < 1 || fishid > 5) {
						error(playerid, " Номер может быть от 1 до 5.");
						return true;
					} else if (fishid == 1 && Fishes[playerid][pWeight1] < 1) {
						error(playerid, " Вы еще не поймали рыбу(1).");
						return true;
					} else if (fishid == 2 && Fishes[playerid][pWeight2] < 1) {
						error(playerid, " Вы еще не поймали рыбу(1).");
						return true;
					} else if (fishid == 3 && Fishes[playerid][pWeight3] < 1) {
						error(playerid, " Вы еще не поймали рыбу(1).");
						return true;
					} else if (fishid == 4 && Fishes[playerid][pWeight4] < 1) {
						error(playerid, " Вы еще не поймали рыбу(1).");
						return true;
					} else if (fishid == 5 && Fishes[playerid][pWeight5] < 1) {
						error(playerid, " Вы еще не поймали рыбу(1).");
						return true;
					}
					if (Cooking[playerid][pCWeight1] == 0) {
						if (fishid == 1) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 2) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 3) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 4) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 5) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						found = 1;
					} else if (Cooking[playerid][pCWeight2] == 0) {
						if (fishid == 1) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 2) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 3) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 4) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 5) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						found = 1;
					} else if (Cooking[playerid][pCWeight3] == 0) {
						if (fishid == 1) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 2) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 3) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 4) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 5) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						found = 1;
					} else if (Cooking[playerid][pCWeight4] == 0) {
						if (fishid == 1) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 2) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 3) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 4) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 5) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						found = 1;
					} else if (Cooking[playerid][pCWeight5] == 0) {
						if (fishid == 1) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 2) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 3) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 4) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						} else if (fishid == 5) {
							format(string, sizeof(string), "Готовится %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						found = 1;
					} else {
						error(playerid, " У вас нет места чтобы забрать готовую еду.");
					}
					if (found) {
						ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
						Fishes[playerid][pFishID] = 0;
					}
				} else if (strcmp(x_nr, "chicken", true) == 0) {
					if (IsPlayerInRangeOfPoint(playerid, 3.0, 369.9786, -4.0798, 1001.8589)) { //Cluckin Bell
						if (Groceries[playerid][pChicken] != 0) {
							if (Cooking[playerid][pCWeight1] == 0) {
								strmid(Cooking[playerid][pCook1], "Готовится Chicken", 0, strlen(string), 255);
								Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
								Cooking[playerid][pCookID1] = 30;
								Groceries[playerid][pChickens] = 0;
								Groceries[playerid][pChicken] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight2] == 0) {
								strmid(Cooking[playerid][pCook2], "Готовится Chicken", 0, strlen(string), 255);
								Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
								Cooking[playerid][pCookID2] = 30;
								Groceries[playerid][pChickens] = 0;
								Groceries[playerid][pChicken] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight3] == 0) {
								strmid(Cooking[playerid][pCook3], "Готовится Chicken", 0, strlen(string), 255);
								Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
								Cooking[playerid][pCookID3] = 30;
								Groceries[playerid][pChickens] = 0;
								Groceries[playerid][pChicken] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight4] == 0) {
								strmid(Cooking[playerid][pCook4], "Готовится Chicken", 0, strlen(string), 255);
								Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
								Cooking[playerid][pCookID4] = 30;
								Groceries[playerid][pChickens] = 0;
								Groceries[playerid][pChicken] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight5] == 0) {
								strmid(Cooking[playerid][pCook5], "Готовится Chicken", 0, strlen(string), 255);
								Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
								Cooking[playerid][pCookID5] = 30;
								Groceries[playerid][pChickens] = 0;
								Groceries[playerid][pChicken] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У вас нет места чтобы забрать готовую еду.");
							}
						} else {
							error(playerid, " У вас нет мороженной курицы с собой.");
						}
					} else {
						error(playerid, " Это блюдо нужно готовить в закусочной Kluck`n`Bell.");
					}
				} else if (strcmp(x_nr, "hamburger", true) == 0) {
					if (IsPlayerInRangeOfPoint(playerid, 3.0, 376.4466, -60.9574, 1001.5078) || IsPlayerInRangeOfPoint(playerid, 3.0, 378.1215, -57.4928, 1001.5078)) { //Burgershot
						if (Groceries[playerid][pHamburger] != 0) {
							if (Cooking[playerid][pCWeight1] == 0) {
								strmid(Cooking[playerid][pCook1], "Готовим Hamburger", 0, strlen(string), 255);
								Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID1] = 30;
								Groceries[playerid][pHamburgers] = 0;
								Groceries[playerid][pHamburger] = 0;
								format(string, sizeof(string), "Готовим Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight2] == 0) {
								strmid(Cooking[playerid][pCook2], "Готовим Hamburger", 0, strlen(string), 255);
								Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID2] = 30;
								Groceries[playerid][pHamburgers] = 0;
								Groceries[playerid][pHamburger] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight3] == 0) {
								strmid(Cooking[playerid][pCook3], "Готовим Hamburger", 0, strlen(string), 255);
								Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID3] = 30;
								Groceries[playerid][pHamburgers] = 0;
								Groceries[playerid][pHamburger] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight4] == 0) {
								strmid(Cooking[playerid][pCook4], "Готовим Hamburger", 0, strlen(string), 255);
								Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID4] = 30;
								Groceries[playerid][pHamburgers] = 0;
								Groceries[playerid][pHamburger] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight5] == 0) {
								strmid(Cooking[playerid][pCook5], "Готовим Hamburger", 0, strlen(string), 255);
								Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID5] = 30;
								Groceries[playerid][pHamburgers] = 0;
								Groceries[playerid][pHamburger] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У вас нет места чтобы забрать готовую еду.");
							}
						} else {
							error(playerid, " У вас нет гамбургера с собой.");
						}
					} else {
						error(playerid, " Это блюдо нужно готовить в закусочной.");
					}
				} else if (strcmp(x_nr, "pizza", true) == 0) {
					if (IsPlayerInRangeOfPoint(playerid, 3.0, 374.1185, -113.6361, 1001.4922) || IsPlayerInRangeOfPoint(playerid, 3.0, 377.7971, -113.7668, 1001.4922)) {
						if (Groceries[playerid][pPizza] != 0) {
							if (Cooking[playerid][pCWeight1] == 0) {
								strmid(Cooking[playerid][pCook1], "Готовим Pizza", 0, strlen(string), 255);
								Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID1] = 30;
								Groceries[playerid][pPizzas] = 0;
								Groceries[playerid][pPizza] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight2] == 0) {
								strmid(Cooking[playerid][pCook2], "Готовим Pizza", 0, strlen(string), 255);
								Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID2] = 30;
								Groceries[playerid][pPizzas] = 0;
								Groceries[playerid][pPizza] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight3] == 0) {
								strmid(Cooking[playerid][pCook3], "Готовим Pizza", 0, strlen(string), 255);
								Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID3] = 30;
								Groceries[playerid][pPizzas] = 0;
								Groceries[playerid][pPizza] = 0;
								format(string, sizeof(string), "Готовим Вы приготовили %s, весом %d LBS.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight4] == 0) {
								strmid(Cooking[playerid][pCook4], "Готовим Pizza", 0, strlen(string), 255);
								Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID4] = 30;
								Groceries[playerid][pPizzas] = 0;
								Groceries[playerid][pPizza] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d LBS.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else if (Cooking[playerid][pCWeight5] == 0) {
								strmid(Cooking[playerid][pCook5], "Готовим Pizza", 0, strlen(string), 255);
								Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
								Cooking[playerid][pCookID5] = 30;
								Groceries[playerid][pPizzas] = 0;
								Groceries[playerid][pPizza] = 0;
								format(string, sizeof(string), "Вы приготовили %s, весом %d LBS.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							} else {
								error(playerid, " У вас нет места чтобы нести готовую еду.");
							}
						} else {
							error(playerid, " У вас нет с собой пиццы.");
						}
					} else {
						error(playerid, " Это нужно готовить в пиццерии.");
					}
				} else {
					SendClientMessage(playerid, COLOR_GREY, "Что вы хотите приготовить?");
				}
			} else {
				error(playerid, " Здесь нельзя готовить! (можно в пиццерии, закусочной и ресторане!).");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/cooked", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Готовая еда __________________|");
			format(string, sizeof(string), "(1) Приготовлено: %s.   Вес: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "(2) Приготовлено: %s.   Вес: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "(3) Приготовлено: %s.   Вес: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "(4) Приготовлено: %s.   Вес: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "(5) Приготовлено: %s.   Вес: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_WHITE, "|_______________________________________________|");
		}
		return true;
	}

	if (strcmp(cmd, "/fish", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pFishes] > 5) {
				error(playerid, " Слишком много рыбы было поймано.");
				return true;
			}
			if (Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0) {
				error(playerid, " Вы уже поймали 5 рыб. Сначала избавьтесь от них.");
				return true;
			}
			new Veh = GetPlayerVehicleID(playerid);
			if (GetPlayerWeapon(playerid) != 7) {
				error(playerid, " У Вас нет удочки.");
				return true;
			}
			if ((IsAtFishPlace(playerid)) || IsABoat(Veh)) {
				if (PlayerFishTimer[playerid] > 0) {
					return true;
				}
				PlayerFishTimer[playerid] = 15;
				TogglePlayerControllable(playerid, 0);
				ApplyAnimation(playerid, "SWORD", "sword_block", 50.0, 0, 1, 1, 1, 1);
			} else {
				error(playerid, " Тут нельзя ловить рыбу.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fishes", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Рыбы __________________|");
			format(string, sizeof(string), "** (1) Pыбa: %s.   Bec: %d Кг.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** (2) Pыбa: %s.   Bec: %d Кг.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** (3) Pыбa: %s.   Bec: %d Кг.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** (4) Pыбa: %s.   Bec: %d Кг.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** (5) Pыбa: %s.   Bec: %d Кг.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
		return true;
	}

	if (strcmp(cmd, "/releasefish", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "ИНФО: /releasefish [fish]");
				return true;
			}
			new fishid = strval(tmp);
			if (fishid < 1 || fishid > 5) {
				error(playerid, " Номер может быть от 1 до 5.");
				return true;
			} else if (fishid == 1 && Fishes[playerid][pWeight1] < 1) {
				error(playerid, " Вы еще не поймали рыбу(1).");
			} else if (fishid == 2 && Fishes[playerid][pWeight2] < 1) {
				error(playerid, " Вы еще не поймали рыбу(2).");
			} else if (fishid == 3 && Fishes[playerid][pWeight3] < 1) {
				error(playerid, " Вы еще не поймали рыбу(3).");
			} else if (fishid == 4 && Fishes[playerid][pWeight4] < 1) {
				error(playerid, " Вы еще не поймали рыбу(4).");
			} else if (fishid == 5 && Fishes[playerid][pWeight5] < 1) {
				error(playerid, " Вы еще не поймали рыбу(5).");
			}
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
			Fishes[playerid][pFishID] = 0;
		}
		return true;
	}

	if (strcmp(cmd, "/throwback", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (Fishes[playerid][pLastFish] > 0) {
				ClearFishID(playerid, Fishes[playerid][pLastFish]);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
			} else {
				error(playerid, " Вы еще не наловили рыбы.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/throwbackall", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0) {
				ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
			} else {
				error(playerid, " Вы еще не наловили рыбы.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/licenses", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20];
			if (PlayerInfo[playerid][pCarLic]) {
				text1 = "В наличии";
			} else {
				text1 = "Отсутствует";
			}
			if (PlayerInfo[playerid][pMotoLic]) {
				text2 = "В наличии";
			} else {
				text2 = "Отсутствует";
			}
			if (PlayerInfo[playerid][pFlyLic]) {
				text3 = "В наличии";
			} else {
				text3 = "Отсутствует";
			}
			if (PlayerInfo[playerid][pBoatLic]) {
				text4 = "В наличии";
			} else {
				text4 = "Отсутствует";
			}
			if (PlayerInfo[playerid][pFishLic]) {
				text5 = "В наличии";
			} else {
				text5 = "Отсутствует";
			}
			if (PlayerInfo[playerid][pGunLic]) {
				text6 = "В наличии";
			} else {
				text6 = "Отсутствует";
			}
			new msg[] = "Водительские права: \t\t%s\n\nЛицензия на мото-транспорт: \t%s\n\nЛицензия на полёты: \t\t%s\n\nЛицензия на лодку: \t\t\t%s\n\nРазрешение на рыбалку: \t\t%s\n\nРазрешение на оружие: \t\t%s";
			format(string, sizeof(string), msg, text1, text2, text3, text4, text5, text6);
			ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, " Лицензии ", string, "Готово", "");
		}
		return true;
	}

	if (strcmp(cmd, "/showlic", true) == 0 || strcmp(cmd, "/showlicenses", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /showlic [ид]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (ProxDetectorS(8.0, playerid, giveplayerid)) {
						if (giveplayerid == playerid) {
							SendClientMessage(playerid, COLOR_WHITE, "Подсказка: чтобы проверить свои лицензии, используйте /licenses");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[20];
						new text2[20];
						new text3[20];
						new text4[20];
						new text5[20];
						if (PlayerInfo[playerid][pCarLic]) {
							text1 = "Есть";
						} else {
							text1 = "Нет";
						}
						if (PlayerInfo[playerid][pFlyLic]) {
							text2 = "Есть";
						} else {
							text2 = "Нет";
						}
						if (PlayerInfo[playerid][pBoatLic]) {
							text3 = "Есть";
						} else {
							text3 = "Нет";
						}
						if (PlayerInfo[playerid][pFishLic]) {
							text4 = "Есть";
						} else {
							text4 = "Нет";
						}
						if (PlayerInfo[playerid][pGunLic]) {
							text5 = "Есть";
						} else {
							text5 = "Нет";
						}
						format(string, sizeof(string), "|__________ Лицензии %s __________|", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "** Права на транспорт: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Лицензия на воздушный транспорт: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Лицензия на водный транспорт: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Лицензия на Рыбалку: %s.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Лицензия на Оружие: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s Пpeдъявляeт вaм cвои лицензии.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Вы показали свои лицензии %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					} else {
						error(playerid, " Этот игрок не рядом с вами.");
					}
				}
			} else {
				error(playerid, " Игрок в оффлайне.");
			}
		}
		return true;
	}

	if (strcmp(cmdtext, "/pdd", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Правила Дорожного Движения:", "\tМаксимальная скорость в городе 60км/ч , За городом 70км/ч , на трассах 100км/ч\n\tПарковка разрешена только на обочине или в специально отведенных местах!\n\tЕсли вы видите транспорт с включенными маячками вы должны прижаться к обочине!\n\tОбгон машин разрешен в том случае, если водитель едет со скоростью 15км/ч или меньше.", "Закрыть", "");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s изучает правила дорожного движения.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		return true;
	}

	if (strcmp(cmd, "/frisk", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /frisk [id игрока].");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (ProxDetectorS(8.0, playerid, giveplayerid)) {
						if (!IsACop(playerid)) {
							error(playerid, "Вы не законник.");
							return true;
						}
						if (giveplayerid == playerid) {
							SendClientMessage(playerid, COLOR_GREY, "Нельзя обыскать самого себя.");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new text1[30], text2[30], text3[40];
						if (PlayerInfo[giveplayerid][pDrugs] > 0) {
							text1 = "Наркотики:{008000} +{FFFFFF}";
						} else {
							text1 = "Наркотики:{FF0000} -{FFFFFF}";
						}
						if (PlayerInfo[giveplayerid][pMats] > 0) {
							text2 = "Материалы:{008000} +{FFFFFF}";
						} else {
							text2 = "Материалы:{FF0000} -{FFFFFF}";
						}
						if (PlayerInfo[giveplayerid][pGunLic] == 1) {
							text3 = "Лицензия на оружие:{008000} +{FFFFFF}";
						} else {
							text3 = "Лицензия на оружие:{FF0000} -{FFFFFF}";
						}
						if (PlayerInfo[giveplayerid][pWanted] >= 0) {
							format(string, sizeof(string), " Уровень розыска: %d", PlayerInfo[giveplayerid][pWanted]);
						}
						if (IsACop(playerid)) {
							new msg[] = "Обыск игрока:%s\n%s \n %s\n %s\n %s";
							format(string, sizeof(string), msg, giveplayer, text1, text2, text3, string);
							ShowPlayerDialog(playerid, 10504, DIALOG_STYLE_MSGBOX, "Обыск игрока", string, "Готово", "");
						}
						format(string, sizeof(string), "Законник %s обыскал(а) %s на запрещенные вещи.", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					} else {
						error(playerid, " Игрок слишком далеко от Вас.");
					}
				}
			} else {
				error(playerid, " Игрока нет на сервере.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/sellcar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 10) {
				error(playerid, " Вы не Диллер Машин.");
				return true;
			}
			if (!IsPlayerInAnyVehicle(playerid)) {
				error(playerid, " Вы не в автомобиле ");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sellcar [id] [цена]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sellcar [id] [цена]");
				return true;
			}
			new money = strval(tmp);
			if (PlayerInfo[giveplayerid][pLevel] < 1) {
				error(playerid, " Игрок должен быть как минимум 1lvl.");
				return true;
			}
			if (money < 1 || money > 500) {
				error(playerid, " Цена должна быть не меньше 1$ и не больше 500$.");
				return true;
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (ProxDetectorS(8.0, playerid, giveplayerid)) {
						if (giveplayerid == playerid) {
							error(playerid, " Нельзя продать себе.");
							return true;
						}
						if (CarCalls[giveplayerid] > 0) {
							error(playerid, " Этот игрок уже купил автомобиль,и должен использовать /callcar впервые.");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " Вы предложили %s купить автомобиль за %d$.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Автодилер soxers предлагает тебе купить его транспорт. (/accept car чтобы купить)", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						CarOffer[giveplayerid] = playerid;
						CarPrice[giveplayerid] = money;
						CarID[giveplayerid] = GetPlayerVehicleID(playerid);
					} else {
						error(playerid, " Этот игрок не рядом с вами.");
					}
				}
			} else {
				error(playerid, " Неверный ID/Ник.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/portable", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
				if (ConnectedToPC[playerid] == 255) {
					error(playerid, " Ваш ноутбук отключён от Агенства.");
					ConnectedToPC[playerid] = 0;
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы запустили свой портативный компьютер.");
				SendClientMessage(playerid, COLOR_WHITE, "|___ Агенство Убийц ___|");
				SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
				SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
				SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
				SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
				SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			} else {
				error(playerid, " Вы не Наёмный Убйца.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/materials", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 9) {
				error(playerid, " Вы не продавец оружия.");
				return true;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if (!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /materials [наименование]");
				SendClientMessage(playerid, COLOR_WHITE, "Наименования: Get, Deliver.");
				return true;
			}
			if (strcmp(x_nr, "get", true) == 0) {
				if (IsPlayerInRangeOfPoint(playerid, 3.0, 2814.4006, 2587.2817, 9.9087)) {
					new tel;
					if (GetPVarInt(playerid, "Matu") > gettime()) {
						SendClientMessage(playerid, COLOR_WHITE, "Брать пакеты можно раз в 2 минуты");
						return true;
					}
					if (MatsHolding[playerid] >= 10) {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : У вас уже есть %d пакетов с материалами с собой, сначала продайте их.", MatsHolding[playerid]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return true;
					}
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /materials get [количество]");
						return true;
					}
					moneys = strval(tmp);
					new level = PlayerInfo[playerid][pGunSkill];
					if (level >= 0 && level <= 50) {
						tel = 100;
						if (moneys < 1 || moneys > 10) {
							error(playerid, " Вы не можете покупать меньше 1 или больше 10 на вашем уровне умения.");
							return true;
						}
					} else if (level >= 51 && level <= 100) {
						tel = 100;
						if (moneys < 1 || moneys > 15) {
							error(playerid, " Вы не можете покупать меньше 1 или больше 15 на вашем уровне умения.");
							return true;
						}
					} else if (level >= 101 && level <= 200) {
						tel = 100;
						if (moneys < 1 || moneys > 20) {
							error(playerid, " Вы не можете покупать меньше 1 или больше 20 на вашем уровне умения.");
							return true;
						}
					} else if (level >= 201 && level <= 400) {
						tel = 100;
						if (moneys < 1 || moneys > 25) {
							error(playerid, " Вы не можете покупать меньше 1 или больше 25 на вашем уровне умения.");
							return true;
						}
					} else if (level >= 401) {
						tel = 100;
						if (moneys < 1 || moneys > 30) {
							error(playerid, " Вы не можете покупать меньше 1 или больше 30 на вашем уровне умения.");
							return true;
						}
					}
					new price = moneys * tel;
					if (GetPlayerBablo(playerid) > price) {
						format(string, sizeof(string), "Вы купили  %d пакетов материалов за %d$.", moneys, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerBablo(playerid, -price);
						MatsHolding[playerid] += moneys;
						SetPVarInt(playerid, "Matu", gettime() + 120);
					} else {
						format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : У вас нет %d$.", price);
						SendClientMessage(playerid, COLOR_RED, string);
					}
				} else {
					error(playerid, " Вы не находитесь у места покупки пакетов.");
				}
			} else if (strcmp(x_nr, "deliver", true) == 0) {
				if (IsPlayerInRangeOfPoint(playerid, 3.0, -2119.6433, -178.2938, 35.3203)) {
					if (MatsHolding[playerid] > 0) {
						if (GetPVarInt(playerid, "Matu") > gettime()) {
							SendClientMessage(playerid, COLOR_WHITE, "Сдавать пакеты можно раз в 2 минуты");
							return true;
						}
						new payout = (50) * (MatsHolding[playerid]);
						format(string, sizeof(string), "Фабрика переработала вам %d материалов за ваши %d пакетов.", payout, MatsHolding[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pMats] += payout;
						PlayerInfo[playerid][pGunSkill]++;
						MatsHolding[playerid] = 0;
						SetPVarInt(playerid, "Matu", gettime() + 120);
					} else {
						error(playerid, " У вас нет пакетов для фабрики.");
					}
				} else {
					error(playerid, " Вы не на фабрике материалов San Fierro.");
				}
			} else {
				error(playerid, " Неправильное наименование.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/sellgun", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 9) {
				error(playerid, " Вы не продавец оружия.");
				return true;
			}
			new x_weapon[256], weapon[MAX_PLAYERS], ammo[MAX_PLAYERS], price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "____________________________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "");
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sellgun [id] [weaponname]");
				SendClientMessage(playerid, COLOR_WHITE, "Оружия:  sdpistol(100) eagle(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid, COLOR_WHITE, "Оружия: ak47(600) m4(600) rifle (600)");
				SendClientMessage(playerid, COLOR_WHITE, "____________________________________________________________________");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pJailed] > 0) {
						error(playerid, " Нельзя собрать оружие игроку, который заключен");
						return true;
					}
					x_weapon = strtok(cmdtext, idx);
					if (!strlen(x_weapon)) {
						SendClientMessage(playerid, COLOR_WHITE, "____________________________________________________________________");
						SendClientMessage(playerid, COLOR_WHITE, "");
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /sellgun [id] [weaponname]");
						SendClientMessage(playerid, COLOR_WHITE, "Оружия:  sdpistol(100) eagle(150) mp5(200) shotgun(200)");
						SendClientMessage(playerid, COLOR_WHITE, "Оружия: ak47(400) m4(400) rifle (450)");
						SendClientMessage(playerid, COLOR_WHITE, "____________________________________________________________________");
						return true;
					}
				}
				if (strcmp(x_weapon, "sdpistol", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 99) {
						weapon[playerid] = 23;
						price[playerid] = 100;
						ammo[playerid] = 50;
						PlayerInfo[giveplayerid][pGun2] = 23;
						PlayerInfo[giveplayerid][pAmmo2] = 50;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "eagle", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 149) {
						weapon[playerid] = 24;
						price[playerid] = 150;
						ammo[playerid] = 50;
						PlayerInfo[giveplayerid][pGun2] = 24;
						PlayerInfo[giveplayerid][pAmmo2] = 50;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "mp5", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 199) {
						weapon[playerid] = 29;
						price[playerid] = 200;
						ammo[playerid] = 200;
						PlayerInfo[giveplayerid][pGun2] = 29;
						PlayerInfo[giveplayerid][pAmmo2] = 200;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "shotgun", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 199) {
						weapon[playerid] = 25;
						price[playerid] = 200;
						ammo[playerid] = 50;
						PlayerInfo[giveplayerid][pGun2] = 25;
						PlayerInfo[giveplayerid][pAmmo2] = 50;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "ak47", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 399) {
						weapon[playerid] = 30;
						price[playerid] = 600;
						ammo[playerid] = 250;
						PlayerInfo[giveplayerid][pGun2] = 30;
						PlayerInfo[giveplayerid][pAmmo2] = 250;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "m4", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 399) {
						weapon[playerid] = 31;
						price[playerid] = 600;
						ammo[playerid] = 250;
						PlayerInfo[giveplayerid][pGun2] = 31;
						PlayerInfo[giveplayerid][pAmmo2] = 250;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else if (strcmp(x_weapon, "rifle", true) == 0) {
					if (PlayerInfo[playerid][pMats] > 449) {
						weapon[playerid] = 33;
						price[playerid] = 600;
						ammo[playerid] = 50;
						PlayerInfo[giveplayerid][pGun2] = 33;
						PlayerInfo[giveplayerid][pAmmo2] = 50;
					} else {
						error(playerid, "  Не хватает материалов для изготовления этого оружия.");
					}
				} else {
					SendClientMessage(playerid, COLOR_RED, " Неверное имя оружия.");
				}
				if (ProxDetectorS(5.0, playerid, giveplayerid)) {
					if (PlayerInfo[playerid][pMiserPerk] > 0) {
						new skill = 2 * PlayerInfo[playerid][pMiserPerk];
						new mats = price[playerid] / 100;
						price[playerid] -= (mats) * (skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), " Вы дали %s %s с %d боеприпасами, из %d Материалов.", giveplayer, x_weapon, ammo[playerid], price[playerid]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), " Вы получили %s с %d от %s.", x_weapon, ammo[playerid], sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), " %s собрал(а) оружие для %s.", sendername, giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					ServerGivePlayerWeapons(giveplayerid, weapon[playerid], ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					PlayerInfo[playerid][pGunSkill]++;
					if (PlayerInfo[playerid][pGunSkill] == 50) {
						SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл продовца оружия 2 уровня.");
					} else if (PlayerInfo[playerid][pGunSkill] == 100) {
						SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл продовца оружия 3 уровня.");
					} else if (PlayerInfo[playerid][pGunSkill] == 200) {
						SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл продовца 4 уровня.");
					} else if (PlayerInfo[playerid][pGunSkill] == 400) {
						SendClientMessage(playerid, COLOR_YELLOW, "Ваш скилл продовца оружия 5 уровня(максимальный).");
					}
				} else {
					error(playerid, " Игрок слишком далеко");
				}
			} else {
				format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : %d Игрок не в игре.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/get", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /get [название]");
				SendClientMessage(playerid, COLOR_WHITE, "Название:  drugs, fuel");
				return true;
			}
			if (strcmp(x_job, "drugs", true) == 0) {
				if (PlayerInfo[playerid][pDrugs] > 1) {
					format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : У вас есть при себе  %d грамм наркотических веществ,для начала продайте их.", PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					return true;
				}
				new tel;
				new price;
				new ammount;
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /get drugs [ammount]");
					return true;
				}
				new level = PlayerInfo[playerid][pDrugsSkill];
				ammount = strval(tmp);
				if (level >= 0 && level <= 50) {
					tel = 250;
					if (ammount < 1 || ammount > 6) {
						error(playerid, " Вы можете купить от 1 до 6 грамм наркотических веществ");
						return true;
					}
				} else if (level >= 51 && level <= 100) {
					tel = 200;
					if (ammount < 1 || ammount > 12) {
						error(playerid, " Вы можете купить от 1 до 12 грамм наркотических веществ");
						return true;
					}
				} else if (level >= 101 && level <= 200) {
					tel = 150;
					if (ammount < 1 || ammount > 20) {
						error(playerid, " Вы можете купить от 1 до 20 грамм наркотических веществ");
						return true;
					}
				} else if (level >= 201 && level <= 400) {
					tel = 100;
					if (ammount < 1 || ammount > 30) {
						error(playerid, " Вы можете купить от 1 до 30 грамм наркотических веществ");
						return true;
					}
				} else if (level >= 401) {
					tel = 50;
					if (ammount < 1 || ammount > 99) {
						error(playerid, " Вы можете купить от 1 до 99 грамм наркотических веществ");
						return true;
					}
				}
				if (PlayerInfo[playerid][pJob] != 4) {
					error(playerid, " Вы не наркодиллер");
					return true;
				}
				if (!IsPlayerInRangeOfPoint(playerid, 2.0, 323.0342, 1118.5804, 1083.8828)) {
					error(playerid, " Вы не рядом с покупкой наркотиков.");
					return true;
				}
				price = ammount * tel;
				if (GetPlayerBablo(playerid) > price) {
					format(string, sizeof(string), " Вы купили %d грамм, за %d$.", ammount, price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, -price);
					PlayerInfo[playerid][pDrugs] = ammount;
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "У вас недостаточно денег.");
				}
			} else if (strcmp(x_job, "fuel", true) == 0) {
				if (!IsAtGasStation(playerid)) {
					error(playerid, " Вы не на заправке.");
					return true;
				}
				if (PlayerInfo[playerid][pFuel] > 0) {
					error(playerid, " У вас уже есть канистра.");
					return true;
				}
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы наполнили свою канистру на 20% топлива за 500$.");
				PlayerInfo[playerid][pFuel] = 20;
				GivePlayerBablo(playerid, -500);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/sdat", true) == 0) {
		if (!IsPlayerConnected(playerid)) {
			return true;
		}
		if (!IsACop(playerid)) {
			error(playerid, " Вы не законник.");
			return true;
		}
		if (!IsPlayerInRangeOfPoint(playerid, 2.0, 1580.40, -1636.75, 13.56) && !IsPlayerInRangeOfPoint(playerid, 2.0, -1614.71, 680.93, 7.19) && !IsPlayerInRangeOfPoint(playerid, 2.0, -1519.48, 479.52, 7.18)) {
			error(playerid, " Не доступно в данном месте.");
			return true;
		}
		ShowPlayerDialog(playerid, 1723, DIALOG_STYLE_LIST, "Cклад конфискованых предметов", "Материалы\nНаркотические вещества", "Выбрать", "Отмена");
		return true;
	}

	if (strcmp(cmd, "/fill", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsAtGasStation(playerid)) {
				new VID;
				VID = GetPlayerVehicleID(playerid);
				if (IsAMoped(VID) || IsABMX(VID)) {
					error(playerid, " Этот транспорт нельзя заправить.");
					return true;
				}
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~A¦OMO—…‡ €AЊPA‡•E¦C•,ЊOѓO„ѓ…¦E ЊO„A‡Y†C¦A...", 2000, 3);
				Refueling[playerid] = 5;
			}
		}
		return true;
	}

	if (strcmp(cmd, "/fillcar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
				error(playerid, " Вы не в автомобиле.");
				return true;
			}
			if (PlayerInfo[playerid][pFuel] > 0) {
				if (Gas[gLastCar[playerid]] < 81) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы заправили свою машину на 20% из своей канистры.");
					Gas[gLastCar[playerid]] += 20;
					PlayerInfo[playerid][pFuel] = 0;
				} else {
					error(playerid, " У тебя в машине еще достаточно бензина.");
				}
			} else {
				error(playerid, " В твоей канистре нет бензина.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/tazer", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) {
				if (IsPlayerInAnyVehicle(playerid)) {
					error(playerid, " Невозможно использовать в машине.");
					return true;
				}
				new suspect = GetClosestPlayer(playerid);
				if (IsPlayerConnected(suspect)) {
					if (suspect == INVALID_PLAYER_ID) {
						return true;
					}
					if (PlayerCuffed[suspect] > 0) {
						error(playerid, " Игрок уже в наручниках.");
						return true;
					}
					if (GetDistanceBetweenPlayers(playerid, suspect) < 5) {
						if (IsACop(suspect)) {
							error(playerid, " Вы не можете ударить тазером сотрудника правоохранительных органов");
							return true;
						}
						if (tazer[playerid] == 0) {
							error(playerid, " Ваш тазер разряжен.");
							return true;
						}
						if (IsPlayerInAnyVehicle(suspect)) {
							error(playerid, " Подозреваемый в машине, сначала вытащите его.");
							return true;
						}
						GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Вас обездвижил(а) электрошокером %s на 12 секунд.", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Вы обездвижили электрошокером %s на 12 секунд.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s выстрелил(а) электрошокером в %s и обездвижил его на 12 секунд.", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
						TogglePlayerControllable(suspect, 0);
						tazer[playerid] -= 1;
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 12;
					} else {
						error(playerid, " Рядом с тобой никого нет.");
					}
				}
			} else {
				error(playerid, " Вы не законик.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/cuff", true) == 0 || strcmp(cmd, "/cu", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid) || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 1) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /cuff [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (GetPlayerState(giveplayerid) == PLAYER_STATE_DRIVER) {
							error(playerid, " Вы не можете надеть наручники на игрока, который находится за рулем.");
							return true;
						}
						if (gTeam[giveplayerid] == 2 || IsACop(giveplayerid)) {
							error(playerid, " Вы не можете связать сотрудника правоохранительных органов.");
							return true;
						}
						if (PlayerCuffed[giveplayerid] == 2) {
							error(playerid, " Игрок уже в наручниках.");
							return true;
						}
						if (ProxDetectorS(8.0, playerid, giveplayerid)) {
							new obaVtache = 0;
							if (IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(giveplayerid)) {
								new car1 = GetPlayerVehicleID(playerid);
								new car2 = GetPlayerVehicleID(giveplayerid);
								if (car1 == car2) {
									obaVtache = 1;
								}
							}
							if (PlayerCuffed[giveplayerid] != 1 && obaVtache == 0) {
								error(playerid, " Сначала нужно обездвижить этого игрока! (/tazer)");
								return true;
							}
							if (giveplayerid == playerid) {
								error(playerid, " На себя нельзя одеть наручники");
								return true;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "На Вас надели наручники %s", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "Вы надели наручники на %s", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "Полицейский %s надел(а) наручники на %s и застегнул.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							SetPlayerAttachedObject(giveplayerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000); //наручники
							PlayerCuffed[giveplayerid] = 2;
							PlayerCuffedTime[giveplayerid] = 9999999999;
							if (!IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(giveplayerid)) { //Если оба игрока не в таче
								ClearAnimations(playerid);
								OnePlayAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); //Пойдет анимация
							}
						} else {
							error(playerid, " Этот игрок не рядом с вами.");
						}
					}
				} else {
					error(playerid, " Этот игрок находится в офлайне.");
				}
			} else {
				error(playerid, " Вы не Законник.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/uncuff", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /uncuff [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (ProxDetectorS(8.0, playerid, giveplayerid)) {
							if (giveplayerid == playerid) {
								error(playerid, " Ты не можешь развязать сам себя.");
								return true;
							}
							if (PlayerCuffed[giveplayerid]) {
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "Ты развязал %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Тебя развязал полицейский %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								RemovePlayerAttachedObject(playerid, 8);
								PlayerCuffed[giveplayerid] = 0;
								SetPlayerSpecialAction(giveplayerid, 0);
							} else {
								error(playerid, " Этот игрок не связан.");
							}
						} else {
							error(playerid, " Этот игрок не в машине.");
						}
					}
				} else {
					error(playerid, " Игрок не в игре.");
				}
			} else {
				error(playerid, " Ты не Законник.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/brokecuff", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerCuffed[playerid] == 0) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /brokecuff [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (ProxDetectorS(8.0, playerid, giveplayerid)) {
							if (PlayerCuffed[giveplayerid]) {
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "%s ломает вaши нapyчники.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Bы сломали нapyчники %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								format(string, sizeof(string), "%s Снимает наручники с %s.", sendername, giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
							} else {
								error(playerid, " Игрок не в наручниках.");
							}
						} else {
							error(playerid, " Вы слишком далеко.");
						}
					}
				} else {
					error(playerid, " Этот игрок не в игре.");
				}
			} else {
				error(playerid, " Вы не можете снять наручники.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/incar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			giveplayerid = ReturnUser(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} :: /incar [ID] [место]");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			new seat = strval(tmp);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /incar [ID] [место]");
				return true;
			}
			if (giveplayerid != INVALID_PLAYER_ID) {
				if (seat < 1 || seat > 3) {
					error(playerid, " Пассажирское место должно быть от 1 до 3 ");
					return true;
				}
				if (IsPlayerInAnyVehicle(giveplayerid)) {
					error(playerid, " Ваша цель уже в машине.");
					return true;
				}
				if (PlayerCuffed[playerid] > 0) {
					error(playerid, " Вы не можете затащить в машину.");
					return true;
				}
				if (PlayerTied[giveplayerid] != 1 && PlayerCuffed[giveplayerid] != 2) {
					SendClientMessage(playerid, COLOR_GREY, "Этого игрока сначала нужно связать или надеть на него наручники.");
					return true;
				}
				if (ProxDetectorS(8.0, playerid, giveplayerid)) {
					if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 5) {
						new Float:cx, Float:cy, Float:cz;
						GetVehiclePos(gLastCar[playerid], cx, cy, cz);
						if (!IsPlayerInRangeOfPoint(playerid, 5.0, cx, cy, cz)) {
							SendClientMessage(playerid, COLOR_GREY, "Вы далеко от автомобиля.");
							return true;
						}
						if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "%s заламывает вам руку и затаскивает вас в полицейський транспорт.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы затащили %s в полицейський транспорт.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s Заламывает руку %s и затаскивает в полицейський автомобиль.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~dragged in car", 2500, 3);
							PutPlayerInVehicle(giveplayerid, gLastCar[playerid], seat);
						} else {
							error(playerid, " Вы не можете затащить в машину, пока сами внутри неё.");
						}
					} else {
						error(playerid, " Вы слишком далеко.");
					}
				} else {
					error(playerid, " Вы слишком далеко.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/find", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (CP[playerid] > 0 || che[playerid] > 0 || checkk[playerid] > 0 || ChekPoint[playerid] > 0) {
				SendClientMessage(playerid, COLOR_WHITE, "Не доступно в данный момент");
				return true;
			}
			if (PlayerInfo[playerid][pJob] != 1) {
				error(playerid, " Вы не работаете детективом.");
				return true;
			}
			if (UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401) {
				error(playerid, " Жди 2 минуты.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " Используйте: /find [ид игрока]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pAdmin] >= 1) {
						error(playerid, " Вы не можете найти данного игрока");
						return true;
					}
					if (giveplayerid == playerid) {
						error(playerid, " Вы не можете искать самого себя.");
						return true;
					}
					new points;
					new level = PlayerInfo[playerid][pDetSkill];
					if (level >= 0 && level <= 50) {
						points = 4;
					} else if (level >= 51 && level <= 100) {
						points = 6;
					} else if (level >= 101 && level <= 200) {
						points = 8;
					} else if (level >= 201 && level <= 400) {
						points = 10;
					} else if (level >= 401) {
						points = 12;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(giveplayerid, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill]++;
					UsedFind[playerid] = 1;
					if (PlayerInfo[playerid][pDetSkill] == 50) {
						SendClientMessage(playerid, COLOR_YELLOW, "Твой скилл Детектива достиг 2 Уровня.");
					} else if (PlayerInfo[playerid][pDetSkill] == 100) {
						SendClientMessage(playerid, COLOR_YELLOW, "Твой скилл Детектива достиг 3 Уровня.");
					} else if (PlayerInfo[playerid][pDetSkill] == 200) {
						SendClientMessage(playerid, COLOR_YELLOW, "Твой скилл Детектива достиг 4 Уровня.");
					} else if (PlayerInfo[playerid][pDetSkill] == 400) {
						SendClientMessage(playerid, COLOR_YELLOW, "Твой скилл Детектива достиг 5 Уровня.");
					}
				}
			} else {
				error(playerid, " Неправильный Ник/ID.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/free", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 2) {
				error(playerid, " Вы не Адвокат.");
				return true;
			}
			if (PlayerInfo[playerid][pLawSkill] >= 401) {
				ApprovedLawyer[playerid] = 1;
			}
			if (ApprovedLawyer[playerid] < 1) {
				error(playerid, " У вас нет лицензии на выпуск заключенного");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /free [id] [цена]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /free [ид] [цена]");
				return true;
			}
			new money = strval(tmp);
			if (money < 5000 || money > 70000) {
				error(playerid, " Цена должна быть не меньше 5000$ и не больше 70000$.");
				return true;
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pZapret] > 0) {
						error(playerid, " Этого игрока запрещено выпускать.");
						return true;
					}
					if (GetPlayerBablo(giveplayerid) < moneys) {
						SendClientMessage(playerid, COLOR_WHITE, "У этого игрока недостаточно средств.");
						return true;
					}
					if (PlayerInfo[playerid][pNoFree] > 0) {
						SendClientMessage(playerid, COLOR_LIGHTRED, "Этого игрока запрещено выпускать законниками штата.");
						return true;
					}
					if (ProxDetectorS(8.0, playerid, giveplayerid)) {
						if (giveplayerid == playerid) {
							error(playerid, " Нельзя выпустить себя.");
							return true;
						}
						if (PlayerInfo[giveplayerid][pJailed] == 0) {
							error(playerid, " Этот игрок не в тюрьме");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Ты предложил %s освободить его из тюрьмы за %d$ .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Адвокат %s предлагает выпустить тебя из тюрьмы за  $%d, (напиши /accept free) чтобы выйти.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						CarOffer[giveplayerid] = playerid;
						CarPrice[giveplayerid] = money;
						WantLawyer[giveplayerid] = 0;
						CallLawyer[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						CarID[giveplayerid] = GetPlayerVehicleID(playerid);
					} else {
						error(playerid, " Этот игрок не рядом с вами.");
					}
				}
			} else {
				error(playerid, " Неверный ID/Ник.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/accept", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if (!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________ Согласие _______________________________________|");
				SendClientMessage(playerid, COLOR_GREEN, "*Используйте: /accept [название]");
				SendClientMessage(playerid, COLOR_YELLOW, "*Название: drugs, repair, lock, lawyer, bodyguard, job, live, refill, change");
				SendClientMessage(playerid, COLOR_YELLOW, "*Название: ownablecar, car, taxi, medic, mechanic, paper, ticket, gun, zone, free");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________________________________________________|");
				return true;
			}
			if (strcmp(x_job, "car", true) == 0) {
				if (CarOffer[playerid] < 999) {
					if (IsPlayerConnected(CarOffer[playerid])) {
						if (GetPlayerBablo(playerid) > CarPrice[playerid]) {
							if (IsPlayerInVehicle(CarOffer[playerid], CarID[playerid])) {
								GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								new points;
								PlayerInfo[CarOffer[playerid]][pCarSkill]++;
								if (PlayerInfo[CarOffer[playerid]][pCarSkill] == 50) {
									SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скил торговца тачками теперь 2, игроки, которые покупают автомобили у вас, могут вызвать их чаще.");
								} else if (PlayerInfo[CarOffer[playerid]][pCarSkill] == 100) {
									SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скил торговца тачками теперь 3, игроки, которые покупают автомобили у вас, могут вызвать их чаще.");
								} else if (PlayerInfo[CarOffer[playerid]][pCarSkill] == 200) {
									SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скил торговца тачками теперь 4, игроки, которые покупают автомобили у вас, могут вызвать их чаще.");
								} else if (PlayerInfo[CarOffer[playerid]][pCarSkill] == 400) {
									SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скил торговца тачками теперь 5, игроки, которые покупают автомобили у вас, могут вызвать их чаще.");
								}
								new level = PlayerInfo[CarOffer[playerid]][pCarSkill];
								if (level >= 0 && level <= 50) {
									points = 1;
								} else if (level >= 51 && level <= 100) {
									points = 2;
								} else if (level >= 101 && level <= 200) {
									points = 3;
								} else if (level >= 201 && level <= 400) {
									points = 4;
								} else if (level >= 401) {
									points = 4;
								}
								format(string, sizeof(string), " Вы купили машину за %d$, от продавца машин %s. (вы можете использовать /callcar %d раз)", CarPrice[playerid], giveplayer, points);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), " Вы продали машину %s за %d$, игрок может использовать /callcar %d раз.", sendername, CarPrice[playerid], points);
								SendClientMessage(CarOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid];
								GivePlayerBablo(playerid, -CarPrice[playerid]);
								RemovePlayerFromVehicle(CarOffer[playerid]);
								CarCalls[playerid] = points;
								CarOffer[playerid] = 999;
								CarPrice[playerid] = 0;
							} else {
								error(playerid, " Торговец тачками должен находится в продаваемом автомобиле.");
							}
						} else {
							error(playerid, " У вас недостаточно денег.");
						}
					}
				} else {
					error(playerid, " Никто не предлогал покупать автомобиль.");
				}
			} else if (strcmp(x_job, "house", true) == 0) {
				new house = prodhouse[playerid];
				new ididpl = prodid[playerid];
				new moneyy = prodmoney[playerid];
				if (ididpl == -1) {
					SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить дом");
					return true;
				}
				if (!IsPlayerConnected(ididpl)) {
					SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлогал купить дом, или этот человек вышел");
					return true;
				}
				if (GetPlayerBablo(playerid) < moneyy) {
					SendClientMessage(playerid, COLOR_GREY, "У вас нехватает денег.");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(ididpl, giveplayer, sizeof(giveplayer));
				new hous = PlayerInfo[ididpl][pPhousekey];
				HouseInfo[hous][hHel] = 0;
				HouseInfo[hous][hArm] = 0;
				HouseInfo[hous][hHealthx] = 0;
				HouseInfo[hous][hHealthy] = 0;
				HouseInfo[hous][hHealthz] = 0;
				HouseInfo[hous][hArmourx] = 0;
				HouseInfo[hous][hArmoury] = 0;
				HouseInfo[hous][hArmourz] = 0;
				HouseInfo[hous][hLock] = 1;
				HouseInfo[hous][hOwned] = 0;
				HouseInfo[hous][hVec] = 479;
				HouseInfo[hous][hVcol1] = -1;
				HouseInfo[hous][hVcol2] = -1;
				HouseInfo[house][hKoleso] = 0;
				HouseInfo[house][hBamper] = 0;
				HouseInfo[house][hBamper2] = 0;
				HouseInfo[house][hNitro] = 0;
				HouseInfo[house][hGidravlika] = 0;
				DestroyVehicle(hCar[house]);
				hCar[house] = CreateVehicle(HouseInfo[house][hVec], HouseCarSpawns[house][0], HouseCarSpawns[house][1], HouseCarSpawns[house][2], HouseCarSpawns[house][3], HouseInfo[house][hVcol1], HouseInfo[house][hVcol2], 60000);
				strmid(HouseInfo[house][hOwner], sendername, 0, strlen(sendername), 255);
				ConsumingMoney[ididpl] = 1;
				AntiMoney[ididpl] = AntiMoney[ididpl] + moneyy;
				GivePlayerBablo(ididpl, moneyy);
				ConsumingMoney[playerid] = 1;
				AntiMoney[playerid] = AntiMoney[playerid] - moneyy;
				GivePlayerBablo(playerid, -moneyy);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", HouseInfo[house][hValue]);
				GameTextForPlayer(ididpl, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = house;
				PlayerInfo[ididpl][pPhousekey] = 0;
				new strin[256];
				format(strin, sizeof(strin), "ID: %d\nВладелец: %s", house, HouseInfo[house][hOwner]);
				OnPropUpdate();
				UpdateHouse(house);
				format(string, sizeof(string), "");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "");
				SendClientMessage(ididpl, COLOR_LIGHTBLUE, string);
				prodhouse[playerid] = -1;
				prodid[playerid] = -1;
				prodmoney[playerid] = -1;
			} else if (strcmp(x_job, "flat", true) == 0) {
				new flat = prodhousef[playerid];
				new ididp = prodidf[playerid];
				new money = prodmoneyf[playerid];
				if (ididp == -1) {
					SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлагал купить квартиру");
					return true;
				}
				if (!IsPlayerConnected(ididp)) {
					SendClientMessage(playerid, COLOR_GREY, "Вам никто не предлогал купить квартиру, или этот человек вышел");
					return true;
				}
				if (GetPlayerBablo(playerid) < money) {
					SendClientMessage(playerid, COLOR_GREY, "У вас нехватает денег.");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(ididp, giveplayer, sizeof(giveplayer));
				strmid(FlatsInfo[flat][fOwner], sendername, 0, strlen(sendername), 255);
				ConsumingMoney[ididp] = 1;
				AntiMoney[ididp] = AntiMoney[ididp] + money;
				GivePlayerBablo(ididp, money);
				ConsumingMoney[playerid] = 1;
				AntiMoney[playerid] = AntiMoney[playerid] - money;
				GivePlayerBablo(playerid, -money);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~%d$", FlatsInfo[flat][fValue]);
				GameTextForPlayer(ididp, string, 10000, 3);
				PlayerInfo[playerid][pFlatKey] = flat;
				PlayerInfo[ididp][pFlatKey] = 0;
				new strin[256];
				format(strin, sizeof(strin), "ID: %d\nВладелец: %s", flat, FlatsInfo[flat][fOwner]);
				OnPropUpdate();
				UpdateFlat(flat);
				format(string, sizeof(string), "");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "");
				SendClientMessage(ididp, COLOR_LIGHTBLUE, string);
				prodhousef[playerid] = -1;
				prodidf[playerid] = -1;
				prodmoneyf[playerid] = -1;
			} else if (strcmp(x_job, "divorce", true) == 0) {
				if (DivorceOffer[playerid] < 999) {
					if (IsPlayerConnected(DivorceOffer[playerid])) {
						if (ProxDetectorS(10.0, playerid, DivorceOffer[playerid])) {
							GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " Вы предложили %s Быть вашим Сведетилем .", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s Согласился быть вашим Сведетилем.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPhousekey] = 0;
							PlayerInfo[playerid][pPbiskey] = 255;
						} else {
							error(playerid, " Игрок, который послал вам документы о разводе, не рядом с вами.");
						}
					}
				} else {
					error(playerid, " Нету никаких газет.");
				}
			} else if (strcmp(x_job, "witness", true) == 0) {
				if (MarryWitnessOffer[playerid] < 999) {
					if (IsPlayerConnected(MarryWitnessOffer[playerid])) {
						if (ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])) {
							GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " Вы приянли просьбу %s's стать свидетелем.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s Принял просьбу стать свидетелем.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
						} else {
							error(playerid, " Свидетель должен быть рядом с вами.");
						}
					}
				} else {
					error(playerid, " Никто не просил вас быть свидетелем на своей свадьбе.");
				}
			} else if (strcmp(x_job, "marriage", true) == 0) {
				if (ProposeOffer[playerid] < 999) {
					if (!IsPlayerInRangeOfPoint(playerid, 25.0, -1988.6638, 1117.8837, 54.4726)) {
						error(playerid, " Вы далеко от церкви в Сан Фиерро.");
						return true;
					}
					if (IsPlayerConnected(ProposeOffer[playerid])) {
						if (ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) {
							if (MarryWitness[ProposeOffer[playerid]] == 999) {
								error(playerid, " У вас нет свидетеля.");
								return true;
							}
							if (IsPlayerConnected(MarryWitness[ProposeOffer[playerid]])) {
								if (ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) {
									GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), " Вы приняли %s просьбу быть вашим Мужем", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), " %s Принял ваше предложение быть вашей Женой.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), " Священник: %s Вы берете %s в ваши мужья? (введите 'yes', что - нибудь другое отклонит Брак)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
								} else {
									error(playerid, " Ваш свидетел слишком далеко.");
								}
							}
						} else {
							error(playerid, " Ваш партнер слишком далеко.");
						}
					}
				} else {
					error(playerid, " Никто предлагал вам выйти замуж(жениться.");
				}
			} else if (strcmp(x_job, "ticket", true) == 0) {
				if (TicketOffer[playerid] < 999) {
					if (IsPlayerConnected(TicketOffer[playerid])) {
						if (ProxDetectorS(5.0, playerid, TicketOffer[playerid])) {
							if (CurrentMoney[playerid] < 1) {
								SendClientMessage(playerid, COLOR_RED, " У Вас нет с собой необходимой суммы.");
								return true;
							}
							GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " Вы Заплатили штраф в размере %d$ офицеру %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s Выплачивает вам штраф в размере %d$.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerBablo(playerid, -TicketMoney[playerid]);
							GivePlayerBablo(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							PlayerInfo[playerid][pWanted] = 0;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
						} else {
							error(playerid, " Поблизости нет Полицейских.");
						}
					}
				} else {
					error(playerid, " Никто не выписывает вам штраф.");
				}
			} else if (strcmp(x_job, "paper", true) == 0) {
				if (PaperOffer[playerid] < 999) {
					if (IsPlayerConnected(PaperOffer[playerid])) {
						if (BringingPaper[PaperOffer[playerid]] > 0) {
							if (ProxDetectorS(5.0, playerid, PaperOffer[playerid])) {
								GetPlayerName(PaperOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), " Вы приняли Газету от продавца газет %s (введите /read paper, чтобы почитать её).", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), " %s взял газету.", sendername);
								SendClientMessage(PaperOffer[playerid], COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pTitle]);
								strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pMaker]);
								strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine1]);
								strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine2]);
								strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine3]);
								strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine4]);
								strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine5]);
								strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine6]);
								strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine7]);
								strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
								GotPaper[playerid] = 1;
								PaperOffer[playerid] = 999;
							} else {
								error(playerid, " Разносчик газет слишком далеко.");
							}
						}
					}
				} else {
					error(playerid, " Никто не предлагал вам газету.");
				}
			} else if (strcmp(x_job, "taxi", true) == 0) {
				if (TransportDuty[playerid] != 1) {
					error(playerid, " Вы не таксист.");
					return true;
				}
				if (TaxiCallTime[playerid] > 0) {
					error(playerid, " Вы уже приняли вызов.");
					return true;
				}
				if (TaxiCall < 999) {
					if (IsPlayerConnected(TaxiCall)) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), " Вы приняли вызов Такси от %s, вы будете видеть его на своём GPS пока не доедете к нему.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Таксист %s принял ваш вызов такси пожалуйста оставайтесь на своём месте.", sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Таксист %s принял вызов %s.", sendername, giveplayer);
						SendRadioMessage(10, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
					}
				} else {
					error(playerid, " Вызов в такси не поступал.");
				}
			} else if (strcmp(x_job, "medic", true) == 0) {
				if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) {
					if (MedicCallTime[playerid] > 0) {
						SendClientMessage(playerid, COLOR_RED, " Вы уже на вызове.");
						return true;
					}
					if (MedicCall < 999) {
						if (IsPlayerConnected(MedicCall)) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), " Вы приняли Запрос медика от %s, у вас 180 секунд чтобы добраться до него.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, " Через 180 секунд маркер GPS пропадёт.");
							format(string, sizeof(string), " Медик %s принял ваш звонок пожалуйста оставайтесь на своём месте.", sendername);
							SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " Медик %s принял звонок %s.", sendername, giveplayer);
							SendRadioMessage(4, COLOR_LIGHTBLUE, string);
							new Float:X, Float:Y, Float:Z;
							GetPlayerPos(MedicCall, X, Y, Z);
							MedicCP[playerid] = 1;
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
							MedicCallTime[playerid] = 180;
							MedicCall = 999;
						}
					} else {
						error(playerid, " Никто не вызывал медика.");
					}
				} else {
					error(playerid, " Вы не медик.");
				}
			} else if (strcmp(x_job, "mechanic", true) == 0) {
				if (PlayerInfo[playerid][pJob] != 7) {
					error(playerid, " Вы не работаете механиком.");
					return true;
				}
				if (MechanicCallTime[playerid] > 0) {
					error(playerid, " Вы уже приняли вызов.");
					return true;
				}
				if (MechanicCall < 999) {
					if (IsPlayerConnected(MechanicCall)) {
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "Вы приняли Запрос механика от %s,  у вас 180 секунд чтобы добраться до него.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Через 30 секунд маркер GPS пропадёт.");
						format(string, sizeof(string), "Механик %s принял ваш звонок пожалуйста оставайтесь на своём месте.", sendername);
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos(MechanicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
						MechanicCallTime[playerid] = 1;
						MechanicCall = 999;
					}
				} else {
					error(playerid, " Никто не вызывал механника.");
				}
			} else if (strcmp(x_job, "refill", true) == 0) {
				if (RefillOffer[playerid] < 999) {
					if (IsPlayerConnected(RefillOffer[playerid])) {
						if (GetPlayerBablo(playerid) > RefillPrice[playerid]) {
							GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new car = gLastCar[playerid];
							new fuel;
							PlayerInfo[RefillOffer[playerid]][pMechSkill]++;
							if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50) {
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, "Ваш Автомобильный Навык Механика достиг 2 Уровня.");
							} else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100) {
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, "Ваш Автомобильный Навык Механика достиг 2 Уровня.");
							} else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200) {
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, "Ваш Автомобильный Навык Механика достиг 2 Уровня.");
							} else if (PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400) {
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, "Ваш Автомобильный Навык Механика достиг 2 Уровня.");
							}
							new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
							if (level >= 0 && level <= 50) {
								fuel = 15;
							} else if (level >= 51 && level <= 100) {
								fuel = 40;
							} else if (level >= 101 && level <= 200) {
								fuel = 60;
							} else if (level >= 201 && level <= 400) {
								fuel = 80;
							} else if (level >= 401) {
								fuel = 100;
							}
							format(string, sizeof(string), "Вы заправили ваш автомобиль с %d%, за %d$ механиком %s.", fuel, RefillPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы заправили %s автомобиль с %d%, %d$ будет добавлено в вашу зарплату.", sendername, fuel, RefillPrice[playerid]);
							SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid];
							GivePlayerBablo(playerid, -RefillPrice[playerid]);
							if (Gas[car] < 110) {
								Gas[car] += fuel;
							}
							RefillOffer[playerid] = 999;
							RefillPrice[playerid] = 0;
							SetPVarInt(playerid, "RefillOtkat", gettime() + 120);
						} else {
							error(playerid, " Вы не можете заплатить за бензин.");
						}
					}
				} else {
					error(playerid, " Никто не предлагал заправить ваш автомобиль.");
				}
			} else if (strcmp(x_job, "live", true) == 0) {
				if (LiveOffer[playerid] < 999) {
					if (IsPlayerConnected(LiveOffer[playerid])) {
						if (ProxDetectorS(5.0, playerid, LiveOffer[playerid])) {
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы заморожены до конца Беседы.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "Вы заморозили до конца беседы (используйте /live again).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
						} else {
							error(playerid, " Вы слишком далеко от репортера.");
						}
					}
				} else {
					error(playerid, " Никто не предлагал вам дать интервью.");
				}
			} else if (strcmp(x_job, "license", true) == 0) {
				if (LawyerOffer[playerid] >= 999) {
					error(playerid, " Никто не предлагал вам покупку лицензии.");
					return true;
				}
				if (GetPlayerBablo(playerid) > LawyerPrice[playerid]) {
					if (!IsPlayerConnected(LawyerOffer[playerid])) {
						return true;
					}
					if (ApprovedLawyer[playerid] > 0) {
						error(playerid, " У вас есть лицензия.");
						return true;
					}
					GetPlayerName(LawyerOffer[playerid], giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Вы купили лицензию за %d$ у законника %s.", LawyerPrice[playerid], giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Вы продали лицензию адвокату %s за %d$.", sendername, LawyerPrice[playerid]);
					SendClientMessage(LawyerOffer[playerid], COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, -LawyerPrice[playerid]);
					GivePlayerBablo(LawyerOffer[playerid], LawyerPrice[playerid]);
					LawyerOffer[playerid] = 999;
					LawyerPrice[playerid] = 0;
					ApprovedLawyer[playerid] = 1;
				}
			} else if (strcmp(x_job, "lawyer", true) == 0) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD2, "YourWorld: /accept lawyer [playerid/PartOfName]");
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid)) {
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (PlayerInfo[giveplayerid][pJob] == 2) {
								if (ApprovedLawyer[giveplayerid] == 1) {
									error(playerid, " У этого игрока уже есть лицензия на освобождение игрока.");
									return true;
								}
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "Вы выдали ордер на освобождение заключенного адвокату %s[%d].", giveplayer, giveplayerid);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s[%d] выдал вам ордер,на освобождение заключенного.", sendername, playerid);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "YourWorld: %s выдал адвокату %s ордер на освобождение заключенного.", sendername, giveplayer);
								SendRadioMessage(1, COLOR_DBLUE, string);
								SendRadioMessage(2, COLOR_DBLUE, string);
								SendRadioMessage(3, COLOR_DBLUE, string);
								SendRadioMessage(4, COLOR_DBLUE, string);
								SendRadioMessage(7, COLOR_DBLUE, string);
								ApprovedLawyer[giveplayerid] = 1;
							} else {
								error(playerid, " Указанный игрок - не адвокат.");
							}
						} else {
							error(playerid, " Неверный ID.");
						}
					}
				} else {
					error(playerid, " Вы не законник.");
				}
			} else if (strcmp(x_job, "drugs", true) == 0) {
				if (DrugOffer[playerid] < 999) {
					if (GetPlayerBablo(playerid) > DrugPrice[playerid]) {
						if (PlayerInfo[playerid][pDrugs] < 7) {
							if (IsPlayerConnected(DrugOffer[playerid])) {
								if (GetPVarInt(playerid, "SellDrugs") > gettime()) {
									SendClientMessage(playerid, COLOR_WHITE, "Купить нарко можно раз в 2 минуты.");
									return true;
								}
								if (PlayerInfo[DrugOffer[playerid]][pDrugs] < DrugGram[playerid]) {
									error(playerid, " У наркодиллера закончились наркотики.");
									return true;
								}
								GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "Вы купили %d грамм за %d$ от Торговца наркотиками %s.", DrugGram[playerid], DrugPrice[playerid], giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s Купил ваши %d грамм, %d$ было добавлено к вашей Зарплате.", sendername, DrugGram[playerid], DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugsSkill]++;
								GivePlayerBablo(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
								if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50) {
									SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "Ваш Навык Торговца Наркотиками достиг 2 Уровня.");
								} else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100) {
									SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "Ваш Навык Торговца наркотиками достиг 3 Уровня.");
								} else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200) {
									SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "Ваш Навык Торговца наркотиками достиг 4 Уровня.");
								} else if (PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400) {
									SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "Ваш Навык Торговца наркотиками достиг 5 Уровня.");
								}
								DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								SetPVarInt(giveplayerid, "SellDrugs", gettime() + 120);
							}
						} else {
							error(playerid, " У вас слишком много наркотиков,сначала используйте их.");
						}
					} else {
						error(playerid, " Вы не можете заплатить за наркоту.");
					}
				} else {
					error(playerid, " Никто не предлагал вам наркоту.");
				}
			} else if (strcmp(x_job, "gun", true) == 0) {
				if (GunOffer[playerid] < 999) {
					if (GetPlayerBablo(playerid) > GunDPrice[playerid]) {
						if (IsPlayerConnected(GunOffer[playerid])) {
							new weaponname[32];
							GetPlayerName(GunOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							GetWeaponName(GunType[playerid], weaponname, sizeof(weaponname));
							format(string, sizeof(string), "Вы купили \"%s\" с %d патронами за %d$ у торговца оружием %s.", weaponname, GunAmmo[playerid], GunDPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s Купил у вас \"%s\" с %d патронами, вы заработали %d$.", sendername, weaponname, GunAmmo[playerid], GunDPrice[playerid]);
							SendClientMessage(GunOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GunOffer[playerid]][pGunSkill]++;
							GivePlayerBablo(GunOffer[playerid], GunDPrice[playerid]);
							GivePlayerBablo(playerid, -GunDPrice[playerid]);
							ServerGivePlayerWeapons(playerid, GunType[playerid], GunAmmo[playerid]);
							PlayerInfo[GunOffer[playerid]][pMats] -= GunDPrice[playerid];
							if (PlayerInfo[GunOffer[playerid]][pGunSkill] == 50) {
								SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "Ваш скилл Торговца Оружием достиг 2 Уровня.");
							} else if (PlayerInfo[GunOffer[playerid]][pGunSkill] == 100) {
								SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "Ваш скилл Торговца Оружием достиг 3 Уровня.");
							} else if (PlayerInfo[GunOffer[playerid]][pGunSkill] == 250) {
								SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "Ваш скилл Торговца Оружием достиг 4 Уровня.");
							} else if (PlayerInfo[GunOffer[playerid]][pGunSkill] == 500) {
								SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "Ваш скилл Торговца Оружием достиг 5 Уровня.");
							}
							GunOffer[playerid] = 999;
							GunDPrice[playerid] = 0;
							GunType[playerid] = 0;
							GunAmmo[playerid] = 0;
						}
					} else {
						error(playerid, " Вы не можете позволить себе оружие.");
					}
				} else {
					error(playerid, " Никто не предлагал вам оружие.");
				}
			}
			if (strcmp(x_job, "free", true) == 0) {
				if (CarOffer[playerid] < 999) {
					if (IsPlayerConnected(CarOffer[playerid])) {
						if (GetPlayerBablo(playerid) > CarPrice[playerid]) {
							if (ApprovedLawyer[CarOffer[playerid]] < 1) {
								error(playerid, " У адвоката нет лицензии.");
							}
							GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[CarOffer[playerid]][pLawSkill]++;
							if (PlayerInfo[CarOffer[playerid]][pLawSkill] == 50) {
								SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скилл Адвоката теперь 2");
							} else if (PlayerInfo[CarOffer[playerid]][pLawSkill] == 100) {
								SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скилл Адвоката  теперь 3");
							} else if (PlayerInfo[CarOffer[playerid]][pLawSkill] == 200) {
								SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скилл Адвоката  теперь 4");
							} else if (PlayerInfo[CarOffer[playerid]][pLawSkill] == 400) {
								SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Ваш скилл Адвоката  теперь 5");
							}
							format(string, sizeof(string), "Вас выпустил за %d$ адвокат %s.", CarPrice[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Вы выпустили из тюрьмы %s за %d$.", sendername, CarPrice[playerid]);
							SendClientMessage(CarOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid];
							GivePlayerBablo(playerid, -CarPrice[playerid]);
							PlayerInfo[playerid][pJailTime] = 0;
							PlayerInfo[playerid][pJailed] = 0;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							ApprovedLawyer[CarOffer[playerid]] = 0;
							PlayerInfo[playerid][pWanted] = 0;
							SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
							SetPlayerPos(playerid, 246.8119, 68.0246, 1003.6406);
							PlayerInfo[playerid][pZapret] = 0;
							SetPlayerInterior(playerid, 6);
							CarOffer[playerid] = 999;
							CarPrice[playerid] = 0;
						} else {
							error(playerid, " У вас недостаточно денег.");
						}
					}
				} else {
					error(playerid, " Никто не предлогал покупать автомобиль.");
				}
			} else if (strcmp(x_job, "repair", true) == 0) {
				if (RepairOffer[playerid] < 999) {
					if (GetPlayerBablo(playerid) > RepairPrice[playerid]) {
						if (IsPlayerInAnyVehicle(playerid)) {
							if (IsPlayerConnected(RepairOffer[playerid])) {
								GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								RepairCar[playerid] = GetPlayerVehicleID(playerid);
								SetVehicleHealth(RepairCar[playerid], 1000.0);
								RepairVehicle(RepairCar[playerid]);
								format(string, sizeof(string), " Ваше Авто отремонтировано автомехаником %s за %d.", giveplayer, RepairPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "Вы починили автомобиль игрока %s, за %d$.Эта сумма будет добавлена к вашей зарплате.", sendername, RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill]++;
								if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50) {
									SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Твой скилл Механика достиг 2 Уровня.");
								} else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100) {
									SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Твой скилл Механика достиг 3 Уровня.");
								} else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200) {
									SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Твой скилл Механика достиг 4 Уровня.");
								} else if (PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400) {
									SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Твой скилл Механика достиг 5 Уровня.");
								}
								PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid];
								GivePlayerBablo(playerid, -RepairPrice[playerid]);
								RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								SetPVarInt(playerid, "RepairOtkat", gettime() + 120);
							}
						}
					} else {
						error(playerid, " Вы не можете позволить себе заправку.");
					}
				} else {
					error(playerid, " Никто не предлогал подчинить тебе Авто.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/refill", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 7) {
				error(playerid, " Вы не работаете механиком.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, " Используй: /refill [ид] [цена]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (money < 100 || money > 5000) {
				error(playerid, " Цена не может быть меньше 100, или больше 5000.");
				return true;
			}
			if (GetPlayerVehicleID(playerid) != 525) {
				error(playerid, " Возьмите автомобиль автомеханика для работы.");
				return true;
			}
			if (IsPlayerConnected(playa)) {
				if (playa != INVALID_PLAYER_ID) {
					if (GetPlayerBablo(giveplayerid) < moneys) {
						SendClientMessage(playerid, COLOR_WHITE, "У этого игрока недостаточно средств.");
						return true;
					}
					if (PlayerInfo[playa][pLevel] < 1) {
						SendClientMessage(playerid, COLOR_WHITE, "Этот игрок должен быть как 1lvl.");
						return true;
					}
					if (ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa)) {
						if (playa == playerid) {
							error(playerid, " Нельзя починить собственный транспорт.");
							return true;
						}
						if (GetPVarInt(playa, "RefillOtkat") > gettime()) {
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже заправили авто этого игрока, подождите 1 минуту.");
							return true;
						}
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " Вы хотите заправить транспорт %s за %d$ .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Механик %s хочет заправить ваш транспорт за %d$, (введите /accept refill) если согласны.", sendername, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					} else {
						error(playerid, " Этот игрок Слишком далеко / Не в автомобиле.");
					}
				}
			} else {
				error(playerid, " Этот игрок оффлайн.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/repair", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] != 7) {
				error(playerid, " Вы не работаете механиком.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "Используй: /repair [ид] [цена]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (money < 100 || money > 5000) {
				SendClientMessage(playerid, COLOR_RED, " Цена не может быть меньше 100, или больше 5000.");
				return true;
			}
			if (GetPlayerVehicleID(playerid) != 525) {
				error(playerid, " Возьмите автомобиль автомеханика для работы.");
				return true;
			}
			if (IsPlayerConnected(playa)) {
				if (playa != INVALID_PLAYER_ID) {
					if (ProxDetectorS(8.0, playerid, playa) && IsPlayerInAnyVehicle(playa)) {
						if (GetPlayerBablo(giveplayerid) < moneys) {
							SendClientMessage(playerid, COLOR_WHITE, "У этого игрока недостаточно средств.");
							return true;
						}
						if (PlayerInfo[playa][pLevel] < 1) {
							SendClientMessage(playerid, COLOR_WHITE, "Этот игрок должен быть как минимум 1lvl.");
							return true;
						}
						if (GetPVarInt(playa, "RepairOtkat") > gettime()) {
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже чинили автомобиль этому игроку.Подождите 2 минуты.");
							return true;
						}
						if (playa == playerid) {
							error(playerid, " Для себя нельзя.");
							return true;
						}
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), " Вы хотите починить транспорт %s за %d$ .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), " Механик %s хочет починить вашу тачку за %d$, (введите /accept repair) если согласны.", sendername, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					} else {
						error(playerid, " Этот игрок слишком далеко / не в автомобиле.");
					}
				}
			} else {
				error(playerid, " Этот игрок оффлайн.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/callcar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (CarCalls[playerid] > 0) {
				new Float:plocx, Float:plocy, Float:plocz;
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePosition(CarID[playerid], plocx, plocy + 4, plocz);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " Купленное авто прибыло.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* Вы можете вызвать свое Авто еще %d раз.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			} else {
				error(playerid, " Неправильное действие.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!PlayerInfo[playerid][pMuted]) {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_WHITE, "Используйте: /f [текст.]");
					return true;
				}
				if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 || strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
					format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
					ABroadCast(COLOR_AOCHAT, string, 1);
					return true;
				}
				if (!MuteFamily[playerid]) {
					if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {
						if (PlayerInfo[playerid][pLeader] == 5) {
							format(string, sizeof(string), " Дон %s[%d]: %s", sendername, playerid, result);
							SendRadioMessage(5, TEAM_AZTECAS_COLOR, string);
						} else {
							format(string, sizeof(string), "%s %s[%d]: %s. ))", MafiaLCN(playerid), sendername, playerid, result);
							SendRadioMessage(5, TEAM_AZTECAS_COLOR, string);
						}
					} else if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
						if (PlayerInfo[playerid][pLeader] == 6) {
							format(string, sizeof(string), " Кумитё %s[%d]: %s", sendername, playerid, result);
							SendRadioMessage(6, TEAM_AZTECAS_COLOR, string);
						} else {
							format(string, sizeof(string), "%s %s[%d]: %s. ))", MafiaYakuza(playerid), sendername, playerid, result);
							SendRadioMessage(6, TEAM_AZTECAS_COLOR, string);
						}
					} else if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
						if (PlayerInfo[playerid][pLeader] == 8) {
							format(string, sizeof(string), " Директор %s[%d]: %s", sendername, playerid, result);
							SendRadioMessage(8, TEAM_AZTECAS_COLOR, string);
						} else {
							format(string, sizeof(string), "%s %s[%d]: %s. ))", Hitmans(playerid), sendername, playerid, result);
							SendRadioMessage(8, TEAM_AZTECAS_COLOR, string);
						}
					} else if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
						if (PlayerInfo[playerid][pLeader] == 9) {
							format(string, sizeof(string), " Продюсер Телесети %s[%d]: %s", sendername, playerid, result);
							SendRadioMessage(9, TEAM_AZTECAS_COLOR, string);
						} else {
							format(string, sizeof(string), "%s %s[%d]: %s. ))", SanNews(playerid), sendername, playerid, result);
							SendRadioMessage(9, TEAM_AZTECAS_COLOR, string);
						}
					} else if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 10) {
							format(string, sizeof(string), " Управляющий %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Зам.Управляющего %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Опытный Таксист %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Таксист %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Бомбила %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Новичок %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Новичок %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(10, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 11) {
							format(string, sizeof(string), " Главный Инструктор %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Зам.Главного Инструктора %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Менеджер %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Старший Инструктор  %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Инструктор %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Стажёр %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Стажёр %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(11, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 12) {
							format(string, sizeof(string), " Лидер %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Зам. Лидера %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Опытный водитель %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Водитель %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Освоившийся %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Новичек %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Новичек %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(12, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) { // Grove Street Gang
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 13) {
							format(string, sizeof(string), "Boss %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), "Authority %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), "Checked Up %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), "Old Gangsta %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), "Gangsta %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), "Youngsta %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), "Youngsta %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(13, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) { // El Coronos
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 14) {
							format(string, sizeof(string), " Padre %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Adjunto %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " El Entrenador Mayor %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Verificado %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Comprobar %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(14, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 15) {
							format(string, sizeof(string), " Padre %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Adjunto %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Autoritad %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Verificado %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Ordinario %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(15, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 16) {
							format(string, sizeof(string), " Daddy %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Big Brothers %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Killa %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Old Gangsta %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Gangsta %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Young Nigga %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Young Nigga %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(16, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) { // TRIADS
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 18) {
							format(string, sizeof(string), " Taй Ло %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Фу Шан Су %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Синг Фунг %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Хунг Кван %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Шо Хай %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Сей Кой Джай %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Сей Кой Джай %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(18, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 19) {
							format(string, sizeof(string), " Padre %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Adjunto %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Autoridad %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Verificado %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Ordinaro %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Novato %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(19, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {
						if (PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 20) {
							format(string, sizeof(string), " Главарь %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 5) {
							format(string, sizeof(string), " Авторитет %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 4) {
							format(string, sizeof(string), " Смотрящий %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 3) {
							format(string, sizeof(string), " Жиган %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 2) {
							format(string, sizeof(string), " Фраер %s[%d]: %s", sendername, playerid, result);
						} else if (PlayerInfo[playerid][pRank] == 1) {
							format(string, sizeof(string), " Шнырь %s[%d]: %s", sendername, playerid, result);
						} else {
							format(string, sizeof(string), " Шнырь %s[%d]: %s", sendername, playerid, result);
						}
						SendRadioMessage(20, TEAM_AZTECAS_COLOR, string);
						printf("%s", string);
					} else {
						error(playerid, " Вы не состоите в фракции.");
					}
				} else {
					error(playerid, " Вы заткнуты лидером.");
				}
			} else {
				PlayerMuteMessage(playerid);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/news", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
				new newcar = GetPlayerVehicleID(playerid);
				if (!PlayerInfo[playerid][pMuted]) {
					if (GetPVarInt(playerid, "san") < gettime()) {
						if (newcar >= Report[0] && newcar <= Report[1] || newcar == Report2) {
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' ')) {
								idx++;
							}
							new offset = idx;
							new result[90];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if (!strlen(result)) {
								SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте{FFFFFF} : /news [текст]");
								return true;
							}
							if (strfind(cmdtext, "www", true) != -1 || strfind(cmdtext, ".ru", true) != -1 || strfind(cmdtext, ".net", true) != -1 || strfind(cmdtext, ".com", true) != -1 || strfind(cmdtext, "http", true) != -1 || strfind(cmdtext, "org", true) != -1 || strfind(cmdtext, "точка", true) != -1 || strfind(cmdtext, "то4ка", true) != -1 || strfind(cmdtext, "ip", true) != -1) {
								format(string, 256, "Подозрение на рекламу в /s чат %s(%d): %s", sendername, playerid, cmdtext);
								ABroadCast(COLOR_AOCHAT, string, 1);
								return true;
							}
							format(string, sizeof(string), "[San News] %s[%d]: %s", sendername, playerid, result);
							OOCNews(COLOR_ORANGE, string);
							SetPVarInt(playerid, "san", gettime() + 30);
							PlayerInfo[playerid][pNewsSkill]++;
							if (PlayerInfo[playerid][pNewsSkill] == 50) {
								SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык Репортёра достиг 2 Уровня.");
							} else if (PlayerInfo[playerid][pNewsSkill] == 100) {
								SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык репортёра достиг 3 Уровня.");
							} else if (PlayerInfo[playerid][pNewsSkill] == 200) {
								SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык Репортёра достиг 4 Уровня.");
							} else if (PlayerInfo[playerid][pNewsSkill] == 400) {
								SendClientMessage(playerid, COLOR_YELLOW, " Ваш навык Репортёра достиг 5 Уровня.");
							}
						} else {
							error(playerid, " Для проведения эфира пересядьте в специально оборудованный фургон/вертолет.");
						}
					} else {
						error(playerid, " Сообщить новости штату возможно раз в 30 секунд.");
					}
				} else {
					PlayerMuteMessage(playerid);
				}
			} else {
				error(playerid, " Вы не Репортёр Новостей.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/live", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
				if (TalkingLive[playerid] != 255) {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " Прямой эфир окончен.");
					SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, " Прямой эфир окончен.");
					TogglePlayerControllable(playerid, 1);
					TogglePlayerControllable(TalkingLive[playerid], 1);
					TalkingLive[TalkingLive[playerid]] = 255;
					TalkingLive[playerid] = 255;
					return true;
				}
				if (PlayerInfo[playerid][pNewsSkill] >= 400) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_GRAD1, " Используй: /live [ид]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid)) {
						if (giveplayerid != INVALID_PLAYER_ID) {
							if (ProxDetectorS(5.0, playerid, giveplayerid)) {
								if (giveplayerid != playerid) {
									GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), " Вы предложили %s поболтать с вами.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Репортер %s предлагает провести с тобой прямой эфир(/live). Чтобы согласится напишите /accept live.", sendername);
									SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
									LiveOffer[giveplayerid] = playerid;
								} else {
									error(playerid, " Вы не можете говорить с самим собой");
								}
							} else {
								error(playerid, " Вы слишком далеко от игрока.");
							}
						}
					} else {
						error(playerid, " Неверный ID/Ник.");
					}
				} else {
					error(playerid, " Ваш навык репортёра слишком мал чтобы общаться с людьми.");
				}
			} else {
				error(playerid, " Вы не Репортёр.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/selldrugs", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] == 4) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "*Используйте: /selldrugs [ид] [граммы] [цена]");
					return true;
				}
				new playa;
				new money;
				new needed;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					return true;
				}
				needed = strval(tmp);
				if (needed >= 1 || needed <= 99) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						return true;
					}
					money = strval(tmp);
					if (money >= 1 || money <= 1000) {
						if (needed <= PlayerInfo[playerid][pDrugs]) {
							if (IsPlayerConnected(playa)) {
								if (playa != INVALID_PLAYER_ID) {
									if (ProxDetectorS(8.0, playerid, playa)) {
										if (playa != playerid) {
											if (GetPlayerBablo(playa) >= money) {
												if (GetPVarInt(playa, "SellDrugs") < gettime()) {
													if (PlayerInfo[playa][pDrugs] < 100) {
														GetPlayerName(playa, giveplayer, sizeof(giveplayer));
														GetPlayerName(playerid, sendername, sizeof(sendername));
														format(string, sizeof(string), " Вы предложили %s купить %d граммов наркотиков за %d$ .", giveplayer, needed, money);
														SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
														format(string, sizeof(string), " Продавец наркотиков %s продал вам %d граммов за %d$, (пишите /accept drugs) чтобы купить.", sendername, needed, money);
														SendClientMessage(playa, COLOR_LIGHTBLUE, string);
														DrugOffer[playa] = playerid;
														DrugPrice[playa] = money;
														DrugGram[playa] = needed;
													} else {
														error(playerid, " У этого игрока слишком много наротических веществ");
													}
												} else {
													error(playerid, " Продать наркотические вещества игроку можно раз в 2 минуты");
												}
											} else {
												error(playerid, " У этого игрока недостаточно средств для совершения покупки");
											}
										} else {
											error(playerid, " Нет смысла продавать наркотические вещества самому себе");
										}
									} else {
										error(playerid, " Игрок не рядом с вами.");
									}
								}
							} else {
								error(playerid, " Игрок не в игре.");
							}
						} else {
							error(playerid, " У вас нет столько наркоты с собой.");
						}
					} else {
						error(playerid, " Цена должна быть от 1 до 1000");
					}
				} else {
					error(playerid, " Можно продать от 1 до 99 граммов наркотических веществ.");
				}
			} else {
				error(playerid, " Вы не продавец наркотиков.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/healgangganstar", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 2029.5566, -1404.6027, 17.2508) || IsPlayerInRangeOfPoint(playerid, 2.0, 1173.2023, -1323.3982, 15.3950)) {
				new Float:health;
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, 105.0);
				if (health < 105.0) {
					format(string, sizeof(string), "Вы были вылечены на 100 процентов.(-13$)");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerBablo(playerid, -50);
				} else {
					error(playerid, " Вы здоровы.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/selllicense", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsACop(playerid)) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте:{FFFFFF} /selllicense [ид] [цена]");
					return true;
				}
				new playa;
				new money;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					return true;
				}
				money = strval(tmp);
				if (money > 5000 || money < 10000) {
					if (IsPlayerConnected(playa)) {
						if (playa != INVALID_PLAYER_ID) {
							if (PlayerInfo[playa][pJob] == 2) {
								if (PlayerInfo[playa][pLevel] >= 1) {
									if (GetPlayerBablo(playa) >= money) {
										if (!ApprovedLawyer[playa]) {
											GetPlayerName(playa, giveplayer, sizeof(giveplayer));
											GetPlayerName(playerid, sendername, sizeof(sendername));
											format(string, sizeof(string), " Вы предложили %s купить лицензию за %d$ .", giveplayer, money);
											SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
											format(string, sizeof(string), " Законник %s предлогает вам купить лицензию за %d$, (пишите /accept license) чтобы купить.", sendername, money);
											SendClientMessage(playa, COLOR_LIGHTBLUE, string);
											LawyerOffer[playa] = playerid;
											LawyerPrice[playa] = money;
										} else {
											error(playerid, " У этого игрока есть лицензия для работы адвокатом.");
										}
									} else {
										error(playerid, " У этого игрока недостаточно средств для совершения покупки");
									}
								} else {
									error(playerid, " Игрок должен быть как минимум 1lvl.");
								}
							} else {
								error(playerid, " Игрок не является адвокатом.");
							}
						}
					} else {
						error(playerid, " Игрок не в игре.");
					}
				} else {
					error(playerid, " Цена должна быть от 5000 до 100000");
				}
			} else {
				error(playerid, " Вы не законник.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/eject", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			new State;
			if (IsPlayerInAnyVehicle(playerid)) {
				State = GetPlayerState(playerid);
				if (State == PLAYER_STATE_DRIVER) {
					tmp = strtok(cmdtext, idx);
					if (!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "*Используйте: /eject [ид]");
						return true;
					}
					new playa;
					playa = ReturnUser(tmp);
					new test;
					test = GetPlayerVehicleID(playerid);
					if (IsPlayerConnected(playa)) {
						if (playa != INVALID_PLAYER_ID) {
							if (playa != playerid) {
								if (IsPlayerInVehicle(playa, test)) {
									if (PlayerInfo[playerid][pForce] <= PlayerInfo[playa][pForce]) {
										new rnd = random(10);
										if (rnd > 5) {
											error(playerid, " У вас не хватило сил, чтобы выкинуть игрока из машины.");
											return true;
										}
									}
									new PName[MAX_PLAYER_NAME];
									GetPlayerName(playerid, PName, sizeof(PName));
									GetPlayerName(playa, giveplayer, sizeof(giveplayer));
									format(string, sizeof(string), " Вы выбросили из транспорта %s.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), " %s выбросил(а) вас из своего транспорта.", PName);
									SendClientMessage(playa, COLOR_LIGHTBLUE, string);
									RemovePlayerFromVehicle(playa);
								} else {
									error(playerid, " Этот игрок не в твоей машине.");
								}
							} else {
								error(playerid, " Вы не можете выйти сами.");
							}
						}
					} else {
						error(playerid, " Неверный ID/Ник.");
					}
				} else {
					error(playerid, " Вы можете выкинуть из авто, толька с места водителя.");
				}
			} else {
				error(playerid, " Вам нужен транспорт чтобы использывать это.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/wanted", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (gTeam[playerid] == 2 || IsACop(playerid)) {
				SendClientMessage(playerid, COLOR_GREEN, "Розыск:");
				for (new i = 0; i < GetMaxPlayers(); i++) {
					if (IsPlayerConnected(i)) {
						if (i == INVALID_PLAYER_ID) {
							continue;
						}
						if (PlayerInfo[i][pWanted] > 0) {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, sizeof(string), "Преступник: %s {FFFFFF}| Уровень розыска: {00FF00}%d", sendername, PlayerInfo[i][pWanted]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
					}
				}
			} else {
				SendClientMessage(playerid, COLOR_GREY, "Ошибка: Вы не коп.");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/reg", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 5) {
				if (MurderPlayers < 10) {
					tmp = strtok(cmdtext, idx);
					if (strlen(tmp) == 0) {
						SendClientMessage(playerid, COLOR_WHITE, "Команда: /reg [id]");
						return true;
					}
					new pregidsss = strval(tmp);
					if (pregidsss != INVALID_PLAYER_ID) {
						if (ProxDetectorS(5.0, playerid, pregidsss)) {
							new name[35];
							GetPlayerName(playerid, name, sizeof(name));
							SendClientMessage(playerid, COLOR_WHITE, "Вы предложили поучавствовать в гонке.");
							format(string, sizeof(string), "%s предлагает вам участие в гонке за 5000$\nХотите принять?", name);
							ShowPlayerDialog(pregidsss, 9957, DIALOG_STYLE_MSGBOX, "Билет", string, "Да", "Нет");
						} else {
							SendClientMessage(playerid, COLOR_RED, "Этот игрок слишком далеко");
						}
					}
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "Много участников.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/race", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 5 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 6 || PlayerInfo[playerid][pLeader] == 12) {
			if (IsPlayerConnected(playerid)) {
				while ((idx < strlen(cmdtext)) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < strlen(cmdtext)) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_GRAD2, "Введите: /race [текст]");
					return true;
				}
				format(string, sizeof(string), "SMS: %s. Отправитель:Street Racers{FFFFFF} /kpk => Навигации => Локации", result);
				SendRacersMessage(COLOR_YELLOW2, string);
			}
		}
		return true;
	}

	if (strcmp(cmd, "/startrace", true) == 0) {
		if (PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 5 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pMember] == 12 && PlayerInfo[playerid][pRank] == 6) {
			if (IsPlayerInRangeOfPoint(playerid, 10.0, 1159.4309, -751.9417, 59.8787)) {
				if (MurderPlayers >= 2) {
					while ((idx < strlen(cmdtext)) && (cmdtext[idx] <= ' ')) {
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < strlen(cmdtext)) && ((idx - offset) < (sizeof(result) - 1))) {
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					SendRadioMessage(1, COLOR_WHITE, "{FF0000}[Внимание!]{FFFFFF}Поступила информация о проведении нелегальной гонки в Los Santose.Следует принять меры.");
					SendClientMessage(playerid, COLOR_WHITE, "Гонка началась");
					MurderStartGonka1 = 4;
				} else {
					error(playerid, " Недостаточно игроков.");
				}
			} else {
				error(playerid, " Вы не у старта");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/searchoff", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pJob] == 6) {
				if (IsPlayerInRangeOfPoint(playerid, 2, 414.1195, 2536.9023, 10.0000)) {
					PlayerInfo[playerid][pWanted] = 0;
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "Снять уровень розыска можно в убежище");
				}
			} else {
				error(playerid, " Вы не карманник");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/bribe", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (IsPlayerInRangeOfPoint(playerid, 3.0, 256.0822, 64.3362, 1003.6406)) {
				if (PlayerInfo[playerid][pWanted] == 1) {
					if (GetPlayerBablo(playerid) >= 1000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -1000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}1000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				} else if (PlayerInfo[playerid][pWanted] == 2) {
					if (GetPlayerBablo(playerid) >= 2000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -2000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}2000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				} else if (PlayerInfo[playerid][pWanted] == 3) {
					if (GetPlayerBablo(playerid) >= 3000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -3000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}3000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				} else if (PlayerInfo[playerid][pWanted] == 4) {
					if (GetPlayerBablo(playerid) < 4000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -4000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}4000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				} else if (PlayerInfo[playerid][pWanted] == 5) {
					if (GetPlayerBablo(playerid) < 5000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -5000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}5000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				} else if (PlayerInfo[playerid][pWanted] == 6) {
					if (GetPlayerBablo(playerid) < 6000) {
						PlayerInfo[playerid][pWanted] = 0;
						GivePlayerBablo(playerid, -6000);
						SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Вы очистили свой розыск,отдавши государству {FFFFFF}6000$");
					} else {
						error(playerid, " Недостаточно средств.");
					}
				}
				SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "Снять уровень розыска можно в участке LSPD");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/clear", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsACop(playerid)) {
				error(playerid, " Вы не законник.");
				return true;
			}
			if (!IsPlayerInRangeOfPoint(playerid, 3.0, 253.9280, 69.6094, 1003.6406) && !IsPlayerInRangeOfPoint(playerid, 3.0, 231.33, 161.44, 1003.02)) {
				SendClientMessage(playerid, COLOR_GRAD2, " В этом месте нельзя использовть эту команду.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, " Использование: /clear [playerid/PartOfName]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[playerid][pRank] >= 2 || PlayerInfo[playerid][pLeader] > 0) {
						if (giveplayerid == playerid) {
							error(playerid, " Вы не можете снять розыск себе.");
							return true;
						}
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "  Вы очистили розыск игрока %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "  Офицер %s очистил розыск.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pWanted] = 0;
						SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWanted]);
						ClearCrime(giveplayerid);
						if (gTeam[giveplayerid] == 4) {
							gTeam[giveplayerid] = 3;
							SetPlayerToTeamColor(giveplayerid);
						}
					} else {
						error(playerid, " Вам нужен 2 ранг.");
					}
				} else {
					error(playerid, " Неверное имя/ID.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/ticket", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте:{FFFFFF}: /ticket [id] [сумма] [причина]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if (!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте:{FFFFFF}: /ticket [id] [сумма] [причина]");
					return true;
				}
				moneys = strval(tmp);
				if (moneys < 100 || moneys > 1000) {
					error(playerid, " Билет может стоить не ниже 100 и не выше 1000.");
					return true;
				}
				if (IsPlayerConnected(giveplayerid)) {
					if (giveplayerid != INVALID_PLAYER_ID) {
						if (ProxDetectorS(8.0, playerid, giveplayerid)) {
							if (PlayerInfo[giveplayerid][pWanted] < 1) {
								SendClientMessage(playerid, COLOR_WHITE, "У этого игрока нет розыска.");
								return true;
							}
							if (playerid == giveplayerid) {
								error(playerid, " Нельзя выписать штраф самому себе.");
								return true;
							}
							if (IsACop(giveplayerid)) {
								error(playerid, " Вы не можете выписать штраф законнику.");
								return true;
							}
							if (PlayerInfo[giveplayerid][pCash] < moneys) {
								error(playerid, " У этого игрока недостаточно средств.");
								return true;
							}
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' ')) {
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if (!strlen(result)) {
								SendClientMessage(playerid, COLOR_WHITE, "Используйте: /ticket [ид] [сумма] [причина]");
								return true;
							}
							format(string, sizeof(string), " Вы выписали %s штраф %d$, причина: %s.", giveplayer, moneys, (result));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " Законник %s выписал вам штраф %d$, причина: %s.", sendername, moneys, (result));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, " Используйте: /accept ticket чтобы оплатить выписанный штраф.");
							TicketOffer[giveplayerid] = playerid;
							TicketMoney[giveplayerid] = moneys;
						} else {
							error(playerid, " Игрок находится не рядом с вами.");
						}
					}
				} else {
					error(playerid, " Игрок не в игре.");
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/arrest", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			if (!IsACop(playerid)) {
				error(playerid, " Вы не Законник.");
				return true;
			}
			if (!IsPlayerInRangeOfPoint(playerid, 5.0, 1529.5117, -1683.8053, 5.8906) && !IsPlayerInRangeOfPoint(playerid, 5.0, -1596.1489, 676.8752, -5.2422) && !IsPlayerInRangeOfPoint(playerid, 5.0, -1521.9950, 479.5473, 7.1875)) {
				error(playerid, " Вы не возле точки ареста");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, "{00C0FF}Используйте{FFFFFF} : /arrest [ID игрока] [время] [причина]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, "{00C0FF}Используйте{FFFFFF} : /arrest [ID игрока] [время] [причина]");
				return true;
			}
			moneys = strval(tmp);
			if (moneys < 1 || moneys > 60) {
				error(playerid, " Посадить игрока в КПЗ можно на время от 1 до 60 минут.");
				return true;
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid == INVALID_PLAYER_ID) {
					return true;
				}
				if (GetDistanceBetweenPlayers(playerid, giveplayerid) > 6) {
					error(playerid, " Подозреваемый должен находиться вместе с Вами.");
					return true;
				}
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' ')) {
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if (!strlen(result)) {
					SendClientMessage(playerid, COLOR_GRAD1, "{00C0FF}Используйте{FFFFFF} : /arrest [ID игрока] [время] [причина]");
					return true;
				}
				if (IsACop(giveplayerid)) {
					SendClientMessage(playerid, COLOR_GREY, " Это игрок является законником");
					return true;
				}
				format(string, sizeof(string), "Вы арестовали %s[%d] на %d минут. Причина: %s.", giveplayer, giveplayerid, moneys, (result));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeResetPlayerWeapons(giveplayerid);
				PlayerInfo[giveplayerid][pWanted] = 0;
				SetPlayerWantedLevel(giveplayerid, PlayerInfo[giveplayerid][pWanted]);
				PlayerInfo[giveplayerid][pJailed] = 1;
				SetPlayerSkin(giveplayerid, 268);
				PlayerInfo[giveplayerid][pJailTime] = moneys * 60;
				SetPlayerInterior(giveplayerid, 6);
				new rand = random(sizeof(LSPDSpawns));
				SetPlayerPos(giveplayerid, LSPDSpawns[rand][0], LSPDSpawns[rand][1], LSPDSpawns[rand][2]);
				PlayerInfo[giveplayerid][pInt] = 6;
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) {
					format(string, sizeof(string), "Сотрудник полиции %s арестовал(а) нарушителя %s на %d минут. Причина: %s.", sendername, giveplayer, moneys, (result));
					OOCNews(COLOR_DBLUE, string);
				} else if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) {
					format(string, sizeof(string), "Агент FBI %s арестовал(а) нарушителя %s на %d минут. Причина: %s.", sendername, giveplayer, moneys, (result));
					OOCNews(COLOR_DBLUE, string);
				} else if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
					format(string, sizeof(string), "Военнослужащий %s арестовал(а) нарушителя %s на %d минут. Причина: %s.", sendername, giveplayer, moneys, (result));
					OOCNews(COLOR_DBLUE, string);
				}
			}
		}
		return true;
	}

	if (strcmp(cmd, "/contract", true) == 0) {
		if (IsPlayerConnected(playerid)) {
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "*Используйте: /contract [ID игрока/Ник Игрока] [сумма]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "*Используйте: /contract [IDигрока/Ник Игрока] [сумма]");
				return true;
			}
			moneys = strval(tmp);
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
				SendClientMessage(playerid, COLOR_WHITE, "Вы не можете заключить контракт");
				return true;
			}
			if (moneys < 10000 || moneys > 100000) {
				error(playerid, " Вы можете поставить контракт не меньше чем 10000$, и не больше чем 100000$.");
				return true;
			}
			if (PlayerInfo[playerid][pLevel] < 2) {
				error(playerid, " Вам нужен как минимум 2lvl что бы заключить контракт");
			}
			if (IsPlayerConnected(giveplayerid)) {
				if (giveplayerid != INVALID_PLAYER_ID) {
					if (PlayerInfo[giveplayerid][pMember] == 8 && PlayerInfo[playerid][pMember] == 8) {
						error(playerid, " Вы не можете установить Контракты в вашем собственном Агентстве.");
						return true;
					} else if (PlayerInfo[giveplayerid][pLeader] == 8 && PlayerInfo[playerid][pMember] == 8) {
						error(playerid, " Вы не можете установить Контракты в вашем собственном Агентстве.");
						return true;
					} else if (PlayerInfo[giveplayerid][pMember] == 8 || PlayerInfo[giveplayerid][pLeader] == 8) {
						error(playerid, " Нельзя поставить контракт на Наёмного Убийцу.");
						return true;
					}
					if (gTeam[giveplayerid] == 2 && moneys != 100000) {
						error(playerid, " Только 100000$ может быть установлено за контракт на полицейского.");
						return true;
					}
					if (giveplayerid == playerid) {
						error(playerid, " Вы не можете поставить на себя.");
						return true;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GivePlayerBablo(playerid, (0 - moneys));
					PlayerInfo[giveplayerid][pHeadValue] += moneys;
					format(string, sizeof(string), "* %s Установил контракт на %s, за %d$.", sendername, giveplayer, moneys);
					SendRadioMessage(8, COLOR_YELLOW, string);
					format(string, sizeof(string), "* Вы заключили контракт на %s, за %d$.", giveplayer, moneys);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
			} else {
				format(string, sizeof(string), "**{FF0000}[Ошибка]{FFFFFF} : %d Игрок неактивен.", giveplayerid);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
		return true;
	}
	return true;
}

ProxDetector(Float:radi, playerid, const string[], col1, col2, col3, col4, col5) { //todo
	if (IsPlayerConnected(playerid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for (new i = 0; i < GetMaxPlayers(); i++) {
			if (IsPlayerConnected(i)) {
				if (!BigEar[i]) {
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx - posx);
					tempposy = (oldposy - posy);
					tempposz = (oldposz - posz);
					if (((tempposx < radi / 16) && (tempposx > -radi / 16)) && ((tempposy < radi / 16) && (tempposy > -radi / 16)) && ((tempposz < radi / 16) && (tempposz > -radi / 16))) {
						SendClientMessage(i, col1, string);
					} else if (((tempposx < radi / 8) && (tempposx > -radi / 8)) && ((tempposy < radi / 8) && (tempposy > -radi / 8)) && ((tempposz < radi / 8) && (tempposz > -radi / 8))) {
						SendClientMessage(i, col2, string);
					} else if (((tempposx < radi / 4) && (tempposx > -radi / 4)) && ((tempposy < radi / 4) && (tempposy > -radi / 4)) && ((tempposz < radi / 4) && (tempposz > -radi / 4))) {
						SendClientMessage(i, col3, string);
					} else if (((tempposx < radi / 2) && (tempposx > -radi / 2)) && ((tempposy < radi / 2) && (tempposy > -radi / 2)) && ((tempposz < radi / 2) && (tempposz > -radi / 2))) {
						SendClientMessage(i, col4, string);
					} else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
						SendClientMessage(i, col5, string);
					}
				} else {
					SendClientMessage(i, col1, string);
				}
			}
		}
	} //not connected
	return true;
}

CrimInRange(Float:radi, playerid, copid) { //todo
	if (IsPlayerConnected(playerid) && IsPlayerConnected(copid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx - posx);
		tempposy = (oldposy - posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi))) {
			return true;
		}
	}
	return false;
}

ProxDetectorS(Float:radi, playerid, targetid) { //todo
	if (IsPlayerConnected(playerid) && IsPlayerConnected(targetid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx - posx);
		tempposy = (oldposy - posy);
		tempposz = (oldposz - posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
			return true;
		}
	}
	return false;
}

PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z) { //todo
	if (IsPlayerConnected(playerid)) {
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx - x);
		tempposy = (oldposy - y);
		tempposz = (oldposz - z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
			return true;
		}
	}
	return false;
}

IsASoldiers(playerid) {
	if (IsPlayerConnected(playerid)) {
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if (member == 3) {
			return true;
		} else if (leader == 3) {
			return true;
		}
	}
	return false;
}

IsPlayerApplyAnimation(playerid, const animation[]) {
	if (GetPlayerAnimationIndex(playerid)) {
		new animlib[32], animname[32];
		GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
		if (strcmp(animname, animation, true) == 0) {
			return 1;
		}
	}
	return 0;
}

GetVehicleWithinDistance(playerid, Float:x1, Float:y1, Float:z1, Float:dist, & veh) {
	for (new i = 1; i < MAX_VEHICLES; i++) {
		if (GetVehicleModel(i) > 0) {
			if (GetPlayerVehicleID(playerid) != i) {
				new Float:x, Float:y, Float:z;
				new Float:x2, Float:y2, Float:z2;
				GetVehiclePos(i, x, y, z);
				x2 = x1 - x;
				y2 = y1 - y;
				z2 = z1 - z;
				new Float:vDist = (x2 * x2 + y2 * y2 + z2 * z2);
				if (vDist < dist) {
					veh = i;
					dist = vDist;
				}
			}
		}
	}
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	new string[256];
	if (newkeys == KEY_FIRE && GetPVarInt(playerid, "Bomba") == 1) {
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1435.74, -1008.55, 9.06)) {
			if (door > 0 || door1 > 0 || door2 > 0 || bankotkat > 0) {
				SendClientMessage(playerid, -1, " Бомба уже установленна.");
				return true;
			}
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1);
			GetPlayerPos(playerid, xf, yf, zf);
			new Float:b, Float:n, Float:m;
			GetPlayerPos(playerid, b, n, m);
			pickboom = CreatePickup(1252, 23, b, n, m, 4);
			SetTimerEx("bax", 10000, false, "i", playerid);
			door = 10;
			SendClientMessage(playerid, -1, "{FFFFFF}Вы заложили бомбу.Она взорвется через {FF0000}10 {FFFFFF}секунд");
			SetPVarInt(playerid, "Bomba", 0);
			SendRadioMessage(1, TEAM_RADIO_COLOR, "Внимание,всем постам,прибыть в банк LS");
			SendRadioMessage(2, TEAM_RADIO_COLOR, "Внимание,всем постам,прибыть в банк LS");
			SendRadioMessage(3, TEAM_RADIO_COLOR, "Внимание,всем постам,прибыть в банк LS");
		} else {
			error(playerid, " В этом месте нельзя установить бомбу.");
		}
	}

	if (newkeys == KEY_FIRE && PlayerStartJob[playerid]) {
		if (!IsPlayerInRangeOfPoint(playerid, 3, -1854.7035, -1650.9668, 25.7248) && !IsPlayerInRangeOfPoint(playerid, 3, -1803.5344, -1655.2640, 25.8294) && !IsPlayerInRangeOfPoint(playerid, 3, -1788.5780, -1640.7179, 27.0669) && !IsPlayerInRangeOfPoint(playerid, 3, -1869.1316, -1634.7915, -58.500) && !IsPlayerInRangeOfPoint(playerid, 3, -1868.9603, -1643.6682, -58.046)) {
			SendClientMessage(playerid, -1, "Вы уронили металл.");
			DisablePlayerCheckpoint(playerid);
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 1);
			PlayerStartJob[playerid] = false;
			RemovePlayerAttachedObject(playerid, 4);
			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
			GetPlayerMetall[playerid] = 0;
			GetPlayerMetallEx[playerid] = 0;
		}
	}

	if ((newkeys & KEY_FIRE) || ((newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK))) {
		if (IsPlayerInRangeOfPoint(playerid, 40.0, 806.0165, -1343.5483, -0.5078) || IsPlayerInRangeOfPoint(playerid, 40.0, -1966.8682, 117.5648, 27.6875) || IsPlayerInRangeOfPoint(playerid, 40.0, 2839.3174, 1290.5490, 11.3906) || IsPlayerInRangeOfPoint(playerid, 40.0, -1869.2205, -1637.1078, 21.9395)) {
			SendClientMessage(playerid, 0xFFFFFFAA, "{FF0000}В этой зоне запрещено драться!{FFFFFF}");
			TogglePlayerControllable(playerid, false);
			UnfreezePlayer[playerid] = 5;
		}
		return true;
	}

	if (newkeys & 8) {
		if (AnimationOn[playerid] == 1) {
			ClearAnimations(playerid);
			AnimationOn[playerid] = 0;
		}
	}

	if (newkeys == 4) {
		if (Butilka[playerid] > 1) {
			new Float:ph;
			GetPlayerHealth(playerid, ph);
			if (ph < 100) {
				SetPlayerHealth(playerid, ph + 1);
				Butilka[playerid]--;
			}
			if (Butilka[playerid] <= 1) {
				Butilka[playerid]--;
				SetPlayerHealth(playerid, ph + 1);
				ClearAnimations(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Бутылка пуста.");
		}
		return true;
	}

	if (newkeys == 4) {
		if (Butilka1[playerid] > 1) {
			new Float:ph;
			GetPlayerHealth(playerid, ph);
			if (ph < 100) {
				SetPlayerHealth(playerid, ph + 2);
				Butilka1[playerid]--;
			}
			if (Butilka1[playerid] <= 1) {
				Butilka1[playerid]--;
				SetPlayerHealth(playerid, ph + 2);
				ClearAnimations(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Бутылка пуста.");
		}
		return true;
	}

	if (newkeys == 4) {
		if (Butilka2[playerid] > 1) {
			new Float:ph;
			GetPlayerHealth(playerid, ph);
			if (ph < 100) {
				SetPlayerHealth(playerid, ph + 3);
				Butilka2[playerid]--;
			}
			if (Butilka2[playerid] <= 1) {
				Butilka2[playerid]--;
				SetPlayerHealth(playerid, ph + 3);
				ClearAnimations(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Бутылка пуста.");
		}
		return true;
	}

	if (newkeys == 4) {
		if (Butilka3[playerid] > 1) {
			new Float:ph;
			GetPlayerHealth(playerid, ph);
			if (ph < 100) {
				SetPlayerHealth(playerid, ph + 4);
				Butilka3[playerid]--;
			}
			if (Butilka3[playerid] <= 1) {
				Butilka3[playerid]--;
				SetPlayerHealth(playerid, ph + 4);
				ClearAnimations(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Бутылка пуста.");
		}
		return true;
	}

	if (newkeys == 4) {
		if (Butilka4[playerid] > 1) {
			new Float:ph;
			GetPlayerHealth(playerid, ph);
			if (ph < 100) {
				SetPlayerHealth(playerid, ph + 4.7);
				Butilka4[playerid]--;
			}
			if (Butilka4[playerid] <= 1) {
				Butilka4[playerid]--;
				SetPlayerHealth(playerid, ph + 4.7);
				ClearAnimations(playerid);
				return true;
			}
			SendClientMessage(playerid, COLOR_WHITE, "Бутылка пуста.");
		}
		return true;
	}

	if (newkeys == 512) {
		OnPlayerCommandText(playerid, "/engine");
	}

	if (newkeys == KEY_WALK) { //проверка на кнопку
		if (IsASprank(playerid)) { //проверка
			new Float:HP;
			GetPlayerHealth(playerid, HP);
			SetPlayerHealth(playerid, HP + 20.0);
			if (GetPlayerHealth(playerid, HP) > 100) {
				SetPlayerHealth(playerid, 100);
			}
		}
	}

	if (newkeys == KEY_CROUCH && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		OnPlayerCommandText(playerid, "/fill");
	}

	if (newkeys == KEY_CROUCH && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		OnPlayerCommandText(playerid, "/opengate");
	}

	if (newkeys & KEY_SECONDARY_ATTACK) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			new Float:x, Float:y, Float:z, vehicle;
			GetPlayerPos(playerid, x, y, z);
			GetVehicleWithinDistance(playerid, x, y, z, 20.0, vehicle);
			if (IsVehicleRcTram(vehicle)) {
				PutPlayerInVehicle(playerid, vehicle, 0);
			}
		}
		new Veh = GetPlayerVehicleID(playerid);
		if (IsVehicleRcTram(Veh) || GetVehicleModel(Veh) == RC_CAM) {
			if (GetVehicleModel(Veh) != D_TRAM) {
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x + 0.5, y, z + 1.0);
			}
		}
		if ((IsAtFishPlace(playerid)) || IsABoat(Veh)) {
			if (GetPlayerWeapon(playerid) == 7) {
				if (PlayerInfo[playerid][pFishes] < 5) {
					if (Fishes[playerid][pWeight1] == 0 && Fishes[playerid][pWeight2] == 0 && Fishes[playerid][pWeight3] == 0 && Fishes[playerid][pWeight4] == 0 && Fishes[playerid][pWeight5] == 0) {
						if (!PlayerFishTimer[playerid]) {
							PlayerFishTimer[playerid] = 15;
							TogglePlayerControllable(playerid, 0);
							ApplyAnimation(playerid, "SWORD", "sword_block", 50.0, 0, 1, 1, 1, 1);
						}
					} else {
						error(playerid, " Вы уже поймали 5 рыб. Сначала избавьтесь от них.");
					}
				} else {
					error(playerid, " Слишком много рыбы было поймано.");
				}
			} else {
				error(playerid, " У Вас нет удочки.");
			}
		}
		return true;
	}

	if (newkeys & KEY_WALK) {
		OnPlayerCommandText(playerid, "/opendoor");
		OnPlayerCommandText(playerid, "/opengate");
		OnPlayerCommandText(playerid, "/sklad");
		OnPlayerCommandText(playerid, "/kfcc");

		for (new i = 0; i < sizeof(FlatsInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 3, FlatsInfo[i][fEntrancex], FlatsInfo[i][fEntrancey], FlatsInfo[i][fEntrancez]) && GetPlayerVirtualWorld(playerid) == FlatsInfo[i][fVirtWorld]) {
				if (PlayerInfo[playerid][pFlatKey] == i || FlatsInfo[i][fLock] == 0) {
					SetPlayerVirtualWorld(playerid, i + 9999);
					SetPlayerInterior(playerid, FlatsInfo[i][fInt]);
					SetPlayerPos(playerid, FlatsInfo[i][fExitx], FlatsInfo[i][fExity], FlatsInfo[i][fExitz]);
					GameTextForPlayer(playerid, "~w~Welcome Kvartira", 5000, 1);
					PlayerInfo[playerid][pInt] = FlatsInfo[i][fInt];
				} else {
					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
				}
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 318.5768, 1114.6155, 1083.8828)) {
			SetPlayerPos(playerid, 2168.3401, -1673.5699, 15.0831); // выход из здания Наркодиллеров
			SetPlayerFacingAngle(playerid, 255.0000);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -2178.0469, -42.1986, 35.3259)) {
			SetPlayerInterior(playerid, 10);
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : {00C0FF}/buy {FFFFFF} - купить,{00C0FF}/sell{FFFFFF}-продать.");
			SetPlayerPos(playerid, 6.3856, -28.9698, 1003.5494);
			SetPlayerFacingAngle(playerid, 136.1430);
			PlayerInfo[playerid][pInt] = 10;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 6.1650, -31.4978, 1003.5494)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2178.0469, -42.1986, 35.3259);
			SetPlayerFacingAngle(playerid, 136.1430);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 771.8757, -3.0515, 1000.7288)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2228.3433, -1722.5504, 13.5550);
			SetPlayerFacingAngle(playerid, 136.1430);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 318.3349, 1114.4923, 1083.8828)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2167.2747, -1672.1960, 15.0801);
			SetPlayerFacingAngle(playerid, 229.7259);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//=============================[убежище карманников]============================
		if (IsPlayerInRangeOfPoint(playerid, 2, -2532.4351, 52.8043, 8.6172)) {
			if (PlayerInfo[playerid][pJob] == 6 || keyss[playerid] == 1) {
				SetPlayerInterior(playerid, 10);
				SetPlayerPos(playerid, 421.9963, 2536.3813, 10.0000);
				SetPlayerFacingAngle(playerid, 85.7791);
				PlayerInfo[playerid][pInt] = 10;
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 421.9963, 2536.3813, 10.0000)) {
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2532.4351, 52.8043, 8.6172);
			SetPlayerFacingAngle(playerid, 0.6791);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 2229.8191, -1721.2977, 13.5616)) {
			SetPlayerPos(playerid, 771.8757, -3.0515, 1000.7288);
			SetPlayerFacingAngle(playerid, 18.1167);
			SetPlayerInterior(playerid, 5);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 772.2761, -5.5116, 1000.7284)) {
			SetPlayerPos(playerid, 2227.9575, -1723.6649, 13.5518); // выход Спортзал ЛС
			SetPlayerFacingAngle(playerid, 130.5810);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 2165.9390, -1671.2850, 15.0733)) {
			SetPlayerPos(playerid, 318.5650, 1118.2100, 1083.8828); // вход в здание Наркодиллеров
			SetPlayerFacingAngle(playerid, 0.0000);
			SetPlayerInterior(playerid, 5);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -590.9767, 1991.9634, 9.2500)) {
			SetPlayerPos(playerid, -959.5421, 1951.7867, 9.0061); // вход в гидро-станцию
			SetPlayerFacingAngle(playerid, 179.7816);
			SetPlayerInterior(playerid, 17);
			PlayerInfo[playerid][pInt] = 17;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -959.6515, 1956.4625, 9.0000)) {
			SetPlayerPos(playerid, -591.9013, 1988.4381, 8.5237); // выход из гидро-станции
			SetPlayerFacingAngle(playerid, 162.5479);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -2270.2188, -155.8912, 35.3203)) {
			SetPlayerPos(playerid, 773.9534, -47.2576, 1000.5927); // вход в Спортзал СФ
			SetPlayerFacingAngle(playerid, 2.1832);
			SetPlayerInterior(playerid, 6);
			PlayerInfo[playerid][pInt] = 6;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 774.1519, -50.2971, 1000.5859)) {
			SetPlayerPos(playerid, -2266.8560, -155.8223, 35.3203); // выход из Спортзала СФ
			SetPlayerFacingAngle(playerid, 271.9190);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -1989.8215, 1117.7977, 54.4688)) {
			SetPlayerPos(playerid, -2018.4237, 1119.2473, 26.0531); //
			SafeResetPlayerWeapons(playerid); // отнимает оружие при входе
			SendClientMessage(playerid, COLOR_WHITE, "Добро пожаловать в церковь, пожалуйста ведите себя прилично.");
			GameTextForPlayer(playerid, "~y~Welcome to the ~r~cerkov'", 5000, 1);
			SetPlayerFacingAngle(playerid, 0);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -2017, 1119.2, 26.0531)) {
			SetPlayerPos(playerid, -1988.2925, 1117.8851, 54.4735); //
			GameTextForPlayer(playerid, "~y~San Fierro", 5000, 1);
			SetPlayerFacingAngle(playerid, 0);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, -1962.0586, 434.1953, 35.1719)) {
			SetPlayerPos(playerid, 972.3107, -8.6146, 1001.1484);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 1);
		}
		//=========================[Квартирные дома]====================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 975.1188, -8.6426, 1001.1484) && GetPlayerVirtualWorld(playerid) == 1) {
			SetPlayerPos(playerid, -1966.0192, 434.3174, 35.1719);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 328.1443, -1512.3280, 36.0325)) {
			SetPlayerPos(playerid, 972.3107, -8.6146, 1001.1484);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 2);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 975.1188, -8.6426, 1001.1484) && GetPlayerVirtualWorld(playerid) == 2) {
			SetPlayerPos(playerid, 329.7834, -1513.7047, 36.0391);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 1382.1489, -1088.8043, 28.2124)) {
			SetPlayerPos(playerid, 972.3107, -8.6146, 1001.1484);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 3);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 975.1188, -8.6426, 1001.1484) && GetPlayerVirtualWorld(playerid) == 3) {
			SetPlayerPos(playerid, 1378.8137, -1088.7667, 27.0466);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		for (new i = 0; i < sizeof(HouseInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez])) {
				if (PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0) {
					SetPlayerVirtualWorld(playerid, i + 250);
					SetPlayerInterior(playerid, HouseInfo[i][hInt]);
					SetPlayerPos(playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
					PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
					PlayerInfo[playerid][pLocal] = i;
				} else {
					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
				}
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 1615.0161, 1815.7996, 10.8203)) {
			GameTextForPlayer(playerid, "~w~Clinic", 5000, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid, 345.6104, 158.4754, 1014.1875);
			SetPlayerFacingAngle(playerid, 1.6191);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 2);
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}[Используйте]{FFFFFF} : /wanking, для сдачи спермы.");
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 345.6104, 158.4754, 1014.1875) && GetPlayerVirtualWorld(playerid) == 2) {
			GameTextForPlayer(playerid, "~w~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1615.0161, 1815.7996, 10.8203);
			SetPlayerFacingAngle(playerid, 0.6791);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//===================================[Zip LS]===================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 1976.0017, -2036.6216, 13.5469)) {
			GameTextForPlayer(playerid, "~w~Zip", 5000, 1);
			SetPlayerInterior(playerid, 18);
			SetPlayerPos(playerid, 161.3525, -96.6903, 1001.8047);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 1);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 161.3525, -96.6903, 1001.8047) && GetPlayerVirtualWorld(playerid) == 1) {
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1976.0017, -2036.6216, 13.5469);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//=====================================[Victim LS]==================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 461.0589, -1500.9823, 31.0581)) {
			GameTextForPlayer(playerid, "~w~Victim", 5000, 1);
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 227.3475, -8.2765, 1002.2109);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerVirtualWorld(playerid, 1);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 227.3475, -8.2765, 1002.2109) && GetPlayerVirtualWorld(playerid) == 1) {
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 461.0589, -1500.9823, 31.0581);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//===================================[Zip SF]===================================
		if (IsPlayerInRangeOfPoint(playerid, 2, -1882.6859, 866.1516, 35.1719)) {
			GameTextForPlayer(playerid, "~w~Zip", 5000, 1);
			SetPlayerInterior(playerid, 18);
			SetPlayerPos(playerid, 161.3525, -96.6903, 1001.8047);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 2);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 161.3525, -96.6903, 1001.8047) && GetPlayerVirtualWorld(playerid) == 2) {
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1882.6859, 866.1516, 35.1719);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//==================================[Victim SF]=================================
		if (IsPlayerInRangeOfPoint(playerid, 2, -1694.9639, 951.4175, 24.8906)) {
			GameTextForPlayer(playerid, "~w~Victim", 5000, 1);
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 227.3475, -8.2765, 1002.2109);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerVirtualWorld(playerid, 2);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 227.3475, -8.2765, 1002.2109) && GetPlayerVirtualWorld(playerid) == 2) {
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1694.9639, 951.4175, 24.8906);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//==================================[Victim LV]=================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 2802.5417, 2430.2510, 11.0625)) {
			GameTextForPlayer(playerid, "~w~Victim", 5000, 1);
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 227.3475, -8.2765, 1002.2109);
			PlayerInfo[playerid][pInt] = 5;
			SetPlayerVirtualWorld(playerid, 3);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 227.3475, -8.2765, 1002.2109) && GetPlayerVirtualWorld(playerid) == 3) {
			GameTextForPlayer(playerid, "~w~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2802.5417, 2430.2510, 11.0625);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//===================================[Zip LV]===================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 2090.5525, 2224.0918, 11.0234)) {
			GameTextForPlayer(playerid, "~w~Zip", 5000, 1);
			SetPlayerInterior(playerid, 18);
			SetPlayerPos(playerid, 161.3525, -96.6903, 1001.8047);
			PlayerInfo[playerid][pInt] = 18;
			SetPlayerVirtualWorld(playerid, 3);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 161.3525, -96.6903, 1001.8047) && GetPlayerVirtualWorld(playerid) == 3) {
			GameTextForPlayer(playerid, "~w~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2090.5525, 2224.0918, 11.0234);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//==================================[Binco SF]==================================
		if (IsPlayerInRangeOfPoint(playerid, 2, -2374.2480, 910.1654, 45.4453)) {
			GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid, 207.3245, -138.4633, 1003.5078);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 3);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 206.9357, -140.3760, 1003.5078) && GetPlayerVirtualWorld(playerid) == 3) {
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2374.2480, 910.1654, 45.4453);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//==================================[Binco LV]=====================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 2102.2998, 2257.5190, 11.0234)) {
			GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid, 207.3245, -138.4633, 1003.5078);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 2);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 206.9357, -140.3760, 1003.5078) && GetPlayerVirtualWorld(playerid) == 2) {
			GameTextForPlayer(playerid, "~w~Las Venturas", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2102.2998, 2257.5190, 11.0234);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
		}
		//====================================[Binco LS]====================================
		if (IsPlayerInRangeOfPoint(playerid, 2, 2244.3423, -1665.5542, 15.4766)) {
			GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
			SetPlayerInterior(playerid, 3);
			SetPlayerPos(playerid, 207.3245, -138.4633, 1003.5078);
			PlayerInfo[playerid][pInt] = 3;
			SetPlayerVirtualWorld(playerid, 1);
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, 206.9357, -140.3760, 1003.5078) && GetPlayerVirtualWorld(playerid) == 1) {
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 2245.2778, -1661.1738, 15.4690);
			PlayerInfo[playerid][pInt] = 0;
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2695.6084, 640.1595, 14.4531)) { //корды перед ТП
			SetPlayerInterior(playerid, 0); //интерьер
			SetPlayerPos(playerid, -2716.6167, 626.8237, 33.2969); // корды после ТП
		}
		if (IsPlayerInRangeOfPoint(playerid, 8.0, -2049.4233, 450.4073, 35.1719)) { //ТП репотртеров к верут
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2054.4099, 456.1060, 139.6406);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2201.1729, 645.5484, 49.4429)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2186.8513, 652.9909, 73.8359);
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 2495.3, -1690.2, 14.7)) { // Grove Street Family вход
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) {
				SetPlayerPos(playerid, 2496.0, -1693.7, 1014.7);
				SetPlayerFacingAngle(playerid, 181.2634);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, -2455.8096, -135.8703, 26.1197)) { // Rifa
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19) {
				SetPlayerPos(playerid, 2496.0, -1693.7, 1014.7);
				SetPlayerFacingAngle(playerid, 180.9499);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 2);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1058.1563, 1280.5029, 10.8203)) { // Street Racers вход
			if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) {
				SetPlayerPos(playerid, 2549.2764, -1294.7787, 1060.9844);
				SetPlayerFacingAngle(playerid, 263.8392);
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1122.7500, -2036.9438, 69.8942)) { // LCN вход
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5) {
				SetPlayerPos(playerid, 1260.8934, -785.3745, 1091.9063);
				SetPlayerFacingAngle(playerid, 275.4327);
				SetPlayerInterior(playerid, 5);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, -2492.1416, 2363.2239, 10.2768)) { // RM вход
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) {
				SetPlayerPos(playerid, 2549.2764, -1294.7787, 1060.9844);
				SetPlayerFacingAngle(playerid, 263.8392);
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, 4);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 690.9224, -1275.9976, 13.5603)) { // Triads Mafia вход
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) {
				SetPlayerPos(playerid, 1727.0577, -1638.9784, 20.2235);
				SetPlayerFacingAngle(playerid, 180.2018);
				SetPlayerInterior(playerid, 18);
				SetPlayerVirtualWorld(playerid, 2);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 2808.1963, -1190.1615, 25.3398)) { // Los Santos Vagos вход
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15) {
				SetPlayerPos(playerid, 2549.2764, -1294.7787, 1060.9844);
				SetPlayerFacingAngle(playerid, 263.8392);
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 2000.0607, -1114.1948, 27.1250)) { // Ballas вход
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) {
				SetPlayerPos(playerid, -2158.6162, 643.0610, 1052.3750);
				SetPlayerFacingAngle(playerid, 175.5999);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 2);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, -2022.0596, -100.0749, 35.8995)) { // Licensers вход
			SetPlayerPos(playerid, -2026.8219, -104.0080, 1035.1719);
			SetPlayerFacingAngle(playerid, 178.5883);
			SetPlayerInterior(playerid, 3);
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, -2192.6414, 647.4017, 49.4375)) { // Yakuza Mafia вход
			if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6) {
				SetPlayerPos(playerid, -2158.6162, 643.0610, 1052.3750);
				SetPlayerFacingAngle(playerid, 179.0466);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 4);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, -1606.3191, 672.0635, -4.9063)) { // Fbi вход
			if (IsACop(playerid)) {
				SetPlayerPos(playerid, 238.6255, 138.8083, 1003.0234);
				SetPlayerFacingAngle(playerid, 359.5283);
				SetPlayerInterior(playerid, 3);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 238.6255, 138.8083, 1003.0234)) { // Fbi выход
			if (IsACop(playerid)) {
				SetPlayerPos(playerid, -1606.3191, 672.0635, -4.9063);
				SetPlayerFacingAngle(playerid, 359.5283);
				SetPlayerInterior(playerid, 0);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1753.9695, -1893.9972, 13.5570)) { // El Coronos Gang вход
			if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14) {
				SetPlayerPos(playerid, 2549.2764, -1294.7787, 1060.9844);
				SetPlayerFacingAngle(playerid, 273.0475);
				SetPlayerInterior(playerid, 2);
				SetPlayerVirtualWorld(playerid, 10);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 246.3302, 87.0413, 1003.6406)) { // LSPD выход
			if (IsACop(playerid)) {
				SetPlayerPos(playerid, 1524.4836, -1677.7958, 6.2188);
				SetPlayerFacingAngle(playerid, 266.2166);
				SetPlayerInterior(playerid, 0);
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1524.4836, -1677.7958, 6.2188)) { // LSPD вход
			if (IsACop(playerid)) {
				SetPlayerPos(playerid, 246.3302, 87.0413, 1003.6406);
				SetPlayerFacingAngle(playerid, 184.7726);
				SetPlayerInterior(playerid, 6);
			}
		}
		for (new i = 0; i < sizeof(BizzInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])) {
				if (PlayerInfo[playerid][pPbiskey] == i || GetPlayerBablo(playerid) >= BizzInfo[i][bEntranceCost]) {
					if (PlayerInfo[playerid][pPbiskey] != i) {
						if (BizzInfo[i][bLocked] == 1) {
							GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
							return true;
						}
						if (PlayerInfo[playerid][pLevel] < 1) {
							error(playerid, " Для входа в бизнес вам необходимо иметь как минимум 1lvl.");
							return true;
						}
						if (BizzInfo[i][bProducts] == 0) {
							GameTextForPlayer(playerid, "~r~PRODC NONE", 5000, 1);
							return true;
						}
					}
					GivePlayerBablo(playerid, -BizzInfo[i][bEntranceCost]);
					format(string, sizeof(string), "~r~-%d$~n~~w~press ~r~'ALT'~w~Key~n~to get out", BizzInfo[i][bEntranceCost]);
					if (BizzInfo[i][bMafia] > 0) {
						BizzInfo[i][bTill] += (BizzInfo[i][bEntranceCost] / 10 * 9);
						BizzInfo[i][bProducts]--;
						ObwyakInfo[BizzInfo[i][bMafia]][oGangMoney] += (BizzInfo[i][bEntranceCost] / 10 * 1);
					} else {
						BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
						BizzInfo[i][bProducts]--;
					}
					SetPlayerInterior(playerid, BizzInfo[i][bInterior]);
					SetPlayerVirtualWorld(playerid, BizzInfo[i][bWorld]);
					SetPlayerPos(playerid, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]);
					PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
					PlayerInfo[playerid][pLocal] = i + 99;
					new dood[MAX_PLAYER_NAME];
					GetPlayerName(playerid, dood, sizeof(dood));
					OnPropUpdate();
					format(string, sizeof(string), "%s заплатил %d$ за вход в бизнес %d", dood, BizzInfo[i][bEntranceCost], i);
					printf("%s", string);
					PayLog(string);
				} else {
					GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
				}
			}
		}
		for (new i = 0; i < sizeof(SBizzInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 3, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) {
				if (PlayerInfo[playerid][pLevel] < 1) {
					error(playerid, " Для входа в бизнес вам необходимо иметь как минимум 1lvl.");
					return true;
				}
				if (PlayerInfo[playerid][pPbiskey] == i || GetPlayerBablo(playerid) >= SBizzInfo[i][sbEntranceCost]) {
					if (PlayerInfo[playerid][pPbiskey] != i) {
						if (SBizzInfo[i][sbLocked] == 1) {
							GameTextForPlayer(playerid, "~r~3AKPITO", 5000, 1);
							return true;
						}
						if (SBizzInfo[i][sbProducts] == 0) {
							GameTextForPlayer(playerid, "~r~PRODC NONE", 5000, 1);
							return true;
						}
						GivePlayerBablo(playerid, -SBizzInfo[i][sbEntranceCost]);
						gSpentCash[playerid] = GetPlayerBablo(playerid);
						if (SBizzInfo[i][sbMafia] > 0) {
							SBizzInfo[i][sbTill] += (SBizzInfo[i][sbEntranceCost] / 10 * 9);
							SBizzInfo[i][sbProducts]--;
							ObwyakInfo[SBizzInfo[i][sbMafia]][oGangMoney] += (SBizzInfo[i][sbEntranceCost] / 10 * 1);
						} else {
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							SBizzInfo[i][sbProducts]--;
						}
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s заплатил %d$ за вход в бизнес %d", dood, SBizzInfo[i][sbEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						OnPropUpdate();
					}
				} else {
					GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
				}
			}
		}

		if ((GetPlayerVehicleID(playerid) >= Rent[0] && GetPlayerVehicleID(playerid) <= Rent[1]) || (GetPlayerVehicleID(playerid) >= RentSF[0] && GetPlayerVehicleID(playerid) <= RentSF[1])) {
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		} else if (GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77) {
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
		}

		for (new i = 0; i < sizeof(FlatsInfo); i++) {
			if (GetPlayerVirtualWorld(playerid) == i + 9999) {
				if (IsPlayerInRangeOfPoint(playerid, 3, FlatsInfo[i][fExitx], FlatsInfo[i][fExity], FlatsInfo[i][fExitz])) {
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, FlatsInfo[i][fVirtWorld]);
					SetPlayerPos(playerid, FlatsInfo[i][fEntrancex], FlatsInfo[i][fEntrancey], FlatsInfo[i][fEntrancez]);
				}
			}
		}

		for (new i = 0; i < sizeof(HouseInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz])) {
				if (GetPlayerVirtualWorld(playerid) == i + 250) {
					if (HouseInfo[i][hHel] == 1) {
						new Float:tempheal;
						GetPlayerHealth(playerid, tempheal);
						if (tempheal < 100.0) {
							SetPlayerHealth(playerid, 100.0);
						}
					}
					if (HouseInfo[i][hArm] == 1) {
						if (IsACop(playerid)) {
							new Float:arm;
							GetPlayerArmour(playerid, arm);
							if (arm < 100.0) {
								SetPlayerArmour(playerid, 100.0);
							}
						}
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
		}
		//------------------------------------------------------------------------------Банк дверь внутри
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 2315.5581, 0.3544, 26.7422) && GetPlayerVirtualWorld(playerid) == 4) { //Выход в банка
			virtik[playerid] = GetPlayerVirtualWorld(playerid);
			new copchik;
			for (new i = 0; i < GetMaxPlayers(); i++) {
				if (IsPlayerConnected(i)) {
					if (!IsACop(i)) {
						continue;
					}
					if (IsACop(i)) {
						copchik++;
					}
				}
			}
			if (copchik >= 3) {
				if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) {
					SetPlayerVirtualWorld(playerid, 0);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SetPlayerInterior(playerid, 0);
					SetPlayerPos(playerid, 1435.7402, -1008.9294, 13.2601);
				} else {
					if (bankotkat > 0) {
						format(string, sizeof(string), " Банк уже ограблен,подождите %d секунд.", bankotkat);
						SendClientMessage(playerid, -1, string);
					} else {
						SetPlayerVirtualWorld(playerid, 0);
						if (PlayerInfo[playerid][pWanted] < 6) {
							PlayerInfo[playerid][pWanted] += 2;
							SetPlayerCriminal(playerid, 255, "Проникновение на запрещенную территория банка!"); //todo
						}
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0); // Звук при открывании двери
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, 1435.7402, -1008.9294, 13.2601);
					}
				}
			} else {
				SendClientMessage(playerid, -1, "На сервере не дсотаточно законников для совершения ограбления.");
			}
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1435.7402, -1008.9294, 13.2601)) { //Вход из банка
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0); // Звук при открывании двери
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, virtik[playerid]);
			SetPlayerPos(playerid, 2315.5581, 0.3544, 26.7422);
		}
		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1415.1216, -1026.7407, 0.7805)) { //Вход из банка
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0); // Звук при открывании двери
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1434.0332, -1057.9193, 23.8722);
		}
		if (IsPlayerInRangeOfPoint(playerid, 8.0, -2716.6167, 626.8237, 33.2969)) { //перед ТП
			SetPlayerInterior(playerid, 0); //интерьер
			SetPlayerPos(playerid, -2695.6084, 640.1595, 14.4531); // ПОСЛЕ ТП
		}
		if (IsPlayerInRangeOfPoint(playerid, 8.0, -2054.4099, 456.1060, 139.6406)) { //ТП репотртеров к верут
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2049.4233, 450.4073, 35.1719);
		} else if (IsPlayerInRangeOfPoint(playerid, 6.0, -1404.5299, -259.0602, 1043.6563)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2695.6235, -1704.6960, 11.8438);
		} else if (IsPlayerInRangeOfPoint(playerid, 8.0, -2186.8513, 652.9909, 73.8359)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2201.1729, 645.5484, 49.4429);
		} else if (IsPlayerInRangeOfPoint(playerid, 8.0, -1443.0554, -581.1879, 1055.0472)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2111.5686, -443.9720, 38.7344);
		} else if (IsPlayerInRangeOfPoint(playerid, 8.0, -1464.7732, 1557.5533, 1052.5313)) {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2080.3079, -406.0309, 38.7344);
		}
		//==================================[Казино]====================================
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2226.8743, 1840.1384, 10.8203)) {
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1915.42, 1029.03, 567.21);
			SetPlayerFacingAngle(playerid, 0.9500);
			SetPlayerInterior(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "{00C0FF}Используйте : {FFFFFF} кнопку {00C0FF}ALT{FFFFFF} у автомата,что бы начать игру.");
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1915.42, 1029.03, 567.21)) {
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 2226.8743, 1840.1384, 10.8203);
			SetPlayerFacingAngle(playerid, 267.7535);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2496.0, -1693.7, 1014.7) && GetPlayerVirtualWorld(playerid) == 1) { //grove
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 2495.3, -1690.2, 14.7);
			SetPlayerFacingAngle(playerid, 0.9500);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2496.0, -1693.7, 1014.7) && GetPlayerVirtualWorld(playerid) == 2) { //rifa
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -2455.8096, -135.8703, 26.1197);
			SetPlayerFacingAngle(playerid, 93.0709);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2549.2764, -1294.7787, 1060.9844) && GetPlayerVirtualWorld(playerid) == 4) { //RM
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -2492.1416, 2363.2239, 10.2768);
			SetPlayerFacingAngle(playerid, 278.2527);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2158.6162, 643.0610, 1052.3750) && GetPlayerVirtualWorld(playerid) == 4) { //Yakuza mafia
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -2192.6414, 647.4017, 49.4375);
			SetPlayerFacingAngle(playerid, 179.0466);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2549.2764, -1294.7787, 1060.9844) && GetPlayerVirtualWorld(playerid) == 5) { //Street Racers mafia
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1058.1563, 1280.5029, 10.8203);
			SetPlayerFacingAngle(playerid, 275.7459);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2549.2764, -1294.7787, 1060.9844) && GetPlayerVirtualWorld(playerid) == 10) { //El Coronos Gang
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1753.9695, -1893.9972, 13.5570);
			SetPlayerFacingAngle(playerid, 272.4208);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1260.8934, -785.3745, 1091.9063)) { //LCN
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1122.7500, -2036.9438, 69.8942);
			SetPlayerFacingAngle(playerid, 275.4327);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2158.6162, 643.0610, 1052.3750) && GetPlayerVirtualWorld(playerid) == 2) { //Ballas
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 2000.0607, -1114.1948, 27.1250);
			SetPlayerFacingAngle(playerid, 175.5999);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2026.8219, -104.0080, 1035.1719)) { //Licensers
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -2022.0596, -100.0749, 35.8995);
			SetPlayerFacingAngle(playerid, 358.4200);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1548.6154, -1364.0365, 326.2183)) { //TP ls Citees
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1570.7421, -1337.0516, 16.4844);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1570.7421, -1337.0516, 16.4844)) { //TP ls Citees
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1548.6154, -1364.0365, 326.2183);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 773.8041, -78.4731, 1000.6622)) { //sportzall LV
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1968.7987, 2295.3284, 16.455);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1968.7987, 2295.3284, 16.455)) { //sportzall LV
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 773.8041, -78.4731, 1000.6622);
			SetPlayerInterior(playerid, 7);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1727.0577, -1638.9784, 20.2235) && GetPlayerVirtualWorld(playerid) == 2) { //Triads
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 690.9224, -1275.9976, 13.5603);
			SetPlayerFacingAngle(playerid, 84.9475);
			SetPlayerInterior(playerid, 0);
		}
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2549.2764, -1294.7787, 1060.9844) && GetPlayerVirtualWorld(playerid) == 1) { //Los Satos Vagos
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 2808.1963, -1190.1615, 25.3398);
			SetPlayerFacingAngle(playerid, 359.5517);
			SetPlayerInterior(playerid, 0);
		}

		if (NoFuel[playerid] == 1) {
			TogglePlayerControllable(playerid, 1);
			RemovePlayerFromVehicle(playerid);
			NoFuel[playerid] = 0;
		}

		if (IsPlayerInAnyVehicle(playerid)) {
			Motor(playerid);
			return true;
		}

		if (IsAtBankomat(playerid)) {
			ShowPlayerDialog(playerid, 700, 2, "Банкомат", "{ffdb58}Баланс\n{ffdb58}Снять с счета\n{ffdb58}Перевод средств", "Дальше", "Отмена");
			return true;
		}

		if (IsPlayerInRangeOfPoint(playerid, 1.5, -2111.11, -448.05, 38.73)) {
			if (EndingderbiRound < 1) {
				if (PlayerInfo[playerid][pLevel] >= 1) {
					if (DerbiPlayers < 20) {
						if (!Playerderbi[playerid]) {
							DerbiPlayers += 1;
							Playerderbi[playerid] = 1;
							SendClientMessage(playerid, 0x6495EDFF, "::: Вы зарегестрировались на гонку :::");
						} else {
							SendClientMessage(playerid, COLOR_WHITE, "Вы уже зарегестрированы на гонку!");
						}
					} else {
						SendClientMessage(playerid, COLOR_GRAD1, "Слишком много участников!");
					}
				} else {
					SendClientMessage(playerid, COLOR_GRAD1, "Участвовать можно с 1lvl.");
				}
			} else {
				SendClientMessage(playerid, COLOR_WHITE, "Регистрация закрыта!");
			}
			return true;
		}

		for (new i = 0; i < sizeof(BizzInfo); i++) {
			if (!IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) || GetPlayerVirtualWorld(playerid) != BizzInfo[i][bWorld]) {
				continue;
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerPos(playerid, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
			PlayerInfo[playerid][pLocal] = 255;
		}

		for (new i = 0; i < sizeof(SBizzInfo); i++) {
			if (IsPlayerInRangeOfPoint(playerid, 1, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) {
				if (PlayerInfo[playerid][pPbiskey] == i || GetPlayerBablo(playerid) >= SBizzInfo[i][sbEntranceCost]) {
					if (PlayerInfo[playerid][pPbiskey] != i) {
						if (!SBizzInfo[i][sbLocked]) {
							if (SBizzInfo[i][sbProducts]) {
								GivePlayerBablo(playerid, -SBizzInfo[i][sbEntranceCost]);
								gSpentCash[playerid] = GetPlayerBablo(playerid);
								if (SBizzInfo[i][sbMafia] > 0) {
									SBizzInfo[i][sbTill] += (SBizzInfo[i][sbEntranceCost] / 10 * 9);
									SBizzInfo[i][sbProducts]--;
									ObwyakInfo[SBizzInfo[i][sbMafia]][oGangMoney] += (SBizzInfo[i][sbEntranceCost] / 10 * 1);
								} else {
									SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
									SBizzInfo[i][sbProducts]--;
								}
								new dood[MAX_PLAYER_NAME];
								GetPlayerName(playerid, dood, sizeof(dood));
								format(string, sizeof(string), "%s payed %d$ to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
								printf("%s", string);
								PayLog(string);
								OnPropUpdate();
							} else {
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							}
						} else {
							GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
						}
					}
				} else return GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
			}
		}

		if (IsPlayerInRangeOfPoint(playerid, 1, 1554.9537, -1675.6584, 16.1953)) { //вход в ЛСПД
			GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0); // Звук при открывании двери
			SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid, 246.7079, 66.2239, 1003.6406);
			PlayerInfo[playerid][pInt] = 6;
		} else if (IsPlayerInRangeOfPoint(playerid, 1, 246.5325, 62.4251, 1003.6406)) { //выход из ЛСПД
			GameTextForPlayer(playerid, "~w~exit", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0); // Звук при открывании двери
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1552.3231, -1674.6780, 16.1953);
			PlayerInfo[playerid][pInt] = 0;
		}
	}

	if (newkeys == KEY_FIRE) {
		if ((gTeam[playerid] == 2 || IsACop(playerid)) && GetPlayerWeapon(playerid) == WEAPON_NITESTICK) {
			if (!IsPlayerInAnyVehicle(playerid)) {
				new suspect = GetClosestPlayer(playerid);
				if (GetDistanceBetweenPlayers(playerid, suspect) < 1) {
					if (gTeam[suspect] != 2) {
						if (!IsPlayerInAnyVehicle(suspect)) {
							new giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME];
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), " %s Обездвижил вас на 10 секунд.", sendername);
							SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " Вы обездвижели %s на 10 секунд.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), " %s Обездвижил %s.", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
							GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
							TogglePlayerControllable(suspect, 0);
							PlayerCuffed[suspect] = 1;
							PlayerCuffedTime[suspect] = 10;
						}
					}
				}
			}
		}
	} 
	else if (PRESSED(newkeys, oldkeys, rightkey)) {
		if (blinker[playerid] != 1) {
			KillTimer(blinks[playerid]);
			blinks[playerid] = SetTimer("Blinker", timerspeed, true);
			blinker[playerid] = 1;
		}
		if (blinker[playerid] == 1) {
			KillTimer(blinks[playerid]);
			DestroyObject(arrow[playerid]);
			blinker[playerid] = 0;
			duration[playerid] = 0;
		}
		return true;
	}
	else if (PRESSED(newkeys, oldkeys, leftkey)) {
		if (blinker[playerid] != 2) {
			KillTimer(blinks[playerid]);
			blinks[playerid] = SetTimer("Blinker", timerspeed, true);
			blinker[playerid] = 2;
		}
		if (blinker[playerid] == 2) {
			KillTimer(blinks[playerid]);
			DestroyObject(arrow[playerid]);
			blinker[playerid] = 0;
			duration[playerid] = 0;
		}
		return true;
	}
	return true;
}

IsVehicleRcTram(vehicleid) {
	new model = GetVehicleModel(vehicleid);
	switch (model) {
		case D_TRAM, RC_GOBLIN, RC_BARON, RC_BANDIT, RC_RAIDER, RC_TANK, D_POEZDSF:  {
			return true;
		}
		default:  {
			return false;
		}
	}
	return false;
}

PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz) {
	if (IsPlayerConnected(playerid)) {
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx - x);
		tempposy = (cury - y);
		tempposz = (curz - z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) {
			return true;
		}
	}
	return false;
}

CheckForWalkingTeleport(playerid) {
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);
	if (GetPlayerVirtualWorld(playerid) == 0 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 2422.4124, -1508.7745, 23.9922);
		SetPlayerFacingAngle(playerid, 267.6023);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	}
	if (GetPlayerVirtualWorld(playerid) == 18 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 2105.3608, -1806.6322, 13.5547);
		SetPlayerFacingAngle(playerid, 267.6023);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 1 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 2397.9895, -1897.1381, 13.5469);
		SetPlayerFacingAngle(playerid, 358.7598);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 0 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 203.4703, -205.0762, 1.5781);
		SetPlayerFacingAngle(playerid, 180.0412);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 0 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 1199.5358, -920.2513, 43.1108);
		SetPlayerFacingAngle(playerid, 174.8313);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 2 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 926.3259, -1352.7448, 13.3766);
		SetPlayerFacingAngle(playerid, 91.1706);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 1 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 813.3197, -1616.2114, 13.5547);
		SetPlayerFacingAngle(playerid, 287.9458);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 1 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 203.1569, -204.7016, 1.5781);
		SetPlayerFacingAngle(playerid, 177.7621);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 2 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 1365.2302, 249.4143, 19.5669);
		SetPlayerFacingAngle(playerid, 66.7303);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 3 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, -2153.4541, -2462.3005, 30.8438);
		SetPlayerFacingAngle(playerid, 232.1953);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 2 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, -2334.1768, -167.6850, 35.5547);
		SetPlayerFacingAngle(playerid, 222.1453);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 4 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, -1816.2032, 615.9586, 35.1719);
		SetPlayerFacingAngle(playerid, 177.9649);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 3 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, -1910.3639, 830.3906, 35.1719);
		SetPlayerFacingAngle(playerid, 336.1529);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 4 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, -1806.8286, 943.7283, 24.8920);
		SetPlayerFacingAngle(playerid, 228.3886);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 5 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, -2672.3252, 261.2896, 4.6328);
		SetPlayerFacingAngle(playerid, 2.7864);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 4 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, -2358.3962, 1007.6867, 50.8152);
		SetPlayerFacingAngle(playerid, 102.7406);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 5 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, -1724.3658, 1359.5542, 7.1875);
		SetPlayerFacingAngle(playerid, 87.9904);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 6 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 172.2487, 1174.1052, 14.7578);
		SetPlayerFacingAngle(playerid, 159.1880);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 7 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 660.8807, 1718.6323, 6.9922);
		SetPlayerFacingAngle(playerid, 270.6892);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 6 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, -80.9353, -1168.9847, 2.2016);
		SetPlayerFacingAngle(playerid, 168.2282);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 5 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 1875.3367, 2070.1406, 10.8203);
		SetPlayerFacingAngle(playerid, 247.5023);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 6 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 1161.2942, 2070.5630, 10.8203);
		SetPlayerFacingAngle(playerid, 223.6653);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 7 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 2172.0420, 2794.0981, 10.8203);
		SetPlayerFacingAngle(playerid, 222.7722);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 7 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, -2477.5100, 2319.6626, 4.9844);
		SetPlayerFacingAngle(playerid, 173.5781);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 8 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, -1568.4462, -2728.8252, 48.7435);
		SetPlayerFacingAngle(playerid, 177.9649);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 9 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 2352.3792, 2529.9651, 10.8203);
		SetPlayerFacingAngle(playerid, 176.3982);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 10 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 2755.8591, 2474.0015, 11.0625);
		SetPlayerFacingAngle(playerid, 165.7449);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 8 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 2838.8054, 2403.9160, 11.0690);
		SetPlayerFacingAngle(playerid, 191.4151);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 11 && PlayerToPointStripped(1, playerid, 372.3461, -133.5223, 1001.4922, cx, cy, cz)) { // Выход из Pizza
		SetPlayerPos(playerid, 2635.3889, 1850.1259, 11.0234);
		SetPlayerFacingAngle(playerid, 96.7641);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 9 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, 2635.2510, 1671.4827, 11.0234);
		SetPlayerFacingAngle(playerid, 89.2441);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 8 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, 2469.8406, 2036.0170, 10.8203);
		SetPlayerFacingAngle(playerid, 63.2374);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 10 && PlayerToPointStripped(1, playerid, 364.8567, -11.7238, 1001.8516, cx, cy, cz)) { // Выход из Clucken Bell
		SetPlayerPos(playerid, -1211.3356, 1832.2430, 41.9297);
		SetPlayerFacingAngle(playerid, 10.9336);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 9 && PlayerToPointStripped(1, playerid, 362.8603, -75.1512, 1001.5078, cx, cy, cz)) { // Выход из Burger Shot
		SetPlayerPos(playerid, -857.0422, 1537.2156, 22.5870);
		SetPlayerFacingAngle(playerid, 78.5909);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 1 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 997.6571, -920.4269, 42.1797);
		SetPlayerFacingAngle(playerid, 93.8604);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 2 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 2192.0845, 1991.5631, 12.1484);
		SetPlayerFacingAngle(playerid, 91.4799);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 3 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 1315.7356, -900.4780, 39.5781);
		SetPlayerFacingAngle(playerid, 189.3699);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 4 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 1352.2510, -1756.1832, 13.5078);
		SetPlayerFacingAngle(playerid, 95.4370);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 5 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 2452.8962, 2061.8857, 10.8203);
		SetPlayerFacingAngle(playerid, 161.5044);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 6 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 2546.2295, 1970.3333, 10.8203);
		SetPlayerFacingAngle(playerid, 191.1850);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 7 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 2887.4082, 2450.7427, 10.8203);
		SetPlayerFacingAngle(playerid, 216.1728);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 8 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 2247.2488, 2400.1038, 11.2500);
		SetPlayerFacingAngle(playerid, 2.6812);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	} else if (GetPlayerVirtualWorld(playerid) == 9 && PlayerToPointStripped(1, playerid, -27.3780, -58.1551, 1003.5469, cx, cy, cz)) { // Выход из 24/7
		SetPlayerPos(playerid, 1830.9039, -1841.9781, 13.5781);
		SetPlayerFacingAngle(playerid, 272.3657);
		GameTextForPlayer(playerid, "~y~buy-buy", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
	}
	return true;
}

public OnPlayerText(playerid, text[]) {
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
	new is1 = 0;
	new r = 0;

	while (strlen(text[is1])) {
		if ('0' <= text[is1] <= '9') {
			new is2 = is1 + 1;
			new p = 0;
			while (p == 0) {
				if ('0' <= text[is2] <= '9' && strlen(text[is2])) {
					is2++;
				} else {
					strmid(strR[r], text, is1, is2, 255);
					if (strval(strR[r]) < 255) r++;
					is1 = is2;
					p = 1;
				}
			}
		}
		is1++;
	}

	if (r >= 4) {
		new strMy[255];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(strMy, sizeof(strMy), "Анти-Реклама: %s[%d]: %s.", sendername, playerid, text);
		ABroadCast(COLOR_LIGHTRED, strMy, 1);
		for (new z = 0; z < r; z++) {
			new pr2;
			while ((pr2 = strfind(text, strR[z], true)) != -1) {
				for (new i = pr2, j = pr2 + strlen(strR[z]); i < j; i++) {
					text[i] = '*';
				}
			}
		}
		return 0;
	}

	if (Rekl[playerid] == 1 && strfind(text, "www", true) != -1 || Rekl[playerid] == 1 && strfind(text, ".ru", true) != -1 || Rekl[playerid] == 1 && strfind(text, "7777", true) != -1 || Rekl[playerid] == 1 && strfind(text, ".net", true) != -1 || Rekl[playerid] == 1 && strfind(text, ".com", true) != -1 || Rekl[playerid] == 1 && strfind(text, "gy", true) != -1 || Rekl[playerid] == 1 && strfind(text, "http", true) != -1 || Rekl[playerid] == 1 && strfind(text, ".рф", true) != -1 || Rekl[playerid] == 1 && strfind(text, "fornax", true) != -1 || Rekl[playerid] == 1 && strfind(text, "galaxy", true) != -1) {
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, 128, "Анти-Реклама: %s[%d]: %s.", sendername, playerid, text);
		ABroadCast(COLOR_LIGHTRED, string, 1);
		return 0;
	}

	if (strfind(text, "{0", true) != -1 || strfind(text, "{1", true) != -1 || strfind(text, "{2", true) != -1 || strfind(text, "{3", true) != -1 || strfind(text, "{4", true) != -1 || strfind(text, "{5", true) != -1 || strfind(text, "{6", true) != -1 || strfind(text, "{7", true) != -1 || strfind(text, "{8", true) != -1 || strfind(text, "{9", true) != -1 || strfind(text, "{a", true) != -1 || strfind(text, "{b", true) != -1 || strfind(text, "{c", true) != -1 || strfind(text, "{d", true) != -1 || strfind(text, "{e", true) != -1 || strfind(text, "{f", true) != -1) {
		GetPlayerName(playerid, sendername, 64);
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы кикнуты за использование запрещенных символов в чате!");
		format(string, 128, "(A)Империя: %s[%d] кикнут за использование запрещенных символов в чате!", sendername, playerid);
		ABroadCast(COLOR_RED, string, 1);
		Kick(playerid);
		return 0;
	}

	if (MarriageCeremoney[playerid] > 0) {
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes"))) {
			if (GotProposedBy[playerid] < 999) {
				if (IsPlayerConnected(GotProposedBy[playerid])) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Priest: %s вы берёте %s свою прекрасную жену? (напишите 'yes', чтобы согласиться).", giveplayer, sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return true;
				} else {
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return false;
				}
			} else if (ProposedTo[playerid] < 999) {
				if (IsPlayerConnected(ProposedTo[playerid])) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if (PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2) {
						format(string, sizeof(string), "Priest: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest:  %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: Поздравляю! Теперь они новая семейная пара %s & %s.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					} else if (PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1) {
						format(string, sizeof(string), "Priest: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest: %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: Поздравляю! Теперь они новая семейная пара %s & %s.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					} else if (PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2) {
						format(string, sizeof(string), "Priest: %s и %s теперь вы являетесь мужем и женой, жених поцелуйте невесту.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Priest: %s и %s я объявляю Вас теперь... Мужем и Женой, теперь вы можете поцеловать Жениха.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: Поздравляю! Теперь они новая семейная пара %s & %s.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerBablo(playerid, -100000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					PlayerInfo[ProposedTo[playerid]][pLocal] = PlayerInfo[playerid][pLocal];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return true;
				} else {
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return false;
				}
			}
		} else {
			if (GotProposedBy[playerid] < 999) {
				if (IsPlayerConnected(GotProposedBy[playerid])) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Вы нехотели вступит в брак с %s, вы несказали 'yes'.", giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "%s Хочет вступит с вами в брак, скажите 'yes' чтобы принять.", sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
					return false;
				} else {
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return false;
				}
			} else if (ProposedTo[playerid] < 999) {
				if (IsPlayerConnected(ProposedTo[playerid])) {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Вы нехотели вступит в браск с %s, вы несказали 'yes'.", giveplayer);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "%s Хочет вступит с вами в брак, скажите 'yes' чтобы принять.", sendername);
					SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
					return false;
				} else {
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return false;
				}
			}
		}
		return false;
	}

	if (WritingPaper[playerid] > 0) {
		new line;
		new nstring[256];
		new idx;
		new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' ')) {
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
			result[idx - offset] = text[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if (!strlen(result)) {
			if (WritingLine[playerid] == 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "Пожалуйста напишите название для вашей газеты.");
			} else {
				SendClientMessage(playerid, COLOR_LIGHTRED, "Пожалуйста напишити полосу для вашей газеты");
			}
			return false;
		}
		format(nstring, sizeof(nstring), "%s", text);
		switch (WritingLine[playerid]) {
			case 1 :  {
				new fstring[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(fstring, sizeof(fstring), "%s", sendername);
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperMaker], fstring, 0, strlen(fstring), 255);
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperTitle], nstring, 0, strlen(nstring), 255);
				line = 0;
				WritingLine[playerid] = 2;
				SendClientMessage(playerid, COLOR_LIGHTRED, "Теперь вы можете написать полосы новостей, 7 осталось.");
			}
			case 2 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText1], nstring, 0, strlen(nstring), 255);
				line = 1;
				WritingLine[playerid] = 3;
			}
			case 3 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText2], nstring, 0, strlen(nstring), 255);
				line = 2;
				WritingLine[playerid] = 4;
			}
			case 4 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText3], nstring, 0, strlen(nstring), 255);
				line = 3;
				WritingLine[playerid] = 5;
			}
			case 5 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText4], nstring, 0, strlen(nstring), 255);
				line = 4;
				WritingLine[playerid] = 6;
			}
			case 6 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText5], nstring, 0, strlen(nstring), 255);
				line = 5;
				WritingLine[playerid] = 7;
			}
			case 7 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText6], nstring, 0, strlen(nstring), 255);
				line = 6;
				WritingLine[playerid] = 8;
			}
			case 8 :  {
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText7], nstring, 0, strlen(nstring), 255);
				PaperInfo[WritingPaperNumber[playerid]][PaperUsed] = 1;
				SavePapers();
				line = 7;
				WritingLine[playerid] = 0;
				WritingPaper[playerid] = 0;
				WritingPaperNumber[playerid] = 999;
			}
		}
		if (line > 0) {
			format(string, sizeof(string), "Вы написали строку %d в газете.", line);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			if (line == 7) {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ваша газета добавлена к списку новостей (для почтальона).");
			}
		}
		return false;
	}

	if (CallLawyer[playerid] == 111) {
		new idx;
		tmp = strtok(text, idx);
		if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes"))) {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s is В тюрьме, подрйдите в полицейский участок.", sendername);
			SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
			SendJobMessage(2, TEAM_AZTECAS_COLOR, "Когда вы в полицейском участке Офицер может рекомендовать вас /accept lawyer.");
			SendClientMessage(playerid, COLOR_LIGHTRED, "Сообщение послано всем свободным Юристам, пожалуйста подождите.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return false;
		} else {
			error(playerid, " Сейчас нету свободного юриста, возвращайтесь в камеру.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return false;
		}
	}

	if (TalkingLive[playerid] != 255) {
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if (PlayerInfo[playerid][pJob] == 6) {
			format(string, sizeof(string), "Прямой эфир с %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		} else {
			format(string, sizeof(string), "Прямой эфир с %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return false;
	}

	if (PlayerInfo[playerid][pMuted] == 1) {
		PlayerMuteMessage(playerid);
		return 0;
	}

	if (realchat) {
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if (PlayerInfo[playerid][pMask] == 1) {
			format(string, sizeof(string), "Неизветсный говорит: %s", text);
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
			return 1;
		}
		new dl = GetPlayerDrunkLevel(playerid);
		new ds = 100;
		if (dl >= 2000 && dl <= 10000) {
			ds = random(100);
		} else if (dl > 10000 && dl <= 20000) {
			ds = random(80);
		} else if (dl > 20000 && dl <= 30000) {
			ds = random(60);
		} else if (dl > 30000 && dl <= 40000) {
			ds = random(40);
		} else if (dl > 40000 && dl <= 50000) {
			ds = random(30);
		}
		if (ds <= 20) {
			format(string, sizeof(string), "%s что то бормочет.", sendername);
			ProxDetector(20.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		} else {
			if (PlayerInfo[playerid][pSex] == 1) {
				format(string, sizeof(string), "%s[%d] говорит: %s", sendername, playerid, text);
			}
			if (PlayerInfo[playerid][pSex] == 2) {
				format(string, sizeof(string), "%s[%d] говорит: %s", sendername, playerid, text);
			}
			ProxDetector(20.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		}
		return 0;
	}
	return 1;
}

TrailerCescerna(vehicleid) {
	new trailerid = GetVehicleTrailer(vehicleid);
	new modelid = GetVehicleModel(trailerid);
	if (modelid == 584) {
		return true;
	}
	return false;
}

FixHour(hour) { //todo
	hour = timeshift + hour;
	if (hour < 0) {
		hour = hour + 24;
	} else if (hour > 23) {
		hour = hour - 24;
	}
	shifthour = hour;
	return true;
}

forward AddsOn();
public AddsOn() {
	adds = 1;
	return true;
}

forward LSGateClose();
public LSGateClose() {
	MoveDynamicObject(LSGate, 244.89999389648, 72.5, 1002.5999755859, 2.00);
	KillTimer(LSGateTimer);
	return true;
}

forward LS2GateClose();
public LS2GateClose() {
	MoveDynamicObject(LS2Gate, 246.3994140625, 72.5, 1002.5999755859, 2.00);
	KillTimer(LS2GateTimer);
	return true;
}

forward LSPDGateClose();
public LSPDGateClose() {
	MoveDynamicObject(LSPDGate, 1588.519, -1638.079, 15.021, 2.00);
	return true;
}

forward FBIGateClose();
public FBIGateClose() {
	MoveDynamicObject(FBIGate, -1631.519897, 688.084777, 9.030563, 2.00); //закрытое положение
	return true;
}

forward FBI1GateClose();
public FBI1GateClose() {
	SetDynamicObjectRot(FBI1Gate, 0, 90, 90); //закрытое положение
	KillTimer(FBI1GateTimer);
	return true;
}

forward FBI2GateClose();
public FBI2GateClose() {
	SetDynamicObjectRot(FBI2Gate, 0, -90, 92); //закрытое положение
	KillTimer(FBI2GateTimer);
	return true;
}

forward VoyakGateClose();
public VoyakGateClose() {
	MoveDynamicObject(VoyakGate, -1529.9065, 482.1588, 7.1875, 2.00);
	KillTimer(VoyakGateTimer);
	return true;
}

forward Voyak2GateClose();
public Voyak2GateClose() {
	MoveDynamicObject(Voyak2Gate, -1464.323, 501.525, 1.443, 2.00);
	KillTimer(Voyak2GateTimer);
	return true;
}

forward BGateClose();
public BGateClose() {
	MoveDynamicObject(Bgate, -2180.671, -210.277, 37.337, 5.0);
	return true;
}

forward LSClose();
public LSClose() {
	SetDynamicObjectRot(LSBar, 0.0000, 90.0000, 90.0000);
	return true;
}

forward LizClose();
public LizClose() {
	SetDynamicObjectRot(LizBar, 0, 270, 0);
	return true;
}

PlayerMuteMessage(playerid) {
	new string[255];
	format(string, sizeof(string), "{FF0000}[Ошибка]{FFFFFF} : Вы не можете говорить, у вас бан чата %d секунд.", PlayerInfo[playerid][pMutedTime]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return true;
}

SafeResetPlayerWeapons(playerid) {
	ResetPlayerWeapons(playerid);
	return true;
}

public OnVehicleStreamIn(vehicleid, forplayerid) { // Закрытие автомобилей (домашних)
	UpdateVehiclePos(vehicleid, 0);
	if (gCarLock[vehicleid] == 1) {
		SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 1);
	} else if (gCarLock[vehicleid] == 0) {
		SetVehicleParamsForPlayer(vehicleid, forplayerid, 0, 0);
	}
	return true;
}

public OnVehicleMod(playerid, vehicleid, componentid) {
	if (!(IsPlayerInRangeOfPoint(playerid, 15.0, 616.7820, -74.8151, 997.6350) || IsPlayerInRangeOfPoint(playerid, 15.0, 615.2851, -124.2390, 997.6350) || IsPlayerInRangeOfPoint(playerid, 15.0, 617.5380, -1.9900, 1000.6829)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new string[128];
		GetPlayerName(playerid, string, MAX_PLAYER_NAME);
		Kick(playerid);
		TogglePlayerControllable(playerid, 0);
	}
	return true;
}

CheckTimeBanList(const ip[16]) {
	if (!fexist("[logs]/TimeBanList.txt")) {
		return false;
	}
	new File:file = fopen("[logs]/TimeBanList.txt", io_read);
	new TempStr[256];
	new colon;
	new currentIP[16];
	new unbantime;
	while (fread(file, TempStr, sizeof(TempStr))) {
		for (new i = 0; i < strlen(TempStr); i++) {
			if (TempStr[i] == ':') {
				colon = i;
				break;
			}
		}
		strmid(currentIP, TempStr, 0, colon, sizeof(currentIP));
		strmid(TempStr, TempStr, colon + 1, strlen(TempStr), sizeof(TempStr));
		unbantime = strval(TempStr);
		if (strcmp(ip, currentIP, true) == 0 && strlen(ip) == strlen(currentIP)) {
			fclose(file);
			if (unbantime - GetTimeStamp() <= 0) {
				DeleteFromTimeBanList(currentIP);
			}
			return unbantime;
		}
	}
	fclose(file);
	return false;
}

DeleteFromTimeBanList(const ip[16]) {
	if (!fexist("[logs]/TimeBanList.txt")) {
		return;
	}
	new File:file = fopen("[logs]/TimeBanList.txt", io_read);
	new File:tempFile = fopen("[logs]/temp_TimeBanList.temp", io_append);
	new TempStr[256];
	new colon;
	new currentIP[16];
	while (fread(file, TempStr, sizeof(TempStr))) {
		for (new i = 0; i < strlen(TempStr); i++) {
			if (TempStr[i] == ':') {
				colon = i;
				break;
			}
		}
		strmid(currentIP, TempStr, 0, colon, sizeof(currentIP));
		if (!(strcmp(ip, currentIP, true) == 0 && strlen(ip) == strlen(currentIP))) {
			fwrite(tempFile, TempStr);
		}
	}
	fclose(file);
	fclose(tempFile);
	fremove("[logs]/TimeBanList.txt");
	file = fopen("[logs]/TimeBanList.txt", io_append);
	tempFile = fopen("[logs]/temp_TimeBanList.temp", io_read);
	while (fread(tempFile, TempStr, sizeof(TempStr))) {
		fwrite(file, TempStr);
	}
	fclose(file);
	fclose(tempFile);
	fremove("[logs]/temp_TimeBanList.temp");
}

UpdateHouse(idx) {
	new text[600];
	DestroyDynamicMapIcon(HouseInfo[idx][hMIcon]);
	DestroyPickup(HouseInfo[idx][hPickup]);
	if (HouseInfo[idx][hOwned] == 0) {
		format(text, sizeof(text), "{FFFFFF}Дом доступен для покупки\n{FFFFFF}Номер дома: {00C0FF}%d\n{FFFFFF}Стоимость дома: {00C0FF}%d$\n{FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buyhouse", idx, HouseInfo[idx][hValue], HouseInfo[idx][hLevel]);
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 400.0);
		HouseInfo[idx][hPickup] = CreatePickup(1273, 23, HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez], -1);
		CreateMapIcon(31, 0, HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez]);
		Update3DTextLabelText(HouseInfo[idx][hLabel], 0x33CCFFAA, text);
	} else if (HouseInfo[idx][hOwned] == 1) {
		format(text, sizeof(text), "{FFFFFF}Номер дома: {00C0FF}%d\n{FFFFFF}Владелец дома: {00C0FF}%s\n{FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Стоимость дома: {00C0FF}%d$", idx, HouseInfo[idx][hOwner], HouseInfo[idx][hLevel], HouseInfo[idx][hValue]);
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 400.0);
		HouseInfo[idx][hPickup] = CreatePickup(1272, 23, HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez], -1);
		CreateMapIcon(32, 0, HouseInfo[idx][hEntrancex], HouseInfo[idx][hEntrancey], HouseInfo[idx][hEntrancez]);
		Update3DTextLabelText(HouseInfo[idx][hLabel], 0x33CCFFAA, text);
	}
}

UpdateBizz(h) {
	new biz[64];
	if (BizzInfo[h][bMafia] == 0) {
		biz = "None";
	}
	if (BizzInfo[h][bMafia] == 5) {
		biz = "La Cosa Nostra";
	}
	if (BizzInfo[h][bMafia] == 6) {
		biz = "Yakuza";
	}
	if (BizzInfo[h][bMafia] == 12) {
		biz = "Street Racers";
	}
	if (BizzInfo[h][bMafia] == 13) {
		biz = "Grove Street";
	}
	if (BizzInfo[h][bMafia] == 14) {
		biz = "El Coronos";
	}
	if (BizzInfo[h][bMafia] == 15) {
		biz = "Los Santos Vagos";
	}
	if (BizzInfo[h][bMafia] == 16) {
		biz = "East Side Ballas";
	}
	if (BizzInfo[h][bMafia] == 18) {
		biz = "Triads Mafia";
	}
	if (BizzInfo[h][bMafia] == 19) {
		biz = "The Rifa Gang";
	}
	if (BizzInfo[h][bMafia] == 20) {
		biz = "Russian Mafia";
	}
	if (BizzInfo[h][bOwned] == 0) {
		CreatePickup(1274, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
		new temp[MAX_STRING];
		format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса: {00C0FF}%s\n {FFFFFF}Стоимость: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buybiz\n{FFFFFF}Крыша:{00C0FF} %s", h, BizzInfo[h][bMessage], BizzInfo[h][bBuyPrice], BizzInfo[h][bLevelNeeded], biz);
		Update3DTextLabelText(BizzInfo[h][bLabel], 0x33CCFFAA, temp);
	}
	if (BizzInfo[h][bOwned] == 1) {
		CreatePickup(1239, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
		new temp[MAX_STRING];
		format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Владелец: {00C0FF}%s\n{FFFFFF}Стоимость входа: {00C0FF}%s$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Крыша: {00C0FF}%s", h, BizzInfo[h][bMessage], BizzInfo[h][bOwner], BizzInfo[h][bEntranceCost], BizzInfo[h][bLevelNeeded], biz);
		Update3DTextLabelText(BizzInfo[h][bLabel], 0x33CCFFAA, temp);
	}
}

UpdateSBizz(h) {
	new sbiz[64];
	if (SBizzInfo[h][sbMafia] == 0) {
		sbiz = "None";
	}
	if (SBizzInfo[h][sbMafia] == 5) {
		sbiz = "La Cosa Nostra";
	}
	if (SBizzInfo[h][sbMafia] == 6) {
		sbiz = "Yakuza";
	}
	if (SBizzInfo[h][sbMafia] == 12) {
		sbiz = "Street Racers";
	}
	if (SBizzInfo[h][sbMafia] == 13) {
		sbiz = "Grove Street";
	}
	if (SBizzInfo[h][sbMafia] == 14) {
		sbiz = "El Coronos";
	}
	if (SBizzInfo[h][sbMafia] == 15) {
		sbiz = "Los Santos Vagos";
	}
	if (SBizzInfo[h][sbMafia] == 16) {
		sbiz = "East Side Ballas";
	}
	if (SBizzInfo[h][sbMafia] == 18) {
		sbiz = "Triads Mafia";
	}
	if (SBizzInfo[h][sbMafia] == 19) {
		sbiz = "The Rifa Gang";
	}
	if (SBizzInfo[h][sbMafia] == 20) {
		sbiz = "Russian Mafia";
	}
	if (SBizzInfo[h][sbOwned] == 0) {
		CreatePickup(1274, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
		new temp[MAX_STRING];
		format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Стоимость: {00C0FF}%d$\n {FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Для покупки используйте {00C0FF}/buybiz\n{FFFFFF}Крыша: {00C0FF}%s", h, SBizzInfo[h][sbMessage], SBizzInfo[h][sbBuyPrice], SBizzInfo[h][sbLevelNeeded], sbiz);
		Update3DTextLabelText(SBizzInfo[h][sbLabel], 0x33CCFFAA, temp);
	}
	if (SBizzInfo[h][sbOwned] == 1) {
		CreatePickup(1239, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
		new temp[MAX_STRING];
		format(temp, sizeof(temp), "{FFFFFF}Номер бизнеса: {00C0FF}%d\n {FFFFFF}Название бизнеса:{00C0FF}%s\n {FFFFFF}Владелец: {00C0FF}%s\n{FFFFFF}Уровень: {00C0FF}%d\n{FFFFFF}Крыша: {00C0FF}%s", h, SBizzInfo[h][sbMessage], SBizzInfo[h][sbOwner], SBizzInfo[h][sbLevelNeeded], sbiz);
		Update3DTextLabelText(SBizzInfo[h][sbLabel], 0x33CCFFAA, temp);
	}
}

public OnGameModeExit() {
	OnPropUpdate();
	for (new playerid; playerid < GetMaxPlayers(); playerid++) {
		SavePlayer(playerid);
	}
	return true;
}

UpdateFlat(idx) {
	new text[600];
	if (FlatsInfo[idx][fOwned] == 0) {
		format(text, sizeof(text), "{00C0FF}Квартира{FFFFFF}\nНомер: {00C0FF}%d{FFFFFF}\nСтоимость: {00C0FF}%d{FFFFFF}\nУровень: {00C0FF}%d{FFFFFF}\nКупить квартиру - {00C0FF}/buyflat{FFFFFF}", idx, FlatsInfo[idx][fValue], FlatsInfo[idx][fLevel]);
		Update3DTextLabelText(Flat3D[idx], 0xFFFFFFFF, text);
		DestroyPickup(FlatPickup[idx]);
		FlatPickup[idx] = CreatePickup(1273, 23, FlatsInfo[idx][fEntrancex], FlatsInfo[idx][fEntrancey], FlatsInfo[idx][fEntrancez], FlatsInfo[idx][fVirtWorld]);
	} else if (FlatsInfo[idx][fOwned] == 1) {
		format(text, sizeof(text), "{00C0FF}Квартира{FFFFFF}\nНомер: {00C0FF}%d{FFFFFF}\nВладелец: {00C0FF}%s", idx, FlatsInfo[idx][fOwner]);
		Update3DTextLabelText(Flat3D[idx], 0xFFFFFFFF, text);
		DestroyPickup(FlatPickup[idx]);
		FlatPickup[idx] = CreatePickup(1272, 23, FlatsInfo[idx][fEntrancex], FlatsInfo[idx][fEntrancey], FlatsInfo[idx][fEntrancez], FlatsInfo[idx][fVirtWorld]);
	}
}

GetBan(playerid) {
	new PlayerNick[MAX_PLAYER_NAME], string[255];
	GetPlayerName(playerid, PlayerNick, MAX_PLAYER_NAME);
	format(string, sizeof(string), "banlist/%s.ini", PlayerNick);
	if (fexist(string)) {
		new OpenBan = ini_openFile(string);
		new bantime, unbantime, PlayerBan[MAX_PLAYER_NAME], reason[128];
		ini_getInteger(OpenBan, "BanTime", bantime);
		ini_getInteger(OpenBan, "UnBanTime", unbantime);
		ini_getString(OpenBan, "PlayerBan", PlayerBan);
		ini_getString(OpenBan, "Reason", reason);
		ini_closeFile(OpenBan);
		if (gettime() >= unbantime) {
			return UnBan(PlayerNick);
		} else {
			format(string, sizeof(string), "Дата бана: %s\nДата Разбана: %s\nЗабанил: %s\nПричина бана: %s\n",
				date("%dd.%mm.%yyyy в %hh:%ii:%ss", bantime),
				date("%dd.%mm.%yyyy в %hh:%ii:%ss", unbantime), PlayerBan, reason);
			ShowPlayerDialog(playerid, DIALOGUNBAN, 0, "Вы забанены", string, "Выйти", "");
			return Kick(playerid);
		}
	} else {
		return true;
	}
}

UnBan(playerid[]) {
	new string[64];
	format(string, sizeof(string), "banlist/%s.ini", playerid);
	return fremove(string);
}

AddBan(player, const playerid[], const giveplayerid[], type = 1, chislo = 0, const reason[]) {
	new totalban = 0;
	switch (type) {
		case 1 :  {
			totalban = 60 * chislo; // минуты
		}
		case 2 :  {
			totalban = 3600 * chislo; // часы
		}
		case 3 :  {
			totalban = 86400 * chislo; // сутки
		}
		default:  {
			totalban = chislo; // секунды
		}
	}
	new string[64];
	format(string, sizeof(string), "banlist/%s.ini", playerid);
	new OpenBan = ini_createFile(string);
	if (OpenBan < 0) {
		ini_openFile(string);
	}
	ini_setInteger(OpenBan, "BanTime", gettime());
	ini_setInteger(OpenBan, "UnBanTime", gettime() + totalban);
	ini_setString(OpenBan, "PlayerBan", giveplayerid);
	ini_setString(OpenBan, "Reason", reason);
	ini_closeFile(OpenBan); // Закрываем файл.
	return Kick(player);
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if (Playerderbi[playerid] != 0) {
			new Float: carhp;
			new carid = GetPlayerVehicleID(playerid);
			GetVehicleHealth(carid, carhp);
			if (50 > carhp && carhp <= 250) {
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы проиграли!");
				DisablePlayerRaceCheckpoint(playerid);
				DerbiPlayers -= 1;
				TogglePlayerControllable(playerid, 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -2111.95, -443.52, 38.73);
				SetPlayerFacingAngle(playerid, 76.4112);
				Playerderbi[playerid] = 0;
				return 1;
			}
		}
	}
	new Float:vh;
	GetVehicleHealth(vehicleid, vh);
	if (vh < 400) {
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
		CarEngine[playerid] = 0;
	}
	return true;
}

forward UnDrink(playerid);
public UnDrink(playerid) {
	SetPlayerDrunkLevel(playerid, 0);
	SendClientMessage(playerid, COLOR_WHITE, "Тебе стало лучше.");
	return true;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	if ((newinteriorid == 5 || newinteriorid == 2 || newinteriorid == 12 || newinteriorid == 3) && GetPlayerVirtualWorld(playerid) == 0) {
		SetPlayerVirtualWorld(playerid, 1);
	}
	if ((oldinteriorid == 5 || oldinteriorid == 2 || oldinteriorid == 12 || oldinteriorid == 3) && newinteriorid == 0 && GetPlayerVirtualWorld(playerid) == 1) {
		SetPlayerVirtualWorld(playerid, 0);
	}
	return true;
}

GivePlayerBablo(playerid, money) {
	PlayerInfo[playerid][pCash] += money;
	GivePlayerMoney(playerid, money);
	return true;
}

SetPlayerBablo(playerid, money) {
	PlayerInfo[playerid][pCash] = money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	return true;
}

ReserPlayerBablo(playerid) {
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
	return true;
}

GetPlayerBablo(playerid) {
	return PlayerInfo[playerid][pCash];
}

SendRacersMessage(color, const string[]) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (IsPlayerConnected(i)) {
			if (!IsACop(i)) {
				if (!gFam[i]) {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat) {
	new Float:Pos[3];
	GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
	new Float:Count[2];
	Count[0] = Difference(Pos[0], VehPos[vehicleid][0]);
	Count[1] = Difference(Pos[1], VehPos[vehicleid][1]);
	switch (GetVehicleModel(vehicleid)) {
		case 435, 450, 584, 591, 606..608, 610..611 : goto UPDATE;
	}
	if ((Count[0] > 5 || Count[1] > 5) && !UseCar(vehicleid) && !BanCar[vehicleid]) {
		SetVehiclePosition(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
		SetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	} else {
		UPDATE: UpdateVehiclePos(vehicleid, 0);
	}
	return true;
}

forward UpdateVehiclePos(vehicleid, type);
public UpdateVehiclePos(vehicleid, type) {
	if (type == 1) {
		BanCar[vehicleid] = false;
	}
	GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
	return true;
}

Difference(Float:Value1, Float:Value2) {
	return floatround((Value1 > Value2) ? (Value1 - Value2) : (Value2 - Value1));
}

UseCar(carid) {
	for (new i; i != GetMaxPlayers(); i++) {
		if (!IsPlayerConnected(i)) {
			continue;
		}
		if (IsPlayerInVehicle(i, carid)) {
			return true;
		}
	}
	return false;
}

new WebSites[][] = { ".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".?o", ".by", ".biz", ".su", ".info", ".рф" };

CheckString(const string[]) {
	for (new i = 0; i < sizeof(WebSites); i++) {
		if (strfind(string, WebSites[i], true) != -1) {
			return true;
		}
	}
	return false;
}

new delimiters[] = { '.', ' ', ',', '*', '/', ';', '\\', '|' };

IsIP(const str[]) {
	for (new cIP[4]; cIP[0] != strlen(str) + 1; cIP[0]++) {
		switch (str[cIP[0]]) {
			case '.', ' ', ':', ',', '*', '/', ';', '\\', '|': {
				continue;
			}
			case '0'..
			'9'
			:  {
				cIP[1]++;
			}
		}
		if (cIP[1] == 1) {
			cIP[2] = cIP[0];
		}
		if (cIP[1] >= 8) {
			new strx[16];
			new l[4][4];
			cIP[3] = cIP[0] + 8;
			strmid(strx, str, cIP[2], cIP[3], 16);
			for (new i = strlen(strx); i > 8; i--) {
				switch (strx[i]) {
					case '0'..
					'9', '.', ' ', ':', ',', '*', '/', ';', '\\', '|'
					:  {
						continue;
					}
					default:  {
						strx[i] = 0;
					}
				}
			}
			for (new i = 0; i < sizeof(delimiters); i++) {
				split(strx, l, delimiters[i]);
				if (strlen(l[0]) == 1 || strlen(l[1]) == 1 || strlen(l[2]) == 1 || strlen(l[3]) == 1) {
					continue;
				}
				if (strlen(l[0]) > 3 || strlen(l[1]) > 3 || strlen(l[2]) > 3) {
					continue;
				} else {
					return true;
				}
			}
		}
	}
	return false;
}

SetVehiclePosition(vehicleid, Float:X, Float:Y, Float:Z) {
	SetVehiclePos(vehicleid, X, Y, Z);
	UpdateVehiclePos(vehicleid, 0);
}

strtok(const string[], & idx, seperator = ' ') {
	new ret[128], i = 0, len = strlen(string);
	while (string[idx] == seperator && idx < len) idx++;
	while (string[idx] != seperator && idx < len) {
		ret[i] = string[idx];
		i++;
		idx++;
	}
	while (string[idx] == seperator && idx < len) {
		idx++;
	}
	return ret;
}

IsVehicleOccupied(vehicleid) {
	for (new i = 0; i < GetMaxPlayers(); i++) {
		if (!IsPlayerConnected(i)) {
			continue;
		}
		if (IsPlayerInVehicle(i, vehicleid)) {
			return true;
		}
	}
	return false;
}

PlayerName(playerid) { //todo
	new name[32];
	GetPlayerName(playerid, name, 32);
	return name;
}

MafiaYakuza(playerid) {
	new rank[24];
	switch (PlayerInfo[playerid][pRank]) {
		case 6 :  {
			rank = "Кумитё";
		}
		case 5 :  {
			rank = "Оябун-Кобун";
		}
		case 4 :  {
			rank = "Сайко";
		}
		case 3 :  {
			rank = "Cятэйгасира";
		}
		case 2 :  {
			rank = "Кёдай";
		}
		case 1 :  {
			rank = "Вакасю";
		}
		default:  {
			rank = "Вакасю";
		}
	}
	return rank;
}

MafiaLCN(playerid) {
	new rank[24];
	switch (PlayerInfo[playerid][pRank]) {
		case 6 :  {
			rank = "Дон";
		}
		case 5 :  {
			rank = "Консельери";
		}
		case 4 :  {
			rank = "Подручный";
		}
		case 3 :  {
			rank = "Капо";
		}
		case 2 :  {
			rank = "Солдат";
		}
		case 1 :  {
			rank = "Соучастник";
		}
		default:  {
			rank = "Соучастник";
		}
	}
	return rank;
}

Hitmans(playerid) {
	new rank[24];
	switch (PlayerInfo[playerid][pRank]) {
		case 6 :  {
			rank = "Директор";
		}
		case 5 :  {
			rank = "Зам.Директор";
		}
		case 4 :  {
			rank = "Командир";
		}
		case 3 :  {
			rank = "Спец. Агент";
		}
		case 2 :  {
			rank = "Агент";
		}
		case 1 :  {
			rank = "Стажёр";
		}
		default:  {
			rank = "Стажёр";
		}
	}
	return rank;
}

SanNews(playerid) {
	new rank[24];
	switch (PlayerInfo[playerid][pRank]) {
		case 6 :  {
			rank = "Продюсер Телесети";
		}
		case 5 :  {
			rank = "Редактор Телесети";
		}
		case 4 :  {
			rank = "Репортёр Телесети";
		}
		case 3 :  {
			rank = "Новостной Редактор";
		}
		case 2 :  {
			rank = "Репортёр Репортер";
		}
		case 1 :  {
			rank = "Стажёр";
		}
		default:  {
			rank = "Стажёр";
		}
	}
	return rank;
}

SendHelperMessage(color, const string[]) {
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pHelper] >= 1 && HelperDuty[i] == 1) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

SendDalnMessage(color, const string[]) {
	for (new i = 0; i < MAX_PLAYERS; i++) {
		if (IsPlayerConnected(i)) {
			if (PlayerInfo[i][pJob] == 3) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

forward settime(playerid);
public settime(playerid) { //todo
	new string[256], year, month, day, hours, minutes, seconds;
	getdate(year, month, day), gettime(hours, minutes, seconds);
	format(string, sizeof string, "%d/%s%d/%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	TextDrawSetString(Date, string);
	format(string, sizeof string, "%s%d:%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
	TextDrawSetString(Times, string);
	return true;
}

forward PredAvtoRestart();
public PredAvtoRestart() {
	new hour, minute, second;
	gettime(hour, minute, second);
	if (hour == 4 && minute == 28 && second == 0) {
		SendClientMessageToAll(COLOR_LIGHTBLUE, "Через 2 минуты произайдёт автоматический рестарт сервера.");
	}
	return true;
}

forward AvtoRestart();
public AvtoRestart() {
	new hour, minute, second;
	gettime(hour, minute, second);
	if (hour == 4 && minute == 30 && second == 0) {
		SendClientMessageToAll(COLOR_LIGHTRED, "Происходит автоматический рестарт сервера..");
		GameModeExit();
	}
	return true;
}

error(playerid, const string[]) {
	new msg[MAX_STRING + 15];
	format(msg, sizeof(msg), "{ff3300}[Ошибка]{ffffff} : %s", string);
	SendClientMessage(playerid, 0xff0000FF, msg);
	return true;
}

vseok(const string[]) {
	new msg[MAX_STRING + 15];
	format(msg, sizeof(msg), "{ffffff}• %s", string);
	OOCOff(COLOR_WHITE, msg);
	return true;
}

vseokm(const string[]) {
	new msg[MAX_STRING + 15];
	format(msg, sizeof(msg), "{ffffff}• %s", string);
	OOCOff(COLOR_WHITE, msg);
	return true;
}

fwriteRUS(File:file, const string[]) {
	for (new i; i < strlen(string); i++) {
		fputchar(file, string[i], false);
	}
	return true;
}

WriteLog(const string[], const filename[]) {
	new File:hFile;
	hFile = fopen(filename, io_append);
	fwriteRUS(hFile, string);
	fclose(hFile);
	return true;
}